
Lab-4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000021ea  0000227e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  0000229c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000229c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  0000230c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b3c  00000000  00000000  0000256c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000109c  00000000  00000000  000050a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001646  00000000  00000000  00006144  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ca8  00000000  00000000  0000778c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009a1  00000000  00000000  00008434  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000028ae  00000000  00000000  00008dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000b683  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__vector_1>
       8:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <__vector_2>
       c:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__vector_3>
      10:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__vector_4>
      14:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__vector_9>
      28:	0c 94 4b 07 	jmp	0xe96	; 0xe96 <__vector_10>
      2c:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__vector_11>
      30:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__vector_12>
      34:	0c 94 98 08 	jmp	0x1130	; 0x1130 <__vector_13>
      38:	0c 94 07 09 	jmp	0x120e	; 0x120e <__vector_14>
      3c:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__vector_15>
      40:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__vector_16>
      44:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__vector_17>
      48:	0c 94 c3 0a 	jmp	0x1586	; 0x1586 <__vector_18>
      4c:	0c 94 32 0b 	jmp	0x1664	; 0x1664 <__vector_19>
      50:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <__vector_20>
      54:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <__vector_21>
      58:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ea ee       	ldi	r30, 0xEA	; 234
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 38 02 	call	0x470	; 0x470 <main>
      92:	0c 94 f3 10 	jmp	0x21e6	; 0x21e6 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <initialize>:


#include "InputHandler.h"
#include <avr/io.h>

void initialize(InputHandler *self){
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	ec 01       	movw	r28, r24
	SYNC(self->gui, LCD_INIT, NULL);
      ac:	40 e0       	ldi	r20, 0x00	; 0
      ae:	50 e0       	ldi	r21, 0x00	; 0
      b0:	68 ee       	ldi	r22, 0xE8	; 232
      b2:	71 e0       	ldi	r23, 0x01	; 1
      b4:	88 85       	ldd	r24, Y+8	; 0x08
      b6:	99 85       	ldd	r25, Y+9	; 0x09
      b8:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <sync>
	SYNC(self->gui, Button_INIT, NULL);
      bc:	40 e0       	ldi	r20, 0x00	; 0
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	62 e1       	ldi	r22, 0x12	; 18
      c2:	72 e0       	ldi	r23, 0x02	; 2
      c4:	88 85       	ldd	r24, Y+8	; 0x08
      c6:	99 85       	ldd	r25, Y+9	; 0x09
      c8:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <sync>
	ASYNC(self->pG[0], generatePulse, NULL);
      cc:	0c 81       	ldd	r16, Y+4	; 0x04
      ce:	1d 81       	ldd	r17, Y+5	; 0x05
      d0:	c1 2c       	mov	r12, r1
      d2:	d1 2c       	mov	r13, r1
      d4:	0f 2e       	mov	r0, r31
      d6:	f2 ea       	ldi	r31, 0xA2	; 162
      d8:	ef 2e       	mov	r14, r31
      da:	f2 e0       	ldi	r31, 0x02	; 2
      dc:	ff 2e       	mov	r15, r31
      de:	f0 2d       	mov	r31, r0
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
	ASYNC(self->pG[1], generatePulse, NULL);
      f0:	0e 81       	ldd	r16, Y+6	; 0x06
      f2:	1f 81       	ldd	r17, Y+7	; 0x07
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	a9 01       	movw	r20, r18
      fa:	60 e0       	ldi	r22, 0x00	; 0
      fc:	70 e0       	ldi	r23, 0x00	; 0
      fe:	cb 01       	movw	r24, r22
     100:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
}
     104:	df 91       	pop	r29
     106:	cf 91       	pop	r28
     108:	1f 91       	pop	r17
     10a:	0f 91       	pop	r16
     10c:	ff 90       	pop	r15
     10e:	ef 90       	pop	r14
     110:	df 90       	pop	r13
     112:	cf 90       	pop	r12
     114:	08 95       	ret

00000116 <joystickHorizontal>:

void joystickHorizontal(InputHandler *self){
     116:	af 92       	push	r10
     118:	bf 92       	push	r11
     11a:	cf 92       	push	r12
     11c:	df 92       	push	r13
     11e:	ef 92       	push	r14
     120:	ff 92       	push	r15
     122:	0f 93       	push	r16
     124:	1f 93       	push	r17
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	ec 01       	movw	r28, r24
	int current = self->gui->current;
     12c:	e8 85       	ldd	r30, Y+8	; 0x08
     12e:	f9 85       	ldd	r31, Y+9	; 0x09
     130:	a4 80       	ldd	r10, Z+4	; 0x04
     132:	b5 80       	ldd	r11, Z+5	; 0x05
	
	//Left
	if ((PINE & leftMask) == 0){
     134:	62 99       	sbic	0x0c, 2	; 12
     136:	14 c0       	rjmp	.+40     	; 0x160 <joystickHorizontal+0x4a>
		if (current != 0){
     138:	a1 14       	cp	r10, r1
     13a:	b1 04       	cpc	r11, r1
     13c:	89 f0       	breq	.+34     	; 0x160 <joystickHorizontal+0x4a>
			ASYNC(self->gui, changeCurrent, 0);
     13e:	c1 2c       	mov	r12, r1
     140:	d1 2c       	mov	r13, r1
     142:	0f 2e       	mov	r0, r31
     144:	f0 ed       	ldi	r31, 0xD0	; 208
     146:	ef 2e       	mov	r14, r31
     148:	f1 e0       	ldi	r31, 0x01	; 1
     14a:	ff 2e       	mov	r15, r31
     14c:	f0 2d       	mov	r31, r0
     14e:	8f 01       	movw	r16, r30
     150:	20 e0       	ldi	r18, 0x00	; 0
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	a9 01       	movw	r20, r18
     156:	60 e0       	ldi	r22, 0x00	; 0
     158:	70 e0       	ldi	r23, 0x00	; 0
     15a:	cb 01       	movw	r24, r22
     15c:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
		}
	}
	
	//Right
	if ((PINE & rightMask) == 0){
     160:	63 99       	sbic	0x0c, 3	; 12
     162:	16 c0       	rjmp	.+44     	; 0x190 <joystickHorizontal+0x7a>
		if (current != 1){
     164:	aa 94       	dec	r10
     166:	ab 28       	or	r10, r11
     168:	99 f0       	breq	.+38     	; 0x190 <joystickHorizontal+0x7a>
			ASYNC(self->gui, changeCurrent, 1);
     16a:	08 85       	ldd	r16, Y+8	; 0x08
     16c:	19 85       	ldd	r17, Y+9	; 0x09
     16e:	cc 24       	eor	r12, r12
     170:	c3 94       	inc	r12
     172:	d1 2c       	mov	r13, r1
     174:	0f 2e       	mov	r0, r31
     176:	f0 ed       	ldi	r31, 0xD0	; 208
     178:	ef 2e       	mov	r14, r31
     17a:	f1 e0       	ldi	r31, 0x01	; 1
     17c:	ff 2e       	mov	r15, r31
     17e:	f0 2d       	mov	r31, r0
     180:	20 e0       	ldi	r18, 0x00	; 0
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	a9 01       	movw	r20, r18
     186:	60 e0       	ldi	r22, 0x00	; 0
     188:	70 e0       	ldi	r23, 0x00	; 0
     18a:	cb 01       	movw	r24, r22
     18c:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
		}
	}
}
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	1f 91       	pop	r17
     196:	0f 91       	pop	r16
     198:	ff 90       	pop	r15
     19a:	ef 90       	pop	r14
     19c:	df 90       	pop	r13
     19e:	cf 90       	pop	r12
     1a0:	bf 90       	pop	r11
     1a2:	af 90       	pop	r10
     1a4:	08 95       	ret

000001a6 <joystickVerticalPressed>:

void joystickVerticalPressed(InputHandler *self){
     1a6:	cf 92       	push	r12
     1a8:	df 92       	push	r13
     1aa:	ef 92       	push	r14
     1ac:	ff 92       	push	r15
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	ec 01       	movw	r28, r24
	#define currentPG self->pG[self->gui->current]
	//Up
	if ((PINB & upMask) == 0){
     1b8:	1e 99       	sbic	0x03, 6	; 3
     1ba:	1d c0       	rjmp	.+58     	; 0x1f6 <joystickVerticalPressed+0x50>
		ASYNC(currentPG, changeFreq, 1);
     1bc:	e8 85       	ldd	r30, Y+8	; 0x08
     1be:	f9 85       	ldd	r31, Y+9	; 0x09
     1c0:	04 80       	ldd	r0, Z+4	; 0x04
     1c2:	f5 81       	ldd	r31, Z+5	; 0x05
     1c4:	e0 2d       	mov	r30, r0
     1c6:	32 96       	adiw	r30, 0x02	; 2
     1c8:	ee 0f       	add	r30, r30
     1ca:	ff 1f       	adc	r31, r31
     1cc:	e8 0f       	add	r30, r24
     1ce:	f9 1f       	adc	r31, r25
     1d0:	00 81       	ld	r16, Z
     1d2:	11 81       	ldd	r17, Z+1	; 0x01
     1d4:	cc 24       	eor	r12, r12
     1d6:	c3 94       	inc	r12
     1d8:	d1 2c       	mov	r13, r1
     1da:	0f 2e       	mov	r0, r31
     1dc:	f6 e3       	ldi	r31, 0x36	; 54
     1de:	ef 2e       	mov	r14, r31
     1e0:	f3 e0       	ldi	r31, 0x03	; 3
     1e2:	ff 2e       	mov	r15, r31
     1e4:	f0 2d       	mov	r31, r0
     1e6:	20 e0       	ldi	r18, 0x00	; 0
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	a9 01       	movw	r20, r18
     1ec:	60 e0       	ldi	r22, 0x00	; 0
     1ee:	70 e0       	ldi	r23, 0x00	; 0
     1f0:	cb 01       	movw	r24, r22
     1f2:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
	}
	
	//Down
	if ((PINB & downMask) == 0){
     1f6:	1f 99       	sbic	0x03, 7	; 3
     1f8:	1d c0       	rjmp	.+58     	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
		ASYNC(currentPG, changeFreq, -1);
     1fa:	e8 85       	ldd	r30, Y+8	; 0x08
     1fc:	f9 85       	ldd	r31, Y+9	; 0x09
     1fe:	04 80       	ldd	r0, Z+4	; 0x04
     200:	f5 81       	ldd	r31, Z+5	; 0x05
     202:	e0 2d       	mov	r30, r0
     204:	32 96       	adiw	r30, 0x02	; 2
     206:	ee 0f       	add	r30, r30
     208:	ff 1f       	adc	r31, r31
     20a:	ec 0f       	add	r30, r28
     20c:	fd 1f       	adc	r31, r29
     20e:	00 81       	ld	r16, Z
     210:	11 81       	ldd	r17, Z+1	; 0x01
     212:	cc 24       	eor	r12, r12
     214:	ca 94       	dec	r12
     216:	dc 2c       	mov	r13, r12
     218:	0f 2e       	mov	r0, r31
     21a:	f6 e3       	ldi	r31, 0x36	; 54
     21c:	ef 2e       	mov	r14, r31
     21e:	f3 e0       	ldi	r31, 0x03	; 3
     220:	ff 2e       	mov	r15, r31
     222:	f0 2d       	mov	r31, r0
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	a9 01       	movw	r20, r18
     22a:	60 e0       	ldi	r22, 0x00	; 0
     22c:	70 e0       	ldi	r23, 0x00	; 0
     22e:	cb 01       	movw	r24, r22
     230:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
	}
	
	//Pressing
	if ((PINB & pressMask) == 0){
     234:	1c 99       	sbic	0x03, 4	; 3
     236:	1b c0       	rjmp	.+54     	; 0x26e <__EEPROM_REGION_LENGTH__+0x6e>
		ASYNC(currentPG, saveLoadFreq, NULL);
     238:	e8 85       	ldd	r30, Y+8	; 0x08
     23a:	f9 85       	ldd	r31, Y+9	; 0x09
     23c:	84 81       	ldd	r24, Z+4	; 0x04
     23e:	95 81       	ldd	r25, Z+5	; 0x05
     240:	02 96       	adiw	r24, 0x02	; 2
     242:	88 0f       	add	r24, r24
     244:	99 1f       	adc	r25, r25
     246:	c8 0f       	add	r28, r24
     248:	d9 1f       	adc	r29, r25
     24a:	08 81       	ld	r16, Y
     24c:	19 81       	ldd	r17, Y+1	; 0x01
     24e:	c1 2c       	mov	r12, r1
     250:	d1 2c       	mov	r13, r1
     252:	0f 2e       	mov	r0, r31
     254:	f9 e6       	ldi	r31, 0x69	; 105
     256:	ef 2e       	mov	r14, r31
     258:	f3 e0       	ldi	r31, 0x03	; 3
     25a:	ff 2e       	mov	r15, r31
     25c:	f0 2d       	mov	r31, r0
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	a9 01       	movw	r20, r18
     264:	60 e0       	ldi	r22, 0x00	; 0
     266:	70 e0       	ldi	r23, 0x00	; 0
     268:	cb 01       	movw	r24, r22
     26a:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
	}
	
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	1f 91       	pop	r17
     274:	0f 91       	pop	r16
     276:	ff 90       	pop	r15
     278:	ef 90       	pop	r14
     27a:	df 90       	pop	r13
     27c:	cf 90       	pop	r12
     27e:	08 95       	ret

00000280 <writeChar>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdbool.h>
#include "GUI.h"

void writeChar(char ch, int pos){
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	cd b7       	in	r28, 0x3d	; 61
     286:	de b7       	in	r29, 0x3e	; 62
     288:	66 97       	sbiw	r28, 0x16	; 22
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	f8 94       	cli
     28e:	de bf       	out	0x3e, r29	; 62
     290:	0f be       	out	0x3f, r0	; 63
     292:	cd bf       	out	0x3d, r28	; 61
	if (pos < 0 || pos > 5){
     294:	66 30       	cpi	r22, 0x06	; 6
     296:	71 05       	cpc	r23, r1
     298:	08 f0       	brcs	.+2      	; 0x29c <writeChar+0x1c>
     29a:	43 c0       	rjmp	.+134    	; 0x322 <writeChar+0xa2>

	//Initiate number to print;
	uint16_t num = 0x0;

	//Set SCC table to have the correct SCC values for the numbers 0-9 and a special character
	uint16_t tableSCC[11] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x0B51, 0xC028};
     29c:	96 e1       	ldi	r25, 0x16	; 22
     29e:	e8 e0       	ldi	r30, 0x08	; 8
     2a0:	f1 e0       	ldi	r31, 0x01	; 1
     2a2:	de 01       	movw	r26, r28
     2a4:	11 96       	adiw	r26, 0x01	; 1
     2a6:	01 90       	ld	r0, Z+
     2a8:	0d 92       	st	X+, r0
     2aa:	9a 95       	dec	r25
     2ac:	e1 f7       	brne	.-8      	; 0x2a6 <writeChar+0x26>

	//Check if the given character is in the interval 0-9 and set the right number value
	if (ch >= '0' && ch <= '9'){
     2ae:	90 ed       	ldi	r25, 0xD0	; 208
     2b0:	98 0f       	add	r25, r24
     2b2:	9a 30       	cpi	r25, 0x0A	; 10
     2b4:	70 f4       	brcc	.+28     	; 0x2d2 <writeChar+0x52>
		//Set the corresponding value from the table to the number
		num = tableSCC[ch - '0'];
     2b6:	e8 2f       	mov	r30, r24
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	f0 97       	sbiw	r30, 0x30	; 48
     2bc:	ee 0f       	add	r30, r30
     2be:	ff 1f       	adc	r31, r31
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	8c 0f       	add	r24, r28
     2c6:	9d 1f       	adc	r25, r29
     2c8:	e8 0f       	add	r30, r24
     2ca:	f9 1f       	adc	r31, r25
     2cc:	40 81       	ld	r20, Z
     2ce:	51 81       	ldd	r21, Z+1	; 0x01
     2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <writeChar+0x56>
		} else {
		//Set the special character from the table to the number
		num = tableSCC[10];
     2d2:	48 e2       	ldi	r20, 0x28	; 40
     2d4:	50 ec       	ldi	r21, 0xC0	; 192
	}

	//Update the LCD address to the given position
	addrLCD += pos >> 1;
     2d6:	fb 01       	movw	r30, r22
     2d8:	f5 95       	asr	r31
     2da:	e7 95       	ror	r30
     2dc:	e4 51       	subi	r30, 0x14	; 20
     2de:	ff 4f       	sbci	r31, 0xFF	; 255

	//Set the correct mask if the position is even or odd
	if (pos % 2 == 0){
     2e0:	db 01       	movw	r26, r22
     2e2:	a1 70       	andi	r26, 0x01	; 1
     2e4:	bb 27       	eor	r27, r27
     2e6:	60 fd       	sbrc	r22, 0
     2e8:	02 c0       	rjmp	.+4      	; 0x2ee <writeChar+0x6e>
		mask = 0xF0;
     2ea:	60 ef       	ldi	r22, 0xF0	; 240
     2ec:	01 c0       	rjmp	.+2      	; 0x2f0 <writeChar+0x70>
		} else {
		mask = 0x0F;
     2ee:	6f e0       	ldi	r22, 0x0F	; 15
	}

	//Place each of the four nibbles of the number on the LCD

	for (int i = 0; i < 4; i++){
     2f0:	20 e0       	ldi	r18, 0x00	; 0
     2f2:	30 e0       	ldi	r19, 0x00	; 0
     2f4:	13 c0       	rjmp	.+38     	; 0x31c <writeChar+0x9c>
		//Masking the smallest number to the current nibble
		nibbleNum = num & 0xF;
     2f6:	84 2f       	mov	r24, r20
     2f8:	8f 70       	andi	r24, 0x0F	; 15
		//Remove the used nibble
		num = num >> 4;
     2fa:	52 95       	swap	r21
     2fc:	42 95       	swap	r20
     2fe:	4f 70       	andi	r20, 0x0F	; 15
     300:	45 27       	eor	r20, r21
     302:	5f 70       	andi	r21, 0x0F	; 15
     304:	45 27       	eor	r20, r21

		//Shift the nibble to the right position if the pos is odd
		if (pos % 2 != 0){
     306:	10 97       	sbiw	r26, 0x00	; 0
     308:	11 f0       	breq	.+4      	; 0x30e <writeChar+0x8e>
			nibbleNum = nibbleNum << 4;
     30a:	82 95       	swap	r24
     30c:	80 7f       	andi	r24, 0xF0	; 240
		}

		//Write the current nibble to the LCD
		*addrLCD = (*addrLCD & mask) | nibbleNum;
     30e:	90 81       	ld	r25, Z
     310:	96 23       	and	r25, r22
     312:	89 2b       	or	r24, r25
     314:	80 83       	st	Z, r24

		//Move to the next nibble sequence of the current digit on the LCD
		addrLCD += 5;
     316:	35 96       	adiw	r30, 0x05	; 5
		mask = 0x0F;
	}

	//Place each of the four nibbles of the number on the LCD

	for (int i = 0; i < 4; i++){
     318:	2f 5f       	subi	r18, 0xFF	; 255
     31a:	3f 4f       	sbci	r19, 0xFF	; 255
     31c:	24 30       	cpi	r18, 0x04	; 4
     31e:	31 05       	cpc	r19, r1
     320:	54 f3       	brlt	.-44     	; 0x2f6 <writeChar+0x76>
		*addrLCD = (*addrLCD & mask) | nibbleNum;

		//Move to the next nibble sequence of the current digit on the LCD
		addrLCD += 5;
	}
}
     322:	66 96       	adiw	r28, 0x16	; 22
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	f8 94       	cli
     328:	de bf       	out	0x3e, r29	; 62
     32a:	0f be       	out	0x3f, r0	; 63
     32c:	cd bf       	out	0x3d, r28	; 61
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	08 95       	ret

00000334 <printAt>:

void printAt(int pos, int num) {
     334:	ef 92       	push	r14
     336:	ff 92       	push	r15
     338:	0f 93       	push	r16
     33a:	1f 93       	push	r17
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
     340:	ec 01       	movw	r28, r24
     342:	7b 01       	movw	r14, r22
	writeChar( (num % 100) / 10 + '0', pos);
     344:	cb 01       	movw	r24, r22
     346:	64 e6       	ldi	r22, 0x64	; 100
     348:	70 e0       	ldi	r23, 0x00	; 0
     34a:	0e 94 2f 10 	call	0x205e	; 0x205e <__divmodhi4>
     34e:	0a e0       	ldi	r16, 0x0A	; 10
     350:	10 e0       	ldi	r17, 0x00	; 0
     352:	b8 01       	movw	r22, r16
     354:	0e 94 2f 10 	call	0x205e	; 0x205e <__divmodhi4>
     358:	86 2f       	mov	r24, r22
     35a:	be 01       	movw	r22, r28
     35c:	80 5d       	subi	r24, 0xD0	; 208
     35e:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
	pos++;
     362:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pos);
     364:	c7 01       	movw	r24, r14
     366:	b8 01       	movw	r22, r16
     368:	0e 94 2f 10 	call	0x205e	; 0x205e <__divmodhi4>
     36c:	be 01       	movw	r22, r28
     36e:	80 5d       	subi	r24, 0xD0	; 208
     370:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
}
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	1f 91       	pop	r17
     37a:	0f 91       	pop	r16
     37c:	ff 90       	pop	r15
     37e:	ef 90       	pop	r14
     380:	08 95       	ret

00000382 <printCurrent>:
	self->current = arg;
	printCurrent(self);
}

void printCurrent(GUI *self){
	if (self->current == 0){
     382:	fc 01       	movw	r30, r24
     384:	84 81       	ldd	r24, Z+4	; 0x04
     386:	95 81       	ldd	r25, Z+5	; 0x05
     388:	00 97       	sbiw	r24, 0x00	; 0
     38a:	21 f4       	brne	.+8      	; 0x394 <printCurrent+0x12>
		LCDDR1 = (1 << 0);
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     392:	08 95       	ret
	} else if (self->current == 1){
     394:	01 97       	sbiw	r24, 0x01	; 1
     396:	19 f4       	brne	.+6      	; 0x39e <printCurrent+0x1c>
		LCDDR1 = (1 << 4);
     398:	80 e1       	ldi	r24, 0x10	; 16
     39a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     39e:	08 95       	ret

000003a0 <changeCurrent>:
	pos++;
	writeChar( num % 10 + '0', pos);
}

void changeCurrent(GUI *self, int arg){
	self->current = arg;
     3a0:	fc 01       	movw	r30, r24
     3a2:	75 83       	std	Z+5, r23	; 0x05
     3a4:	64 83       	std	Z+4, r22	; 0x04
	printCurrent(self);
     3a6:	0e 94 c1 01 	call	0x382	; 0x382 <printCurrent>
     3aa:	08 95       	ret

000003ac <updateDisplayedFreq>:
		LCDDR1 = (1 << 4);
	}
}

void updateDisplayedFreq(GUI *self, int freq){
	int current = self->current;
     3ac:	fc 01       	movw	r30, r24
     3ae:	84 81       	ldd	r24, Z+4	; 0x04
     3b0:	95 81       	ldd	r25, Z+5	; 0x05
	
	int pos = 2;
	if (current == 0){
     3b2:	00 97       	sbiw	r24, 0x00	; 0
     3b4:	29 f0       	breq	.+10     	; 0x3c0 <updateDisplayedFreq+0x14>
		pos = 0;
	} else if (current == 1) {
     3b6:	01 97       	sbiw	r24, 0x01	; 1
     3b8:	31 f0       	breq	.+12     	; 0x3c6 <updateDisplayedFreq+0x1a>
}

void updateDisplayedFreq(GUI *self, int freq){
	int current = self->current;
	
	int pos = 2;
     3ba:	82 e0       	ldi	r24, 0x02	; 2
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	05 c0       	rjmp	.+10     	; 0x3ca <updateDisplayedFreq+0x1e>
	if (current == 0){
		pos = 0;
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	02 c0       	rjmp	.+4      	; 0x3ca <updateDisplayedFreq+0x1e>
	} else if (current == 1) {
		pos = 4;
     3c6:	84 e0       	ldi	r24, 0x04	; 4
     3c8:	90 e0       	ldi	r25, 0x00	; 0
	}
	printAt(pos, freq);
     3ca:	0e 94 9a 01 	call	0x334	; 0x334 <printAt>
     3ce:	08 95       	ret

000003d0 <LCD_INIT>:
}

 void LCD_INIT(void){
	 // LCD
	 CLKPR = 0x80;
     3d0:	e1 e6       	ldi	r30, 0x61	; 97
     3d2:	f0 e0       	ldi	r31, 0x00	; 0
     3d4:	80 e8       	ldi	r24, 0x80	; 128
     3d6:	80 83       	st	Z, r24
	 CLKPR = 0x00;
     3d8:	10 82       	st	Z, r1
	 
	 //Set drive time to 300 milliseconds and contrast control voltage to 3.35 V
	 LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     3da:	8f e0       	ldi	r24, 0x0F	; 15
     3dc:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	 
	 //Set external clock source, 1/3 bias, 1/4 duty cycle, 25 segments
	 LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     3e0:	87 eb       	ldi	r24, 0xB7	; 183
     3e2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>

	 //Set prescaler setting N=16 and clock divide settings D=8
	 LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     3e6:	87 e0       	ldi	r24, 0x07	; 7
     3e8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>

	 //Enable low power waveform, no frame interrupt, no blanking, LCD enable
	 LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     3ec:	80 ec       	ldi	r24, 0xC0	; 192
     3ee:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	 
	 asm("nop");
     3f2:	00 00       	nop
	 
	 LCDDR1 = (1 << 0);
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
	 writeChar('0', 0);
     3fa:	60 e0       	ldi	r22, 0x00	; 0
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	80 e3       	ldi	r24, 0x30	; 48
     400:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
	 writeChar('0', 1);
     404:	61 e0       	ldi	r22, 0x01	; 1
     406:	70 e0       	ldi	r23, 0x00	; 0
     408:	80 e3       	ldi	r24, 0x30	; 48
     40a:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
	 writeChar('0', 4);
     40e:	64 e0       	ldi	r22, 0x04	; 4
     410:	70 e0       	ldi	r23, 0x00	; 0
     412:	80 e3       	ldi	r24, 0x30	; 48
     414:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
	 writeChar('0', 5);
     418:	65 e0       	ldi	r22, 0x05	; 5
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	80 e3       	ldi	r24, 0x30	; 48
     41e:	0e 94 40 01 	call	0x280	; 0x280 <writeChar>
     422:	08 95       	ret

00000424 <Button_INIT>:
 }
 
 void Button_INIT(void){
	 //Initialize for butterfly joystick
	 EIMSK = (1<<PCIE1) | (1<<PCIE0) | EIMSK;
     424:	8d b3       	in	r24, 0x1d	; 29
     426:	80 6c       	ori	r24, 0xC0	; 192
     428:	8d bb       	out	0x1d, r24	; 29
	 
	 //Press down
	 PORTB = (1<<PB7) | PORTB;
     42a:	85 b1       	in	r24, 0x05	; 5
     42c:	80 68       	ori	r24, 0x80	; 128
     42e:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT15) | PCMSK1;
     430:	ec e6       	ldi	r30, 0x6C	; 108
     432:	f0 e0       	ldi	r31, 0x00	; 0
     434:	80 81       	ld	r24, Z
     436:	80 68       	ori	r24, 0x80	; 128
     438:	80 83       	st	Z, r24
	 
	 //Press  upp
	 PORTB = (1<<PB6) | PORTB;
     43a:	85 b1       	in	r24, 0x05	; 5
     43c:	80 64       	ori	r24, 0x40	; 64
     43e:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT14) | PCMSK1;
     440:	80 81       	ld	r24, Z
     442:	80 64       	ori	r24, 0x40	; 64
     444:	80 83       	st	Z, r24
	 
	 //Press right
	 PORTE = (1<<PE3) | PORTE;
     446:	8e b1       	in	r24, 0x0e	; 14
     448:	88 60       	ori	r24, 0x08	; 8
     44a:	8e b9       	out	0x0e, r24	; 14
	 PCMSK0 = (1<<PCINT3) | PCMSK0;
     44c:	ab e6       	ldi	r26, 0x6B	; 107
     44e:	b0 e0       	ldi	r27, 0x00	; 0
     450:	8c 91       	ld	r24, X
     452:	88 60       	ori	r24, 0x08	; 8
     454:	8c 93       	st	X, r24
	 
	 //Press left
	 PORTE = (1<<PE2) | PORTE;
     456:	8e b1       	in	r24, 0x0e	; 14
     458:	84 60       	ori	r24, 0x04	; 4
     45a:	8e b9       	out	0x0e, r24	; 14
	 PCMSK0 = (1<<PCINT2) | PCMSK0;
     45c:	8c 91       	ld	r24, X
     45e:	84 60       	ori	r24, 0x04	; 4
     460:	8c 93       	st	X, r24
	 
	 //Press in
	 PORTB = (1<<PB4) | PORTB;
     462:	85 b1       	in	r24, 0x05	; 5
     464:	80 61       	ori	r24, 0x10	; 16
     466:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT12) | PCMSK1;
     468:	80 81       	ld	r24, Z
     46a:	80 61       	ori	r24, 0x10	; 16
     46c:	80 83       	st	Z, r24
     46e:	08 95       	ret

00000470 <main>:
#include "InputHandler.h"



int main(void)
{
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
     478:	e4 97       	sbiw	r28, 0x34	; 52
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	f8 94       	cli
     47e:	de bf       	out	0x3e, r29	; 62
     480:	0f be       	out	0x3f, r0	; 63
     482:	cd bf       	out	0x3d, r28	; 61
	PortWriter		portWriter	 = initPortWriter();
     484:	1a 82       	std	Y+2, r1	; 0x02
     486:	19 82       	std	Y+1, r1	; 0x01
     488:	1c 82       	std	Y+4, r1	; 0x04
     48a:	1b 82       	std	Y+3, r1	; 0x03
	GUI				gui			 = initGUI();
     48c:	1e 82       	std	Y+6, r1	; 0x06
     48e:	1d 82       	std	Y+5, r1	; 0x05
     490:	18 86       	std	Y+8, r1	; 0x08
     492:	1f 82       	std	Y+7, r1	; 0x07
     494:	1a 86       	std	Y+10, r1	; 0x0a
     496:	19 86       	std	Y+9, r1	; 0x09
	PulseGenerator	pG1		 = initPulseGenerator(&portWriter, &gui, 4);
     498:	1c 86       	std	Y+12, r1	; 0x0c
     49a:	1b 86       	std	Y+11, r1	; 0x0b
     49c:	1e 86       	std	Y+14, r1	; 0x0e
     49e:	1d 86       	std	Y+13, r1	; 0x0d
     4a0:	9e 01       	movw	r18, r28
     4a2:	2f 5f       	subi	r18, 0xFF	; 255
     4a4:	3f 4f       	sbci	r19, 0xFF	; 255
     4a6:	38 8b       	std	Y+16, r19	; 0x10
     4a8:	2f 87       	std	Y+15, r18	; 0x0f
     4aa:	ce 01       	movw	r24, r28
     4ac:	05 96       	adiw	r24, 0x05	; 5
     4ae:	9a 8b       	std	Y+18, r25	; 0x12
     4b0:	89 8b       	std	Y+17, r24	; 0x11
     4b2:	44 e0       	ldi	r20, 0x04	; 4
     4b4:	50 e0       	ldi	r21, 0x00	; 0
     4b6:	5c 8b       	std	Y+20, r21	; 0x14
     4b8:	4b 8b       	std	Y+19, r20	; 0x13
     4ba:	1e 8a       	std	Y+22, r1	; 0x16
     4bc:	1d 8a       	std	Y+21, r1	; 0x15
     4be:	18 8e       	std	Y+24, r1	; 0x18
     4c0:	1f 8a       	std	Y+23, r1	; 0x17
     4c2:	1a 8e       	std	Y+26, r1	; 0x1a
     4c4:	19 8e       	std	Y+25, r1	; 0x19
	PulseGenerator	pG2		 = initPulseGenerator(&portWriter, &gui, 6);
     4c6:	1c 8e       	std	Y+28, r1	; 0x1c
     4c8:	1b 8e       	std	Y+27, r1	; 0x1b
     4ca:	1e 8e       	std	Y+30, r1	; 0x1e
     4cc:	1d 8e       	std	Y+29, r1	; 0x1d
     4ce:	38 a3       	std	Y+32, r19	; 0x20
     4d0:	2f 8f       	std	Y+31, r18	; 0x1f
     4d2:	9a a3       	std	Y+34, r25	; 0x22
     4d4:	89 a3       	std	Y+33, r24	; 0x21
     4d6:	26 e0       	ldi	r18, 0x06	; 6
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	3c a3       	std	Y+36, r19	; 0x24
     4dc:	2b a3       	std	Y+35, r18	; 0x23
     4de:	1e a2       	std	Y+38, r1	; 0x26
     4e0:	1d a2       	std	Y+37, r1	; 0x25
     4e2:	18 a6       	std	Y+40, r1	; 0x28
     4e4:	1f a2       	std	Y+39, r1	; 0x27
     4e6:	1a a6       	std	Y+42, r1	; 0x2a
     4e8:	19 a6       	std	Y+41, r1	; 0x29
	InputHandler	inputHandler = initInputHandler(&pG1, &pG2, &gui);
     4ea:	1c a6       	std	Y+44, r1	; 0x2c
     4ec:	1b a6       	std	Y+43, r1	; 0x2b
     4ee:	1e a6       	std	Y+46, r1	; 0x2e
     4f0:	1d a6       	std	Y+45, r1	; 0x2d
     4f2:	9e 01       	movw	r18, r28
     4f4:	25 5f       	subi	r18, 0xF5	; 245
     4f6:	3f 4f       	sbci	r19, 0xFF	; 255
     4f8:	38 ab       	std	Y+48, r19	; 0x30
     4fa:	2f a7       	std	Y+47, r18	; 0x2f
     4fc:	20 5f       	subi	r18, 0xF0	; 240
     4fe:	3f 4f       	sbci	r19, 0xFF	; 255
     500:	3a ab       	std	Y+50, r19	; 0x32
     502:	29 ab       	std	Y+49, r18	; 0x31
     504:	9c ab       	std	Y+52, r25	; 0x34
     506:	8b ab       	std	Y+51, r24	; 0x33
	
	INSTALL(&inputHandler, joystickHorizontal, IRQ_PCINT0);	// Left & Right
     508:	41 e0       	ldi	r20, 0x01	; 1
     50a:	6b e8       	ldi	r22, 0x8B	; 139
     50c:	70 e0       	ldi	r23, 0x00	; 0
     50e:	86 96       	adiw	r24, 0x26	; 38
     510:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <install>
	INSTALL(&inputHandler, joystickVerticalPressed, IRQ_PCINT1);	// Up, Down & Pressed
     514:	42 e0       	ldi	r20, 0x02	; 2
     516:	63 ed       	ldi	r22, 0xD3	; 211
     518:	70 e0       	ldi	r23, 0x00	; 0
     51a:	ce 01       	movw	r24, r28
     51c:	8b 96       	adiw	r24, 0x2b	; 43
     51e:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <install>
	
	return TINYTIMBER(&inputHandler, initialize, NULL);
     522:	40 e0       	ldi	r20, 0x00	; 0
     524:	50 e0       	ldi	r21, 0x00	; 0
     526:	6d e4       	ldi	r22, 0x4D	; 77
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	ce 01       	movw	r24, r28
     52c:	8b 96       	adiw	r24, 0x2b	; 43
     52e:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <tinytimber>
     532:	e4 96       	adiw	r28, 0x34	; 52
     534:	0f b6       	in	r0, 0x3f	; 63
     536:	f8 94       	cli
     538:	de bf       	out	0x3e, r29	; 62
     53a:	0f be       	out	0x3f, r0	; 63
     53c:	cd bf       	out	0x3d, r28	; 61
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	08 95       	ret

00000544 <generatePulse>:
 */ 

#include "PulseGenerator.h"
#include <avr/io.h>

void generatePulse(PulseGenerator *self){
     544:	cf 92       	push	r12
     546:	df 92       	push	r13
     548:	ef 92       	push	r14
     54a:	ff 92       	push	r15
     54c:	0f 93       	push	r16
     54e:	1f 93       	push	r17
     550:	cf 93       	push	r28
     552:	df 93       	push	r29
     554:	ec 01       	movw	r28, r24
	if (self->savedFreq == 0){
     556:	8c 85       	ldd	r24, Y+12	; 0x0c
     558:	9d 85       	ldd	r25, Y+13	; 0x0d
     55a:	89 2b       	or	r24, r25
     55c:	d9 f4       	brne	.+54     	; 0x594 <generatePulse+0x50>
		SYNC(self->pw, turnOffPin, self->pin);
     55e:	48 85       	ldd	r20, Y+8	; 0x08
     560:	59 85       	ldd	r21, Y+9	; 0x09
     562:	60 e1       	ldi	r22, 0x10	; 16
     564:	70 e1       	ldi	r23, 0x10	; 16
     566:	8c 81       	ldd	r24, Y+4	; 0x04
     568:	9d 81       	ldd	r25, Y+5	; 0x05
     56a:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <sync>
		AFTER(MSEC(500), self, generatePulse, NULL);
     56e:	c1 2c       	mov	r12, r1
     570:	d1 2c       	mov	r13, r1
     572:	0f 2e       	mov	r0, r31
     574:	f2 ea       	ldi	r31, 0xA2	; 162
     576:	ef 2e       	mov	r14, r31
     578:	f2 e0       	ldi	r31, 0x02	; 2
     57a:	ff 2e       	mov	r15, r31
     57c:	f0 2d       	mov	r31, r0
     57e:	8e 01       	movw	r16, r28
     580:	20 e0       	ldi	r18, 0x00	; 0
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	a9 01       	movw	r20, r18
     586:	69 e0       	ldi	r22, 0x09	; 9
     588:	7d e3       	ldi	r23, 0x3D	; 61
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
     592:	2e c0       	rjmp	.+92     	; 0x5f0 <generatePulse+0xac>
	} else {
		SYNC(self->pw, invertPin, self->pin);
     594:	48 85       	ldd	r20, Y+8	; 0x08
     596:	59 85       	ldd	r21, Y+9	; 0x09
     598:	60 e2       	ldi	r22, 0x20	; 32
     59a:	70 e1       	ldi	r23, 0x10	; 16
     59c:	8c 81       	ldd	r24, Y+4	; 0x04
     59e:	9d 81       	ldd	r25, Y+5	; 0x05
     5a0:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <sync>
		AFTER(USEC(500000/self->savedFreq), self, generatePulse, NULL);
     5a4:	2c 85       	ldd	r18, Y+12	; 0x0c
     5a6:	3d 85       	ldd	r19, Y+13	; 0x0d
     5a8:	03 2e       	mov	r0, r19
     5aa:	00 0c       	add	r0, r0
     5ac:	44 0b       	sbc	r20, r20
     5ae:	55 0b       	sbc	r21, r21
     5b0:	60 e2       	ldi	r22, 0x20	; 32
     5b2:	71 ea       	ldi	r23, 0xA1	; 161
     5b4:	87 e0       	ldi	r24, 0x07	; 7
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	0e 94 43 10 	call	0x2086	; 0x2086 <__divmodsi4>
     5bc:	ad e7       	ldi	r26, 0x7D	; 125
     5be:	b0 e0       	ldi	r27, 0x00	; 0
     5c0:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__muluhisi3>
     5c4:	20 ea       	ldi	r18, 0xA0	; 160
     5c6:	3f e0       	ldi	r19, 0x0F	; 15
     5c8:	40 e0       	ldi	r20, 0x00	; 0
     5ca:	50 e0       	ldi	r21, 0x00	; 0
     5cc:	0e 94 43 10 	call	0x2086	; 0x2086 <__divmodsi4>
     5d0:	ca 01       	movw	r24, r20
     5d2:	b9 01       	movw	r22, r18
     5d4:	c1 2c       	mov	r12, r1
     5d6:	d1 2c       	mov	r13, r1
     5d8:	0f 2e       	mov	r0, r31
     5da:	f2 ea       	ldi	r31, 0xA2	; 162
     5dc:	ef 2e       	mov	r14, r31
     5de:	f2 e0       	ldi	r31, 0x02	; 2
     5e0:	ff 2e       	mov	r15, r31
     5e2:	f0 2d       	mov	r31, r0
     5e4:	8e 01       	movw	r16, r28
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	a9 01       	movw	r20, r18
     5ec:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
	}
}
     5f0:	df 91       	pop	r29
     5f2:	cf 91       	pop	r28
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	ff 90       	pop	r15
     5fa:	ef 90       	pop	r14
     5fc:	df 90       	pop	r13
     5fe:	cf 90       	pop	r12
     600:	08 95       	ret

00000602 <checkContinous>:

void checkContinous(PulseGenerator *self, int value){
     602:	cf 92       	push	r12
     604:	df 92       	push	r13
     606:	ef 92       	push	r14
     608:	ff 92       	push	r15
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
	if (value == 1){
     60e:	61 30       	cpi	r22, 0x01	; 1
     610:	71 05       	cpc	r23, r1
     612:	99 f4       	brne	.+38     	; 0x63a <checkContinous+0x38>
		if ((PINB & upMask) == 0){
     614:	1e 99       	sbic	0x03, 6	; 3
     616:	23 c0       	rjmp	.+70     	; 0x65e <checkContinous+0x5c>
			ASYNC(self, changeFreq, value);
     618:	6b 01       	movw	r12, r22
     61a:	0f 2e       	mov	r0, r31
     61c:	f6 e3       	ldi	r31, 0x36	; 54
     61e:	ef 2e       	mov	r14, r31
     620:	f3 e0       	ldi	r31, 0x03	; 3
     622:	ff 2e       	mov	r15, r31
     624:	f0 2d       	mov	r31, r0
     626:	8c 01       	movw	r16, r24
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	a9 01       	movw	r20, r18
     62e:	60 e0       	ldi	r22, 0x00	; 0
     630:	70 e0       	ldi	r23, 0x00	; 0
     632:	cb 01       	movw	r24, r22
     634:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
     638:	12 c0       	rjmp	.+36     	; 0x65e <checkContinous+0x5c>
			//AFTER(MSEC(waitTime), self, checkContinous, true);
		}
	} else {
		if ((PINB & downMask) == 0){
     63a:	1f 99       	sbic	0x03, 7	; 3
     63c:	10 c0       	rjmp	.+32     	; 0x65e <checkContinous+0x5c>
			ASYNC(self, changeFreq, value);
     63e:	6b 01       	movw	r12, r22
     640:	0f 2e       	mov	r0, r31
     642:	f6 e3       	ldi	r31, 0x36	; 54
     644:	ef 2e       	mov	r14, r31
     646:	f3 e0       	ldi	r31, 0x03	; 3
     648:	ff 2e       	mov	r15, r31
     64a:	f0 2d       	mov	r31, r0
     64c:	8c 01       	movw	r16, r24
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	a9 01       	movw	r20, r18
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	cb 01       	movw	r24, r22
     65a:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
			//AFTER(MSEC(waitTime), self, checkContinous, false);
		}
	}
}
     65e:	1f 91       	pop	r17
     660:	0f 91       	pop	r16
     662:	ff 90       	pop	r15
     664:	ef 90       	pop	r14
     666:	df 90       	pop	r13
     668:	cf 90       	pop	r12
     66a:	08 95       	ret

0000066c <changeFreq>:

void changeFreq(PulseGenerator *self, int value){
     66c:	cf 92       	push	r12
     66e:	df 92       	push	r13
     670:	ef 92       	push	r14
     672:	ff 92       	push	r15
     674:	0f 93       	push	r16
     676:	1f 93       	push	r17
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
	if ((self->freq + value) >= 0 && (self->freq + value) <= 99){
     67c:	fc 01       	movw	r30, r24
     67e:	42 85       	ldd	r20, Z+10	; 0x0a
     680:	53 85       	ldd	r21, Z+11	; 0x0b
     682:	46 0f       	add	r20, r22
     684:	57 1f       	adc	r21, r23
     686:	44 36       	cpi	r20, 0x64	; 100
     688:	51 05       	cpc	r21, r1
     68a:	d0 f4       	brcc	.+52     	; 0x6c0 <changeFreq+0x54>
     68c:	6b 01       	movw	r12, r22
     68e:	ec 01       	movw	r28, r24
		self->freq = self->freq + value;
     690:	53 87       	std	Z+11, r21	; 0x0b
     692:	42 87       	std	Z+10, r20	; 0x0a
		SYNC(self->gui, updateDisplayedFreq, self->freq);
     694:	66 ed       	ldi	r22, 0xD6	; 214
     696:	71 e0       	ldi	r23, 0x01	; 1
     698:	86 81       	ldd	r24, Z+6	; 0x06
     69a:	97 81       	ldd	r25, Z+7	; 0x07
     69c:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <sync>
		AFTER(MSEC(waitTime), self, checkContinous, value);
     6a0:	0f 2e       	mov	r0, r31
     6a2:	f1 e0       	ldi	r31, 0x01	; 1
     6a4:	ef 2e       	mov	r14, r31
     6a6:	f3 e0       	ldi	r31, 0x03	; 3
     6a8:	ff 2e       	mov	r15, r31
     6aa:	f0 2d       	mov	r31, r0
     6ac:	8e 01       	movw	r16, r28
     6ae:	20 e0       	ldi	r18, 0x00	; 0
     6b0:	30 e0       	ldi	r19, 0x00	; 0
     6b2:	a9 01       	movw	r20, r18
     6b4:	6f e9       	ldi	r22, 0x9F	; 159
     6b6:	74 e2       	ldi	r23, 0x24	; 36
     6b8:	80 e0       	ldi	r24, 0x00	; 0
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
	}
}
     6c0:	df 91       	pop	r29
     6c2:	cf 91       	pop	r28
     6c4:	1f 91       	pop	r17
     6c6:	0f 91       	pop	r16
     6c8:	ff 90       	pop	r15
     6ca:	ef 90       	pop	r14
     6cc:	df 90       	pop	r13
     6ce:	cf 90       	pop	r12
     6d0:	08 95       	ret

000006d2 <saveLoadFreq>:

void saveLoadFreq(PulseGenerator *self){
     6d2:	cf 92       	push	r12
     6d4:	df 92       	push	r13
     6d6:	ef 92       	push	r14
     6d8:	ff 92       	push	r15
     6da:	0f 93       	push	r16
     6dc:	1f 93       	push	r17
     6de:	fc 01       	movw	r30, r24
	if (self->freq == 0){
     6e0:	82 85       	ldd	r24, Z+10	; 0x0a
     6e2:	93 85       	ldd	r25, Z+11	; 0x0b
     6e4:	00 97       	sbiw	r24, 0x00	; 0
     6e6:	29 f4       	brne	.+10     	; 0x6f2 <saveLoadFreq+0x20>
		self->freq = self->savedFreq;
     6e8:	84 85       	ldd	r24, Z+12	; 0x0c
     6ea:	95 85       	ldd	r25, Z+13	; 0x0d
     6ec:	93 87       	std	Z+11, r25	; 0x0b
     6ee:	82 87       	std	Z+10, r24	; 0x0a
     6f0:	04 c0       	rjmp	.+8      	; 0x6fa <saveLoadFreq+0x28>
	} else {
		self->savedFreq = self->freq;
     6f2:	95 87       	std	Z+13, r25	; 0x0d
     6f4:	84 87       	std	Z+12, r24	; 0x0c
		self->freq = 0;
     6f6:	13 86       	std	Z+11, r1	; 0x0b
     6f8:	12 86       	std	Z+10, r1	; 0x0a
	}
	
	ASYNC(self->gui, updateDisplayedFreq, self->freq);
     6fa:	06 81       	ldd	r16, Z+6	; 0x06
     6fc:	17 81       	ldd	r17, Z+7	; 0x07
     6fe:	c2 84       	ldd	r12, Z+10	; 0x0a
     700:	d3 84       	ldd	r13, Z+11	; 0x0b
     702:	0f 2e       	mov	r0, r31
     704:	f6 ed       	ldi	r31, 0xD6	; 214
     706:	ef 2e       	mov	r14, r31
     708:	f1 e0       	ldi	r31, 0x01	; 1
     70a:	ff 2e       	mov	r15, r31
     70c:	f0 2d       	mov	r31, r0
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	a9 01       	movw	r20, r18
     714:	60 e0       	ldi	r22, 0x00	; 0
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	cb 01       	movw	r24, r22
     71a:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
}
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	ff 90       	pop	r15
     724:	ef 90       	pop	r14
     726:	df 90       	pop	r13
     728:	cf 90       	pop	r12
     72a:	08 95       	ret

0000072c <initialize>:
     72c:	cf 93       	push	r28
     72e:	df 93       	push	r29
     730:	00 d0       	rcall	.+0      	; 0x732 <initialize+0x6>
     732:	00 d0       	rcall	.+0      	; 0x734 <initialize+0x8>
     734:	cd b7       	in	r28, 0x3d	; 61
     736:	de b7       	in	r29, 0x3e	; 62
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	18 c0       	rjmp	.+48     	; 0x76e <initialize+0x42>
     73e:	ac 01       	movw	r20, r24
     740:	4f 5f       	subi	r20, 0xFF	; 255
     742:	5f 4f       	sbci	r21, 0xFF	; 255
     744:	9a 01       	movw	r18, r20
     746:	22 95       	swap	r18
     748:	32 95       	swap	r19
     74a:	30 7f       	andi	r19, 0xF0	; 240
     74c:	32 27       	eor	r19, r18
     74e:	20 7f       	andi	r18, 0xF0	; 240
     750:	32 27       	eor	r19, r18
     752:	2f 5f       	subi	r18, 0xFF	; 255
     754:	3d 4f       	sbci	r19, 0xFD	; 253
     756:	82 95       	swap	r24
     758:	92 95       	swap	r25
     75a:	90 7f       	andi	r25, 0xF0	; 240
     75c:	98 27       	eor	r25, r24
     75e:	80 7f       	andi	r24, 0xF0	; 240
     760:	98 27       	eor	r25, r24
     762:	fc 01       	movw	r30, r24
     764:	ef 5f       	subi	r30, 0xFF	; 255
     766:	fd 4f       	sbci	r31, 0xFD	; 253
     768:	31 83       	std	Z+1, r19	; 0x01
     76a:	20 83       	st	Z, r18
     76c:	ca 01       	movw	r24, r20
     76e:	8e 30       	cpi	r24, 0x0E	; 14
     770:	91 05       	cpc	r25, r1
     772:	2c f3       	brlt	.-54     	; 0x73e <initialize+0x12>
     774:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     778:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	15 c0       	rjmp	.+42     	; 0x7ac <initialize+0x80>
     782:	ac 01       	movw	r20, r24
     784:	4f 5f       	subi	r20, 0xFF	; 255
     786:	5f 4f       	sbci	r21, 0xFF	; 255
     788:	6d e1       	ldi	r22, 0x1D	; 29
     78a:	64 9f       	mul	r22, r20
     78c:	90 01       	movw	r18, r0
     78e:	65 9f       	mul	r22, r21
     790:	30 0d       	add	r19, r0
     792:	11 24       	eor	r1, r1
     794:	24 5b       	subi	r18, 0xB4	; 180
     796:	3e 4f       	sbci	r19, 0xFE	; 254
     798:	68 9f       	mul	r22, r24
     79a:	f0 01       	movw	r30, r0
     79c:	69 9f       	mul	r22, r25
     79e:	f0 0d       	add	r31, r0
     7a0:	11 24       	eor	r1, r1
     7a2:	e4 5b       	subi	r30, 0xB4	; 180
     7a4:	fe 4f       	sbci	r31, 0xFE	; 254
     7a6:	31 83       	std	Z+1, r19	; 0x01
     7a8:	20 83       	st	Z, r18
     7aa:	ca 01       	movw	r24, r20
     7ac:	83 30       	cpi	r24, 0x03	; 3
     7ae:	91 05       	cpc	r25, r1
     7b0:	44 f3       	brlt	.-48     	; 0x782 <initialize+0x56>
     7b2:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <threads+0x58>
     7b6:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <threads+0x57>
     7ba:	1a 82       	std	Y+2, r1	; 0x02
     7bc:	19 82       	std	Y+1, r1	; 0x01
     7be:	32 c0       	rjmp	.+100    	; 0x824 <initialize+0xf8>
     7c0:	2d e1       	ldi	r18, 0x1D	; 29
     7c2:	49 81       	ldd	r20, Y+1	; 0x01
     7c4:	5a 81       	ldd	r21, Y+2	; 0x02
     7c6:	24 9f       	mul	r18, r20
     7c8:	c0 01       	movw	r24, r0
     7ca:	25 9f       	mul	r18, r21
     7cc:	90 0d       	add	r25, r0
     7ce:	11 24       	eor	r1, r1
     7d0:	fc 01       	movw	r30, r24
     7d2:	ee 5a       	subi	r30, 0xAE	; 174
     7d4:	fe 4f       	sbci	r31, 0xFE	; 254
     7d6:	fc 83       	std	Y+4, r31	; 0x04
     7d8:	eb 83       	std	Y+3, r30	; 0x03
     7da:	cf 01       	movw	r24, r30
     7dc:	0e 94 b2 10 	call	0x2164	; 0x2164 <setjmp>
     7e0:	20 e6       	ldi	r18, 0x60	; 96
     7e2:	49 81       	ldd	r20, Y+1	; 0x01
     7e4:	5a 81       	ldd	r21, Y+2	; 0x02
     7e6:	24 9f       	mul	r18, r20
     7e8:	c0 01       	movw	r24, r0
     7ea:	25 9f       	mul	r18, r21
     7ec:	90 0d       	add	r25, r0
     7ee:	11 24       	eor	r1, r1
     7f0:	83 5b       	subi	r24, 0xB3	; 179
     7f2:	9c 4f       	sbci	r25, 0xFC	; 252
     7f4:	eb 81       	ldd	r30, Y+3	; 0x03
     7f6:	fc 81       	ldd	r31, Y+4	; 0x04
     7f8:	91 8b       	std	Z+17, r25	; 0x11
     7fa:	80 8b       	std	Z+16, r24	; 0x10
     7fc:	93 8b       	std	Z+19, r25	; 0x13
     7fe:	82 8b       	std	Z+18, r24	; 0x12
     800:	82 e7       	ldi	r24, 0x72	; 114
     802:	9f e0       	ldi	r25, 0x0F	; 15
     804:	96 8b       	std	Z+22, r25	; 0x16
     806:	85 8b       	std	Z+21, r24	; 0x15
     808:	8d e1       	ldi	r24, 0x1D	; 29
     80a:	84 9f       	mul	r24, r20
     80c:	f0 01       	movw	r30, r0
     80e:	85 9f       	mul	r24, r21
     810:	f0 0d       	add	r31, r0
     812:	11 24       	eor	r1, r1
     814:	e4 5b       	subi	r30, 0xB4	; 180
     816:	fe 4f       	sbci	r31, 0xFE	; 254
     818:	15 82       	std	Z+5, r1	; 0x05
     81a:	14 82       	std	Z+4, r1	; 0x04
     81c:	4f 5f       	subi	r20, 0xFF	; 255
     81e:	5f 4f       	sbci	r21, 0xFF	; 255
     820:	5a 83       	std	Y+2, r21	; 0x02
     822:	49 83       	std	Y+1, r20	; 0x01
     824:	29 81       	ldd	r18, Y+1	; 0x01
     826:	3a 81       	ldd	r19, Y+2	; 0x02
     828:	24 30       	cpi	r18, 0x04	; 4
     82a:	31 05       	cpc	r19, r1
     82c:	4c f2       	brlt	.-110    	; 0x7c0 <initialize+0x94>
     82e:	e4 ee       	ldi	r30, 0xE4	; 228
     830:	f1 e0       	ldi	r31, 0x01	; 1
     832:	11 82       	std	Z+1, r1	; 0x01
     834:	10 82       	st	Z, r1
     836:	15 82       	std	Z+5, r1	; 0x05
     838:	14 82       	std	Z+4, r1	; 0x04
     83a:	13 82       	std	Z+3, r1	; 0x03
     83c:	12 82       	std	Z+2, r1	; 0x02
     83e:	e1 e6       	ldi	r30, 0x61	; 97
     840:	f0 e0       	ldi	r31, 0x00	; 0
     842:	80 e8       	ldi	r24, 0x80	; 128
     844:	80 83       	st	Z, r24
     846:	10 82       	st	Z, r1
     848:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     84c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     850:	84 e0       	ldi	r24, 0x04	; 4
     852:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     856:	81 e0       	ldi	r24, 0x01	; 1
     858:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     85c:	0f 90       	pop	r0
     85e:	0f 90       	pop	r0
     860:	0f 90       	pop	r0
     862:	0f 90       	pop	r0
     864:	df 91       	pop	r29
     866:	cf 91       	pop	r28
     868:	08 95       	ret

0000086a <dispatch>:
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	00 d0       	rcall	.+0      	; 0x870 <dispatch+0x6>
     870:	cd b7       	in	r28, 0x3d	; 61
     872:	de b7       	in	r29, 0x3e	; 62
     874:	9a 83       	std	Y+2, r25	; 0x02
     876:	89 83       	std	Y+1, r24	; 0x01
     878:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     87c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     880:	06 96       	adiw	r24, 0x06	; 6
     882:	0e 94 b2 10 	call	0x2164	; 0x2164 <setjmp>
     886:	89 2b       	or	r24, r25
     888:	59 f4       	brne	.+22     	; 0x8a0 <dispatch+0x36>
     88a:	89 81       	ldd	r24, Y+1	; 0x01
     88c:	9a 81       	ldd	r25, Y+2	; 0x02
     88e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     892:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     896:	61 e0       	ldi	r22, 0x01	; 1
     898:	70 e0       	ldi	r23, 0x00	; 0
     89a:	06 96       	adiw	r24, 0x06	; 6
     89c:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <longjmp>
     8a0:	0f 90       	pop	r0
     8a2:	0f 90       	pop	r0
     8a4:	df 91       	pop	r29
     8a6:	cf 91       	pop	r28
     8a8:	08 95       	ret

000008aa <enqueueByDeadline>:
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	eb 01       	movw	r28, r22
     8b8:	e8 81       	ld	r30, Y
     8ba:	f9 81       	ldd	r31, Y+1	; 0x01
     8bc:	c0 e0       	ldi	r28, 0x00	; 0
     8be:	d0 e0       	ldi	r29, 0x00	; 0
     8c0:	04 c0       	rjmp	.+8      	; 0x8ca <enqueueByDeadline+0x20>
     8c2:	ef 01       	movw	r28, r30
     8c4:	01 90       	ld	r0, Z+
     8c6:	f0 81       	ld	r31, Z
     8c8:	e0 2d       	mov	r30, r0
     8ca:	30 97       	sbiw	r30, 0x00	; 0
     8cc:	79 f0       	breq	.+30     	; 0x8ec <enqueueByDeadline+0x42>
     8ce:	06 81       	ldd	r16, Z+6	; 0x06
     8d0:	17 81       	ldd	r17, Z+7	; 0x07
     8d2:	20 85       	ldd	r18, Z+8	; 0x08
     8d4:	31 85       	ldd	r19, Z+9	; 0x09
     8d6:	16 96       	adiw	r26, 0x06	; 6
     8d8:	4d 91       	ld	r20, X+
     8da:	5d 91       	ld	r21, X+
     8dc:	6d 91       	ld	r22, X+
     8de:	7c 91       	ld	r23, X
     8e0:	19 97       	sbiw	r26, 0x09	; 9
     8e2:	40 17       	cp	r20, r16
     8e4:	51 07       	cpc	r21, r17
     8e6:	62 07       	cpc	r22, r18
     8e8:	73 07       	cpc	r23, r19
     8ea:	5c f7       	brge	.-42     	; 0x8c2 <enqueueByDeadline+0x18>
     8ec:	11 96       	adiw	r26, 0x01	; 1
     8ee:	fc 93       	st	X, r31
     8f0:	ee 93       	st	-X, r30
     8f2:	20 97       	sbiw	r28, 0x00	; 0
     8f4:	21 f4       	brne	.+8      	; 0x8fe <enqueueByDeadline+0x54>
     8f6:	fc 01       	movw	r30, r24
     8f8:	b1 83       	std	Z+1, r27	; 0x01
     8fa:	a0 83       	st	Z, r26
     8fc:	02 c0       	rjmp	.+4      	; 0x902 <enqueueByDeadline+0x58>
     8fe:	b9 83       	std	Y+1, r27	; 0x01
     900:	a8 83       	st	Y, r26
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	08 95       	ret

0000090c <enqueueByBaseline>:
     90c:	0f 93       	push	r16
     90e:	1f 93       	push	r17
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	dc 01       	movw	r26, r24
     916:	cb 01       	movw	r24, r22
     918:	eb 01       	movw	r28, r22
     91a:	e8 81       	ld	r30, Y
     91c:	f9 81       	ldd	r31, Y+1	; 0x01
     91e:	c0 e0       	ldi	r28, 0x00	; 0
     920:	d0 e0       	ldi	r29, 0x00	; 0
     922:	04 c0       	rjmp	.+8      	; 0x92c <enqueueByBaseline+0x20>
     924:	ef 01       	movw	r28, r30
     926:	01 90       	ld	r0, Z+
     928:	f0 81       	ld	r31, Z
     92a:	e0 2d       	mov	r30, r0
     92c:	30 97       	sbiw	r30, 0x00	; 0
     92e:	79 f0       	breq	.+30     	; 0x94e <enqueueByBaseline+0x42>
     930:	02 81       	ldd	r16, Z+2	; 0x02
     932:	13 81       	ldd	r17, Z+3	; 0x03
     934:	24 81       	ldd	r18, Z+4	; 0x04
     936:	35 81       	ldd	r19, Z+5	; 0x05
     938:	12 96       	adiw	r26, 0x02	; 2
     93a:	4d 91       	ld	r20, X+
     93c:	5d 91       	ld	r21, X+
     93e:	6d 91       	ld	r22, X+
     940:	7c 91       	ld	r23, X
     942:	15 97       	sbiw	r26, 0x05	; 5
     944:	40 17       	cp	r20, r16
     946:	51 07       	cpc	r21, r17
     948:	62 07       	cpc	r22, r18
     94a:	73 07       	cpc	r23, r19
     94c:	5c f7       	brge	.-42     	; 0x924 <enqueueByBaseline+0x18>
     94e:	11 96       	adiw	r26, 0x01	; 1
     950:	fc 93       	st	X, r31
     952:	ee 93       	st	-X, r30
     954:	20 97       	sbiw	r28, 0x00	; 0
     956:	21 f4       	brne	.+8      	; 0x960 <enqueueByBaseline+0x54>
     958:	fc 01       	movw	r30, r24
     95a:	b1 83       	std	Z+1, r27	; 0x01
     95c:	a0 83       	st	Z, r26
     95e:	02 c0       	rjmp	.+4      	; 0x964 <enqueueByBaseline+0x58>
     960:	b9 83       	std	Y+1, r27	; 0x01
     962:	a8 83       	st	Y, r26
     964:	df 91       	pop	r29
     966:	cf 91       	pop	r28
     968:	1f 91       	pop	r17
     96a:	0f 91       	pop	r16
     96c:	08 95       	ret

0000096e <dequeue>:
     96e:	dc 01       	movw	r26, r24
     970:	ed 91       	ld	r30, X+
     972:	fc 91       	ld	r31, X
     974:	11 97       	sbiw	r26, 0x01	; 1
     976:	30 97       	sbiw	r30, 0x00	; 0
     978:	59 f4       	brne	.+22     	; 0x990 <dequeue+0x22>
     97a:	8f ef       	ldi	r24, 0xFF	; 255
     97c:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     980:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     984:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	83 bf       	out	0x33, r24	; 51
     98c:	88 95       	sleep
     98e:	fc cf       	rjmp	.-8      	; 0x988 <dequeue+0x1a>
     990:	20 81       	ld	r18, Z
     992:	31 81       	ldd	r19, Z+1	; 0x01
     994:	2d 93       	st	X+, r18
     996:	3c 93       	st	X, r19
     998:	cf 01       	movw	r24, r30
     99a:	08 95       	ret

0000099c <insert>:
     99c:	fb 01       	movw	r30, r22
     99e:	20 81       	ld	r18, Z
     9a0:	31 81       	ldd	r19, Z+1	; 0x01
     9a2:	fc 01       	movw	r30, r24
     9a4:	31 83       	std	Z+1, r19	; 0x01
     9a6:	20 83       	st	Z, r18
     9a8:	fb 01       	movw	r30, r22
     9aa:	91 83       	std	Z+1, r25	; 0x01
     9ac:	80 83       	st	Z, r24
     9ae:	08 95       	ret

000009b0 <push>:
     9b0:	fb 01       	movw	r30, r22
     9b2:	20 81       	ld	r18, Z
     9b4:	31 81       	ldd	r19, Z+1	; 0x01
     9b6:	fc 01       	movw	r30, r24
     9b8:	31 83       	std	Z+1, r19	; 0x01
     9ba:	20 83       	st	Z, r18
     9bc:	fb 01       	movw	r30, r22
     9be:	91 83       	std	Z+1, r25	; 0x01
     9c0:	80 83       	st	Z, r24
     9c2:	08 95       	ret

000009c4 <pop>:
     9c4:	dc 01       	movw	r26, r24
     9c6:	ed 91       	ld	r30, X+
     9c8:	fc 91       	ld	r31, X
     9ca:	11 97       	sbiw	r26, 0x01	; 1
     9cc:	20 81       	ld	r18, Z
     9ce:	31 81       	ldd	r19, Z+1	; 0x01
     9d0:	2d 93       	st	X+, r18
     9d2:	3c 93       	st	X, r19
     9d4:	cf 01       	movw	r24, r30
     9d6:	08 95       	ret

000009d8 <schedule>:
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     9e0:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     9e4:	c2 81       	ldd	r28, Z+2	; 0x02
     9e6:	d3 81       	ldd	r29, Z+3	; 0x03
     9e8:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     9ec:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     9f0:	30 97       	sbiw	r30, 0x00	; 0
     9f2:	19 f1       	breq	.+70     	; 0xa3a <schedule+0x62>
     9f4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     9f8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     9fc:	89 2b       	or	r24, r25
     9fe:	e9 f0       	breq	.+58     	; 0xa3a <schedule+0x62>
     a00:	20 97       	sbiw	r28, 0x00	; 0
     a02:	69 f0       	breq	.+26     	; 0xa1e <schedule+0x46>
     a04:	86 81       	ldd	r24, Z+6	; 0x06
     a06:	97 81       	ldd	r25, Z+7	; 0x07
     a08:	a0 85       	ldd	r26, Z+8	; 0x08
     a0a:	b1 85       	ldd	r27, Z+9	; 0x09
     a0c:	4e 81       	ldd	r20, Y+6	; 0x06
     a0e:	5f 81       	ldd	r21, Y+7	; 0x07
     a10:	68 85       	ldd	r22, Y+8	; 0x08
     a12:	79 85       	ldd	r23, Y+9	; 0x09
     a14:	84 1b       	sub	r24, r20
     a16:	95 0b       	sbc	r25, r21
     a18:	a6 0b       	sbc	r26, r22
     a1a:	b7 0b       	sbc	r27, r23
     a1c:	72 f4       	brpl	.+28     	; 0xa3a <schedule+0x62>
     a1e:	84 e0       	ldi	r24, 0x04	; 4
     a20:	91 e0       	ldi	r25, 0x01	; 1
     a22:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <pop>
     a26:	62 e0       	ldi	r22, 0x02	; 2
     a28:	71 e0       	ldi	r23, 0x01	; 1
     a2a:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <push>
     a2e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     a32:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     a36:	0e 94 35 04 	call	0x86a	; 0x86a <dispatch>
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	08 95       	ret

00000a40 <__vector_1>:
     a40:	1f 92       	push	r1
     a42:	0f 92       	push	r0
     a44:	0f b6       	in	r0, 0x3f	; 63
     a46:	0f 92       	push	r0
     a48:	11 24       	eor	r1, r1
     a4a:	0f 93       	push	r16
     a4c:	1f 93       	push	r17
     a4e:	2f 93       	push	r18
     a50:	3f 93       	push	r19
     a52:	4f 93       	push	r20
     a54:	5f 93       	push	r21
     a56:	6f 93       	push	r22
     a58:	7f 93       	push	r23
     a5a:	8f 93       	push	r24
     a5c:	9f 93       	push	r25
     a5e:	af 93       	push	r26
     a60:	bf 93       	push	r27
     a62:	ef 93       	push	r30
     a64:	ff 93       	push	r31
     a66:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     a6a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     a6e:	ac 01       	movw	r20, r24
     a70:	09 2e       	mov	r0, r25
     a72:	00 0c       	add	r0, r0
     a74:	66 0b       	sbc	r22, r22
     a76:	77 0b       	sbc	r23, r23
     a78:	9a 01       	movw	r18, r20
     a7a:	11 27       	eor	r17, r17
     a7c:	00 27       	eor	r16, r16
     a7e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a82:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a86:	60 e0       	ldi	r22, 0x00	; 0
     a88:	70 e0       	ldi	r23, 0x00	; 0
     a8a:	40 2b       	or	r20, r16
     a8c:	51 2b       	or	r21, r17
     a8e:	62 2b       	or	r22, r18
     a90:	73 2b       	or	r23, r19
     a92:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     a96:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     a9a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     a9e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     aa2:	b0 9b       	sbis	0x16, 0	; 22
     aa4:	1a c0       	rjmp	.+52     	; 0xada <__vector_1+0x9a>
     aa6:	01 96       	adiw	r24, 0x01	; 1
     aa8:	09 2e       	mov	r0, r25
     aaa:	00 0c       	add	r0, r0
     aac:	aa 0b       	sbc	r26, r26
     aae:	bb 0b       	sbc	r27, r27
     ab0:	bc 01       	movw	r22, r24
     ab2:	55 27       	eor	r21, r21
     ab4:	44 27       	eor	r20, r20
     ab6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     aba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     abe:	a0 e0       	ldi	r26, 0x00	; 0
     ac0:	b0 e0       	ldi	r27, 0x00	; 0
     ac2:	84 2b       	or	r24, r20
     ac4:	95 2b       	or	r25, r21
     ac6:	a6 2b       	or	r26, r22
     ac8:	b7 2b       	or	r27, r23
     aca:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     ace:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     ad2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     ad6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     ada:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     ade:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     ae2:	30 97       	sbiw	r30, 0x00	; 0
     ae4:	39 f0       	breq	.+14     	; 0xaf4 <__vector_1+0xb4>
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     aee:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     af2:	09 95       	icall
     af4:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
     af8:	ff 91       	pop	r31
     afa:	ef 91       	pop	r30
     afc:	bf 91       	pop	r27
     afe:	af 91       	pop	r26
     b00:	9f 91       	pop	r25
     b02:	8f 91       	pop	r24
     b04:	7f 91       	pop	r23
     b06:	6f 91       	pop	r22
     b08:	5f 91       	pop	r21
     b0a:	4f 91       	pop	r20
     b0c:	3f 91       	pop	r19
     b0e:	2f 91       	pop	r18
     b10:	1f 91       	pop	r17
     b12:	0f 91       	pop	r16
     b14:	0f 90       	pop	r0
     b16:	0f be       	out	0x3f, r0	; 63
     b18:	0f 90       	pop	r0
     b1a:	1f 90       	pop	r1
     b1c:	18 95       	reti

00000b1e <__vector_2>:
     b1e:	1f 92       	push	r1
     b20:	0f 92       	push	r0
     b22:	0f b6       	in	r0, 0x3f	; 63
     b24:	0f 92       	push	r0
     b26:	11 24       	eor	r1, r1
     b28:	0f 93       	push	r16
     b2a:	1f 93       	push	r17
     b2c:	2f 93       	push	r18
     b2e:	3f 93       	push	r19
     b30:	4f 93       	push	r20
     b32:	5f 93       	push	r21
     b34:	6f 93       	push	r22
     b36:	7f 93       	push	r23
     b38:	8f 93       	push	r24
     b3a:	9f 93       	push	r25
     b3c:	af 93       	push	r26
     b3e:	bf 93       	push	r27
     b40:	ef 93       	push	r30
     b42:	ff 93       	push	r31
     b44:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     b48:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     b4c:	ac 01       	movw	r20, r24
     b4e:	09 2e       	mov	r0, r25
     b50:	00 0c       	add	r0, r0
     b52:	66 0b       	sbc	r22, r22
     b54:	77 0b       	sbc	r23, r23
     b56:	9a 01       	movw	r18, r20
     b58:	11 27       	eor	r17, r17
     b5a:	00 27       	eor	r16, r16
     b5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	40 2b       	or	r20, r16
     b6a:	51 2b       	or	r21, r17
     b6c:	62 2b       	or	r22, r18
     b6e:	73 2b       	or	r23, r19
     b70:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     b74:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     b78:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     b7c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     b80:	b0 9b       	sbis	0x16, 0	; 22
     b82:	1a c0       	rjmp	.+52     	; 0xbb8 <__vector_2+0x9a>
     b84:	01 96       	adiw	r24, 0x01	; 1
     b86:	09 2e       	mov	r0, r25
     b88:	00 0c       	add	r0, r0
     b8a:	aa 0b       	sbc	r26, r26
     b8c:	bb 0b       	sbc	r27, r27
     b8e:	bc 01       	movw	r22, r24
     b90:	55 27       	eor	r21, r21
     b92:	44 27       	eor	r20, r20
     b94:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b98:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	84 2b       	or	r24, r20
     ba2:	95 2b       	or	r25, r21
     ba4:	a6 2b       	or	r26, r22
     ba6:	b7 2b       	or	r27, r23
     ba8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     bac:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     bb0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     bb4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     bb8:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     bbc:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     bc0:	30 97       	sbiw	r30, 0x00	; 0
     bc2:	39 f0       	breq	.+14     	; 0xbd2 <__vector_2+0xb4>
     bc4:	61 e0       	ldi	r22, 0x01	; 1
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     bcc:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     bd0:	09 95       	icall
     bd2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
     bd6:	ff 91       	pop	r31
     bd8:	ef 91       	pop	r30
     bda:	bf 91       	pop	r27
     bdc:	af 91       	pop	r26
     bde:	9f 91       	pop	r25
     be0:	8f 91       	pop	r24
     be2:	7f 91       	pop	r23
     be4:	6f 91       	pop	r22
     be6:	5f 91       	pop	r21
     be8:	4f 91       	pop	r20
     bea:	3f 91       	pop	r19
     bec:	2f 91       	pop	r18
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	0f 90       	pop	r0
     bf4:	0f be       	out	0x3f, r0	; 63
     bf6:	0f 90       	pop	r0
     bf8:	1f 90       	pop	r1
     bfa:	18 95       	reti

00000bfc <__vector_3>:
     bfc:	1f 92       	push	r1
     bfe:	0f 92       	push	r0
     c00:	0f b6       	in	r0, 0x3f	; 63
     c02:	0f 92       	push	r0
     c04:	11 24       	eor	r1, r1
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	2f 93       	push	r18
     c0c:	3f 93       	push	r19
     c0e:	4f 93       	push	r20
     c10:	5f 93       	push	r21
     c12:	6f 93       	push	r22
     c14:	7f 93       	push	r23
     c16:	8f 93       	push	r24
     c18:	9f 93       	push	r25
     c1a:	af 93       	push	r26
     c1c:	bf 93       	push	r27
     c1e:	ef 93       	push	r30
     c20:	ff 93       	push	r31
     c22:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     c26:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     c2a:	ac 01       	movw	r20, r24
     c2c:	09 2e       	mov	r0, r25
     c2e:	00 0c       	add	r0, r0
     c30:	66 0b       	sbc	r22, r22
     c32:	77 0b       	sbc	r23, r23
     c34:	9a 01       	movw	r18, r20
     c36:	11 27       	eor	r17, r17
     c38:	00 27       	eor	r16, r16
     c3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c42:	60 e0       	ldi	r22, 0x00	; 0
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	40 2b       	or	r20, r16
     c48:	51 2b       	or	r21, r17
     c4a:	62 2b       	or	r22, r18
     c4c:	73 2b       	or	r23, r19
     c4e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     c52:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     c56:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     c5a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     c5e:	b0 9b       	sbis	0x16, 0	; 22
     c60:	1a c0       	rjmp	.+52     	; 0xc96 <__vector_3+0x9a>
     c62:	01 96       	adiw	r24, 0x01	; 1
     c64:	09 2e       	mov	r0, r25
     c66:	00 0c       	add	r0, r0
     c68:	aa 0b       	sbc	r26, r26
     c6a:	bb 0b       	sbc	r27, r27
     c6c:	bc 01       	movw	r22, r24
     c6e:	55 27       	eor	r21, r21
     c70:	44 27       	eor	r20, r20
     c72:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c76:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c7a:	a0 e0       	ldi	r26, 0x00	; 0
     c7c:	b0 e0       	ldi	r27, 0x00	; 0
     c7e:	84 2b       	or	r24, r20
     c80:	95 2b       	or	r25, r21
     c82:	a6 2b       	or	r26, r22
     c84:	b7 2b       	or	r27, r23
     c86:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     c8a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     c8e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     c92:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     c96:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     c9a:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     c9e:	30 97       	sbiw	r30, 0x00	; 0
     ca0:	39 f0       	breq	.+14     	; 0xcb0 <__vector_3+0xb4>
     ca2:	62 e0       	ldi	r22, 0x02	; 2
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     caa:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     cae:	09 95       	icall
     cb0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
     cb4:	ff 91       	pop	r31
     cb6:	ef 91       	pop	r30
     cb8:	bf 91       	pop	r27
     cba:	af 91       	pop	r26
     cbc:	9f 91       	pop	r25
     cbe:	8f 91       	pop	r24
     cc0:	7f 91       	pop	r23
     cc2:	6f 91       	pop	r22
     cc4:	5f 91       	pop	r21
     cc6:	4f 91       	pop	r20
     cc8:	3f 91       	pop	r19
     cca:	2f 91       	pop	r18
     ccc:	1f 91       	pop	r17
     cce:	0f 91       	pop	r16
     cd0:	0f 90       	pop	r0
     cd2:	0f be       	out	0x3f, r0	; 63
     cd4:	0f 90       	pop	r0
     cd6:	1f 90       	pop	r1
     cd8:	18 95       	reti

00000cda <__vector_4>:
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	11 24       	eor	r1, r1
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	2f 93       	push	r18
     cea:	3f 93       	push	r19
     cec:	4f 93       	push	r20
     cee:	5f 93       	push	r21
     cf0:	6f 93       	push	r22
     cf2:	7f 93       	push	r23
     cf4:	8f 93       	push	r24
     cf6:	9f 93       	push	r25
     cf8:	af 93       	push	r26
     cfa:	bf 93       	push	r27
     cfc:	ef 93       	push	r30
     cfe:	ff 93       	push	r31
     d00:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     d04:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     d08:	ac 01       	movw	r20, r24
     d0a:	09 2e       	mov	r0, r25
     d0c:	00 0c       	add	r0, r0
     d0e:	66 0b       	sbc	r22, r22
     d10:	77 0b       	sbc	r23, r23
     d12:	9a 01       	movw	r18, r20
     d14:	11 27       	eor	r17, r17
     d16:	00 27       	eor	r16, r16
     d18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d20:	60 e0       	ldi	r22, 0x00	; 0
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	40 2b       	or	r20, r16
     d26:	51 2b       	or	r21, r17
     d28:	62 2b       	or	r22, r18
     d2a:	73 2b       	or	r23, r19
     d2c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     d30:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     d34:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     d38:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     d3c:	b0 9b       	sbis	0x16, 0	; 22
     d3e:	1a c0       	rjmp	.+52     	; 0xd74 <__vector_4+0x9a>
     d40:	01 96       	adiw	r24, 0x01	; 1
     d42:	09 2e       	mov	r0, r25
     d44:	00 0c       	add	r0, r0
     d46:	aa 0b       	sbc	r26, r26
     d48:	bb 0b       	sbc	r27, r27
     d4a:	bc 01       	movw	r22, r24
     d4c:	55 27       	eor	r21, r21
     d4e:	44 27       	eor	r20, r20
     d50:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d54:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d58:	a0 e0       	ldi	r26, 0x00	; 0
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	84 2b       	or	r24, r20
     d5e:	95 2b       	or	r25, r21
     d60:	a6 2b       	or	r26, r22
     d62:	b7 2b       	or	r27, r23
     d64:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     d68:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     d6c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     d70:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     d74:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     d78:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     d7c:	30 97       	sbiw	r30, 0x00	; 0
     d7e:	39 f0       	breq	.+14     	; 0xd8e <__vector_4+0xb4>
     d80:	63 e0       	ldi	r22, 0x03	; 3
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     d88:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     d8c:	09 95       	icall
     d8e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
     d92:	ff 91       	pop	r31
     d94:	ef 91       	pop	r30
     d96:	bf 91       	pop	r27
     d98:	af 91       	pop	r26
     d9a:	9f 91       	pop	r25
     d9c:	8f 91       	pop	r24
     d9e:	7f 91       	pop	r23
     da0:	6f 91       	pop	r22
     da2:	5f 91       	pop	r21
     da4:	4f 91       	pop	r20
     da6:	3f 91       	pop	r19
     da8:	2f 91       	pop	r18
     daa:	1f 91       	pop	r17
     dac:	0f 91       	pop	r16
     dae:	0f 90       	pop	r0
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	0f 90       	pop	r0
     db4:	1f 90       	pop	r1
     db6:	18 95       	reti

00000db8 <__vector_5>:
     db8:	1f 92       	push	r1
     dba:	0f 92       	push	r0
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	0f 92       	push	r0
     dc0:	11 24       	eor	r1, r1
     dc2:	0f 93       	push	r16
     dc4:	1f 93       	push	r17
     dc6:	2f 93       	push	r18
     dc8:	3f 93       	push	r19
     dca:	4f 93       	push	r20
     dcc:	5f 93       	push	r21
     dce:	6f 93       	push	r22
     dd0:	7f 93       	push	r23
     dd2:	8f 93       	push	r24
     dd4:	9f 93       	push	r25
     dd6:	af 93       	push	r26
     dd8:	bf 93       	push	r27
     dda:	ef 93       	push	r30
     ddc:	ff 93       	push	r31
     dde:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     de2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     de6:	ac 01       	movw	r20, r24
     de8:	09 2e       	mov	r0, r25
     dea:	00 0c       	add	r0, r0
     dec:	66 0b       	sbc	r22, r22
     dee:	77 0b       	sbc	r23, r23
     df0:	9a 01       	movw	r18, r20
     df2:	11 27       	eor	r17, r17
     df4:	00 27       	eor	r16, r16
     df6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dfa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dfe:	60 e0       	ldi	r22, 0x00	; 0
     e00:	70 e0       	ldi	r23, 0x00	; 0
     e02:	40 2b       	or	r20, r16
     e04:	51 2b       	or	r21, r17
     e06:	62 2b       	or	r22, r18
     e08:	73 2b       	or	r23, r19
     e0a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     e0e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     e12:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     e16:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     e1a:	b0 9b       	sbis	0x16, 0	; 22
     e1c:	1a c0       	rjmp	.+52     	; 0xe52 <__vector_5+0x9a>
     e1e:	01 96       	adiw	r24, 0x01	; 1
     e20:	09 2e       	mov	r0, r25
     e22:	00 0c       	add	r0, r0
     e24:	aa 0b       	sbc	r26, r26
     e26:	bb 0b       	sbc	r27, r27
     e28:	bc 01       	movw	r22, r24
     e2a:	55 27       	eor	r21, r21
     e2c:	44 27       	eor	r20, r20
     e2e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e32:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e36:	a0 e0       	ldi	r26, 0x00	; 0
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	84 2b       	or	r24, r20
     e3c:	95 2b       	or	r25, r21
     e3e:	a6 2b       	or	r26, r22
     e40:	b7 2b       	or	r27, r23
     e42:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e46:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e4a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e4e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     e52:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     e56:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     e5a:	30 97       	sbiw	r30, 0x00	; 0
     e5c:	39 f0       	breq	.+14     	; 0xe6c <__vector_5+0xb4>
     e5e:	64 e0       	ldi	r22, 0x04	; 4
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     e66:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     e6a:	09 95       	icall
     e6c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
     e70:	ff 91       	pop	r31
     e72:	ef 91       	pop	r30
     e74:	bf 91       	pop	r27
     e76:	af 91       	pop	r26
     e78:	9f 91       	pop	r25
     e7a:	8f 91       	pop	r24
     e7c:	7f 91       	pop	r23
     e7e:	6f 91       	pop	r22
     e80:	5f 91       	pop	r21
     e82:	4f 91       	pop	r20
     e84:	3f 91       	pop	r19
     e86:	2f 91       	pop	r18
     e88:	1f 91       	pop	r17
     e8a:	0f 91       	pop	r16
     e8c:	0f 90       	pop	r0
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	0f 90       	pop	r0
     e92:	1f 90       	pop	r1
     e94:	18 95       	reti

00000e96 <__vector_10>:
     e96:	1f 92       	push	r1
     e98:	0f 92       	push	r0
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	0f 92       	push	r0
     e9e:	11 24       	eor	r1, r1
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	2f 93       	push	r18
     ea6:	3f 93       	push	r19
     ea8:	4f 93       	push	r20
     eaa:	5f 93       	push	r21
     eac:	6f 93       	push	r22
     eae:	7f 93       	push	r23
     eb0:	8f 93       	push	r24
     eb2:	9f 93       	push	r25
     eb4:	af 93       	push	r26
     eb6:	bf 93       	push	r27
     eb8:	ef 93       	push	r30
     eba:	ff 93       	push	r31
     ebc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     ec0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     ec4:	ac 01       	movw	r20, r24
     ec6:	09 2e       	mov	r0, r25
     ec8:	00 0c       	add	r0, r0
     eca:	66 0b       	sbc	r22, r22
     ecc:	77 0b       	sbc	r23, r23
     ece:	9a 01       	movw	r18, r20
     ed0:	11 27       	eor	r17, r17
     ed2:	00 27       	eor	r16, r16
     ed4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     edc:	60 e0       	ldi	r22, 0x00	; 0
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	40 2b       	or	r20, r16
     ee2:	51 2b       	or	r21, r17
     ee4:	62 2b       	or	r22, r18
     ee6:	73 2b       	or	r23, r19
     ee8:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     eec:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     ef0:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     ef4:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     ef8:	b0 9b       	sbis	0x16, 0	; 22
     efa:	1a c0       	rjmp	.+52     	; 0xf30 <__vector_10+0x9a>
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	09 2e       	mov	r0, r25
     f00:	00 0c       	add	r0, r0
     f02:	aa 0b       	sbc	r26, r26
     f04:	bb 0b       	sbc	r27, r27
     f06:	bc 01       	movw	r22, r24
     f08:	55 27       	eor	r21, r21
     f0a:	44 27       	eor	r20, r20
     f0c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f10:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f14:	a0 e0       	ldi	r26, 0x00	; 0
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	84 2b       	or	r24, r20
     f1a:	95 2b       	or	r25, r21
     f1c:	a6 2b       	or	r26, r22
     f1e:	b7 2b       	or	r27, r23
     f20:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     f24:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     f28:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     f2c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f30:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
     f34:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
     f38:	30 97       	sbiw	r30, 0x00	; 0
     f3a:	39 f0       	breq	.+14     	; 0xf4a <__vector_10+0xb4>
     f3c:	65 e0       	ldi	r22, 0x05	; 5
     f3e:	70 e0       	ldi	r23, 0x00	; 0
     f40:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
     f44:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
     f48:	09 95       	icall
     f4a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
     f4e:	ff 91       	pop	r31
     f50:	ef 91       	pop	r30
     f52:	bf 91       	pop	r27
     f54:	af 91       	pop	r26
     f56:	9f 91       	pop	r25
     f58:	8f 91       	pop	r24
     f5a:	7f 91       	pop	r23
     f5c:	6f 91       	pop	r22
     f5e:	5f 91       	pop	r21
     f60:	4f 91       	pop	r20
     f62:	3f 91       	pop	r19
     f64:	2f 91       	pop	r18
     f66:	1f 91       	pop	r17
     f68:	0f 91       	pop	r16
     f6a:	0f 90       	pop	r0
     f6c:	0f be       	out	0x3f, r0	; 63
     f6e:	0f 90       	pop	r0
     f70:	1f 90       	pop	r1
     f72:	18 95       	reti

00000f74 <__vector_11>:
     f74:	1f 92       	push	r1
     f76:	0f 92       	push	r0
     f78:	0f b6       	in	r0, 0x3f	; 63
     f7a:	0f 92       	push	r0
     f7c:	11 24       	eor	r1, r1
     f7e:	0f 93       	push	r16
     f80:	1f 93       	push	r17
     f82:	2f 93       	push	r18
     f84:	3f 93       	push	r19
     f86:	4f 93       	push	r20
     f88:	5f 93       	push	r21
     f8a:	6f 93       	push	r22
     f8c:	7f 93       	push	r23
     f8e:	8f 93       	push	r24
     f90:	9f 93       	push	r25
     f92:	af 93       	push	r26
     f94:	bf 93       	push	r27
     f96:	ef 93       	push	r30
     f98:	ff 93       	push	r31
     f9a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     f9e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     fa2:	ac 01       	movw	r20, r24
     fa4:	09 2e       	mov	r0, r25
     fa6:	00 0c       	add	r0, r0
     fa8:	66 0b       	sbc	r22, r22
     faa:	77 0b       	sbc	r23, r23
     fac:	9a 01       	movw	r18, r20
     fae:	11 27       	eor	r17, r17
     fb0:	00 27       	eor	r16, r16
     fb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fba:	60 e0       	ldi	r22, 0x00	; 0
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	40 2b       	or	r20, r16
     fc0:	51 2b       	or	r21, r17
     fc2:	62 2b       	or	r22, r18
     fc4:	73 2b       	or	r23, r19
     fc6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     fca:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     fce:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     fd2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     fd6:	b0 9b       	sbis	0x16, 0	; 22
     fd8:	1a c0       	rjmp	.+52     	; 0x100e <__vector_11+0x9a>
     fda:	01 96       	adiw	r24, 0x01	; 1
     fdc:	09 2e       	mov	r0, r25
     fde:	00 0c       	add	r0, r0
     fe0:	aa 0b       	sbc	r26, r26
     fe2:	bb 0b       	sbc	r27, r27
     fe4:	bc 01       	movw	r22, r24
     fe6:	55 27       	eor	r21, r21
     fe8:	44 27       	eor	r20, r20
     fea:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fee:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ff2:	a0 e0       	ldi	r26, 0x00	; 0
     ff4:	b0 e0       	ldi	r27, 0x00	; 0
     ff6:	84 2b       	or	r24, r20
     ff8:	95 2b       	or	r25, r21
     ffa:	a6 2b       	or	r26, r22
     ffc:	b7 2b       	or	r27, r23
     ffe:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1002:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1006:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    100a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    100e:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
    1012:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
    1016:	30 97       	sbiw	r30, 0x00	; 0
    1018:	39 f0       	breq	.+14     	; 0x1028 <__vector_11+0xb4>
    101a:	66 e0       	ldi	r22, 0x06	; 6
    101c:	70 e0       	ldi	r23, 0x00	; 0
    101e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
    1022:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
    1026:	09 95       	icall
    1028:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    102c:	ff 91       	pop	r31
    102e:	ef 91       	pop	r30
    1030:	bf 91       	pop	r27
    1032:	af 91       	pop	r26
    1034:	9f 91       	pop	r25
    1036:	8f 91       	pop	r24
    1038:	7f 91       	pop	r23
    103a:	6f 91       	pop	r22
    103c:	5f 91       	pop	r21
    103e:	4f 91       	pop	r20
    1040:	3f 91       	pop	r19
    1042:	2f 91       	pop	r18
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	0f 90       	pop	r0
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	0f 90       	pop	r0
    104e:	1f 90       	pop	r1
    1050:	18 95       	reti

00001052 <__vector_12>:
    1052:	1f 92       	push	r1
    1054:	0f 92       	push	r0
    1056:	0f b6       	in	r0, 0x3f	; 63
    1058:	0f 92       	push	r0
    105a:	11 24       	eor	r1, r1
    105c:	0f 93       	push	r16
    105e:	1f 93       	push	r17
    1060:	2f 93       	push	r18
    1062:	3f 93       	push	r19
    1064:	4f 93       	push	r20
    1066:	5f 93       	push	r21
    1068:	6f 93       	push	r22
    106a:	7f 93       	push	r23
    106c:	8f 93       	push	r24
    106e:	9f 93       	push	r25
    1070:	af 93       	push	r26
    1072:	bf 93       	push	r27
    1074:	ef 93       	push	r30
    1076:	ff 93       	push	r31
    1078:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    107c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1080:	ac 01       	movw	r20, r24
    1082:	09 2e       	mov	r0, r25
    1084:	00 0c       	add	r0, r0
    1086:	66 0b       	sbc	r22, r22
    1088:	77 0b       	sbc	r23, r23
    108a:	9a 01       	movw	r18, r20
    108c:	11 27       	eor	r17, r17
    108e:	00 27       	eor	r16, r16
    1090:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1094:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1098:	60 e0       	ldi	r22, 0x00	; 0
    109a:	70 e0       	ldi	r23, 0x00	; 0
    109c:	40 2b       	or	r20, r16
    109e:	51 2b       	or	r21, r17
    10a0:	62 2b       	or	r22, r18
    10a2:	73 2b       	or	r23, r19
    10a4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    10a8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    10ac:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    10b0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    10b4:	b0 9b       	sbis	0x16, 0	; 22
    10b6:	1a c0       	rjmp	.+52     	; 0x10ec <__vector_12+0x9a>
    10b8:	01 96       	adiw	r24, 0x01	; 1
    10ba:	09 2e       	mov	r0, r25
    10bc:	00 0c       	add	r0, r0
    10be:	aa 0b       	sbc	r26, r26
    10c0:	bb 0b       	sbc	r27, r27
    10c2:	bc 01       	movw	r22, r24
    10c4:	55 27       	eor	r21, r21
    10c6:	44 27       	eor	r20, r20
    10c8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10cc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10d0:	a0 e0       	ldi	r26, 0x00	; 0
    10d2:	b0 e0       	ldi	r27, 0x00	; 0
    10d4:	84 2b       	or	r24, r20
    10d6:	95 2b       	or	r25, r21
    10d8:	a6 2b       	or	r26, r22
    10da:	b7 2b       	or	r27, r23
    10dc:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    10e0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    10e4:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    10e8:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    10ec:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
    10f0:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
    10f4:	30 97       	sbiw	r30, 0x00	; 0
    10f6:	39 f0       	breq	.+14     	; 0x1106 <__vector_12+0xb4>
    10f8:	67 e0       	ldi	r22, 0x07	; 7
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
    1100:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
    1104:	09 95       	icall
    1106:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    110a:	ff 91       	pop	r31
    110c:	ef 91       	pop	r30
    110e:	bf 91       	pop	r27
    1110:	af 91       	pop	r26
    1112:	9f 91       	pop	r25
    1114:	8f 91       	pop	r24
    1116:	7f 91       	pop	r23
    1118:	6f 91       	pop	r22
    111a:	5f 91       	pop	r21
    111c:	4f 91       	pop	r20
    111e:	3f 91       	pop	r19
    1120:	2f 91       	pop	r18
    1122:	1f 91       	pop	r17
    1124:	0f 91       	pop	r16
    1126:	0f 90       	pop	r0
    1128:	0f be       	out	0x3f, r0	; 63
    112a:	0f 90       	pop	r0
    112c:	1f 90       	pop	r1
    112e:	18 95       	reti

00001130 <__vector_13>:
    1130:	1f 92       	push	r1
    1132:	0f 92       	push	r0
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	0f 92       	push	r0
    1138:	11 24       	eor	r1, r1
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	2f 93       	push	r18
    1140:	3f 93       	push	r19
    1142:	4f 93       	push	r20
    1144:	5f 93       	push	r21
    1146:	6f 93       	push	r22
    1148:	7f 93       	push	r23
    114a:	8f 93       	push	r24
    114c:	9f 93       	push	r25
    114e:	af 93       	push	r26
    1150:	bf 93       	push	r27
    1152:	ef 93       	push	r30
    1154:	ff 93       	push	r31
    1156:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    115a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    115e:	ac 01       	movw	r20, r24
    1160:	09 2e       	mov	r0, r25
    1162:	00 0c       	add	r0, r0
    1164:	66 0b       	sbc	r22, r22
    1166:	77 0b       	sbc	r23, r23
    1168:	9a 01       	movw	r18, r20
    116a:	11 27       	eor	r17, r17
    116c:	00 27       	eor	r16, r16
    116e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1172:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1176:	60 e0       	ldi	r22, 0x00	; 0
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	40 2b       	or	r20, r16
    117c:	51 2b       	or	r21, r17
    117e:	62 2b       	or	r22, r18
    1180:	73 2b       	or	r23, r19
    1182:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1186:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    118a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    118e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1192:	b0 9b       	sbis	0x16, 0	; 22
    1194:	1a c0       	rjmp	.+52     	; 0x11ca <__vector_13+0x9a>
    1196:	01 96       	adiw	r24, 0x01	; 1
    1198:	09 2e       	mov	r0, r25
    119a:	00 0c       	add	r0, r0
    119c:	aa 0b       	sbc	r26, r26
    119e:	bb 0b       	sbc	r27, r27
    11a0:	bc 01       	movw	r22, r24
    11a2:	55 27       	eor	r21, r21
    11a4:	44 27       	eor	r20, r20
    11a6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11aa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ae:	a0 e0       	ldi	r26, 0x00	; 0
    11b0:	b0 e0       	ldi	r27, 0x00	; 0
    11b2:	84 2b       	or	r24, r20
    11b4:	95 2b       	or	r25, r21
    11b6:	a6 2b       	or	r26, r22
    11b8:	b7 2b       	or	r27, r23
    11ba:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    11be:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    11c2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    11c6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    11ca:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
    11ce:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
    11d2:	30 97       	sbiw	r30, 0x00	; 0
    11d4:	39 f0       	breq	.+14     	; 0x11e4 <__vector_13+0xb4>
    11d6:	68 e0       	ldi	r22, 0x08	; 8
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
    11de:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
    11e2:	09 95       	icall
    11e4:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    11e8:	ff 91       	pop	r31
    11ea:	ef 91       	pop	r30
    11ec:	bf 91       	pop	r27
    11ee:	af 91       	pop	r26
    11f0:	9f 91       	pop	r25
    11f2:	8f 91       	pop	r24
    11f4:	7f 91       	pop	r23
    11f6:	6f 91       	pop	r22
    11f8:	5f 91       	pop	r21
    11fa:	4f 91       	pop	r20
    11fc:	3f 91       	pop	r19
    11fe:	2f 91       	pop	r18
    1200:	1f 91       	pop	r17
    1202:	0f 91       	pop	r16
    1204:	0f 90       	pop	r0
    1206:	0f be       	out	0x3f, r0	; 63
    1208:	0f 90       	pop	r0
    120a:	1f 90       	pop	r1
    120c:	18 95       	reti

0000120e <__vector_14>:
    120e:	1f 92       	push	r1
    1210:	0f 92       	push	r0
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	0f 92       	push	r0
    1216:	11 24       	eor	r1, r1
    1218:	0f 93       	push	r16
    121a:	1f 93       	push	r17
    121c:	2f 93       	push	r18
    121e:	3f 93       	push	r19
    1220:	4f 93       	push	r20
    1222:	5f 93       	push	r21
    1224:	6f 93       	push	r22
    1226:	7f 93       	push	r23
    1228:	8f 93       	push	r24
    122a:	9f 93       	push	r25
    122c:	af 93       	push	r26
    122e:	bf 93       	push	r27
    1230:	ef 93       	push	r30
    1232:	ff 93       	push	r31
    1234:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1238:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    123c:	ac 01       	movw	r20, r24
    123e:	09 2e       	mov	r0, r25
    1240:	00 0c       	add	r0, r0
    1242:	66 0b       	sbc	r22, r22
    1244:	77 0b       	sbc	r23, r23
    1246:	9a 01       	movw	r18, r20
    1248:	11 27       	eor	r17, r17
    124a:	00 27       	eor	r16, r16
    124c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1250:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1254:	60 e0       	ldi	r22, 0x00	; 0
    1256:	70 e0       	ldi	r23, 0x00	; 0
    1258:	40 2b       	or	r20, r16
    125a:	51 2b       	or	r21, r17
    125c:	62 2b       	or	r22, r18
    125e:	73 2b       	or	r23, r19
    1260:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1264:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1268:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    126c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1270:	b0 9b       	sbis	0x16, 0	; 22
    1272:	1a c0       	rjmp	.+52     	; 0x12a8 <__vector_14+0x9a>
    1274:	01 96       	adiw	r24, 0x01	; 1
    1276:	09 2e       	mov	r0, r25
    1278:	00 0c       	add	r0, r0
    127a:	aa 0b       	sbc	r26, r26
    127c:	bb 0b       	sbc	r27, r27
    127e:	bc 01       	movw	r22, r24
    1280:	55 27       	eor	r21, r21
    1282:	44 27       	eor	r20, r20
    1284:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1288:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    128c:	a0 e0       	ldi	r26, 0x00	; 0
    128e:	b0 e0       	ldi	r27, 0x00	; 0
    1290:	84 2b       	or	r24, r20
    1292:	95 2b       	or	r25, r21
    1294:	a6 2b       	or	r26, r22
    1296:	b7 2b       	or	r27, r23
    1298:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    129c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    12a0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    12a4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    12a8:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    12ac:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    12b0:	30 97       	sbiw	r30, 0x00	; 0
    12b2:	39 f0       	breq	.+14     	; 0x12c2 <__vector_14+0xb4>
    12b4:	69 e0       	ldi	r22, 0x09	; 9
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    12bc:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    12c0:	09 95       	icall
    12c2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    12c6:	ff 91       	pop	r31
    12c8:	ef 91       	pop	r30
    12ca:	bf 91       	pop	r27
    12cc:	af 91       	pop	r26
    12ce:	9f 91       	pop	r25
    12d0:	8f 91       	pop	r24
    12d2:	7f 91       	pop	r23
    12d4:	6f 91       	pop	r22
    12d6:	5f 91       	pop	r21
    12d8:	4f 91       	pop	r20
    12da:	3f 91       	pop	r19
    12dc:	2f 91       	pop	r18
    12de:	1f 91       	pop	r17
    12e0:	0f 91       	pop	r16
    12e2:	0f 90       	pop	r0
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	0f 90       	pop	r0
    12e8:	1f 90       	pop	r1
    12ea:	18 95       	reti

000012ec <__vector_15>:
    12ec:	1f 92       	push	r1
    12ee:	0f 92       	push	r0
    12f0:	0f b6       	in	r0, 0x3f	; 63
    12f2:	0f 92       	push	r0
    12f4:	11 24       	eor	r1, r1
    12f6:	0f 93       	push	r16
    12f8:	1f 93       	push	r17
    12fa:	2f 93       	push	r18
    12fc:	3f 93       	push	r19
    12fe:	4f 93       	push	r20
    1300:	5f 93       	push	r21
    1302:	6f 93       	push	r22
    1304:	7f 93       	push	r23
    1306:	8f 93       	push	r24
    1308:	9f 93       	push	r25
    130a:	af 93       	push	r26
    130c:	bf 93       	push	r27
    130e:	ef 93       	push	r30
    1310:	ff 93       	push	r31
    1312:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1316:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    131a:	ac 01       	movw	r20, r24
    131c:	09 2e       	mov	r0, r25
    131e:	00 0c       	add	r0, r0
    1320:	66 0b       	sbc	r22, r22
    1322:	77 0b       	sbc	r23, r23
    1324:	9a 01       	movw	r18, r20
    1326:	11 27       	eor	r17, r17
    1328:	00 27       	eor	r16, r16
    132a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    132e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1332:	60 e0       	ldi	r22, 0x00	; 0
    1334:	70 e0       	ldi	r23, 0x00	; 0
    1336:	40 2b       	or	r20, r16
    1338:	51 2b       	or	r21, r17
    133a:	62 2b       	or	r22, r18
    133c:	73 2b       	or	r23, r19
    133e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1342:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1346:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    134a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    134e:	b0 9b       	sbis	0x16, 0	; 22
    1350:	1a c0       	rjmp	.+52     	; 0x1386 <__vector_15+0x9a>
    1352:	01 96       	adiw	r24, 0x01	; 1
    1354:	09 2e       	mov	r0, r25
    1356:	00 0c       	add	r0, r0
    1358:	aa 0b       	sbc	r26, r26
    135a:	bb 0b       	sbc	r27, r27
    135c:	bc 01       	movw	r22, r24
    135e:	55 27       	eor	r21, r21
    1360:	44 27       	eor	r20, r20
    1362:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1366:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    136a:	a0 e0       	ldi	r26, 0x00	; 0
    136c:	b0 e0       	ldi	r27, 0x00	; 0
    136e:	84 2b       	or	r24, r20
    1370:	95 2b       	or	r25, r21
    1372:	a6 2b       	or	r26, r22
    1374:	b7 2b       	or	r27, r23
    1376:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    137a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    137e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1382:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1386:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    138a:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    138e:	30 97       	sbiw	r30, 0x00	; 0
    1390:	39 f0       	breq	.+14     	; 0x13a0 <__vector_15+0xb4>
    1392:	6a e0       	ldi	r22, 0x0A	; 10
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    139a:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    139e:	09 95       	icall
    13a0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    13a4:	ff 91       	pop	r31
    13a6:	ef 91       	pop	r30
    13a8:	bf 91       	pop	r27
    13aa:	af 91       	pop	r26
    13ac:	9f 91       	pop	r25
    13ae:	8f 91       	pop	r24
    13b0:	7f 91       	pop	r23
    13b2:	6f 91       	pop	r22
    13b4:	5f 91       	pop	r21
    13b6:	4f 91       	pop	r20
    13b8:	3f 91       	pop	r19
    13ba:	2f 91       	pop	r18
    13bc:	1f 91       	pop	r17
    13be:	0f 91       	pop	r16
    13c0:	0f 90       	pop	r0
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	0f 90       	pop	r0
    13c6:	1f 90       	pop	r1
    13c8:	18 95       	reti

000013ca <__vector_16>:
    13ca:	1f 92       	push	r1
    13cc:	0f 92       	push	r0
    13ce:	0f b6       	in	r0, 0x3f	; 63
    13d0:	0f 92       	push	r0
    13d2:	11 24       	eor	r1, r1
    13d4:	0f 93       	push	r16
    13d6:	1f 93       	push	r17
    13d8:	2f 93       	push	r18
    13da:	3f 93       	push	r19
    13dc:	4f 93       	push	r20
    13de:	5f 93       	push	r21
    13e0:	6f 93       	push	r22
    13e2:	7f 93       	push	r23
    13e4:	8f 93       	push	r24
    13e6:	9f 93       	push	r25
    13e8:	af 93       	push	r26
    13ea:	bf 93       	push	r27
    13ec:	ef 93       	push	r30
    13ee:	ff 93       	push	r31
    13f0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    13f4:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    13f8:	ac 01       	movw	r20, r24
    13fa:	09 2e       	mov	r0, r25
    13fc:	00 0c       	add	r0, r0
    13fe:	66 0b       	sbc	r22, r22
    1400:	77 0b       	sbc	r23, r23
    1402:	9a 01       	movw	r18, r20
    1404:	11 27       	eor	r17, r17
    1406:	00 27       	eor	r16, r16
    1408:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    140c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	70 e0       	ldi	r23, 0x00	; 0
    1414:	40 2b       	or	r20, r16
    1416:	51 2b       	or	r21, r17
    1418:	62 2b       	or	r22, r18
    141a:	73 2b       	or	r23, r19
    141c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1420:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1424:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1428:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    142c:	b0 9b       	sbis	0x16, 0	; 22
    142e:	1a c0       	rjmp	.+52     	; 0x1464 <__vector_16+0x9a>
    1430:	01 96       	adiw	r24, 0x01	; 1
    1432:	09 2e       	mov	r0, r25
    1434:	00 0c       	add	r0, r0
    1436:	aa 0b       	sbc	r26, r26
    1438:	bb 0b       	sbc	r27, r27
    143a:	bc 01       	movw	r22, r24
    143c:	55 27       	eor	r21, r21
    143e:	44 27       	eor	r20, r20
    1440:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1444:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1448:	a0 e0       	ldi	r26, 0x00	; 0
    144a:	b0 e0       	ldi	r27, 0x00	; 0
    144c:	84 2b       	or	r24, r20
    144e:	95 2b       	or	r25, r21
    1450:	a6 2b       	or	r26, r22
    1452:	b7 2b       	or	r27, r23
    1454:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1458:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    145c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1460:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1464:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    1468:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    146c:	30 97       	sbiw	r30, 0x00	; 0
    146e:	39 f0       	breq	.+14     	; 0x147e <__vector_16+0xb4>
    1470:	6b e0       	ldi	r22, 0x0B	; 11
    1472:	70 e0       	ldi	r23, 0x00	; 0
    1474:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    1478:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    147c:	09 95       	icall
    147e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    1482:	ff 91       	pop	r31
    1484:	ef 91       	pop	r30
    1486:	bf 91       	pop	r27
    1488:	af 91       	pop	r26
    148a:	9f 91       	pop	r25
    148c:	8f 91       	pop	r24
    148e:	7f 91       	pop	r23
    1490:	6f 91       	pop	r22
    1492:	5f 91       	pop	r21
    1494:	4f 91       	pop	r20
    1496:	3f 91       	pop	r19
    1498:	2f 91       	pop	r18
    149a:	1f 91       	pop	r17
    149c:	0f 91       	pop	r16
    149e:	0f 90       	pop	r0
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	0f 90       	pop	r0
    14a4:	1f 90       	pop	r1
    14a6:	18 95       	reti

000014a8 <__vector_17>:
    14a8:	1f 92       	push	r1
    14aa:	0f 92       	push	r0
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	0f 92       	push	r0
    14b0:	11 24       	eor	r1, r1
    14b2:	0f 93       	push	r16
    14b4:	1f 93       	push	r17
    14b6:	2f 93       	push	r18
    14b8:	3f 93       	push	r19
    14ba:	4f 93       	push	r20
    14bc:	5f 93       	push	r21
    14be:	6f 93       	push	r22
    14c0:	7f 93       	push	r23
    14c2:	8f 93       	push	r24
    14c4:	9f 93       	push	r25
    14c6:	af 93       	push	r26
    14c8:	bf 93       	push	r27
    14ca:	ef 93       	push	r30
    14cc:	ff 93       	push	r31
    14ce:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    14d2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    14d6:	ac 01       	movw	r20, r24
    14d8:	09 2e       	mov	r0, r25
    14da:	00 0c       	add	r0, r0
    14dc:	66 0b       	sbc	r22, r22
    14de:	77 0b       	sbc	r23, r23
    14e0:	9a 01       	movw	r18, r20
    14e2:	11 27       	eor	r17, r17
    14e4:	00 27       	eor	r16, r16
    14e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	70 e0       	ldi	r23, 0x00	; 0
    14f2:	40 2b       	or	r20, r16
    14f4:	51 2b       	or	r21, r17
    14f6:	62 2b       	or	r22, r18
    14f8:	73 2b       	or	r23, r19
    14fa:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    14fe:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1502:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1506:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    150a:	b0 9b       	sbis	0x16, 0	; 22
    150c:	1a c0       	rjmp	.+52     	; 0x1542 <__vector_17+0x9a>
    150e:	01 96       	adiw	r24, 0x01	; 1
    1510:	09 2e       	mov	r0, r25
    1512:	00 0c       	add	r0, r0
    1514:	aa 0b       	sbc	r26, r26
    1516:	bb 0b       	sbc	r27, r27
    1518:	bc 01       	movw	r22, r24
    151a:	55 27       	eor	r21, r21
    151c:	44 27       	eor	r20, r20
    151e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1522:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1526:	a0 e0       	ldi	r26, 0x00	; 0
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	84 2b       	or	r24, r20
    152c:	95 2b       	or	r25, r21
    152e:	a6 2b       	or	r26, r22
    1530:	b7 2b       	or	r27, r23
    1532:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1536:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    153a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    153e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1542:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    1546:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    154a:	30 97       	sbiw	r30, 0x00	; 0
    154c:	39 f0       	breq	.+14     	; 0x155c <__vector_17+0xb4>
    154e:	6c e0       	ldi	r22, 0x0C	; 12
    1550:	70 e0       	ldi	r23, 0x00	; 0
    1552:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    1556:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    155a:	09 95       	icall
    155c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    1560:	ff 91       	pop	r31
    1562:	ef 91       	pop	r30
    1564:	bf 91       	pop	r27
    1566:	af 91       	pop	r26
    1568:	9f 91       	pop	r25
    156a:	8f 91       	pop	r24
    156c:	7f 91       	pop	r23
    156e:	6f 91       	pop	r22
    1570:	5f 91       	pop	r21
    1572:	4f 91       	pop	r20
    1574:	3f 91       	pop	r19
    1576:	2f 91       	pop	r18
    1578:	1f 91       	pop	r17
    157a:	0f 91       	pop	r16
    157c:	0f 90       	pop	r0
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	0f 90       	pop	r0
    1582:	1f 90       	pop	r1
    1584:	18 95       	reti

00001586 <__vector_18>:
    1586:	1f 92       	push	r1
    1588:	0f 92       	push	r0
    158a:	0f b6       	in	r0, 0x3f	; 63
    158c:	0f 92       	push	r0
    158e:	11 24       	eor	r1, r1
    1590:	0f 93       	push	r16
    1592:	1f 93       	push	r17
    1594:	2f 93       	push	r18
    1596:	3f 93       	push	r19
    1598:	4f 93       	push	r20
    159a:	5f 93       	push	r21
    159c:	6f 93       	push	r22
    159e:	7f 93       	push	r23
    15a0:	8f 93       	push	r24
    15a2:	9f 93       	push	r25
    15a4:	af 93       	push	r26
    15a6:	bf 93       	push	r27
    15a8:	ef 93       	push	r30
    15aa:	ff 93       	push	r31
    15ac:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    15b0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    15b4:	ac 01       	movw	r20, r24
    15b6:	09 2e       	mov	r0, r25
    15b8:	00 0c       	add	r0, r0
    15ba:	66 0b       	sbc	r22, r22
    15bc:	77 0b       	sbc	r23, r23
    15be:	9a 01       	movw	r18, r20
    15c0:	11 27       	eor	r17, r17
    15c2:	00 27       	eor	r16, r16
    15c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	70 e0       	ldi	r23, 0x00	; 0
    15d0:	40 2b       	or	r20, r16
    15d2:	51 2b       	or	r21, r17
    15d4:	62 2b       	or	r22, r18
    15d6:	73 2b       	or	r23, r19
    15d8:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    15dc:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    15e0:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    15e4:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    15e8:	b0 9b       	sbis	0x16, 0	; 22
    15ea:	1a c0       	rjmp	.+52     	; 0x1620 <__vector_18+0x9a>
    15ec:	01 96       	adiw	r24, 0x01	; 1
    15ee:	09 2e       	mov	r0, r25
    15f0:	00 0c       	add	r0, r0
    15f2:	aa 0b       	sbc	r26, r26
    15f4:	bb 0b       	sbc	r27, r27
    15f6:	bc 01       	movw	r22, r24
    15f8:	55 27       	eor	r21, r21
    15fa:	44 27       	eor	r20, r20
    15fc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1600:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1604:	a0 e0       	ldi	r26, 0x00	; 0
    1606:	b0 e0       	ldi	r27, 0x00	; 0
    1608:	84 2b       	or	r24, r20
    160a:	95 2b       	or	r25, r21
    160c:	a6 2b       	or	r26, r22
    160e:	b7 2b       	or	r27, r23
    1610:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1614:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1618:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    161c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1620:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    1624:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    1628:	30 97       	sbiw	r30, 0x00	; 0
    162a:	39 f0       	breq	.+14     	; 0x163a <__vector_18+0xb4>
    162c:	6d e0       	ldi	r22, 0x0D	; 13
    162e:	70 e0       	ldi	r23, 0x00	; 0
    1630:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    1634:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    1638:	09 95       	icall
    163a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    163e:	ff 91       	pop	r31
    1640:	ef 91       	pop	r30
    1642:	bf 91       	pop	r27
    1644:	af 91       	pop	r26
    1646:	9f 91       	pop	r25
    1648:	8f 91       	pop	r24
    164a:	7f 91       	pop	r23
    164c:	6f 91       	pop	r22
    164e:	5f 91       	pop	r21
    1650:	4f 91       	pop	r20
    1652:	3f 91       	pop	r19
    1654:	2f 91       	pop	r18
    1656:	1f 91       	pop	r17
    1658:	0f 91       	pop	r16
    165a:	0f 90       	pop	r0
    165c:	0f be       	out	0x3f, r0	; 63
    165e:	0f 90       	pop	r0
    1660:	1f 90       	pop	r1
    1662:	18 95       	reti

00001664 <__vector_19>:
    1664:	1f 92       	push	r1
    1666:	0f 92       	push	r0
    1668:	0f b6       	in	r0, 0x3f	; 63
    166a:	0f 92       	push	r0
    166c:	11 24       	eor	r1, r1
    166e:	0f 93       	push	r16
    1670:	1f 93       	push	r17
    1672:	2f 93       	push	r18
    1674:	3f 93       	push	r19
    1676:	4f 93       	push	r20
    1678:	5f 93       	push	r21
    167a:	6f 93       	push	r22
    167c:	7f 93       	push	r23
    167e:	8f 93       	push	r24
    1680:	9f 93       	push	r25
    1682:	af 93       	push	r26
    1684:	bf 93       	push	r27
    1686:	ef 93       	push	r30
    1688:	ff 93       	push	r31
    168a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    168e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1692:	ac 01       	movw	r20, r24
    1694:	09 2e       	mov	r0, r25
    1696:	00 0c       	add	r0, r0
    1698:	66 0b       	sbc	r22, r22
    169a:	77 0b       	sbc	r23, r23
    169c:	9a 01       	movw	r18, r20
    169e:	11 27       	eor	r17, r17
    16a0:	00 27       	eor	r16, r16
    16a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16aa:	60 e0       	ldi	r22, 0x00	; 0
    16ac:	70 e0       	ldi	r23, 0x00	; 0
    16ae:	40 2b       	or	r20, r16
    16b0:	51 2b       	or	r21, r17
    16b2:	62 2b       	or	r22, r18
    16b4:	73 2b       	or	r23, r19
    16b6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    16ba:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    16be:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    16c2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    16c6:	b0 9b       	sbis	0x16, 0	; 22
    16c8:	1a c0       	rjmp	.+52     	; 0x16fe <__vector_19+0x9a>
    16ca:	01 96       	adiw	r24, 0x01	; 1
    16cc:	09 2e       	mov	r0, r25
    16ce:	00 0c       	add	r0, r0
    16d0:	aa 0b       	sbc	r26, r26
    16d2:	bb 0b       	sbc	r27, r27
    16d4:	bc 01       	movw	r22, r24
    16d6:	55 27       	eor	r21, r21
    16d8:	44 27       	eor	r20, r20
    16da:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16de:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16e2:	a0 e0       	ldi	r26, 0x00	; 0
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	84 2b       	or	r24, r20
    16e8:	95 2b       	or	r25, r21
    16ea:	a6 2b       	or	r26, r22
    16ec:	b7 2b       	or	r27, r23
    16ee:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    16f2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    16f6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    16fa:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    16fe:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    1702:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    1706:	30 97       	sbiw	r30, 0x00	; 0
    1708:	39 f0       	breq	.+14     	; 0x1718 <__vector_19+0xb4>
    170a:	6e e0       	ldi	r22, 0x0E	; 14
    170c:	70 e0       	ldi	r23, 0x00	; 0
    170e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    1712:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    1716:	09 95       	icall
    1718:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    171c:	ff 91       	pop	r31
    171e:	ef 91       	pop	r30
    1720:	bf 91       	pop	r27
    1722:	af 91       	pop	r26
    1724:	9f 91       	pop	r25
    1726:	8f 91       	pop	r24
    1728:	7f 91       	pop	r23
    172a:	6f 91       	pop	r22
    172c:	5f 91       	pop	r21
    172e:	4f 91       	pop	r20
    1730:	3f 91       	pop	r19
    1732:	2f 91       	pop	r18
    1734:	1f 91       	pop	r17
    1736:	0f 91       	pop	r16
    1738:	0f 90       	pop	r0
    173a:	0f be       	out	0x3f, r0	; 63
    173c:	0f 90       	pop	r0
    173e:	1f 90       	pop	r1
    1740:	18 95       	reti

00001742 <__vector_20>:
    1742:	1f 92       	push	r1
    1744:	0f 92       	push	r0
    1746:	0f b6       	in	r0, 0x3f	; 63
    1748:	0f 92       	push	r0
    174a:	11 24       	eor	r1, r1
    174c:	0f 93       	push	r16
    174e:	1f 93       	push	r17
    1750:	2f 93       	push	r18
    1752:	3f 93       	push	r19
    1754:	4f 93       	push	r20
    1756:	5f 93       	push	r21
    1758:	6f 93       	push	r22
    175a:	7f 93       	push	r23
    175c:	8f 93       	push	r24
    175e:	9f 93       	push	r25
    1760:	af 93       	push	r26
    1762:	bf 93       	push	r27
    1764:	ef 93       	push	r30
    1766:	ff 93       	push	r31
    1768:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    176c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1770:	ac 01       	movw	r20, r24
    1772:	09 2e       	mov	r0, r25
    1774:	00 0c       	add	r0, r0
    1776:	66 0b       	sbc	r22, r22
    1778:	77 0b       	sbc	r23, r23
    177a:	9a 01       	movw	r18, r20
    177c:	11 27       	eor	r17, r17
    177e:	00 27       	eor	r16, r16
    1780:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1784:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1788:	60 e0       	ldi	r22, 0x00	; 0
    178a:	70 e0       	ldi	r23, 0x00	; 0
    178c:	40 2b       	or	r20, r16
    178e:	51 2b       	or	r21, r17
    1790:	62 2b       	or	r22, r18
    1792:	73 2b       	or	r23, r19
    1794:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1798:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    179c:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    17a0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    17a4:	b0 9b       	sbis	0x16, 0	; 22
    17a6:	1a c0       	rjmp	.+52     	; 0x17dc <__vector_20+0x9a>
    17a8:	01 96       	adiw	r24, 0x01	; 1
    17aa:	09 2e       	mov	r0, r25
    17ac:	00 0c       	add	r0, r0
    17ae:	aa 0b       	sbc	r26, r26
    17b0:	bb 0b       	sbc	r27, r27
    17b2:	bc 01       	movw	r22, r24
    17b4:	55 27       	eor	r21, r21
    17b6:	44 27       	eor	r20, r20
    17b8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17bc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c0:	a0 e0       	ldi	r26, 0x00	; 0
    17c2:	b0 e0       	ldi	r27, 0x00	; 0
    17c4:	84 2b       	or	r24, r20
    17c6:	95 2b       	or	r25, r21
    17c8:	a6 2b       	or	r26, r22
    17ca:	b7 2b       	or	r27, r23
    17cc:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    17d0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    17d4:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    17d8:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    17dc:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    17e0:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    17e4:	30 97       	sbiw	r30, 0x00	; 0
    17e6:	39 f0       	breq	.+14     	; 0x17f6 <__vector_20+0xb4>
    17e8:	6f e0       	ldi	r22, 0x0F	; 15
    17ea:	70 e0       	ldi	r23, 0x00	; 0
    17ec:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    17f0:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    17f4:	09 95       	icall
    17f6:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    17fa:	ff 91       	pop	r31
    17fc:	ef 91       	pop	r30
    17fe:	bf 91       	pop	r27
    1800:	af 91       	pop	r26
    1802:	9f 91       	pop	r25
    1804:	8f 91       	pop	r24
    1806:	7f 91       	pop	r23
    1808:	6f 91       	pop	r22
    180a:	5f 91       	pop	r21
    180c:	4f 91       	pop	r20
    180e:	3f 91       	pop	r19
    1810:	2f 91       	pop	r18
    1812:	1f 91       	pop	r17
    1814:	0f 91       	pop	r16
    1816:	0f 90       	pop	r0
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	0f 90       	pop	r0
    181c:	1f 90       	pop	r1
    181e:	18 95       	reti

00001820 <__vector_21>:
    1820:	1f 92       	push	r1
    1822:	0f 92       	push	r0
    1824:	0f b6       	in	r0, 0x3f	; 63
    1826:	0f 92       	push	r0
    1828:	11 24       	eor	r1, r1
    182a:	0f 93       	push	r16
    182c:	1f 93       	push	r17
    182e:	2f 93       	push	r18
    1830:	3f 93       	push	r19
    1832:	4f 93       	push	r20
    1834:	5f 93       	push	r21
    1836:	6f 93       	push	r22
    1838:	7f 93       	push	r23
    183a:	8f 93       	push	r24
    183c:	9f 93       	push	r25
    183e:	af 93       	push	r26
    1840:	bf 93       	push	r27
    1842:	ef 93       	push	r30
    1844:	ff 93       	push	r31
    1846:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    184a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    184e:	ac 01       	movw	r20, r24
    1850:	09 2e       	mov	r0, r25
    1852:	00 0c       	add	r0, r0
    1854:	66 0b       	sbc	r22, r22
    1856:	77 0b       	sbc	r23, r23
    1858:	9a 01       	movw	r18, r20
    185a:	11 27       	eor	r17, r17
    185c:	00 27       	eor	r16, r16
    185e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1862:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1866:	60 e0       	ldi	r22, 0x00	; 0
    1868:	70 e0       	ldi	r23, 0x00	; 0
    186a:	40 2b       	or	r20, r16
    186c:	51 2b       	or	r21, r17
    186e:	62 2b       	or	r22, r18
    1870:	73 2b       	or	r23, r19
    1872:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1876:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    187a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    187e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1882:	b0 9b       	sbis	0x16, 0	; 22
    1884:	1a c0       	rjmp	.+52     	; 0x18ba <__vector_21+0x9a>
    1886:	01 96       	adiw	r24, 0x01	; 1
    1888:	09 2e       	mov	r0, r25
    188a:	00 0c       	add	r0, r0
    188c:	aa 0b       	sbc	r26, r26
    188e:	bb 0b       	sbc	r27, r27
    1890:	bc 01       	movw	r22, r24
    1892:	55 27       	eor	r21, r21
    1894:	44 27       	eor	r20, r20
    1896:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    189a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    189e:	a0 e0       	ldi	r26, 0x00	; 0
    18a0:	b0 e0       	ldi	r27, 0x00	; 0
    18a2:	84 2b       	or	r24, r20
    18a4:	95 2b       	or	r25, r21
    18a6:	a6 2b       	or	r26, r22
    18a8:	b7 2b       	or	r27, r23
    18aa:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    18ae:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    18b2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    18b6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    18ba:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    18be:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    18c2:	30 97       	sbiw	r30, 0x00	; 0
    18c4:	39 f0       	breq	.+14     	; 0x18d4 <__vector_21+0xb4>
    18c6:	60 e1       	ldi	r22, 0x10	; 16
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    18ce:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    18d2:	09 95       	icall
    18d4:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    18d8:	ff 91       	pop	r31
    18da:	ef 91       	pop	r30
    18dc:	bf 91       	pop	r27
    18de:	af 91       	pop	r26
    18e0:	9f 91       	pop	r25
    18e2:	8f 91       	pop	r24
    18e4:	7f 91       	pop	r23
    18e6:	6f 91       	pop	r22
    18e8:	5f 91       	pop	r21
    18ea:	4f 91       	pop	r20
    18ec:	3f 91       	pop	r19
    18ee:	2f 91       	pop	r18
    18f0:	1f 91       	pop	r17
    18f2:	0f 91       	pop	r16
    18f4:	0f 90       	pop	r0
    18f6:	0f be       	out	0x3f, r0	; 63
    18f8:	0f 90       	pop	r0
    18fa:	1f 90       	pop	r1
    18fc:	18 95       	reti

000018fe <__vector_22>:
    18fe:	1f 92       	push	r1
    1900:	0f 92       	push	r0
    1902:	0f b6       	in	r0, 0x3f	; 63
    1904:	0f 92       	push	r0
    1906:	11 24       	eor	r1, r1
    1908:	0f 93       	push	r16
    190a:	1f 93       	push	r17
    190c:	2f 93       	push	r18
    190e:	3f 93       	push	r19
    1910:	4f 93       	push	r20
    1912:	5f 93       	push	r21
    1914:	6f 93       	push	r22
    1916:	7f 93       	push	r23
    1918:	8f 93       	push	r24
    191a:	9f 93       	push	r25
    191c:	af 93       	push	r26
    191e:	bf 93       	push	r27
    1920:	ef 93       	push	r30
    1922:	ff 93       	push	r31
    1924:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1928:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    192c:	ac 01       	movw	r20, r24
    192e:	09 2e       	mov	r0, r25
    1930:	00 0c       	add	r0, r0
    1932:	66 0b       	sbc	r22, r22
    1934:	77 0b       	sbc	r23, r23
    1936:	9a 01       	movw	r18, r20
    1938:	11 27       	eor	r17, r17
    193a:	00 27       	eor	r16, r16
    193c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1940:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1944:	60 e0       	ldi	r22, 0x00	; 0
    1946:	70 e0       	ldi	r23, 0x00	; 0
    1948:	40 2b       	or	r20, r16
    194a:	51 2b       	or	r21, r17
    194c:	62 2b       	or	r22, r18
    194e:	73 2b       	or	r23, r19
    1950:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1954:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1958:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    195c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1960:	b0 9b       	sbis	0x16, 0	; 22
    1962:	1a c0       	rjmp	.+52     	; 0x1998 <__vector_22+0x9a>
    1964:	01 96       	adiw	r24, 0x01	; 1
    1966:	09 2e       	mov	r0, r25
    1968:	00 0c       	add	r0, r0
    196a:	aa 0b       	sbc	r26, r26
    196c:	bb 0b       	sbc	r27, r27
    196e:	bc 01       	movw	r22, r24
    1970:	55 27       	eor	r21, r21
    1972:	44 27       	eor	r20, r20
    1974:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1978:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    197c:	a0 e0       	ldi	r26, 0x00	; 0
    197e:	b0 e0       	ldi	r27, 0x00	; 0
    1980:	84 2b       	or	r24, r20
    1982:	95 2b       	or	r25, r21
    1984:	a6 2b       	or	r26, r22
    1986:	b7 2b       	or	r27, r23
    1988:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    198c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1990:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1994:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1998:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    199c:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    19a0:	30 97       	sbiw	r30, 0x00	; 0
    19a2:	39 f0       	breq	.+14     	; 0x19b2 <__vector_22+0xb4>
    19a4:	61 e1       	ldi	r22, 0x11	; 17
    19a6:	70 e0       	ldi	r23, 0x00	; 0
    19a8:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    19ac:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    19b0:	09 95       	icall
    19b2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    19b6:	ff 91       	pop	r31
    19b8:	ef 91       	pop	r30
    19ba:	bf 91       	pop	r27
    19bc:	af 91       	pop	r26
    19be:	9f 91       	pop	r25
    19c0:	8f 91       	pop	r24
    19c2:	7f 91       	pop	r23
    19c4:	6f 91       	pop	r22
    19c6:	5f 91       	pop	r21
    19c8:	4f 91       	pop	r20
    19ca:	3f 91       	pop	r19
    19cc:	2f 91       	pop	r18
    19ce:	1f 91       	pop	r17
    19d0:	0f 91       	pop	r16
    19d2:	0f 90       	pop	r0
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	0f 90       	pop	r0
    19d8:	1f 90       	pop	r1
    19da:	18 95       	reti

000019dc <idle>:
    19dc:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    19e0:	78 94       	sei
    19e2:	81 e0       	ldi	r24, 0x01	; 1
    19e4:	83 bf       	out	0x33, r24	; 51
    19e6:	88 95       	sleep
    19e8:	fc cf       	rjmp	.-8      	; 0x19e2 <idle+0x6>

000019ea <__vector_9>:
    19ea:	1f 92       	push	r1
    19ec:	0f 92       	push	r0
    19ee:	0f b6       	in	r0, 0x3f	; 63
    19f0:	0f 92       	push	r0
    19f2:	11 24       	eor	r1, r1
    19f4:	2f 93       	push	r18
    19f6:	3f 93       	push	r19
    19f8:	4f 93       	push	r20
    19fa:	5f 93       	push	r21
    19fc:	6f 93       	push	r22
    19fe:	7f 93       	push	r23
    1a00:	8f 93       	push	r24
    1a02:	9f 93       	push	r25
    1a04:	ef 93       	push	r30
    1a06:	ff 93       	push	r31
    1a08:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1a0c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1a10:	01 96       	adiw	r24, 0x01	; 1
    1a12:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    1a16:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    1a1a:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1a1e:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1a22:	30 97       	sbiw	r30, 0x00	; 0
    1a24:	01 f1       	breq	.+64     	; 0x1a66 <__vector_9+0x7c>
    1a26:	42 81       	ldd	r20, Z+2	; 0x02
    1a28:	53 81       	ldd	r21, Z+3	; 0x03
    1a2a:	64 81       	ldd	r22, Z+4	; 0x04
    1a2c:	75 81       	ldd	r23, Z+5	; 0x05
    1a2e:	86 17       	cp	r24, r22
    1a30:	97 07       	cpc	r25, r23
    1a32:	c9 f4       	brne	.+50     	; 0x1a66 <__vector_9+0x7c>
    1a34:	ca 01       	movw	r24, r20
    1a36:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a3a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a3e:	42 1b       	sub	r20, r18
    1a40:	53 0b       	sbc	r21, r19
    1a42:	41 30       	cpi	r20, 0x01	; 1
    1a44:	51 05       	cpc	r21, r1
    1a46:	29 f4       	brne	.+10     	; 0x1a52 <__vector_9+0x68>
    1a48:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a4c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a50:	01 96       	adiw	r24, 0x01	; 1
    1a52:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a56:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a5a:	ef e6       	ldi	r30, 0x6F	; 111
    1a5c:	f0 e0       	ldi	r31, 0x00	; 0
    1a5e:	80 81       	ld	r24, Z
    1a60:	82 60       	ori	r24, 0x02	; 2
    1a62:	80 83       	st	Z, r24
    1a64:	05 c0       	rjmp	.+10     	; 0x1a70 <__vector_9+0x86>
    1a66:	ef e6       	ldi	r30, 0x6F	; 111
    1a68:	f0 e0       	ldi	r31, 0x00	; 0
    1a6a:	80 81       	ld	r24, Z
    1a6c:	8d 7f       	andi	r24, 0xFD	; 253
    1a6e:	80 83       	st	Z, r24
    1a70:	ff 91       	pop	r31
    1a72:	ef 91       	pop	r30
    1a74:	9f 91       	pop	r25
    1a76:	8f 91       	pop	r24
    1a78:	7f 91       	pop	r23
    1a7a:	6f 91       	pop	r22
    1a7c:	5f 91       	pop	r21
    1a7e:	4f 91       	pop	r20
    1a80:	3f 91       	pop	r19
    1a82:	2f 91       	pop	r18
    1a84:	0f 90       	pop	r0
    1a86:	0f be       	out	0x3f, r0	; 63
    1a88:	0f 90       	pop	r0
    1a8a:	1f 90       	pop	r1
    1a8c:	18 95       	reti

00001a8e <__vector_7>:
    1a8e:	1f 92       	push	r1
    1a90:	0f 92       	push	r0
    1a92:	0f b6       	in	r0, 0x3f	; 63
    1a94:	0f 92       	push	r0
    1a96:	11 24       	eor	r1, r1
    1a98:	cf 92       	push	r12
    1a9a:	df 92       	push	r13
    1a9c:	ef 92       	push	r14
    1a9e:	ff 92       	push	r15
    1aa0:	2f 93       	push	r18
    1aa2:	3f 93       	push	r19
    1aa4:	4f 93       	push	r20
    1aa6:	5f 93       	push	r21
    1aa8:	6f 93       	push	r22
    1aaa:	7f 93       	push	r23
    1aac:	8f 93       	push	r24
    1aae:	9f 93       	push	r25
    1ab0:	af 93       	push	r26
    1ab2:	bf 93       	push	r27
    1ab4:	ef 93       	push	r30
    1ab6:	ff 93       	push	r31
    1ab8:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1abc:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1ac0:	6c 01       	movw	r12, r24
    1ac2:	09 2e       	mov	r0, r25
    1ac4:	00 0c       	add	r0, r0
    1ac6:	ee 08       	sbc	r14, r14
    1ac8:	ff 08       	sbc	r15, r15
    1aca:	76 01       	movw	r14, r12
    1acc:	dd 24       	eor	r13, r13
    1ace:	cc 24       	eor	r12, r12
    1ad0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ad4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ad8:	60 e0       	ldi	r22, 0x00	; 0
    1ada:	70 e0       	ldi	r23, 0x00	; 0
    1adc:	c4 2a       	or	r12, r20
    1ade:	d5 2a       	or	r13, r21
    1ae0:	e6 2a       	or	r14, r22
    1ae2:	f7 2a       	or	r15, r23
    1ae4:	b0 9b       	sbis	0x16, 0	; 22
    1ae6:	1e c0       	rjmp	.+60     	; 0x1b24 <__vector_7+0x96>
    1ae8:	6c 01       	movw	r12, r24
    1aea:	2f ef       	ldi	r18, 0xFF	; 255
    1aec:	c2 1a       	sub	r12, r18
    1aee:	d2 0a       	sbc	r13, r18
    1af0:	0d 2c       	mov	r0, r13
    1af2:	00 0c       	add	r0, r0
    1af4:	ee 08       	sbc	r14, r14
    1af6:	ff 08       	sbc	r15, r15
    1af8:	d6 01       	movw	r26, r12
    1afa:	99 27       	eor	r25, r25
    1afc:	88 27       	eor	r24, r24
    1afe:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b02:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b06:	e1 2c       	mov	r14, r1
    1b08:	f1 2c       	mov	r15, r1
    1b0a:	c8 2a       	or	r12, r24
    1b0c:	d9 2a       	or	r13, r25
    1b0e:	ea 2a       	or	r14, r26
    1b10:	fb 2a       	or	r15, r27
    1b12:	08 c0       	rjmp	.+16     	; 0x1b24 <__vector_7+0x96>
    1b14:	84 e2       	ldi	r24, 0x24	; 36
    1b16:	91 e0       	ldi	r25, 0x01	; 1
    1b18:	0e 94 b7 04 	call	0x96e	; 0x96e <dequeue>
    1b1c:	66 e2       	ldi	r22, 0x26	; 38
    1b1e:	71 e0       	ldi	r23, 0x01	; 1
    1b20:	0e 94 55 04 	call	0x8aa	; 0x8aa <enqueueByDeadline>
    1b24:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1b28:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1b2c:	30 97       	sbiw	r30, 0x00	; 0
    1b2e:	69 f0       	breq	.+26     	; 0x1b4a <__vector_7+0xbc>
    1b30:	82 81       	ldd	r24, Z+2	; 0x02
    1b32:	93 81       	ldd	r25, Z+3	; 0x03
    1b34:	a4 81       	ldd	r26, Z+4	; 0x04
    1b36:	b5 81       	ldd	r27, Z+5	; 0x05
    1b38:	8c 19       	sub	r24, r12
    1b3a:	9d 09       	sbc	r25, r13
    1b3c:	ae 09       	sbc	r26, r14
    1b3e:	bf 09       	sbc	r27, r15
    1b40:	18 16       	cp	r1, r24
    1b42:	19 06       	cpc	r1, r25
    1b44:	1a 06       	cpc	r1, r26
    1b46:	1b 06       	cpc	r1, r27
    1b48:	2c f7       	brge	.-54     	; 0x1b14 <__vector_7+0x86>
    1b4a:	30 97       	sbiw	r30, 0x00	; 0
    1b4c:	21 f1       	breq	.+72     	; 0x1b96 <__vector_7+0x108>
    1b4e:	82 81       	ldd	r24, Z+2	; 0x02
    1b50:	93 81       	ldd	r25, Z+3	; 0x03
    1b52:	a4 81       	ldd	r26, Z+4	; 0x04
    1b54:	b5 81       	ldd	r27, Z+5	; 0x05
    1b56:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1b5a:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1b5e:	2a 17       	cp	r18, r26
    1b60:	3b 07       	cpc	r19, r27
    1b62:	c9 f4       	brne	.+50     	; 0x1b96 <__vector_7+0x108>
    1b64:	9c 01       	movw	r18, r24
    1b66:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b6a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b6e:	84 1b       	sub	r24, r20
    1b70:	95 0b       	sbc	r25, r21
    1b72:	01 97       	sbiw	r24, 0x01	; 1
    1b74:	31 f4       	brne	.+12     	; 0x1b82 <__vector_7+0xf4>
    1b76:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b7a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b7e:	2f 5f       	subi	r18, 0xFF	; 255
    1b80:	3f 4f       	sbci	r19, 0xFF	; 255
    1b82:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b86:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b8a:	ef e6       	ldi	r30, 0x6F	; 111
    1b8c:	f0 e0       	ldi	r31, 0x00	; 0
    1b8e:	80 81       	ld	r24, Z
    1b90:	82 60       	ori	r24, 0x02	; 2
    1b92:	80 83       	st	Z, r24
    1b94:	05 c0       	rjmp	.+10     	; 0x1ba0 <__vector_7+0x112>
    1b96:	ef e6       	ldi	r30, 0x6F	; 111
    1b98:	f0 e0       	ldi	r31, 0x00	; 0
    1b9a:	80 81       	ld	r24, Z
    1b9c:	8d 7f       	andi	r24, 0xFD	; 253
    1b9e:	80 83       	st	Z, r24
    1ba0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <schedule>
    1ba4:	ff 91       	pop	r31
    1ba6:	ef 91       	pop	r30
    1ba8:	bf 91       	pop	r27
    1baa:	af 91       	pop	r26
    1bac:	9f 91       	pop	r25
    1bae:	8f 91       	pop	r24
    1bb0:	7f 91       	pop	r23
    1bb2:	6f 91       	pop	r22
    1bb4:	5f 91       	pop	r21
    1bb6:	4f 91       	pop	r20
    1bb8:	3f 91       	pop	r19
    1bba:	2f 91       	pop	r18
    1bbc:	ff 90       	pop	r15
    1bbe:	ef 90       	pop	r14
    1bc0:	df 90       	pop	r13
    1bc2:	cf 90       	pop	r12
    1bc4:	0f 90       	pop	r0
    1bc6:	0f be       	out	0x3f, r0	; 63
    1bc8:	0f 90       	pop	r0
    1bca:	1f 90       	pop	r1
    1bcc:	18 95       	reti

00001bce <async>:
    1bce:	3f 92       	push	r3
    1bd0:	4f 92       	push	r4
    1bd2:	5f 92       	push	r5
    1bd4:	6f 92       	push	r6
    1bd6:	7f 92       	push	r7
    1bd8:	8f 92       	push	r8
    1bda:	9f 92       	push	r9
    1bdc:	af 92       	push	r10
    1bde:	bf 92       	push	r11
    1be0:	cf 92       	push	r12
    1be2:	df 92       	push	r13
    1be4:	ef 92       	push	r14
    1be6:	ff 92       	push	r15
    1be8:	0f 93       	push	r16
    1bea:	1f 93       	push	r17
    1bec:	cf 93       	push	r28
    1bee:	df 93       	push	r29
    1bf0:	2b 01       	movw	r4, r22
    1bf2:	3c 01       	movw	r6, r24
    1bf4:	49 01       	movw	r8, r18
    1bf6:	5a 01       	movw	r10, r20
    1bf8:	8f b7       	in	r24, 0x3f	; 63
    1bfa:	80 78       	andi	r24, 0x80	; 128
    1bfc:	38 2e       	mov	r3, r24
    1bfe:	f8 94       	cli
    1c00:	86 e0       	ldi	r24, 0x06	; 6
    1c02:	91 e0       	ldi	r25, 0x01	; 1
    1c04:	0e 94 b7 04 	call	0x96e	; 0x96e <dequeue>
    1c08:	ec 01       	movw	r28, r24
    1c0a:	1b 87       	std	Y+11, r17	; 0x0b
    1c0c:	0a 87       	std	Y+10, r16	; 0x0a
    1c0e:	fd 86       	std	Y+13, r15	; 0x0d
    1c10:	ec 86       	std	Y+12, r14	; 0x0c
    1c12:	df 86       	std	Y+15, r13	; 0x0f
    1c14:	ce 86       	std	Y+14, r12	; 0x0e
    1c16:	33 20       	and	r3, r3
    1c18:	61 f0       	breq	.+24     	; 0x1c32 <async+0x64>
    1c1a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c1e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c22:	02 80       	ldd	r0, Z+2	; 0x02
    1c24:	f3 81       	ldd	r31, Z+3	; 0x03
    1c26:	e0 2d       	mov	r30, r0
    1c28:	82 81       	ldd	r24, Z+2	; 0x02
    1c2a:	93 81       	ldd	r25, Z+3	; 0x03
    1c2c:	a4 81       	ldd	r26, Z+4	; 0x04
    1c2e:	b5 81       	ldd	r27, Z+5	; 0x05
    1c30:	08 c0       	rjmp	.+16     	; 0x1c42 <async+0x74>
    1c32:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    1c36:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    1c3a:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    1c3e:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    1c42:	48 0e       	add	r4, r24
    1c44:	59 1e       	adc	r5, r25
    1c46:	6a 1e       	adc	r6, r26
    1c48:	7b 1e       	adc	r7, r27
    1c4a:	4a 82       	std	Y+2, r4	; 0x02
    1c4c:	5b 82       	std	Y+3, r5	; 0x03
    1c4e:	6c 82       	std	Y+4, r6	; 0x04
    1c50:	7d 82       	std	Y+5, r7	; 0x05
    1c52:	18 14       	cp	r1, r8
    1c54:	19 04       	cpc	r1, r9
    1c56:	1a 04       	cpc	r1, r10
    1c58:	1b 04       	cpc	r1, r11
    1c5a:	44 f0       	brlt	.+16     	; 0x1c6c <async+0x9e>
    1c5c:	0f 2e       	mov	r0, r31
    1c5e:	88 24       	eor	r8, r8
    1c60:	8a 94       	dec	r8
    1c62:	98 2c       	mov	r9, r8
    1c64:	a8 2c       	mov	r10, r8
    1c66:	ff e7       	ldi	r31, 0x7F	; 127
    1c68:	bf 2e       	mov	r11, r31
    1c6a:	f0 2d       	mov	r31, r0
    1c6c:	84 0c       	add	r8, r4
    1c6e:	95 1c       	adc	r9, r5
    1c70:	a6 1c       	adc	r10, r6
    1c72:	b7 1c       	adc	r11, r7
    1c74:	8e 82       	std	Y+6, r8	; 0x06
    1c76:	9f 82       	std	Y+7, r9	; 0x07
    1c78:	a8 86       	std	Y+8, r10	; 0x08
    1c7a:	b9 86       	std	Y+9, r11	; 0x09
    1c7c:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1c80:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1c84:	c9 01       	movw	r24, r18
    1c86:	03 2e       	mov	r0, r19
    1c88:	00 0c       	add	r0, r0
    1c8a:	aa 0b       	sbc	r26, r26
    1c8c:	bb 0b       	sbc	r27, r27
    1c8e:	dc 01       	movw	r26, r24
    1c90:	99 27       	eor	r25, r25
    1c92:	88 27       	eor	r24, r24
    1c94:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c98:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c9c:	60 e0       	ldi	r22, 0x00	; 0
    1c9e:	70 e0       	ldi	r23, 0x00	; 0
    1ca0:	84 2b       	or	r24, r20
    1ca2:	95 2b       	or	r25, r21
    1ca4:	a6 2b       	or	r26, r22
    1ca6:	b7 2b       	or	r27, r23
    1ca8:	b0 9b       	sbis	0x16, 0	; 22
    1caa:	13 c0       	rjmp	.+38     	; 0x1cd2 <async+0x104>
    1cac:	c9 01       	movw	r24, r18
    1cae:	01 96       	adiw	r24, 0x01	; 1
    1cb0:	09 2e       	mov	r0, r25
    1cb2:	00 0c       	add	r0, r0
    1cb4:	aa 0b       	sbc	r26, r26
    1cb6:	bb 0b       	sbc	r27, r27
    1cb8:	dc 01       	movw	r26, r24
    1cba:	99 27       	eor	r25, r25
    1cbc:	88 27       	eor	r24, r24
    1cbe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cc2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cc6:	60 e0       	ldi	r22, 0x00	; 0
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	84 2b       	or	r24, r20
    1ccc:	95 2b       	or	r25, r21
    1cce:	a6 2b       	or	r26, r22
    1cd0:	b7 2b       	or	r27, r23
    1cd2:	48 1a       	sub	r4, r24
    1cd4:	59 0a       	sbc	r5, r25
    1cd6:	6a 0a       	sbc	r6, r26
    1cd8:	7b 0a       	sbc	r7, r27
    1cda:	14 14       	cp	r1, r4
    1cdc:	15 04       	cpc	r1, r5
    1cde:	16 04       	cpc	r1, r6
    1ce0:	17 04       	cpc	r1, r7
    1ce2:	ac f5       	brge	.+106    	; 0x1d4e <async+0x180>
    1ce4:	64 e2       	ldi	r22, 0x24	; 36
    1ce6:	71 e0       	ldi	r23, 0x01	; 1
    1ce8:	ce 01       	movw	r24, r28
    1cea:	0e 94 86 04 	call	0x90c	; 0x90c <enqueueByBaseline>
    1cee:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1cf2:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1cf6:	30 97       	sbiw	r30, 0x00	; 0
    1cf8:	21 f1       	breq	.+72     	; 0x1d42 <async+0x174>
    1cfa:	82 81       	ldd	r24, Z+2	; 0x02
    1cfc:	93 81       	ldd	r25, Z+3	; 0x03
    1cfe:	a4 81       	ldd	r26, Z+4	; 0x04
    1d00:	b5 81       	ldd	r27, Z+5	; 0x05
    1d02:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1d06:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1d0a:	2a 17       	cp	r18, r26
    1d0c:	3b 07       	cpc	r19, r27
    1d0e:	c9 f4       	brne	.+50     	; 0x1d42 <async+0x174>
    1d10:	9c 01       	movw	r18, r24
    1d12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d1a:	84 1b       	sub	r24, r20
    1d1c:	95 0b       	sbc	r25, r21
    1d1e:	01 97       	sbiw	r24, 0x01	; 1
    1d20:	31 f4       	brne	.+12     	; 0x1d2e <async+0x160>
    1d22:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d26:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d2a:	2f 5f       	subi	r18, 0xFF	; 255
    1d2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d2e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d32:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d36:	ef e6       	ldi	r30, 0x6F	; 111
    1d38:	f0 e0       	ldi	r31, 0x00	; 0
    1d3a:	80 81       	ld	r24, Z
    1d3c:	82 60       	ori	r24, 0x02	; 2
    1d3e:	80 83       	st	Z, r24
    1d40:	39 c0       	rjmp	.+114    	; 0x1db4 <async+0x1e6>
    1d42:	ef e6       	ldi	r30, 0x6F	; 111
    1d44:	f0 e0       	ldi	r31, 0x00	; 0
    1d46:	80 81       	ld	r24, Z
    1d48:	8d 7f       	andi	r24, 0xFD	; 253
    1d4a:	80 83       	st	Z, r24
    1d4c:	33 c0       	rjmp	.+102    	; 0x1db4 <async+0x1e6>
    1d4e:	66 e2       	ldi	r22, 0x26	; 38
    1d50:	71 e0       	ldi	r23, 0x01	; 1
    1d52:	ce 01       	movw	r24, r28
    1d54:	0e 94 55 04 	call	0x8aa	; 0x8aa <enqueueByDeadline>
    1d58:	33 20       	and	r3, r3
    1d5a:	61 f1       	breq	.+88     	; 0x1db4 <async+0x1e6>
    1d5c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1d60:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1d64:	89 2b       	or	r24, r25
    1d66:	31 f1       	breq	.+76     	; 0x1db4 <async+0x1e6>
    1d68:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1d6c:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1d70:	86 81       	ldd	r24, Z+6	; 0x06
    1d72:	97 81       	ldd	r25, Z+7	; 0x07
    1d74:	a0 85       	ldd	r26, Z+8	; 0x08
    1d76:	b1 85       	ldd	r27, Z+9	; 0x09
    1d78:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1d7c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1d80:	02 80       	ldd	r0, Z+2	; 0x02
    1d82:	f3 81       	ldd	r31, Z+3	; 0x03
    1d84:	e0 2d       	mov	r30, r0
    1d86:	46 81       	ldd	r20, Z+6	; 0x06
    1d88:	57 81       	ldd	r21, Z+7	; 0x07
    1d8a:	60 85       	ldd	r22, Z+8	; 0x08
    1d8c:	71 85       	ldd	r23, Z+9	; 0x09
    1d8e:	84 1b       	sub	r24, r20
    1d90:	95 0b       	sbc	r25, r21
    1d92:	a6 0b       	sbc	r26, r22
    1d94:	b7 0b       	sbc	r27, r23
    1d96:	72 f4       	brpl	.+28     	; 0x1db4 <async+0x1e6>
    1d98:	84 e0       	ldi	r24, 0x04	; 4
    1d9a:	91 e0       	ldi	r25, 0x01	; 1
    1d9c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <pop>
    1da0:	62 e0       	ldi	r22, 0x02	; 2
    1da2:	71 e0       	ldi	r23, 0x01	; 1
    1da4:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <push>
    1da8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1dac:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1db0:	0e 94 35 04 	call	0x86a	; 0x86a <dispatch>
    1db4:	33 20       	and	r3, r3
    1db6:	09 f0       	breq	.+2      	; 0x1dba <async+0x1ec>
    1db8:	78 94       	sei
    1dba:	ce 01       	movw	r24, r28
    1dbc:	df 91       	pop	r29
    1dbe:	cf 91       	pop	r28
    1dc0:	1f 91       	pop	r17
    1dc2:	0f 91       	pop	r16
    1dc4:	ff 90       	pop	r15
    1dc6:	ef 90       	pop	r14
    1dc8:	df 90       	pop	r13
    1dca:	cf 90       	pop	r12
    1dcc:	bf 90       	pop	r11
    1dce:	af 90       	pop	r10
    1dd0:	9f 90       	pop	r9
    1dd2:	8f 90       	pop	r8
    1dd4:	7f 90       	pop	r7
    1dd6:	6f 90       	pop	r6
    1dd8:	5f 90       	pop	r5
    1dda:	4f 90       	pop	r4
    1ddc:	3f 90       	pop	r3
    1dde:	08 95       	ret

00001de0 <sync>:
    1de0:	cf 92       	push	r12
    1de2:	df 92       	push	r13
    1de4:	ef 92       	push	r14
    1de6:	ff 92       	push	r15
    1de8:	0f 93       	push	r16
    1dea:	1f 93       	push	r17
    1dec:	cf 93       	push	r28
    1dee:	df 93       	push	r29
    1df0:	ec 01       	movw	r28, r24
    1df2:	7b 01       	movw	r14, r22
    1df4:	6a 01       	movw	r12, r20
    1df6:	1f b7       	in	r17, 0x3f	; 63
    1df8:	10 78       	andi	r17, 0x80	; 128
    1dfa:	f8 94       	cli
    1dfc:	a8 81       	ld	r26, Y
    1dfe:	b9 81       	ldd	r27, Y+1	; 0x01
    1e00:	10 97       	sbiw	r26, 0x00	; 0
    1e02:	19 f4       	brne	.+6      	; 0x1e0a <sync+0x2a>
    1e04:	35 c0       	rjmp	.+106    	; 0x1e70 <sync+0x90>
    1e06:	a0 81       	ld	r26, Z
    1e08:	b1 81       	ldd	r27, Z+1	; 0x01
    1e0a:	14 96       	adiw	r26, 0x04	; 4
    1e0c:	ed 91       	ld	r30, X+
    1e0e:	fc 91       	ld	r31, X
    1e10:	15 97       	sbiw	r26, 0x05	; 5
    1e12:	30 97       	sbiw	r30, 0x00	; 0
    1e14:	c1 f7       	brne	.-16     	; 0x1e06 <sync+0x26>
    1e16:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e1a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e1e:	a2 17       	cp	r26, r18
    1e20:	b3 07       	cpc	r27, r19
    1e22:	11 f0       	breq	.+4      	; 0x1e28 <sync+0x48>
    1e24:	11 11       	cpse	r17, r1
    1e26:	07 c0       	rjmp	.+14     	; 0x1e36 <sync+0x56>
    1e28:	11 23       	and	r17, r17
    1e2a:	09 f4       	brne	.+2      	; 0x1e2e <sync+0x4e>
    1e2c:	4a c0       	rjmp	.+148    	; 0x1ec2 <sync+0xe2>
    1e2e:	78 94       	sei
    1e30:	8f ef       	ldi	r24, 0xFF	; 255
    1e32:	9f ef       	ldi	r25, 0xFF	; 255
    1e34:	4e c0       	rjmp	.+156    	; 0x1ed2 <sync+0xf2>
    1e36:	8a 81       	ldd	r24, Y+2	; 0x02
    1e38:	9b 81       	ldd	r25, Y+3	; 0x03
    1e3a:	00 97       	sbiw	r24, 0x00	; 0
    1e3c:	19 f0       	breq	.+6      	; 0x1e44 <sync+0x64>
    1e3e:	fc 01       	movw	r30, r24
    1e40:	15 82       	std	Z+5, r1	; 0x05
    1e42:	14 82       	std	Z+4, r1	; 0x04
    1e44:	3b 83       	std	Y+3, r19	; 0x03
    1e46:	2a 83       	std	Y+2, r18	; 0x02
    1e48:	f9 01       	movw	r30, r18
    1e4a:	d5 83       	std	Z+5, r29	; 0x05
    1e4c:	c4 83       	std	Z+4, r28	; 0x04
    1e4e:	cd 01       	movw	r24, r26
    1e50:	0e 94 35 04 	call	0x86a	; 0x86a <dispatch>
    1e54:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e58:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e5c:	82 81       	ldd	r24, Z+2	; 0x02
    1e5e:	93 81       	ldd	r25, Z+3	; 0x03
    1e60:	89 2b       	or	r24, r25
    1e62:	31 f4       	brne	.+12     	; 0x1e70 <sync+0x90>
    1e64:	11 23       	and	r17, r17
    1e66:	81 f1       	breq	.+96     	; 0x1ec8 <sync+0xe8>
    1e68:	78 94       	sei
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	31 c0       	rjmp	.+98     	; 0x1ed2 <sync+0xf2>
    1e70:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e74:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e78:	99 83       	std	Y+1, r25	; 0x01
    1e7a:	88 83       	st	Y, r24
    1e7c:	11 23       	and	r17, r17
    1e7e:	29 f0       	breq	.+10     	; 0x1e8a <sync+0xaa>
    1e80:	8a 81       	ldd	r24, Y+2	; 0x02
    1e82:	9b 81       	ldd	r25, Y+3	; 0x03
    1e84:	01 97       	sbiw	r24, 0x01	; 1
    1e86:	09 f0       	breq	.+2      	; 0x1e8a <sync+0xaa>
    1e88:	78 94       	sei
    1e8a:	b6 01       	movw	r22, r12
    1e8c:	ce 01       	movw	r24, r28
    1e8e:	f7 01       	movw	r30, r14
    1e90:	09 95       	icall
    1e92:	f8 2e       	mov	r15, r24
    1e94:	09 2f       	mov	r16, r25
    1e96:	8f b7       	in	r24, 0x3f	; 63
    1e98:	f8 94       	cli
    1e9a:	19 82       	std	Y+1, r1	; 0x01
    1e9c:	18 82       	st	Y, r1
    1e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1ea0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ea2:	82 30       	cpi	r24, 0x02	; 2
    1ea4:	91 05       	cpc	r25, r1
    1ea6:	38 f0       	brcs	.+14     	; 0x1eb6 <sync+0xd6>
    1ea8:	1b 82       	std	Y+3, r1	; 0x03
    1eaa:	1a 82       	std	Y+2, r1	; 0x02
    1eac:	fc 01       	movw	r30, r24
    1eae:	15 82       	std	Z+5, r1	; 0x05
    1eb0:	14 82       	std	Z+4, r1	; 0x04
    1eb2:	0e 94 35 04 	call	0x86a	; 0x86a <dispatch>
    1eb6:	11 23       	and	r17, r17
    1eb8:	51 f0       	breq	.+20     	; 0x1ece <sync+0xee>
    1eba:	78 94       	sei
    1ebc:	8f 2d       	mov	r24, r15
    1ebe:	90 2f       	mov	r25, r16
    1ec0:	08 c0       	rjmp	.+16     	; 0x1ed2 <sync+0xf2>
    1ec2:	8f ef       	ldi	r24, 0xFF	; 255
    1ec4:	9f ef       	ldi	r25, 0xFF	; 255
    1ec6:	05 c0       	rjmp	.+10     	; 0x1ed2 <sync+0xf2>
    1ec8:	80 e0       	ldi	r24, 0x00	; 0
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	02 c0       	rjmp	.+4      	; 0x1ed2 <sync+0xf2>
    1ece:	8f 2d       	mov	r24, r15
    1ed0:	90 2f       	mov	r25, r16
    1ed2:	df 91       	pop	r29
    1ed4:	cf 91       	pop	r28
    1ed6:	1f 91       	pop	r17
    1ed8:	0f 91       	pop	r16
    1eda:	ff 90       	pop	r15
    1edc:	ef 90       	pop	r14
    1ede:	df 90       	pop	r13
    1ee0:	cf 90       	pop	r12
    1ee2:	08 95       	ret

00001ee4 <run>:
    1ee4:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ee8:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1eec:	86 e2       	ldi	r24, 0x26	; 38
    1eee:	91 e0       	ldi	r25, 0x01	; 1
    1ef0:	0e 94 b7 04 	call	0x96e	; 0x96e <dequeue>
    1ef4:	ec 01       	movw	r28, r24
    1ef6:	f8 01       	movw	r30, r16
    1ef8:	93 83       	std	Z+3, r25	; 0x03
    1efa:	82 83       	std	Z+2, r24	; 0x02
    1efc:	78 94       	sei
    1efe:	6c 85       	ldd	r22, Y+12	; 0x0c
    1f00:	7d 85       	ldd	r23, Y+13	; 0x0d
    1f02:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f04:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f06:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f08:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f0a:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <sync>
    1f0e:	8f b7       	in	r24, 0x3f	; 63
    1f10:	f8 94       	cli
    1f12:	66 e0       	ldi	r22, 0x06	; 6
    1f14:	71 e0       	ldi	r23, 0x01	; 1
    1f16:	ce 01       	movw	r24, r28
    1f18:	0e 94 ce 04 	call	0x99c	; 0x99c <insert>
    1f1c:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1f20:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1f24:	01 90       	ld	r0, Z+
    1f26:	f0 81       	ld	r31, Z
    1f28:	e0 2d       	mov	r30, r0
    1f2a:	c2 81       	ldd	r28, Z+2	; 0x02
    1f2c:	d3 81       	ldd	r29, Z+3	; 0x03
    1f2e:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1f32:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1f36:	30 97       	sbiw	r30, 0x00	; 0
    1f38:	a1 f0       	breq	.+40     	; 0x1f62 <run+0x7e>
    1f3a:	20 97       	sbiw	r28, 0x00	; 0
    1f3c:	99 f2       	breq	.-90     	; 0x1ee4 <run>
    1f3e:	86 81       	ldd	r24, Z+6	; 0x06
    1f40:	97 81       	ldd	r25, Z+7	; 0x07
    1f42:	a0 85       	ldd	r26, Z+8	; 0x08
    1f44:	b1 85       	ldd	r27, Z+9	; 0x09
    1f46:	4e 81       	ldd	r20, Y+6	; 0x06
    1f48:	5f 81       	ldd	r21, Y+7	; 0x07
    1f4a:	68 85       	ldd	r22, Y+8	; 0x08
    1f4c:	79 85       	ldd	r23, Y+9	; 0x09
    1f4e:	84 1b       	sub	r24, r20
    1f50:	95 0b       	sbc	r25, r21
    1f52:	a6 0b       	sbc	r26, r22
    1f54:	b7 0b       	sbc	r27, r23
    1f56:	18 16       	cp	r1, r24
    1f58:	19 06       	cpc	r1, r25
    1f5a:	1a 06       	cpc	r1, r26
    1f5c:	1b 06       	cpc	r1, r27
    1f5e:	0c f0       	brlt	.+2      	; 0x1f62 <run+0x7e>
    1f60:	c1 cf       	rjmp	.-126    	; 0x1ee4 <run>
    1f62:	82 e0       	ldi	r24, 0x02	; 2
    1f64:	91 e0       	ldi	r25, 0x01	; 1
    1f66:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <pop>
    1f6a:	64 e0       	ldi	r22, 0x04	; 4
    1f6c:	71 e0       	ldi	r23, 0x01	; 1
    1f6e:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <push>
    1f72:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1f76:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1f7a:	02 c0       	rjmp	.+4      	; 0x1f80 <run+0x9c>
    1f7c:	a0 81       	ld	r26, Z
    1f7e:	b1 81       	ldd	r27, Z+1	; 0x01
    1f80:	14 96       	adiw	r26, 0x04	; 4
    1f82:	ed 91       	ld	r30, X+
    1f84:	fc 91       	ld	r31, X
    1f86:	15 97       	sbiw	r26, 0x05	; 5
    1f88:	30 97       	sbiw	r30, 0x00	; 0
    1f8a:	c1 f7       	brne	.-16     	; 0x1f7c <run+0x98>
    1f8c:	cd 01       	movw	r24, r26
    1f8e:	0e 94 35 04 	call	0x86a	; 0x86a <dispatch>
    1f92:	a8 cf       	rjmp	.-176    	; 0x1ee4 <run>

00001f94 <install>:
    1f94:	fc 01       	movw	r30, r24
    1f96:	42 31       	cpi	r20, 0x12	; 18
    1f98:	b8 f4       	brcc	.+46     	; 0x1fc8 <install+0x34>
    1f9a:	9f b7       	in	r25, 0x3f	; 63
    1f9c:	90 78       	andi	r25, 0x80	; 128
    1f9e:	f8 94       	cli
    1fa0:	50 e0       	ldi	r21, 0x00	; 0
    1fa2:	44 0f       	add	r20, r20
    1fa4:	55 1f       	adc	r21, r21
    1fa6:	da 01       	movw	r26, r20
    1fa8:	a8 5d       	subi	r26, 0xD8	; 216
    1faa:	be 4f       	sbci	r27, 0xFE	; 254
    1fac:	ed 93       	st	X+, r30
    1fae:	fc 93       	st	X, r31
    1fb0:	da 01       	movw	r26, r20
    1fb2:	a0 54       	subi	r26, 0x40	; 64
    1fb4:	be 4f       	sbci	r27, 0xFE	; 254
    1fb6:	6d 93       	st	X+, r22
    1fb8:	7c 93       	st	X, r23
    1fba:	21 e0       	ldi	r18, 0x01	; 1
    1fbc:	30 e0       	ldi	r19, 0x00	; 0
    1fbe:	33 83       	std	Z+3, r19	; 0x03
    1fc0:	22 83       	std	Z+2, r18	; 0x02
    1fc2:	99 23       	and	r25, r25
    1fc4:	09 f0       	breq	.+2      	; 0x1fc8 <install+0x34>
    1fc6:	78 94       	sei
    1fc8:	08 95       	ret

00001fca <tinytimber>:
    1fca:	8c 01       	movw	r16, r24
    1fcc:	7b 01       	movw	r14, r22
    1fce:	6a 01       	movw	r12, r20
    1fd0:	8f b7       	in	r24, 0x3f	; 63
    1fd2:	f8 94       	cli
    1fd4:	0e 94 96 03 	call	0x72c	; 0x72c <initialize>
    1fd8:	78 94       	sei
    1fda:	e1 14       	cp	r14, r1
    1fdc:	f1 04       	cpc	r15, r1
    1fde:	41 f0       	breq	.+16     	; 0x1ff0 <tinytimber+0x26>
    1fe0:	20 e0       	ldi	r18, 0x00	; 0
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	a9 01       	movw	r20, r18
    1fe6:	60 e0       	ldi	r22, 0x00	; 0
    1fe8:	70 e0       	ldi	r23, 0x00	; 0
    1fea:	cb 01       	movw	r24, r22
    1fec:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <async>
    1ff0:	8f b7       	in	r24, 0x3f	; 63
    1ff2:	f8 94       	cli
    1ff4:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <idle>

00001ff8 <blinkDisplay>:
	PINE ^= (1 << pin); 
	blinkDisplay(pin);
}

void blinkDisplay(int pin){
	int temp = PINE;
    1ff8:	2c b1       	in	r18, 0x0c	; 12
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
	int value = (temp >> pin) & 1;
    1ffc:	08 2e       	mov	r0, r24
    1ffe:	02 c0       	rjmp	.+4      	; 0x2004 <blinkDisplay+0xc>
    2000:	35 95       	asr	r19
    2002:	27 95       	ror	r18
    2004:	0a 94       	dec	r0
    2006:	e2 f7       	brpl	.-8      	; 0x2000 <blinkDisplay+0x8>
    2008:	21 70       	andi	r18, 0x01	; 1
    200a:	33 27       	eor	r19, r19
	
	if (pin == 4){
    200c:	84 30       	cpi	r24, 0x04	; 4
    200e:	91 05       	cpc	r25, r1
    2010:	11 f4       	brne	.+4      	; 0x2016 <blinkDisplay+0x1e>
		LCDDR13 = value;
    2012:	20 93 f9 00 	sts	0x00F9, r18	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7fc0f9>
	}
	if (pin == 6)
    2016:	06 97       	sbiw	r24, 0x06	; 6
    2018:	11 f4       	brne	.+4      	; 0x201e <blinkDisplay+0x26>
	{
		LCDDR18 = value;
    201a:	20 93 fe 00 	sts	0x00FE, r18	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7fc0fe>
    201e:	08 95       	ret

00002020 <turnOffPin>:


#include "Writing.h"
#include <avr/io.h>

void turnOffPin(PortWriter *self, int pin){
    2020:	86 2f       	mov	r24, r22
    2022:	97 2f       	mov	r25, r23
	PINE &= ~(1 << pin);
    2024:	4c b1       	in	r20, 0x0c	; 12
    2026:	21 e0       	ldi	r18, 0x01	; 1
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	02 c0       	rjmp	.+4      	; 0x2030 <turnOffPin+0x10>
    202c:	22 0f       	add	r18, r18
    202e:	33 1f       	adc	r19, r19
    2030:	6a 95       	dec	r22
    2032:	e2 f7       	brpl	.-8      	; 0x202c <turnOffPin+0xc>
    2034:	20 95       	com	r18
    2036:	24 23       	and	r18, r20
    2038:	2c b9       	out	0x0c, r18	; 12
	blinkDisplay(pin);
    203a:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <blinkDisplay>
    203e:	08 95       	ret

00002040 <invertPin>:
}

void invertPin(PortWriter *self, int pin){
    2040:	86 2f       	mov	r24, r22
    2042:	97 2f       	mov	r25, r23
	PINE ^= (1 << pin); 
    2044:	4c b1       	in	r20, 0x0c	; 12
    2046:	21 e0       	ldi	r18, 0x01	; 1
    2048:	30 e0       	ldi	r19, 0x00	; 0
    204a:	02 c0       	rjmp	.+4      	; 0x2050 <invertPin+0x10>
    204c:	22 0f       	add	r18, r18
    204e:	33 1f       	adc	r19, r19
    2050:	6a 95       	dec	r22
    2052:	e2 f7       	brpl	.-8      	; 0x204c <invertPin+0xc>
    2054:	24 27       	eor	r18, r20
    2056:	2c b9       	out	0x0c, r18	; 12
	blinkDisplay(pin);
    2058:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <blinkDisplay>
    205c:	08 95       	ret

0000205e <__divmodhi4>:
    205e:	97 fb       	bst	r25, 7
    2060:	07 2e       	mov	r0, r23
    2062:	16 f4       	brtc	.+4      	; 0x2068 <__divmodhi4+0xa>
    2064:	00 94       	com	r0
    2066:	07 d0       	rcall	.+14     	; 0x2076 <__divmodhi4_neg1>
    2068:	77 fd       	sbrc	r23, 7
    206a:	09 d0       	rcall	.+18     	; 0x207e <__divmodhi4_neg2>
    206c:	0e 94 6d 10 	call	0x20da	; 0x20da <__udivmodhi4>
    2070:	07 fc       	sbrc	r0, 7
    2072:	05 d0       	rcall	.+10     	; 0x207e <__divmodhi4_neg2>
    2074:	3e f4       	brtc	.+14     	; 0x2084 <__divmodhi4_exit>

00002076 <__divmodhi4_neg1>:
    2076:	90 95       	com	r25
    2078:	81 95       	neg	r24
    207a:	9f 4f       	sbci	r25, 0xFF	; 255
    207c:	08 95       	ret

0000207e <__divmodhi4_neg2>:
    207e:	70 95       	com	r23
    2080:	61 95       	neg	r22
    2082:	7f 4f       	sbci	r23, 0xFF	; 255

00002084 <__divmodhi4_exit>:
    2084:	08 95       	ret

00002086 <__divmodsi4>:
    2086:	05 2e       	mov	r0, r21
    2088:	97 fb       	bst	r25, 7
    208a:	1e f4       	brtc	.+6      	; 0x2092 <__divmodsi4+0xc>
    208c:	00 94       	com	r0
    208e:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <__negsi2>
    2092:	57 fd       	sbrc	r21, 7
    2094:	07 d0       	rcall	.+14     	; 0x20a4 <__divmodsi4_neg2>
    2096:	0e 94 81 10 	call	0x2102	; 0x2102 <__udivmodsi4>
    209a:	07 fc       	sbrc	r0, 7
    209c:	03 d0       	rcall	.+6      	; 0x20a4 <__divmodsi4_neg2>
    209e:	4e f4       	brtc	.+18     	; 0x20b2 <__divmodsi4_exit>
    20a0:	0c 94 5a 10 	jmp	0x20b4	; 0x20b4 <__negsi2>

000020a4 <__divmodsi4_neg2>:
    20a4:	50 95       	com	r21
    20a6:	40 95       	com	r20
    20a8:	30 95       	com	r19
    20aa:	21 95       	neg	r18
    20ac:	3f 4f       	sbci	r19, 0xFF	; 255
    20ae:	4f 4f       	sbci	r20, 0xFF	; 255
    20b0:	5f 4f       	sbci	r21, 0xFF	; 255

000020b2 <__divmodsi4_exit>:
    20b2:	08 95       	ret

000020b4 <__negsi2>:
    20b4:	90 95       	com	r25
    20b6:	80 95       	com	r24
    20b8:	70 95       	com	r23
    20ba:	61 95       	neg	r22
    20bc:	7f 4f       	sbci	r23, 0xFF	; 255
    20be:	8f 4f       	sbci	r24, 0xFF	; 255
    20c0:	9f 4f       	sbci	r25, 0xFF	; 255
    20c2:	08 95       	ret

000020c4 <__muluhisi3>:
    20c4:	0e 94 a3 10 	call	0x2146	; 0x2146 <__umulhisi3>
    20c8:	a5 9f       	mul	r26, r21
    20ca:	90 0d       	add	r25, r0
    20cc:	b4 9f       	mul	r27, r20
    20ce:	90 0d       	add	r25, r0
    20d0:	a4 9f       	mul	r26, r20
    20d2:	80 0d       	add	r24, r0
    20d4:	91 1d       	adc	r25, r1
    20d6:	11 24       	eor	r1, r1
    20d8:	08 95       	ret

000020da <__udivmodhi4>:
    20da:	aa 1b       	sub	r26, r26
    20dc:	bb 1b       	sub	r27, r27
    20de:	51 e1       	ldi	r21, 0x11	; 17
    20e0:	07 c0       	rjmp	.+14     	; 0x20f0 <__udivmodhi4_ep>

000020e2 <__udivmodhi4_loop>:
    20e2:	aa 1f       	adc	r26, r26
    20e4:	bb 1f       	adc	r27, r27
    20e6:	a6 17       	cp	r26, r22
    20e8:	b7 07       	cpc	r27, r23
    20ea:	10 f0       	brcs	.+4      	; 0x20f0 <__udivmodhi4_ep>
    20ec:	a6 1b       	sub	r26, r22
    20ee:	b7 0b       	sbc	r27, r23

000020f0 <__udivmodhi4_ep>:
    20f0:	88 1f       	adc	r24, r24
    20f2:	99 1f       	adc	r25, r25
    20f4:	5a 95       	dec	r21
    20f6:	a9 f7       	brne	.-22     	; 0x20e2 <__udivmodhi4_loop>
    20f8:	80 95       	com	r24
    20fa:	90 95       	com	r25
    20fc:	bc 01       	movw	r22, r24
    20fe:	cd 01       	movw	r24, r26
    2100:	08 95       	ret

00002102 <__udivmodsi4>:
    2102:	a1 e2       	ldi	r26, 0x21	; 33
    2104:	1a 2e       	mov	r1, r26
    2106:	aa 1b       	sub	r26, r26
    2108:	bb 1b       	sub	r27, r27
    210a:	fd 01       	movw	r30, r26
    210c:	0d c0       	rjmp	.+26     	; 0x2128 <__udivmodsi4_ep>

0000210e <__udivmodsi4_loop>:
    210e:	aa 1f       	adc	r26, r26
    2110:	bb 1f       	adc	r27, r27
    2112:	ee 1f       	adc	r30, r30
    2114:	ff 1f       	adc	r31, r31
    2116:	a2 17       	cp	r26, r18
    2118:	b3 07       	cpc	r27, r19
    211a:	e4 07       	cpc	r30, r20
    211c:	f5 07       	cpc	r31, r21
    211e:	20 f0       	brcs	.+8      	; 0x2128 <__udivmodsi4_ep>
    2120:	a2 1b       	sub	r26, r18
    2122:	b3 0b       	sbc	r27, r19
    2124:	e4 0b       	sbc	r30, r20
    2126:	f5 0b       	sbc	r31, r21

00002128 <__udivmodsi4_ep>:
    2128:	66 1f       	adc	r22, r22
    212a:	77 1f       	adc	r23, r23
    212c:	88 1f       	adc	r24, r24
    212e:	99 1f       	adc	r25, r25
    2130:	1a 94       	dec	r1
    2132:	69 f7       	brne	.-38     	; 0x210e <__udivmodsi4_loop>
    2134:	60 95       	com	r22
    2136:	70 95       	com	r23
    2138:	80 95       	com	r24
    213a:	90 95       	com	r25
    213c:	9b 01       	movw	r18, r22
    213e:	ac 01       	movw	r20, r24
    2140:	bd 01       	movw	r22, r26
    2142:	cf 01       	movw	r24, r30
    2144:	08 95       	ret

00002146 <__umulhisi3>:
    2146:	a2 9f       	mul	r26, r18
    2148:	b0 01       	movw	r22, r0
    214a:	b3 9f       	mul	r27, r19
    214c:	c0 01       	movw	r24, r0
    214e:	a3 9f       	mul	r26, r19
    2150:	70 0d       	add	r23, r0
    2152:	81 1d       	adc	r24, r1
    2154:	11 24       	eor	r1, r1
    2156:	91 1d       	adc	r25, r1
    2158:	b2 9f       	mul	r27, r18
    215a:	70 0d       	add	r23, r0
    215c:	81 1d       	adc	r24, r1
    215e:	11 24       	eor	r1, r1
    2160:	91 1d       	adc	r25, r1
    2162:	08 95       	ret

00002164 <setjmp>:
    2164:	dc 01       	movw	r26, r24
    2166:	2d 92       	st	X+, r2
    2168:	3d 92       	st	X+, r3
    216a:	4d 92       	st	X+, r4
    216c:	5d 92       	st	X+, r5
    216e:	6d 92       	st	X+, r6
    2170:	7d 92       	st	X+, r7
    2172:	8d 92       	st	X+, r8
    2174:	9d 92       	st	X+, r9
    2176:	ad 92       	st	X+, r10
    2178:	bd 92       	st	X+, r11
    217a:	cd 92       	st	X+, r12
    217c:	dd 92       	st	X+, r13
    217e:	ed 92       	st	X+, r14
    2180:	fd 92       	st	X+, r15
    2182:	0d 93       	st	X+, r16
    2184:	1d 93       	st	X+, r17
    2186:	cd 93       	st	X+, r28
    2188:	dd 93       	st	X+, r29
    218a:	ff 91       	pop	r31
    218c:	ef 91       	pop	r30
    218e:	8d b7       	in	r24, 0x3d	; 61
    2190:	8d 93       	st	X+, r24
    2192:	8e b7       	in	r24, 0x3e	; 62
    2194:	8d 93       	st	X+, r24
    2196:	8f b7       	in	r24, 0x3f	; 63
    2198:	8d 93       	st	X+, r24
    219a:	ed 93       	st	X+, r30
    219c:	fd 93       	st	X+, r31
    219e:	88 27       	eor	r24, r24
    21a0:	99 27       	eor	r25, r25
    21a2:	09 94       	ijmp

000021a4 <longjmp>:
    21a4:	dc 01       	movw	r26, r24
    21a6:	cb 01       	movw	r24, r22
    21a8:	81 30       	cpi	r24, 0x01	; 1
    21aa:	91 05       	cpc	r25, r1
    21ac:	81 1d       	adc	r24, r1
    21ae:	2d 90       	ld	r2, X+
    21b0:	3d 90       	ld	r3, X+
    21b2:	4d 90       	ld	r4, X+
    21b4:	5d 90       	ld	r5, X+
    21b6:	6d 90       	ld	r6, X+
    21b8:	7d 90       	ld	r7, X+
    21ba:	8d 90       	ld	r8, X+
    21bc:	9d 90       	ld	r9, X+
    21be:	ad 90       	ld	r10, X+
    21c0:	bd 90       	ld	r11, X+
    21c2:	cd 90       	ld	r12, X+
    21c4:	dd 90       	ld	r13, X+
    21c6:	ed 90       	ld	r14, X+
    21c8:	fd 90       	ld	r15, X+
    21ca:	0d 91       	ld	r16, X+
    21cc:	1d 91       	ld	r17, X+
    21ce:	cd 91       	ld	r28, X+
    21d0:	dd 91       	ld	r29, X+
    21d2:	ed 91       	ld	r30, X+
    21d4:	fd 91       	ld	r31, X+
    21d6:	0d 90       	ld	r0, X+
    21d8:	f8 94       	cli
    21da:	fe bf       	out	0x3e, r31	; 62
    21dc:	0f be       	out	0x3f, r0	; 63
    21de:	ed bf       	out	0x3d, r30	; 61
    21e0:	ed 91       	ld	r30, X+
    21e2:	fd 91       	ld	r31, X+
    21e4:	09 94       	ijmp

000021e6 <_exit>:
    21e6:	f8 94       	cli

000021e8 <__stop_program>:
    21e8:	ff cf       	rjmp	.-2      	; 0x21e8 <__stop_program>
