
Lab-4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000021d2  00002266  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  00002284  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002284  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  000022f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002aaf  00000000  00000000  0000254c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010a8  00000000  00000000  00004ffb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015a4  00000000  00000000  000060a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c70  00000000  00000000  00007648  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000996  00000000  00000000  000082b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000279c  00000000  00000000  00008c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  0000b3ea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <__vector_1>
       8:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__vector_2>
       c:	0c 94 e3 05 	jmp	0xbc6	; 0xbc6 <__vector_3>
      10:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__vector_4>
      14:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 da 0c 	jmp	0x19b4	; 0x19b4 <__vector_9>
      28:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__vector_10>
      2c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__vector_11>
      30:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__vector_12>
      34:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__vector_13>
      38:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__vector_14>
      3c:	0c 94 5b 09 	jmp	0x12b6	; 0x12b6 <__vector_15>
      40:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__vector_16>
      44:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__vector_17>
      48:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <__vector_18>
      4c:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__vector_19>
      50:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__vector_20>
      54:	0c 94 f5 0b 	jmp	0x17ea	; 0x17ea <__vector_21>
      58:	0c 94 64 0c 	jmp	0x18c8	; 0x18c8 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e2 ed       	ldi	r30, 0xD2	; 210
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 40 02 	call	0x480	; 0x480 <main>
      92:	0c 94 e7 10 	jmp	0x21ce	; 0x21ce <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <initialize>:
#include "TinyTimber.h"
#include "PulseGenerator.h"
#include "InputHandler.h"


void initialize(InputHandler *self){
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	ec 01       	movw	r28, r24
	SYNC(self->gui, LCD_INIT, NULL);
      ac:	40 e0       	ldi	r20, 0x00	; 0
      ae:	50 e0       	ldi	r21, 0x00	; 0
      b0:	60 ef       	ldi	r22, 0xF0	; 240
      b2:	71 e0       	ldi	r23, 0x01	; 1
      b4:	8a 85       	ldd	r24, Y+10	; 0x0a
      b6:	9b 85       	ldd	r25, Y+11	; 0x0b
      b8:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <sync>
	SYNC(self->gui, Button_INIT, NULL);
      bc:	40 e0       	ldi	r20, 0x00	; 0
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	6a e1       	ldi	r22, 0x1A	; 26
      c2:	72 e0       	ldi	r23, 0x02	; 2
      c4:	8a 85       	ldd	r24, Y+10	; 0x0a
      c6:	9b 85       	ldd	r25, Y+11	; 0x0b
      c8:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <sync>
	ASYNC(self->pG[1], generatePulse, NULL);
      cc:	0e 81       	ldd	r16, Y+6	; 0x06
      ce:	1f 81       	ldd	r17, Y+7	; 0x07
      d0:	c1 2c       	mov	r12, r1
      d2:	d1 2c       	mov	r13, r1
      d4:	0f 2e       	mov	r0, r31
      d6:	fb ec       	ldi	r31, 0xCB	; 203
      d8:	ef 2e       	mov	r14, r31
      da:	f2 e0       	ldi	r31, 0x02	; 2
      dc:	ff 2e       	mov	r15, r31
      de:	f0 2d       	mov	r31, r0
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
	ASYNC(self->pG[2], generatePulse, NULL);
      f0:	08 85       	ldd	r16, Y+8	; 0x08
      f2:	19 85       	ldd	r17, Y+9	; 0x09
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	a9 01       	movw	r20, r18
      fa:	60 e0       	ldi	r22, 0x00	; 0
      fc:	70 e0       	ldi	r23, 0x00	; 0
      fe:	cb 01       	movw	r24, r22
     100:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
}
     104:	df 91       	pop	r29
     106:	cf 91       	pop	r28
     108:	1f 91       	pop	r17
     10a:	0f 91       	pop	r16
     10c:	ff 90       	pop	r15
     10e:	ef 90       	pop	r14
     110:	df 90       	pop	r13
     112:	cf 90       	pop	r12
     114:	08 95       	ret

00000116 <joystickHorizontal>:

void joystickHorizontal(InputHandler *self){
     116:	af 92       	push	r10
     118:	bf 92       	push	r11
     11a:	cf 92       	push	r12
     11c:	df 92       	push	r13
     11e:	ef 92       	push	r14
     120:	ff 92       	push	r15
     122:	0f 93       	push	r16
     124:	1f 93       	push	r17
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	ec 01       	movw	r28, r24
	int current = self->gui->current;
     12c:	ea 85       	ldd	r30, Y+10	; 0x0a
     12e:	fb 85       	ldd	r31, Y+11	; 0x0b
     130:	a4 80       	ldd	r10, Z+4	; 0x04
     132:	b5 80       	ldd	r11, Z+5	; 0x05
	#define leftMask (1 << 2)
	#define rightMask (1 << 3)
	
	
	//Left
	if ((PINE & leftMask) == 0){
     134:	62 99       	sbic	0x0c, 2	; 12
     136:	16 c0       	rjmp	.+44     	; 0x164 <joystickHorizontal+0x4e>
		if (current != 1){
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	a8 16       	cp	r10, r24
     13c:	b1 04       	cpc	r11, r1
     13e:	91 f0       	breq	.+36     	; 0x164 <joystickHorizontal+0x4e>
			ASYNC(self->gui, changeCurrent, 1);
     140:	cc 24       	eor	r12, r12
     142:	c3 94       	inc	r12
     144:	d1 2c       	mov	r13, r1
     146:	0f 2e       	mov	r0, r31
     148:	f7 ed       	ldi	r31, 0xD7	; 215
     14a:	ef 2e       	mov	r14, r31
     14c:	f1 e0       	ldi	r31, 0x01	; 1
     14e:	ff 2e       	mov	r15, r31
     150:	f0 2d       	mov	r31, r0
     152:	8f 01       	movw	r16, r30
     154:	20 e0       	ldi	r18, 0x00	; 0
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	a9 01       	movw	r20, r18
     15a:	60 e0       	ldi	r22, 0x00	; 0
     15c:	70 e0       	ldi	r23, 0x00	; 0
     15e:	cb 01       	movw	r24, r22
     160:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
		}
	}
	
	//Right
	if ((PINE & rightMask) == 0){
     164:	63 99       	sbic	0x0c, 3	; 12
     166:	18 c0       	rjmp	.+48     	; 0x198 <joystickHorizontal+0x82>
		if (current != 2){
     168:	82 e0       	ldi	r24, 0x02	; 2
     16a:	a8 16       	cp	r10, r24
     16c:	b1 04       	cpc	r11, r1
     16e:	a1 f0       	breq	.+40     	; 0x198 <joystickHorizontal+0x82>
			ASYNC(self->gui, changeCurrent, 2);
     170:	0a 85       	ldd	r16, Y+10	; 0x0a
     172:	1b 85       	ldd	r17, Y+11	; 0x0b
     174:	68 94       	set
     176:	cc 24       	eor	r12, r12
     178:	c1 f8       	bld	r12, 1
     17a:	d1 2c       	mov	r13, r1
     17c:	0f 2e       	mov	r0, r31
     17e:	f7 ed       	ldi	r31, 0xD7	; 215
     180:	ef 2e       	mov	r14, r31
     182:	f1 e0       	ldi	r31, 0x01	; 1
     184:	ff 2e       	mov	r15, r31
     186:	f0 2d       	mov	r31, r0
     188:	20 e0       	ldi	r18, 0x00	; 0
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	a9 01       	movw	r20, r18
     18e:	60 e0       	ldi	r22, 0x00	; 0
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	cb 01       	movw	r24, r22
     194:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
		}
	}
}
     198:	df 91       	pop	r29
     19a:	cf 91       	pop	r28
     19c:	1f 91       	pop	r17
     19e:	0f 91       	pop	r16
     1a0:	ff 90       	pop	r15
     1a2:	ef 90       	pop	r14
     1a4:	df 90       	pop	r13
     1a6:	cf 90       	pop	r12
     1a8:	bf 90       	pop	r11
     1aa:	af 90       	pop	r10
     1ac:	08 95       	ret

000001ae <joystickVerticalPressed>:

void joystickVerticalPressed(InputHandler *self){
     1ae:	cf 92       	push	r12
     1b0:	df 92       	push	r13
     1b2:	ef 92       	push	r14
     1b4:	ff 92       	push	r15
     1b6:	0f 93       	push	r16
     1b8:	1f 93       	push	r17
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
     1be:	ec 01       	movw	r28, r24
	#define pressMask (1 << 4)
	#define currentPG self->pG[self->gui->current]
	#define period 450
	
	//Up
	if ((PINB & upMask) == 0){
     1c0:	1e 99       	sbic	0x03, 6	; 3
     1c2:	1e c0       	rjmp	.+60     	; 0x200 <__EEPROM_REGION_LENGTH__>
		AFTER(MSEC(period), currentPG, changeFreq, 1);
     1c4:	ea 85       	ldd	r30, Y+10	; 0x0a
     1c6:	fb 85       	ldd	r31, Y+11	; 0x0b
     1c8:	04 80       	ldd	r0, Z+4	; 0x04
     1ca:	f5 81       	ldd	r31, Z+5	; 0x05
     1cc:	e0 2d       	mov	r30, r0
     1ce:	32 96       	adiw	r30, 0x02	; 2
     1d0:	ee 0f       	add	r30, r30
     1d2:	ff 1f       	adc	r31, r31
     1d4:	e8 0f       	add	r30, r24
     1d6:	f9 1f       	adc	r31, r25
     1d8:	00 81       	ld	r16, Z
     1da:	11 81       	ldd	r17, Z+1	; 0x01
     1dc:	cc 24       	eor	r12, r12
     1de:	c3 94       	inc	r12
     1e0:	d1 2c       	mov	r13, r1
     1e2:	0f 2e       	mov	r0, r31
     1e4:	fa e2       	ldi	r31, 0x2A	; 42
     1e6:	ef 2e       	mov	r14, r31
     1e8:	f3 e0       	ldi	r31, 0x03	; 3
     1ea:	ff 2e       	mov	r15, r31
     1ec:	f0 2d       	mov	r31, r0
     1ee:	20 e0       	ldi	r18, 0x00	; 0
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	a9 01       	movw	r20, r18
     1f4:	6e ee       	ldi	r22, 0xEE	; 238
     1f6:	76 e3       	ldi	r23, 0x36	; 54
     1f8:	80 e0       	ldi	r24, 0x00	; 0
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
	}
	
	//Down
	if ((PINB & downMask) == 0){
     200:	1f 99       	sbic	0x03, 7	; 3
     202:	1e c0       	rjmp	.+60     	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
		AFTER(MSEC(period), currentPG, changeFreq, -1);
     204:	ea 85       	ldd	r30, Y+10	; 0x0a
     206:	fb 85       	ldd	r31, Y+11	; 0x0b
     208:	04 80       	ldd	r0, Z+4	; 0x04
     20a:	f5 81       	ldd	r31, Z+5	; 0x05
     20c:	e0 2d       	mov	r30, r0
     20e:	32 96       	adiw	r30, 0x02	; 2
     210:	ee 0f       	add	r30, r30
     212:	ff 1f       	adc	r31, r31
     214:	ec 0f       	add	r30, r28
     216:	fd 1f       	adc	r31, r29
     218:	00 81       	ld	r16, Z
     21a:	11 81       	ldd	r17, Z+1	; 0x01
     21c:	cc 24       	eor	r12, r12
     21e:	ca 94       	dec	r12
     220:	dc 2c       	mov	r13, r12
     222:	0f 2e       	mov	r0, r31
     224:	fa e2       	ldi	r31, 0x2A	; 42
     226:	ef 2e       	mov	r14, r31
     228:	f3 e0       	ldi	r31, 0x03	; 3
     22a:	ff 2e       	mov	r15, r31
     22c:	f0 2d       	mov	r31, r0
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	a9 01       	movw	r20, r18
     234:	6e ee       	ldi	r22, 0xEE	; 238
     236:	76 e3       	ldi	r23, 0x36	; 54
     238:	80 e0       	ldi	r24, 0x00	; 0
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
	}
	
	//Pressing
	if ((PINB & pressMask) == 0){
     240:	1c 99       	sbic	0x03, 4	; 3
     242:	1b c0       	rjmp	.+54     	; 0x27a <__EEPROM_REGION_LENGTH__+0x7a>
		ASYNC(currentPG, saveLoadFreq, NULL);
     244:	ea 85       	ldd	r30, Y+10	; 0x0a
     246:	fb 85       	ldd	r31, Y+11	; 0x0b
     248:	84 81       	ldd	r24, Z+4	; 0x04
     24a:	95 81       	ldd	r25, Z+5	; 0x05
     24c:	02 96       	adiw	r24, 0x02	; 2
     24e:	88 0f       	add	r24, r24
     250:	99 1f       	adc	r25, r25
     252:	c8 0f       	add	r28, r24
     254:	d9 1f       	adc	r29, r25
     256:	08 81       	ld	r16, Y
     258:	19 81       	ldd	r17, Y+1	; 0x01
     25a:	c1 2c       	mov	r12, r1
     25c:	d1 2c       	mov	r13, r1
     25e:	0f 2e       	mov	r0, r31
     260:	fe e4       	ldi	r31, 0x4E	; 78
     262:	ef 2e       	mov	r14, r31
     264:	f3 e0       	ldi	r31, 0x03	; 3
     266:	ff 2e       	mov	r15, r31
     268:	f0 2d       	mov	r31, r0
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	a9 01       	movw	r20, r18
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	70 e0       	ldi	r23, 0x00	; 0
     274:	cb 01       	movw	r24, r22
     276:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
	}
	
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	1f 91       	pop	r17
     280:	0f 91       	pop	r16
     282:	ff 90       	pop	r15
     284:	ef 90       	pop	r14
     286:	df 90       	pop	r13
     288:	cf 90       	pop	r12
     28a:	08 95       	ret

0000028c <writeChar>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdbool.h>
#include "GUI.h"

void writeChar(char ch, int pos){
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	cd b7       	in	r28, 0x3d	; 61
     292:	de b7       	in	r29, 0x3e	; 62
     294:	66 97       	sbiw	r28, 0x16	; 22
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	f8 94       	cli
     29a:	de bf       	out	0x3e, r29	; 62
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	cd bf       	out	0x3d, r28	; 61
	if (pos < 0 || pos > 5){
     2a0:	66 30       	cpi	r22, 0x06	; 6
     2a2:	71 05       	cpc	r23, r1
     2a4:	08 f0       	brcs	.+2      	; 0x2a8 <writeChar+0x1c>
     2a6:	43 c0       	rjmp	.+134    	; 0x32e <writeChar+0xa2>

	//Initiate number to print;
	uint16_t num = 0x0;

	//Set SCC table to have the correct SCC values for the numbers 0-9 and a special character
	uint16_t tableSCC[11] = {0x1551, 0x0110, 0x1E11, 0x1B11, 0x0B50, 0x1B41, 0x1F41, 0x0111, 0x1F51, 0x0B51, 0xC028};
     2a8:	96 e1       	ldi	r25, 0x16	; 22
     2aa:	e8 e0       	ldi	r30, 0x08	; 8
     2ac:	f1 e0       	ldi	r31, 0x01	; 1
     2ae:	de 01       	movw	r26, r28
     2b0:	11 96       	adiw	r26, 0x01	; 1
     2b2:	01 90       	ld	r0, Z+
     2b4:	0d 92       	st	X+, r0
     2b6:	9a 95       	dec	r25
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <writeChar+0x26>

	//Check if the given character is in the interval 0-9 and set the right number value
	if (ch >= '0' && ch <= '9'){
     2ba:	90 ed       	ldi	r25, 0xD0	; 208
     2bc:	98 0f       	add	r25, r24
     2be:	9a 30       	cpi	r25, 0x0A	; 10
     2c0:	70 f4       	brcc	.+28     	; 0x2de <writeChar+0x52>
		//Set the corresponding value from the table to the number
		num = tableSCC[ch - '0'];
     2c2:	e8 2f       	mov	r30, r24
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	f0 97       	sbiw	r30, 0x30	; 48
     2c8:	ee 0f       	add	r30, r30
     2ca:	ff 1f       	adc	r31, r31
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	8c 0f       	add	r24, r28
     2d2:	9d 1f       	adc	r25, r29
     2d4:	e8 0f       	add	r30, r24
     2d6:	f9 1f       	adc	r31, r25
     2d8:	40 81       	ld	r20, Z
     2da:	51 81       	ldd	r21, Z+1	; 0x01
     2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <writeChar+0x56>
		} else {
		//Set the special character from the table to the number
		num = tableSCC[10];
     2de:	48 e2       	ldi	r20, 0x28	; 40
     2e0:	50 ec       	ldi	r21, 0xC0	; 192
	}

	//Update the LCD address to the given position
	addrLCD += pos >> 1;
     2e2:	fb 01       	movw	r30, r22
     2e4:	f5 95       	asr	r31
     2e6:	e7 95       	ror	r30
     2e8:	e4 51       	subi	r30, 0x14	; 20
     2ea:	ff 4f       	sbci	r31, 0xFF	; 255

	//Set the correct mask if the position is even or odd
	if (pos % 2 == 0){
     2ec:	db 01       	movw	r26, r22
     2ee:	a1 70       	andi	r26, 0x01	; 1
     2f0:	bb 27       	eor	r27, r27
     2f2:	60 fd       	sbrc	r22, 0
     2f4:	02 c0       	rjmp	.+4      	; 0x2fa <writeChar+0x6e>
		mask = 0xF0;
     2f6:	60 ef       	ldi	r22, 0xF0	; 240
     2f8:	01 c0       	rjmp	.+2      	; 0x2fc <writeChar+0x70>
		} else {
		mask = 0x0F;
     2fa:	6f e0       	ldi	r22, 0x0F	; 15
	}

	//Place each of the four nibbles of the number on the LCD

	for (int i = 0; i < 4; i++){
     2fc:	20 e0       	ldi	r18, 0x00	; 0
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	13 c0       	rjmp	.+38     	; 0x328 <writeChar+0x9c>
		//Masking the smallest number to the current nibble
		nibbleNum = num & 0xF;
     302:	84 2f       	mov	r24, r20
     304:	8f 70       	andi	r24, 0x0F	; 15
		//Remove the used nibble
		num = num >> 4;
     306:	52 95       	swap	r21
     308:	42 95       	swap	r20
     30a:	4f 70       	andi	r20, 0x0F	; 15
     30c:	45 27       	eor	r20, r21
     30e:	5f 70       	andi	r21, 0x0F	; 15
     310:	45 27       	eor	r20, r21

		//Shift the nibble to the right position if the pos is odd
		if (pos % 2 != 0){
     312:	10 97       	sbiw	r26, 0x00	; 0
     314:	11 f0       	breq	.+4      	; 0x31a <writeChar+0x8e>
			nibbleNum = nibbleNum << 4;
     316:	82 95       	swap	r24
     318:	80 7f       	andi	r24, 0xF0	; 240
		}

		//Write the current nibble to the LCD
		*addrLCD = (*addrLCD & mask) | nibbleNum;
     31a:	90 81       	ld	r25, Z
     31c:	96 23       	and	r25, r22
     31e:	89 2b       	or	r24, r25
     320:	80 83       	st	Z, r24

		//Move to the next nibble sequence of the current digit on the LCD
		addrLCD += 5;
     322:	35 96       	adiw	r30, 0x05	; 5
		mask = 0x0F;
	}

	//Place each of the four nibbles of the number on the LCD

	for (int i = 0; i < 4; i++){
     324:	2f 5f       	subi	r18, 0xFF	; 255
     326:	3f 4f       	sbci	r19, 0xFF	; 255
     328:	24 30       	cpi	r18, 0x04	; 4
     32a:	31 05       	cpc	r19, r1
     32c:	54 f3       	brlt	.-44     	; 0x302 <writeChar+0x76>
		*addrLCD = (*addrLCD & mask) | nibbleNum;

		//Move to the next nibble sequence of the current digit on the LCD
		addrLCD += 5;
	}
}
     32e:	66 96       	adiw	r28, 0x16	; 22
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	f8 94       	cli
     334:	de bf       	out	0x3e, r29	; 62
     336:	0f be       	out	0x3f, r0	; 63
     338:	cd bf       	out	0x3d, r28	; 61
     33a:	df 91       	pop	r29
     33c:	cf 91       	pop	r28
     33e:	08 95       	ret

00000340 <printAt>:

void printAt(int pos, int num) {
     340:	ef 92       	push	r14
     342:	ff 92       	push	r15
     344:	0f 93       	push	r16
     346:	1f 93       	push	r17
     348:	cf 93       	push	r28
     34a:	df 93       	push	r29
     34c:	ec 01       	movw	r28, r24
     34e:	7b 01       	movw	r14, r22
	writeChar( (num % 100) / 10 + '0', pos);
     350:	cb 01       	movw	r24, r22
     352:	64 e6       	ldi	r22, 0x64	; 100
     354:	70 e0       	ldi	r23, 0x00	; 0
     356:	0e 94 23 10 	call	0x2046	; 0x2046 <__divmodhi4>
     35a:	0a e0       	ldi	r16, 0x0A	; 10
     35c:	10 e0       	ldi	r17, 0x00	; 0
     35e:	b8 01       	movw	r22, r16
     360:	0e 94 23 10 	call	0x2046	; 0x2046 <__divmodhi4>
     364:	86 2f       	mov	r24, r22
     366:	be 01       	movw	r22, r28
     368:	80 5d       	subi	r24, 0xD0	; 208
     36a:	0e 94 46 01 	call	0x28c	; 0x28c <writeChar>
	pos++;
     36e:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pos);
     370:	c7 01       	movw	r24, r14
     372:	b8 01       	movw	r22, r16
     374:	0e 94 23 10 	call	0x2046	; 0x2046 <__divmodhi4>
     378:	be 01       	movw	r22, r28
     37a:	80 5d       	subi	r24, 0xD0	; 208
     37c:	0e 94 46 01 	call	0x28c	; 0x28c <writeChar>
}
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	1f 91       	pop	r17
     386:	0f 91       	pop	r16
     388:	ff 90       	pop	r15
     38a:	ef 90       	pop	r14
     38c:	08 95       	ret

0000038e <printCurrent>:
	self->current = arg;
	printCurrent(self);
}

void printCurrent(GUI *self){
	if (self->current == 1){
     38e:	fc 01       	movw	r30, r24
     390:	84 81       	ldd	r24, Z+4	; 0x04
     392:	95 81       	ldd	r25, Z+5	; 0x05
     394:	81 30       	cpi	r24, 0x01	; 1
     396:	91 05       	cpc	r25, r1
     398:	21 f4       	brne	.+8      	; 0x3a2 <printCurrent+0x14>
		LCDDR1 = (1 << 0);
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     3a0:	08 95       	ret
	} else if (self->current == 2){
     3a2:	02 97       	sbiw	r24, 0x02	; 2
     3a4:	19 f4       	brne	.+6      	; 0x3ac <printCurrent+0x1e>
		LCDDR1 = (1 << 4);
     3a6:	80 e1       	ldi	r24, 0x10	; 16
     3a8:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     3ac:	08 95       	ret

000003ae <changeCurrent>:
	pos++;
	writeChar( num % 10 + '0', pos);
}

void changeCurrent(GUI *self, int arg){
	self->current = arg;
     3ae:	fc 01       	movw	r30, r24
     3b0:	75 83       	std	Z+5, r23	; 0x05
     3b2:	64 83       	std	Z+4, r22	; 0x04
	printCurrent(self);
     3b4:	0e 94 c7 01 	call	0x38e	; 0x38e <printCurrent>
     3b8:	08 95       	ret

000003ba <updateDisplayedFreq>:
		LCDDR1 = (1 << 4);
	}
}

void updateDisplayedFreq(GUI *self, int freq){
	int current = self->current;
     3ba:	fc 01       	movw	r30, r24
     3bc:	84 81       	ldd	r24, Z+4	; 0x04
     3be:	95 81       	ldd	r25, Z+5	; 0x05
	
	int pos = 2;
	if (current == 1){
     3c0:	81 30       	cpi	r24, 0x01	; 1
     3c2:	91 05       	cpc	r25, r1
     3c4:	29 f0       	breq	.+10     	; 0x3d0 <updateDisplayedFreq+0x16>
		pos = 0;
	} else if (current == 2) {
     3c6:	02 97       	sbiw	r24, 0x02	; 2
     3c8:	31 f0       	breq	.+12     	; 0x3d6 <updateDisplayedFreq+0x1c>
}

void updateDisplayedFreq(GUI *self, int freq){
	int current = self->current;
	
	int pos = 2;
     3ca:	82 e0       	ldi	r24, 0x02	; 2
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	05 c0       	rjmp	.+10     	; 0x3da <updateDisplayedFreq+0x20>
	if (current == 1){
		pos = 0;
     3d0:	80 e0       	ldi	r24, 0x00	; 0
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <updateDisplayedFreq+0x20>
	} else if (current == 2) {
		pos = 4;
     3d6:	84 e0       	ldi	r24, 0x04	; 4
     3d8:	90 e0       	ldi	r25, 0x00	; 0
	}
	printAt(pos, freq);
     3da:	0e 94 a0 01 	call	0x340	; 0x340 <printAt>
     3de:	08 95       	ret

000003e0 <LCD_INIT>:
}

 void LCD_INIT(void){
	 // LCD
	 CLKPR = 0x80;
     3e0:	e1 e6       	ldi	r30, 0x61	; 97
     3e2:	f0 e0       	ldi	r31, 0x00	; 0
     3e4:	80 e8       	ldi	r24, 0x80	; 128
     3e6:	80 83       	st	Z, r24
	 CLKPR = 0x00;
     3e8:	10 82       	st	Z, r1
	 
	 //Set drive time to 300 milliseconds and contrast control voltage to 3.35 V
	 LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     3ea:	8f e0       	ldi	r24, 0x0F	; 15
     3ec:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	 
	 //Set external clock source, 1/3 bias, 1/4 duty cycle, 25 segments
	 LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     3f0:	87 eb       	ldi	r24, 0xB7	; 183
     3f2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>

	 //Set prescaler setting N=16 and clock divide settings D=8
	 LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     3f6:	87 e0       	ldi	r24, 0x07	; 7
     3f8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>

	 //Enable low power waveform, no frame interrupt, no blanking, LCD enable
	 LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     3fc:	80 ec       	ldi	r24, 0xC0	; 192
     3fe:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	 
	 asm("nop");
     402:	00 00       	nop
	 
	 LCDDR1 = (1 << 0);
     404:	81 e0       	ldi	r24, 0x01	; 1
     406:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
	 writeChar('0', 0);
     40a:	60 e0       	ldi	r22, 0x00	; 0
     40c:	70 e0       	ldi	r23, 0x00	; 0
     40e:	80 e3       	ldi	r24, 0x30	; 48
     410:	0e 94 46 01 	call	0x28c	; 0x28c <writeChar>
	 writeChar('0', 1);
     414:	61 e0       	ldi	r22, 0x01	; 1
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	80 e3       	ldi	r24, 0x30	; 48
     41a:	0e 94 46 01 	call	0x28c	; 0x28c <writeChar>
	 writeChar('0', 4);
     41e:	64 e0       	ldi	r22, 0x04	; 4
     420:	70 e0       	ldi	r23, 0x00	; 0
     422:	80 e3       	ldi	r24, 0x30	; 48
     424:	0e 94 46 01 	call	0x28c	; 0x28c <writeChar>
	 writeChar('0', 5);
     428:	65 e0       	ldi	r22, 0x05	; 5
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	80 e3       	ldi	r24, 0x30	; 48
     42e:	0e 94 46 01 	call	0x28c	; 0x28c <writeChar>
     432:	08 95       	ret

00000434 <Button_INIT>:
 }
 
 void Button_INIT(void){
	 //Initialize for butterfly joystick
	 EIMSK = (1<<PCIE1) | (1<<PCIE0) | EIMSK;
     434:	8d b3       	in	r24, 0x1d	; 29
     436:	80 6c       	ori	r24, 0xC0	; 192
     438:	8d bb       	out	0x1d, r24	; 29
	 
	 //Press down
	 PORTB = (1<<PB7) | PORTB;
     43a:	85 b1       	in	r24, 0x05	; 5
     43c:	80 68       	ori	r24, 0x80	; 128
     43e:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT15) | PCMSK1;
     440:	ec e6       	ldi	r30, 0x6C	; 108
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	80 81       	ld	r24, Z
     446:	80 68       	ori	r24, 0x80	; 128
     448:	80 83       	st	Z, r24
	 
	 //Press  upp
	 PORTB = (1<<PB6) | PORTB;
     44a:	85 b1       	in	r24, 0x05	; 5
     44c:	80 64       	ori	r24, 0x40	; 64
     44e:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT14) | PCMSK1;
     450:	80 81       	ld	r24, Z
     452:	80 64       	ori	r24, 0x40	; 64
     454:	80 83       	st	Z, r24
	 
	 //Press right
	 PORTE = (1<<PE3) | PORTE;
     456:	8e b1       	in	r24, 0x0e	; 14
     458:	88 60       	ori	r24, 0x08	; 8
     45a:	8e b9       	out	0x0e, r24	; 14
	 PCMSK0 = (1<<PCINT3) | PCMSK0;
     45c:	ab e6       	ldi	r26, 0x6B	; 107
     45e:	b0 e0       	ldi	r27, 0x00	; 0
     460:	8c 91       	ld	r24, X
     462:	88 60       	ori	r24, 0x08	; 8
     464:	8c 93       	st	X, r24
	 
	 //Press left
	 PORTE = (1<<PE2) | PORTE;
     466:	8e b1       	in	r24, 0x0e	; 14
     468:	84 60       	ori	r24, 0x04	; 4
     46a:	8e b9       	out	0x0e, r24	; 14
	 PCMSK0 = (1<<PCINT2) | PCMSK0;
     46c:	8c 91       	ld	r24, X
     46e:	84 60       	ori	r24, 0x04	; 4
     470:	8c 93       	st	X, r24
	 
	 //Press in
	 PORTB = (1<<PB4) | PORTB;
     472:	85 b1       	in	r24, 0x05	; 5
     474:	80 61       	ori	r24, 0x10	; 16
     476:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT12) | PCMSK1;
     478:	80 81       	ld	r24, Z
     47a:	80 61       	ori	r24, 0x10	; 16
     47c:	80 83       	st	Z, r24
     47e:	08 95       	ret

00000480 <main>:
#include "InputHandler.h"



int main(void)
{
     480:	cf 93       	push	r28
     482:	df 93       	push	r29
     484:	cd b7       	in	r28, 0x3d	; 61
     486:	de b7       	in	r29, 0x3e	; 62
     488:	c8 54       	subi	r28, 0x48	; 72
     48a:	d1 09       	sbc	r29, r1
     48c:	0f b6       	in	r0, 0x3f	; 63
     48e:	f8 94       	cli
     490:	de bf       	out	0x3e, r29	; 62
     492:	0f be       	out	0x3f, r0	; 63
     494:	cd bf       	out	0x3d, r28	; 61
	PortWriter		portWriter	 = initPortWriter();
     496:	1a 82       	std	Y+2, r1	; 0x02
     498:	19 82       	std	Y+1, r1	; 0x01
     49a:	1c 82       	std	Y+4, r1	; 0x04
     49c:	1b 82       	std	Y+3, r1	; 0x03
	GUI				gui			 = initGUI();
     49e:	1e 82       	std	Y+6, r1	; 0x06
     4a0:	1d 82       	std	Y+5, r1	; 0x05
     4a2:	18 86       	std	Y+8, r1	; 0x08
     4a4:	1f 82       	std	Y+7, r1	; 0x07
     4a6:	41 e0       	ldi	r20, 0x01	; 1
     4a8:	50 e0       	ldi	r21, 0x00	; 0
     4aa:	5a 87       	std	Y+10, r21	; 0x0a
     4ac:	49 87       	std	Y+9, r20	; 0x09
	PulseGenerator	pG0		 = initPulseGenerator(&portWriter, &gui, 4);
     4ae:	1c 86       	std	Y+12, r1	; 0x0c
     4b0:	1b 86       	std	Y+11, r1	; 0x0b
     4b2:	1e 86       	std	Y+14, r1	; 0x0e
     4b4:	1d 86       	std	Y+13, r1	; 0x0d
     4b6:	9e 01       	movw	r18, r28
     4b8:	2f 5f       	subi	r18, 0xFF	; 255
     4ba:	3f 4f       	sbci	r19, 0xFF	; 255
     4bc:	38 8b       	std	Y+16, r19	; 0x10
     4be:	2f 87       	std	Y+15, r18	; 0x0f
     4c0:	ce 01       	movw	r24, r28
     4c2:	05 96       	adiw	r24, 0x05	; 5
     4c4:	9a 8b       	std	Y+18, r25	; 0x12
     4c6:	89 8b       	std	Y+17, r24	; 0x11
     4c8:	64 e0       	ldi	r22, 0x04	; 4
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	7c 8b       	std	Y+20, r23	; 0x14
     4ce:	6b 8b       	std	Y+19, r22	; 0x13
     4d0:	1e 8a       	std	Y+22, r1	; 0x16
     4d2:	1d 8a       	std	Y+21, r1	; 0x15
     4d4:	18 8e       	std	Y+24, r1	; 0x18
     4d6:	1f 8a       	std	Y+23, r1	; 0x17
     4d8:	1a 8e       	std	Y+26, r1	; 0x1a
     4da:	19 8e       	std	Y+25, r1	; 0x19
	PulseGenerator	pG1		 = initPulseGenerator(&portWriter, &gui, 6);
     4dc:	1c 8e       	std	Y+28, r1	; 0x1c
     4de:	1b 8e       	std	Y+27, r1	; 0x1b
     4e0:	1e 8e       	std	Y+30, r1	; 0x1e
     4e2:	1d 8e       	std	Y+29, r1	; 0x1d
     4e4:	38 a3       	std	Y+32, r19	; 0x20
     4e6:	2f 8f       	std	Y+31, r18	; 0x1f
     4e8:	9a a3       	std	Y+34, r25	; 0x22
     4ea:	89 a3       	std	Y+33, r24	; 0x21
     4ec:	66 e0       	ldi	r22, 0x06	; 6
     4ee:	70 e0       	ldi	r23, 0x00	; 0
     4f0:	7c a3       	std	Y+36, r23	; 0x24
     4f2:	6b a3       	std	Y+35, r22	; 0x23
     4f4:	1e a2       	std	Y+38, r1	; 0x26
     4f6:	1d a2       	std	Y+37, r1	; 0x25
     4f8:	18 a6       	std	Y+40, r1	; 0x28
     4fa:	1f a2       	std	Y+39, r1	; 0x27
     4fc:	1a a6       	std	Y+42, r1	; 0x2a
     4fe:	19 a6       	std	Y+41, r1	; 0x29
	PulseGenerator	pG2		 = initPulseGenerator(&portWriter, &gui, 7);
     500:	1c a6       	std	Y+44, r1	; 0x2c
     502:	1b a6       	std	Y+43, r1	; 0x2b
     504:	1e a6       	std	Y+46, r1	; 0x2e
     506:	1d a6       	std	Y+45, r1	; 0x2d
     508:	38 ab       	std	Y+48, r19	; 0x30
     50a:	2f a7       	std	Y+47, r18	; 0x2f
     50c:	9a ab       	std	Y+50, r25	; 0x32
     50e:	89 ab       	std	Y+49, r24	; 0x31
     510:	27 e0       	ldi	r18, 0x07	; 7
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	3c ab       	std	Y+52, r19	; 0x34
     516:	2b ab       	std	Y+51, r18	; 0x33
     518:	1e aa       	std	Y+54, r1	; 0x36
     51a:	1d aa       	std	Y+53, r1	; 0x35
     51c:	18 ae       	std	Y+56, r1	; 0x38
     51e:	1f aa       	std	Y+55, r1	; 0x37
     520:	1a ae       	std	Y+58, r1	; 0x3a
     522:	19 ae       	std	Y+57, r1	; 0x39
	InputHandler	inputHandler = initInputHandler(&gui, &pG0, &pG1, &pG2);
     524:	1c ae       	std	Y+60, r1	; 0x3c
     526:	1b ae       	std	Y+59, r1	; 0x3b
     528:	1e ae       	std	Y+62, r1	; 0x3e
     52a:	1d ae       	std	Y+61, r1	; 0x3d
     52c:	21 96       	adiw	r28, 0x01	; 1
     52e:	9f af       	std	Y+63, r25	; 0x3f
     530:	8e af       	std	Y+62, r24	; 0x3e
     532:	21 97       	sbiw	r28, 0x01	; 1
     534:	06 96       	adiw	r24, 0x06	; 6
     536:	23 96       	adiw	r28, 0x03	; 3
     538:	9f af       	std	Y+63, r25	; 0x3f
     53a:	8e af       	std	Y+62, r24	; 0x3e
     53c:	23 97       	sbiw	r28, 0x03	; 3
     53e:	40 96       	adiw	r24, 0x10	; 16
     540:	25 96       	adiw	r28, 0x05	; 5
     542:	9f af       	std	Y+63, r25	; 0x3f
     544:	8e af       	std	Y+62, r24	; 0x3e
     546:	25 97       	sbiw	r28, 0x05	; 5
     548:	40 96       	adiw	r24, 0x10	; 16
     54a:	27 96       	adiw	r28, 0x07	; 7
     54c:	9f af       	std	Y+63, r25	; 0x3f
     54e:	8e af       	std	Y+62, r24	; 0x3e
     550:	27 97       	sbiw	r28, 0x07	; 7
     552:	29 96       	adiw	r28, 0x09	; 9
     554:	5f af       	std	Y+63, r21	; 0x3f
     556:	4e af       	std	Y+62, r20	; 0x3e
     558:	29 97       	sbiw	r28, 0x09	; 9
	
	INSTALL(&inputHandler, joystickHorizontal, IRQ_PCINT0);	// Left & Right
     55a:	6b e8       	ldi	r22, 0x8B	; 139
     55c:	70 e0       	ldi	r23, 0x00	; 0
     55e:	40 96       	adiw	r24, 0x10	; 16
     560:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <install>
	INSTALL(&inputHandler, joystickVerticalPressed, IRQ_PCINT1);	// Up, Down & Pressed
     564:	42 e0       	ldi	r20, 0x02	; 2
     566:	67 ed       	ldi	r22, 0xD7	; 215
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	ce 01       	movw	r24, r28
     56c:	cb 96       	adiw	r24, 0x3b	; 59
     56e:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <install>
	
	return TINYTIMBER(&inputHandler, initialize, NULL);
     572:	40 e0       	ldi	r20, 0x00	; 0
     574:	50 e0       	ldi	r21, 0x00	; 0
     576:	6d e4       	ldi	r22, 0x4D	; 77
     578:	70 e0       	ldi	r23, 0x00	; 0
     57a:	ce 01       	movw	r24, r28
     57c:	cb 96       	adiw	r24, 0x3b	; 59
     57e:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <tinytimber>
     582:	c8 5b       	subi	r28, 0xB8	; 184
     584:	df 4f       	sbci	r29, 0xFF	; 255
     586:	0f b6       	in	r0, 0x3f	; 63
     588:	f8 94       	cli
     58a:	de bf       	out	0x3e, r29	; 62
     58c:	0f be       	out	0x3f, r0	; 63
     58e:	cd bf       	out	0x3d, r28	; 61
     590:	df 91       	pop	r29
     592:	cf 91       	pop	r28
     594:	08 95       	ret

00000596 <generatePulse>:
#include "TinyTimber.h"
#include "PulseGenerator.h"
#include "Writing.h"


void generatePulse(PulseGenerator *self){
     596:	cf 92       	push	r12
     598:	df 92       	push	r13
     59a:	ef 92       	push	r14
     59c:	ff 92       	push	r15
     59e:	0f 93       	push	r16
     5a0:	1f 93       	push	r17
     5a2:	cf 93       	push	r28
     5a4:	df 93       	push	r29
     5a6:	ec 01       	movw	r28, r24
	if (self->savedFreq == 0){
     5a8:	8c 85       	ldd	r24, Y+12	; 0x0c
     5aa:	9d 85       	ldd	r25, Y+13	; 0x0d
     5ac:	89 2b       	or	r24, r25
     5ae:	d9 f4       	brne	.+54     	; 0x5e6 <generatePulse+0x50>
		SYNC(self->pw, turnOffPin, self->pin);
     5b0:	48 85       	ldd	r20, Y+8	; 0x08
     5b2:	59 85       	ldd	r21, Y+9	; 0x09
     5b4:	69 e0       	ldi	r22, 0x09	; 9
     5b6:	70 e1       	ldi	r23, 0x10	; 16
     5b8:	8c 81       	ldd	r24, Y+4	; 0x04
     5ba:	9d 81       	ldd	r25, Y+5	; 0x05
     5bc:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <sync>
		AFTER(MSEC(500), self, generatePulse, NULL);
     5c0:	c1 2c       	mov	r12, r1
     5c2:	d1 2c       	mov	r13, r1
     5c4:	0f 2e       	mov	r0, r31
     5c6:	fb ec       	ldi	r31, 0xCB	; 203
     5c8:	ef 2e       	mov	r14, r31
     5ca:	f2 e0       	ldi	r31, 0x02	; 2
     5cc:	ff 2e       	mov	r15, r31
     5ce:	f0 2d       	mov	r31, r0
     5d0:	8e 01       	movw	r16, r28
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	a9 01       	movw	r20, r18
     5d8:	69 e0       	ldi	r22, 0x09	; 9
     5da:	7d e3       	ldi	r23, 0x3D	; 61
     5dc:	80 e0       	ldi	r24, 0x00	; 0
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
     5e4:	2e c0       	rjmp	.+92     	; 0x642 <generatePulse+0xac>
	} else {
		SYNC(self->pw, invertPin, self->pin);
     5e6:	48 85       	ldd	r20, Y+8	; 0x08
     5e8:	59 85       	ldd	r21, Y+9	; 0x09
     5ea:	6e e0       	ldi	r22, 0x0E	; 14
     5ec:	70 e1       	ldi	r23, 0x10	; 16
     5ee:	8c 81       	ldd	r24, Y+4	; 0x04
     5f0:	9d 81       	ldd	r25, Y+5	; 0x05
     5f2:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <sync>
		AFTER(USEC(500000/self->savedFreq), self, generatePulse, NULL);
     5f6:	2c 85       	ldd	r18, Y+12	; 0x0c
     5f8:	3d 85       	ldd	r19, Y+13	; 0x0d
     5fa:	03 2e       	mov	r0, r19
     5fc:	00 0c       	add	r0, r0
     5fe:	44 0b       	sbc	r20, r20
     600:	55 0b       	sbc	r21, r21
     602:	60 e2       	ldi	r22, 0x20	; 32
     604:	71 ea       	ldi	r23, 0xA1	; 161
     606:	87 e0       	ldi	r24, 0x07	; 7
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	0e 94 37 10 	call	0x206e	; 0x206e <__divmodsi4>
     60e:	ad e7       	ldi	r26, 0x7D	; 125
     610:	b0 e0       	ldi	r27, 0x00	; 0
     612:	0e 94 56 10 	call	0x20ac	; 0x20ac <__muluhisi3>
     616:	20 ea       	ldi	r18, 0xA0	; 160
     618:	3f e0       	ldi	r19, 0x0F	; 15
     61a:	40 e0       	ldi	r20, 0x00	; 0
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	0e 94 37 10 	call	0x206e	; 0x206e <__divmodsi4>
     622:	ca 01       	movw	r24, r20
     624:	b9 01       	movw	r22, r18
     626:	c1 2c       	mov	r12, r1
     628:	d1 2c       	mov	r13, r1
     62a:	0f 2e       	mov	r0, r31
     62c:	fb ec       	ldi	r31, 0xCB	; 203
     62e:	ef 2e       	mov	r14, r31
     630:	f2 e0       	ldi	r31, 0x02	; 2
     632:	ff 2e       	mov	r15, r31
     634:	f0 2d       	mov	r31, r0
     636:	8e 01       	movw	r16, r28
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	30 e0       	ldi	r19, 0x00	; 0
     63c:	a9 01       	movw	r20, r18
     63e:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
	}
}
     642:	df 91       	pop	r29
     644:	cf 91       	pop	r28
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	ff 90       	pop	r15
     64c:	ef 90       	pop	r14
     64e:	df 90       	pop	r13
     650:	cf 90       	pop	r12
     652:	08 95       	ret

00000654 <changeFreq>:

void changeFreq(PulseGenerator *self, int value){
     654:	cf 92       	push	r12
     656:	df 92       	push	r13
     658:	ef 92       	push	r14
     65a:	ff 92       	push	r15
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	fc 01       	movw	r30, r24
	if ((self->freq + value) >= 0 || (self->freq + value) <= 99){
		self->freq = self->freq + value;
     662:	c2 84       	ldd	r12, Z+10	; 0x0a
     664:	d3 84       	ldd	r13, Z+11	; 0x0b
     666:	c6 0e       	add	r12, r22
     668:	d7 1e       	adc	r13, r23
     66a:	d3 86       	std	Z+11, r13	; 0x0b
     66c:	c2 86       	std	Z+10, r12	; 0x0a
		ASYNC(self->gui, updateDisplayedFreq, self->freq);
     66e:	06 81       	ldd	r16, Z+6	; 0x06
     670:	17 81       	ldd	r17, Z+7	; 0x07
     672:	0f 2e       	mov	r0, r31
     674:	fd ed       	ldi	r31, 0xDD	; 221
     676:	ef 2e       	mov	r14, r31
     678:	f1 e0       	ldi	r31, 0x01	; 1
     67a:	ff 2e       	mov	r15, r31
     67c:	f0 2d       	mov	r31, r0
     67e:	20 e0       	ldi	r18, 0x00	; 0
     680:	30 e0       	ldi	r19, 0x00	; 0
     682:	a9 01       	movw	r20, r18
     684:	60 e0       	ldi	r22, 0x00	; 0
     686:	70 e0       	ldi	r23, 0x00	; 0
     688:	cb 01       	movw	r24, r22
     68a:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
	}
	
}
     68e:	1f 91       	pop	r17
     690:	0f 91       	pop	r16
     692:	ff 90       	pop	r15
     694:	ef 90       	pop	r14
     696:	df 90       	pop	r13
     698:	cf 90       	pop	r12
     69a:	08 95       	ret

0000069c <saveLoadFreq>:

void saveLoadFreq(PulseGenerator *self){
     69c:	cf 92       	push	r12
     69e:	df 92       	push	r13
     6a0:	ef 92       	push	r14
     6a2:	ff 92       	push	r15
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
     6a8:	fc 01       	movw	r30, r24
	if (self->freq == 0){
     6aa:	82 85       	ldd	r24, Z+10	; 0x0a
     6ac:	93 85       	ldd	r25, Z+11	; 0x0b
     6ae:	00 97       	sbiw	r24, 0x00	; 0
     6b0:	29 f4       	brne	.+10     	; 0x6bc <saveLoadFreq+0x20>
		self->freq = self->savedFreq;
     6b2:	84 85       	ldd	r24, Z+12	; 0x0c
     6b4:	95 85       	ldd	r25, Z+13	; 0x0d
     6b6:	93 87       	std	Z+11, r25	; 0x0b
     6b8:	82 87       	std	Z+10, r24	; 0x0a
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <saveLoadFreq+0x28>
	} else {
		self->savedFreq = self->freq;
     6bc:	95 87       	std	Z+13, r25	; 0x0d
     6be:	84 87       	std	Z+12, r24	; 0x0c
		self->freq = 0;
     6c0:	13 86       	std	Z+11, r1	; 0x0b
     6c2:	12 86       	std	Z+10, r1	; 0x0a
	}
	
	ASYNC(self->gui, updateDisplayedFreq, self->freq);
     6c4:	06 81       	ldd	r16, Z+6	; 0x06
     6c6:	17 81       	ldd	r17, Z+7	; 0x07
     6c8:	c2 84       	ldd	r12, Z+10	; 0x0a
     6ca:	d3 84       	ldd	r13, Z+11	; 0x0b
     6cc:	0f 2e       	mov	r0, r31
     6ce:	fd ed       	ldi	r31, 0xDD	; 221
     6d0:	ef 2e       	mov	r14, r31
     6d2:	f1 e0       	ldi	r31, 0x01	; 1
     6d4:	ff 2e       	mov	r15, r31
     6d6:	f0 2d       	mov	r31, r0
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	a9 01       	movw	r20, r18
     6de:	60 e0       	ldi	r22, 0x00	; 0
     6e0:	70 e0       	ldi	r23, 0x00	; 0
     6e2:	cb 01       	movw	r24, r22
     6e4:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
}
     6e8:	1f 91       	pop	r17
     6ea:	0f 91       	pop	r16
     6ec:	ff 90       	pop	r15
     6ee:	ef 90       	pop	r14
     6f0:	df 90       	pop	r13
     6f2:	cf 90       	pop	r12
     6f4:	08 95       	ret

000006f6 <initialize>:
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	00 d0       	rcall	.+0      	; 0x6fc <initialize+0x6>
     6fc:	00 d0       	rcall	.+0      	; 0x6fe <initialize+0x8>
     6fe:	cd b7       	in	r28, 0x3d	; 61
     700:	de b7       	in	r29, 0x3e	; 62
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	18 c0       	rjmp	.+48     	; 0x738 <initialize+0x42>
     708:	ac 01       	movw	r20, r24
     70a:	4f 5f       	subi	r20, 0xFF	; 255
     70c:	5f 4f       	sbci	r21, 0xFF	; 255
     70e:	9a 01       	movw	r18, r20
     710:	22 95       	swap	r18
     712:	32 95       	swap	r19
     714:	30 7f       	andi	r19, 0xF0	; 240
     716:	32 27       	eor	r19, r18
     718:	20 7f       	andi	r18, 0xF0	; 240
     71a:	32 27       	eor	r19, r18
     71c:	2f 5f       	subi	r18, 0xFF	; 255
     71e:	3d 4f       	sbci	r19, 0xFD	; 253
     720:	82 95       	swap	r24
     722:	92 95       	swap	r25
     724:	90 7f       	andi	r25, 0xF0	; 240
     726:	98 27       	eor	r25, r24
     728:	80 7f       	andi	r24, 0xF0	; 240
     72a:	98 27       	eor	r25, r24
     72c:	fc 01       	movw	r30, r24
     72e:	ef 5f       	subi	r30, 0xFF	; 255
     730:	fd 4f       	sbci	r31, 0xFD	; 253
     732:	31 83       	std	Z+1, r19	; 0x01
     734:	20 83       	st	Z, r18
     736:	ca 01       	movw	r24, r20
     738:	8e 30       	cpi	r24, 0x0E	; 14
     73a:	91 05       	cpc	r25, r1
     73c:	2c f3       	brlt	.-54     	; 0x708 <initialize+0x12>
     73e:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     742:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     746:	80 e0       	ldi	r24, 0x00	; 0
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	15 c0       	rjmp	.+42     	; 0x776 <initialize+0x80>
     74c:	ac 01       	movw	r20, r24
     74e:	4f 5f       	subi	r20, 0xFF	; 255
     750:	5f 4f       	sbci	r21, 0xFF	; 255
     752:	6d e1       	ldi	r22, 0x1D	; 29
     754:	64 9f       	mul	r22, r20
     756:	90 01       	movw	r18, r0
     758:	65 9f       	mul	r22, r21
     75a:	30 0d       	add	r19, r0
     75c:	11 24       	eor	r1, r1
     75e:	24 5b       	subi	r18, 0xB4	; 180
     760:	3e 4f       	sbci	r19, 0xFE	; 254
     762:	68 9f       	mul	r22, r24
     764:	f0 01       	movw	r30, r0
     766:	69 9f       	mul	r22, r25
     768:	f0 0d       	add	r31, r0
     76a:	11 24       	eor	r1, r1
     76c:	e4 5b       	subi	r30, 0xB4	; 180
     76e:	fe 4f       	sbci	r31, 0xFE	; 254
     770:	31 83       	std	Z+1, r19	; 0x01
     772:	20 83       	st	Z, r18
     774:	ca 01       	movw	r24, r20
     776:	83 30       	cpi	r24, 0x03	; 3
     778:	91 05       	cpc	r25, r1
     77a:	44 f3       	brlt	.-48     	; 0x74c <initialize+0x56>
     77c:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <threads+0x58>
     780:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <threads+0x57>
     784:	1a 82       	std	Y+2, r1	; 0x02
     786:	19 82       	std	Y+1, r1	; 0x01
     788:	32 c0       	rjmp	.+100    	; 0x7ee <initialize+0xf8>
     78a:	2d e1       	ldi	r18, 0x1D	; 29
     78c:	49 81       	ldd	r20, Y+1	; 0x01
     78e:	5a 81       	ldd	r21, Y+2	; 0x02
     790:	24 9f       	mul	r18, r20
     792:	c0 01       	movw	r24, r0
     794:	25 9f       	mul	r18, r21
     796:	90 0d       	add	r25, r0
     798:	11 24       	eor	r1, r1
     79a:	fc 01       	movw	r30, r24
     79c:	ee 5a       	subi	r30, 0xAE	; 174
     79e:	fe 4f       	sbci	r31, 0xFE	; 254
     7a0:	fc 83       	std	Y+4, r31	; 0x04
     7a2:	eb 83       	std	Y+3, r30	; 0x03
     7a4:	cf 01       	movw	r24, r30
     7a6:	0e 94 a6 10 	call	0x214c	; 0x214c <setjmp>
     7aa:	20 e6       	ldi	r18, 0x60	; 96
     7ac:	49 81       	ldd	r20, Y+1	; 0x01
     7ae:	5a 81       	ldd	r21, Y+2	; 0x02
     7b0:	24 9f       	mul	r18, r20
     7b2:	c0 01       	movw	r24, r0
     7b4:	25 9f       	mul	r18, r21
     7b6:	90 0d       	add	r25, r0
     7b8:	11 24       	eor	r1, r1
     7ba:	83 5b       	subi	r24, 0xB3	; 179
     7bc:	9c 4f       	sbci	r25, 0xFC	; 252
     7be:	eb 81       	ldd	r30, Y+3	; 0x03
     7c0:	fc 81       	ldd	r31, Y+4	; 0x04
     7c2:	91 8b       	std	Z+17, r25	; 0x11
     7c4:	80 8b       	std	Z+16, r24	; 0x10
     7c6:	93 8b       	std	Z+19, r25	; 0x13
     7c8:	82 8b       	std	Z+18, r24	; 0x12
     7ca:	87 e5       	ldi	r24, 0x57	; 87
     7cc:	9f e0       	ldi	r25, 0x0F	; 15
     7ce:	96 8b       	std	Z+22, r25	; 0x16
     7d0:	85 8b       	std	Z+21, r24	; 0x15
     7d2:	8d e1       	ldi	r24, 0x1D	; 29
     7d4:	84 9f       	mul	r24, r20
     7d6:	f0 01       	movw	r30, r0
     7d8:	85 9f       	mul	r24, r21
     7da:	f0 0d       	add	r31, r0
     7dc:	11 24       	eor	r1, r1
     7de:	e4 5b       	subi	r30, 0xB4	; 180
     7e0:	fe 4f       	sbci	r31, 0xFE	; 254
     7e2:	15 82       	std	Z+5, r1	; 0x05
     7e4:	14 82       	std	Z+4, r1	; 0x04
     7e6:	4f 5f       	subi	r20, 0xFF	; 255
     7e8:	5f 4f       	sbci	r21, 0xFF	; 255
     7ea:	5a 83       	std	Y+2, r21	; 0x02
     7ec:	49 83       	std	Y+1, r20	; 0x01
     7ee:	29 81       	ldd	r18, Y+1	; 0x01
     7f0:	3a 81       	ldd	r19, Y+2	; 0x02
     7f2:	24 30       	cpi	r18, 0x04	; 4
     7f4:	31 05       	cpc	r19, r1
     7f6:	4c f2       	brlt	.-110    	; 0x78a <initialize+0x94>
     7f8:	e4 ee       	ldi	r30, 0xE4	; 228
     7fa:	f1 e0       	ldi	r31, 0x01	; 1
     7fc:	11 82       	std	Z+1, r1	; 0x01
     7fe:	10 82       	st	Z, r1
     800:	15 82       	std	Z+5, r1	; 0x05
     802:	14 82       	std	Z+4, r1	; 0x04
     804:	13 82       	std	Z+3, r1	; 0x03
     806:	12 82       	std	Z+2, r1	; 0x02
     808:	e1 e6       	ldi	r30, 0x61	; 97
     80a:	f0 e0       	ldi	r31, 0x00	; 0
     80c:	80 e8       	ldi	r24, 0x80	; 128
     80e:	80 83       	st	Z, r24
     810:	10 82       	st	Z, r1
     812:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     816:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     81a:	84 e0       	ldi	r24, 0x04	; 4
     81c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     820:	81 e0       	ldi	r24, 0x01	; 1
     822:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     826:	0f 90       	pop	r0
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	0f 90       	pop	r0
     82e:	df 91       	pop	r29
     830:	cf 91       	pop	r28
     832:	08 95       	ret

00000834 <dispatch>:
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	00 d0       	rcall	.+0      	; 0x83a <dispatch+0x6>
     83a:	cd b7       	in	r28, 0x3d	; 61
     83c:	de b7       	in	r29, 0x3e	; 62
     83e:	9a 83       	std	Y+2, r25	; 0x02
     840:	89 83       	std	Y+1, r24	; 0x01
     842:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     846:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     84a:	06 96       	adiw	r24, 0x06	; 6
     84c:	0e 94 a6 10 	call	0x214c	; 0x214c <setjmp>
     850:	89 2b       	or	r24, r25
     852:	59 f4       	brne	.+22     	; 0x86a <dispatch+0x36>
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	9a 81       	ldd	r25, Y+2	; 0x02
     858:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     85c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     860:	61 e0       	ldi	r22, 0x01	; 1
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	06 96       	adiw	r24, 0x06	; 6
     866:	0e 94 c6 10 	call	0x218c	; 0x218c <longjmp>
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <enqueueByDeadline>:
     874:	0f 93       	push	r16
     876:	1f 93       	push	r17
     878:	cf 93       	push	r28
     87a:	df 93       	push	r29
     87c:	dc 01       	movw	r26, r24
     87e:	cb 01       	movw	r24, r22
     880:	eb 01       	movw	r28, r22
     882:	e8 81       	ld	r30, Y
     884:	f9 81       	ldd	r31, Y+1	; 0x01
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
     88a:	04 c0       	rjmp	.+8      	; 0x894 <enqueueByDeadline+0x20>
     88c:	ef 01       	movw	r28, r30
     88e:	01 90       	ld	r0, Z+
     890:	f0 81       	ld	r31, Z
     892:	e0 2d       	mov	r30, r0
     894:	30 97       	sbiw	r30, 0x00	; 0
     896:	79 f0       	breq	.+30     	; 0x8b6 <enqueueByDeadline+0x42>
     898:	06 81       	ldd	r16, Z+6	; 0x06
     89a:	17 81       	ldd	r17, Z+7	; 0x07
     89c:	20 85       	ldd	r18, Z+8	; 0x08
     89e:	31 85       	ldd	r19, Z+9	; 0x09
     8a0:	16 96       	adiw	r26, 0x06	; 6
     8a2:	4d 91       	ld	r20, X+
     8a4:	5d 91       	ld	r21, X+
     8a6:	6d 91       	ld	r22, X+
     8a8:	7c 91       	ld	r23, X
     8aa:	19 97       	sbiw	r26, 0x09	; 9
     8ac:	40 17       	cp	r20, r16
     8ae:	51 07       	cpc	r21, r17
     8b0:	62 07       	cpc	r22, r18
     8b2:	73 07       	cpc	r23, r19
     8b4:	5c f7       	brge	.-42     	; 0x88c <enqueueByDeadline+0x18>
     8b6:	11 96       	adiw	r26, 0x01	; 1
     8b8:	fc 93       	st	X, r31
     8ba:	ee 93       	st	-X, r30
     8bc:	20 97       	sbiw	r28, 0x00	; 0
     8be:	21 f4       	brne	.+8      	; 0x8c8 <enqueueByDeadline+0x54>
     8c0:	fc 01       	movw	r30, r24
     8c2:	b1 83       	std	Z+1, r27	; 0x01
     8c4:	a0 83       	st	Z, r26
     8c6:	02 c0       	rjmp	.+4      	; 0x8cc <enqueueByDeadline+0x58>
     8c8:	b9 83       	std	Y+1, r27	; 0x01
     8ca:	a8 83       	st	Y, r26
     8cc:	df 91       	pop	r29
     8ce:	cf 91       	pop	r28
     8d0:	1f 91       	pop	r17
     8d2:	0f 91       	pop	r16
     8d4:	08 95       	ret

000008d6 <enqueueByBaseline>:
     8d6:	0f 93       	push	r16
     8d8:	1f 93       	push	r17
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	dc 01       	movw	r26, r24
     8e0:	cb 01       	movw	r24, r22
     8e2:	eb 01       	movw	r28, r22
     8e4:	e8 81       	ld	r30, Y
     8e6:	f9 81       	ldd	r31, Y+1	; 0x01
     8e8:	c0 e0       	ldi	r28, 0x00	; 0
     8ea:	d0 e0       	ldi	r29, 0x00	; 0
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <enqueueByBaseline+0x20>
     8ee:	ef 01       	movw	r28, r30
     8f0:	01 90       	ld	r0, Z+
     8f2:	f0 81       	ld	r31, Z
     8f4:	e0 2d       	mov	r30, r0
     8f6:	30 97       	sbiw	r30, 0x00	; 0
     8f8:	79 f0       	breq	.+30     	; 0x918 <enqueueByBaseline+0x42>
     8fa:	02 81       	ldd	r16, Z+2	; 0x02
     8fc:	13 81       	ldd	r17, Z+3	; 0x03
     8fe:	24 81       	ldd	r18, Z+4	; 0x04
     900:	35 81       	ldd	r19, Z+5	; 0x05
     902:	12 96       	adiw	r26, 0x02	; 2
     904:	4d 91       	ld	r20, X+
     906:	5d 91       	ld	r21, X+
     908:	6d 91       	ld	r22, X+
     90a:	7c 91       	ld	r23, X
     90c:	15 97       	sbiw	r26, 0x05	; 5
     90e:	40 17       	cp	r20, r16
     910:	51 07       	cpc	r21, r17
     912:	62 07       	cpc	r22, r18
     914:	73 07       	cpc	r23, r19
     916:	5c f7       	brge	.-42     	; 0x8ee <enqueueByBaseline+0x18>
     918:	11 96       	adiw	r26, 0x01	; 1
     91a:	fc 93       	st	X, r31
     91c:	ee 93       	st	-X, r30
     91e:	20 97       	sbiw	r28, 0x00	; 0
     920:	21 f4       	brne	.+8      	; 0x92a <enqueueByBaseline+0x54>
     922:	fc 01       	movw	r30, r24
     924:	b1 83       	std	Z+1, r27	; 0x01
     926:	a0 83       	st	Z, r26
     928:	02 c0       	rjmp	.+4      	; 0x92e <enqueueByBaseline+0x58>
     92a:	b9 83       	std	Y+1, r27	; 0x01
     92c:	a8 83       	st	Y, r26
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <dequeue>:
     938:	dc 01       	movw	r26, r24
     93a:	ed 91       	ld	r30, X+
     93c:	fc 91       	ld	r31, X
     93e:	11 97       	sbiw	r26, 0x01	; 1
     940:	30 97       	sbiw	r30, 0x00	; 0
     942:	59 f4       	brne	.+22     	; 0x95a <dequeue+0x22>
     944:	8f ef       	ldi	r24, 0xFF	; 255
     946:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     94a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     94e:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	83 bf       	out	0x33, r24	; 51
     956:	88 95       	sleep
     958:	fc cf       	rjmp	.-8      	; 0x952 <dequeue+0x1a>
     95a:	20 81       	ld	r18, Z
     95c:	31 81       	ldd	r19, Z+1	; 0x01
     95e:	2d 93       	st	X+, r18
     960:	3c 93       	st	X, r19
     962:	cf 01       	movw	r24, r30
     964:	08 95       	ret

00000966 <insert>:
     966:	fb 01       	movw	r30, r22
     968:	20 81       	ld	r18, Z
     96a:	31 81       	ldd	r19, Z+1	; 0x01
     96c:	fc 01       	movw	r30, r24
     96e:	31 83       	std	Z+1, r19	; 0x01
     970:	20 83       	st	Z, r18
     972:	fb 01       	movw	r30, r22
     974:	91 83       	std	Z+1, r25	; 0x01
     976:	80 83       	st	Z, r24
     978:	08 95       	ret

0000097a <push>:
     97a:	fb 01       	movw	r30, r22
     97c:	20 81       	ld	r18, Z
     97e:	31 81       	ldd	r19, Z+1	; 0x01
     980:	fc 01       	movw	r30, r24
     982:	31 83       	std	Z+1, r19	; 0x01
     984:	20 83       	st	Z, r18
     986:	fb 01       	movw	r30, r22
     988:	91 83       	std	Z+1, r25	; 0x01
     98a:	80 83       	st	Z, r24
     98c:	08 95       	ret

0000098e <pop>:
     98e:	dc 01       	movw	r26, r24
     990:	ed 91       	ld	r30, X+
     992:	fc 91       	ld	r31, X
     994:	11 97       	sbiw	r26, 0x01	; 1
     996:	20 81       	ld	r18, Z
     998:	31 81       	ldd	r19, Z+1	; 0x01
     99a:	2d 93       	st	X+, r18
     99c:	3c 93       	st	X, r19
     99e:	cf 01       	movw	r24, r30
     9a0:	08 95       	ret

000009a2 <schedule>:
     9a2:	cf 93       	push	r28
     9a4:	df 93       	push	r29
     9a6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     9aa:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     9ae:	c2 81       	ldd	r28, Z+2	; 0x02
     9b0:	d3 81       	ldd	r29, Z+3	; 0x03
     9b2:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     9b6:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     9ba:	30 97       	sbiw	r30, 0x00	; 0
     9bc:	19 f1       	breq	.+70     	; 0xa04 <schedule+0x62>
     9be:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     9c2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     9c6:	89 2b       	or	r24, r25
     9c8:	e9 f0       	breq	.+58     	; 0xa04 <schedule+0x62>
     9ca:	20 97       	sbiw	r28, 0x00	; 0
     9cc:	69 f0       	breq	.+26     	; 0x9e8 <schedule+0x46>
     9ce:	86 81       	ldd	r24, Z+6	; 0x06
     9d0:	97 81       	ldd	r25, Z+7	; 0x07
     9d2:	a0 85       	ldd	r26, Z+8	; 0x08
     9d4:	b1 85       	ldd	r27, Z+9	; 0x09
     9d6:	4e 81       	ldd	r20, Y+6	; 0x06
     9d8:	5f 81       	ldd	r21, Y+7	; 0x07
     9da:	68 85       	ldd	r22, Y+8	; 0x08
     9dc:	79 85       	ldd	r23, Y+9	; 0x09
     9de:	84 1b       	sub	r24, r20
     9e0:	95 0b       	sbc	r25, r21
     9e2:	a6 0b       	sbc	r26, r22
     9e4:	b7 0b       	sbc	r27, r23
     9e6:	72 f4       	brpl	.+28     	; 0xa04 <schedule+0x62>
     9e8:	84 e0       	ldi	r24, 0x04	; 4
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	0e 94 c7 04 	call	0x98e	; 0x98e <pop>
     9f0:	62 e0       	ldi	r22, 0x02	; 2
     9f2:	71 e0       	ldi	r23, 0x01	; 1
     9f4:	0e 94 bd 04 	call	0x97a	; 0x97a <push>
     9f8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     9fc:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     a00:	0e 94 1a 04 	call	0x834	; 0x834 <dispatch>
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	08 95       	ret

00000a0a <__vector_1>:
     a0a:	1f 92       	push	r1
     a0c:	0f 92       	push	r0
     a0e:	0f b6       	in	r0, 0x3f	; 63
     a10:	0f 92       	push	r0
     a12:	11 24       	eor	r1, r1
     a14:	0f 93       	push	r16
     a16:	1f 93       	push	r17
     a18:	2f 93       	push	r18
     a1a:	3f 93       	push	r19
     a1c:	4f 93       	push	r20
     a1e:	5f 93       	push	r21
     a20:	6f 93       	push	r22
     a22:	7f 93       	push	r23
     a24:	8f 93       	push	r24
     a26:	9f 93       	push	r25
     a28:	af 93       	push	r26
     a2a:	bf 93       	push	r27
     a2c:	ef 93       	push	r30
     a2e:	ff 93       	push	r31
     a30:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     a34:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     a38:	ac 01       	movw	r20, r24
     a3a:	09 2e       	mov	r0, r25
     a3c:	00 0c       	add	r0, r0
     a3e:	66 0b       	sbc	r22, r22
     a40:	77 0b       	sbc	r23, r23
     a42:	9a 01       	movw	r18, r20
     a44:	11 27       	eor	r17, r17
     a46:	00 27       	eor	r16, r16
     a48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	40 2b       	or	r20, r16
     a56:	51 2b       	or	r21, r17
     a58:	62 2b       	or	r22, r18
     a5a:	73 2b       	or	r23, r19
     a5c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     a60:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     a64:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     a68:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     a6c:	b0 9b       	sbis	0x16, 0	; 22
     a6e:	1a c0       	rjmp	.+52     	; 0xaa4 <__vector_1+0x9a>
     a70:	01 96       	adiw	r24, 0x01	; 1
     a72:	09 2e       	mov	r0, r25
     a74:	00 0c       	add	r0, r0
     a76:	aa 0b       	sbc	r26, r26
     a78:	bb 0b       	sbc	r27, r27
     a7a:	bc 01       	movw	r22, r24
     a7c:	55 27       	eor	r21, r21
     a7e:	44 27       	eor	r20, r20
     a80:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a84:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a88:	a0 e0       	ldi	r26, 0x00	; 0
     a8a:	b0 e0       	ldi	r27, 0x00	; 0
     a8c:	84 2b       	or	r24, r20
     a8e:	95 2b       	or	r25, r21
     a90:	a6 2b       	or	r26, r22
     a92:	b7 2b       	or	r27, r23
     a94:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     a98:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     a9c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     aa0:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     aa4:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     aa8:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     aac:	30 97       	sbiw	r30, 0x00	; 0
     aae:	39 f0       	breq	.+14     	; 0xabe <__vector_1+0xb4>
     ab0:	60 e0       	ldi	r22, 0x00	; 0
     ab2:	70 e0       	ldi	r23, 0x00	; 0
     ab4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     ab8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     abc:	09 95       	icall
     abe:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     ac2:	ff 91       	pop	r31
     ac4:	ef 91       	pop	r30
     ac6:	bf 91       	pop	r27
     ac8:	af 91       	pop	r26
     aca:	9f 91       	pop	r25
     acc:	8f 91       	pop	r24
     ace:	7f 91       	pop	r23
     ad0:	6f 91       	pop	r22
     ad2:	5f 91       	pop	r21
     ad4:	4f 91       	pop	r20
     ad6:	3f 91       	pop	r19
     ad8:	2f 91       	pop	r18
     ada:	1f 91       	pop	r17
     adc:	0f 91       	pop	r16
     ade:	0f 90       	pop	r0
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	0f 90       	pop	r0
     ae4:	1f 90       	pop	r1
     ae6:	18 95       	reti

00000ae8 <__vector_2>:
     ae8:	1f 92       	push	r1
     aea:	0f 92       	push	r0
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	0f 92       	push	r0
     af0:	11 24       	eor	r1, r1
     af2:	0f 93       	push	r16
     af4:	1f 93       	push	r17
     af6:	2f 93       	push	r18
     af8:	3f 93       	push	r19
     afa:	4f 93       	push	r20
     afc:	5f 93       	push	r21
     afe:	6f 93       	push	r22
     b00:	7f 93       	push	r23
     b02:	8f 93       	push	r24
     b04:	9f 93       	push	r25
     b06:	af 93       	push	r26
     b08:	bf 93       	push	r27
     b0a:	ef 93       	push	r30
     b0c:	ff 93       	push	r31
     b0e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     b12:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     b16:	ac 01       	movw	r20, r24
     b18:	09 2e       	mov	r0, r25
     b1a:	00 0c       	add	r0, r0
     b1c:	66 0b       	sbc	r22, r22
     b1e:	77 0b       	sbc	r23, r23
     b20:	9a 01       	movw	r18, r20
     b22:	11 27       	eor	r17, r17
     b24:	00 27       	eor	r16, r16
     b26:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b2a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	40 2b       	or	r20, r16
     b34:	51 2b       	or	r21, r17
     b36:	62 2b       	or	r22, r18
     b38:	73 2b       	or	r23, r19
     b3a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     b3e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     b42:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     b46:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     b4a:	b0 9b       	sbis	0x16, 0	; 22
     b4c:	1a c0       	rjmp	.+52     	; 0xb82 <__vector_2+0x9a>
     b4e:	01 96       	adiw	r24, 0x01	; 1
     b50:	09 2e       	mov	r0, r25
     b52:	00 0c       	add	r0, r0
     b54:	aa 0b       	sbc	r26, r26
     b56:	bb 0b       	sbc	r27, r27
     b58:	bc 01       	movw	r22, r24
     b5a:	55 27       	eor	r21, r21
     b5c:	44 27       	eor	r20, r20
     b5e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b62:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b66:	a0 e0       	ldi	r26, 0x00	; 0
     b68:	b0 e0       	ldi	r27, 0x00	; 0
     b6a:	84 2b       	or	r24, r20
     b6c:	95 2b       	or	r25, r21
     b6e:	a6 2b       	or	r26, r22
     b70:	b7 2b       	or	r27, r23
     b72:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     b76:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     b7a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     b7e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     b82:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     b86:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     b8a:	30 97       	sbiw	r30, 0x00	; 0
     b8c:	39 f0       	breq	.+14     	; 0xb9c <__vector_2+0xb4>
     b8e:	61 e0       	ldi	r22, 0x01	; 1
     b90:	70 e0       	ldi	r23, 0x00	; 0
     b92:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     b96:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     b9a:	09 95       	icall
     b9c:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     ba0:	ff 91       	pop	r31
     ba2:	ef 91       	pop	r30
     ba4:	bf 91       	pop	r27
     ba6:	af 91       	pop	r26
     ba8:	9f 91       	pop	r25
     baa:	8f 91       	pop	r24
     bac:	7f 91       	pop	r23
     bae:	6f 91       	pop	r22
     bb0:	5f 91       	pop	r21
     bb2:	4f 91       	pop	r20
     bb4:	3f 91       	pop	r19
     bb6:	2f 91       	pop	r18
     bb8:	1f 91       	pop	r17
     bba:	0f 91       	pop	r16
     bbc:	0f 90       	pop	r0
     bbe:	0f be       	out	0x3f, r0	; 63
     bc0:	0f 90       	pop	r0
     bc2:	1f 90       	pop	r1
     bc4:	18 95       	reti

00000bc6 <__vector_3>:
     bc6:	1f 92       	push	r1
     bc8:	0f 92       	push	r0
     bca:	0f b6       	in	r0, 0x3f	; 63
     bcc:	0f 92       	push	r0
     bce:	11 24       	eor	r1, r1
     bd0:	0f 93       	push	r16
     bd2:	1f 93       	push	r17
     bd4:	2f 93       	push	r18
     bd6:	3f 93       	push	r19
     bd8:	4f 93       	push	r20
     bda:	5f 93       	push	r21
     bdc:	6f 93       	push	r22
     bde:	7f 93       	push	r23
     be0:	8f 93       	push	r24
     be2:	9f 93       	push	r25
     be4:	af 93       	push	r26
     be6:	bf 93       	push	r27
     be8:	ef 93       	push	r30
     bea:	ff 93       	push	r31
     bec:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     bf0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     bf4:	ac 01       	movw	r20, r24
     bf6:	09 2e       	mov	r0, r25
     bf8:	00 0c       	add	r0, r0
     bfa:	66 0b       	sbc	r22, r22
     bfc:	77 0b       	sbc	r23, r23
     bfe:	9a 01       	movw	r18, r20
     c00:	11 27       	eor	r17, r17
     c02:	00 27       	eor	r16, r16
     c04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c0c:	60 e0       	ldi	r22, 0x00	; 0
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	40 2b       	or	r20, r16
     c12:	51 2b       	or	r21, r17
     c14:	62 2b       	or	r22, r18
     c16:	73 2b       	or	r23, r19
     c18:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     c1c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     c20:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     c24:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     c28:	b0 9b       	sbis	0x16, 0	; 22
     c2a:	1a c0       	rjmp	.+52     	; 0xc60 <__vector_3+0x9a>
     c2c:	01 96       	adiw	r24, 0x01	; 1
     c2e:	09 2e       	mov	r0, r25
     c30:	00 0c       	add	r0, r0
     c32:	aa 0b       	sbc	r26, r26
     c34:	bb 0b       	sbc	r27, r27
     c36:	bc 01       	movw	r22, r24
     c38:	55 27       	eor	r21, r21
     c3a:	44 27       	eor	r20, r20
     c3c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c40:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c44:	a0 e0       	ldi	r26, 0x00	; 0
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	84 2b       	or	r24, r20
     c4a:	95 2b       	or	r25, r21
     c4c:	a6 2b       	or	r26, r22
     c4e:	b7 2b       	or	r27, r23
     c50:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     c54:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     c58:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     c5c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     c60:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     c64:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     c68:	30 97       	sbiw	r30, 0x00	; 0
     c6a:	39 f0       	breq	.+14     	; 0xc7a <__vector_3+0xb4>
     c6c:	62 e0       	ldi	r22, 0x02	; 2
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     c74:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     c78:	09 95       	icall
     c7a:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     c7e:	ff 91       	pop	r31
     c80:	ef 91       	pop	r30
     c82:	bf 91       	pop	r27
     c84:	af 91       	pop	r26
     c86:	9f 91       	pop	r25
     c88:	8f 91       	pop	r24
     c8a:	7f 91       	pop	r23
     c8c:	6f 91       	pop	r22
     c8e:	5f 91       	pop	r21
     c90:	4f 91       	pop	r20
     c92:	3f 91       	pop	r19
     c94:	2f 91       	pop	r18
     c96:	1f 91       	pop	r17
     c98:	0f 91       	pop	r16
     c9a:	0f 90       	pop	r0
     c9c:	0f be       	out	0x3f, r0	; 63
     c9e:	0f 90       	pop	r0
     ca0:	1f 90       	pop	r1
     ca2:	18 95       	reti

00000ca4 <__vector_4>:
     ca4:	1f 92       	push	r1
     ca6:	0f 92       	push	r0
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	0f 92       	push	r0
     cac:	11 24       	eor	r1, r1
     cae:	0f 93       	push	r16
     cb0:	1f 93       	push	r17
     cb2:	2f 93       	push	r18
     cb4:	3f 93       	push	r19
     cb6:	4f 93       	push	r20
     cb8:	5f 93       	push	r21
     cba:	6f 93       	push	r22
     cbc:	7f 93       	push	r23
     cbe:	8f 93       	push	r24
     cc0:	9f 93       	push	r25
     cc2:	af 93       	push	r26
     cc4:	bf 93       	push	r27
     cc6:	ef 93       	push	r30
     cc8:	ff 93       	push	r31
     cca:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     cce:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     cd2:	ac 01       	movw	r20, r24
     cd4:	09 2e       	mov	r0, r25
     cd6:	00 0c       	add	r0, r0
     cd8:	66 0b       	sbc	r22, r22
     cda:	77 0b       	sbc	r23, r23
     cdc:	9a 01       	movw	r18, r20
     cde:	11 27       	eor	r17, r17
     ce0:	00 27       	eor	r16, r16
     ce2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ce6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cea:	60 e0       	ldi	r22, 0x00	; 0
     cec:	70 e0       	ldi	r23, 0x00	; 0
     cee:	40 2b       	or	r20, r16
     cf0:	51 2b       	or	r21, r17
     cf2:	62 2b       	or	r22, r18
     cf4:	73 2b       	or	r23, r19
     cf6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     cfa:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     cfe:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     d02:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     d06:	b0 9b       	sbis	0x16, 0	; 22
     d08:	1a c0       	rjmp	.+52     	; 0xd3e <__vector_4+0x9a>
     d0a:	01 96       	adiw	r24, 0x01	; 1
     d0c:	09 2e       	mov	r0, r25
     d0e:	00 0c       	add	r0, r0
     d10:	aa 0b       	sbc	r26, r26
     d12:	bb 0b       	sbc	r27, r27
     d14:	bc 01       	movw	r22, r24
     d16:	55 27       	eor	r21, r21
     d18:	44 27       	eor	r20, r20
     d1a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d1e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d22:	a0 e0       	ldi	r26, 0x00	; 0
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	84 2b       	or	r24, r20
     d28:	95 2b       	or	r25, r21
     d2a:	a6 2b       	or	r26, r22
     d2c:	b7 2b       	or	r27, r23
     d2e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     d32:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     d36:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     d3a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     d3e:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     d42:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     d46:	30 97       	sbiw	r30, 0x00	; 0
     d48:	39 f0       	breq	.+14     	; 0xd58 <__vector_4+0xb4>
     d4a:	63 e0       	ldi	r22, 0x03	; 3
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     d52:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     d56:	09 95       	icall
     d58:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     d5c:	ff 91       	pop	r31
     d5e:	ef 91       	pop	r30
     d60:	bf 91       	pop	r27
     d62:	af 91       	pop	r26
     d64:	9f 91       	pop	r25
     d66:	8f 91       	pop	r24
     d68:	7f 91       	pop	r23
     d6a:	6f 91       	pop	r22
     d6c:	5f 91       	pop	r21
     d6e:	4f 91       	pop	r20
     d70:	3f 91       	pop	r19
     d72:	2f 91       	pop	r18
     d74:	1f 91       	pop	r17
     d76:	0f 91       	pop	r16
     d78:	0f 90       	pop	r0
     d7a:	0f be       	out	0x3f, r0	; 63
     d7c:	0f 90       	pop	r0
     d7e:	1f 90       	pop	r1
     d80:	18 95       	reti

00000d82 <__vector_5>:
     d82:	1f 92       	push	r1
     d84:	0f 92       	push	r0
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	0f 92       	push	r0
     d8a:	11 24       	eor	r1, r1
     d8c:	0f 93       	push	r16
     d8e:	1f 93       	push	r17
     d90:	2f 93       	push	r18
     d92:	3f 93       	push	r19
     d94:	4f 93       	push	r20
     d96:	5f 93       	push	r21
     d98:	6f 93       	push	r22
     d9a:	7f 93       	push	r23
     d9c:	8f 93       	push	r24
     d9e:	9f 93       	push	r25
     da0:	af 93       	push	r26
     da2:	bf 93       	push	r27
     da4:	ef 93       	push	r30
     da6:	ff 93       	push	r31
     da8:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     dac:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     db0:	ac 01       	movw	r20, r24
     db2:	09 2e       	mov	r0, r25
     db4:	00 0c       	add	r0, r0
     db6:	66 0b       	sbc	r22, r22
     db8:	77 0b       	sbc	r23, r23
     dba:	9a 01       	movw	r18, r20
     dbc:	11 27       	eor	r17, r17
     dbe:	00 27       	eor	r16, r16
     dc0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dc4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dc8:	60 e0       	ldi	r22, 0x00	; 0
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	40 2b       	or	r20, r16
     dce:	51 2b       	or	r21, r17
     dd0:	62 2b       	or	r22, r18
     dd2:	73 2b       	or	r23, r19
     dd4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     dd8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     ddc:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     de0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     de4:	b0 9b       	sbis	0x16, 0	; 22
     de6:	1a c0       	rjmp	.+52     	; 0xe1c <__vector_5+0x9a>
     de8:	01 96       	adiw	r24, 0x01	; 1
     dea:	09 2e       	mov	r0, r25
     dec:	00 0c       	add	r0, r0
     dee:	aa 0b       	sbc	r26, r26
     df0:	bb 0b       	sbc	r27, r27
     df2:	bc 01       	movw	r22, r24
     df4:	55 27       	eor	r21, r21
     df6:	44 27       	eor	r20, r20
     df8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dfc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e00:	a0 e0       	ldi	r26, 0x00	; 0
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	84 2b       	or	r24, r20
     e06:	95 2b       	or	r25, r21
     e08:	a6 2b       	or	r26, r22
     e0a:	b7 2b       	or	r27, r23
     e0c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e10:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e14:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e18:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     e1c:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     e20:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     e24:	30 97       	sbiw	r30, 0x00	; 0
     e26:	39 f0       	breq	.+14     	; 0xe36 <__vector_5+0xb4>
     e28:	64 e0       	ldi	r22, 0x04	; 4
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     e30:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     e34:	09 95       	icall
     e36:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     e3a:	ff 91       	pop	r31
     e3c:	ef 91       	pop	r30
     e3e:	bf 91       	pop	r27
     e40:	af 91       	pop	r26
     e42:	9f 91       	pop	r25
     e44:	8f 91       	pop	r24
     e46:	7f 91       	pop	r23
     e48:	6f 91       	pop	r22
     e4a:	5f 91       	pop	r21
     e4c:	4f 91       	pop	r20
     e4e:	3f 91       	pop	r19
     e50:	2f 91       	pop	r18
     e52:	1f 91       	pop	r17
     e54:	0f 91       	pop	r16
     e56:	0f 90       	pop	r0
     e58:	0f be       	out	0x3f, r0	; 63
     e5a:	0f 90       	pop	r0
     e5c:	1f 90       	pop	r1
     e5e:	18 95       	reti

00000e60 <__vector_10>:
     e60:	1f 92       	push	r1
     e62:	0f 92       	push	r0
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	0f 92       	push	r0
     e68:	11 24       	eor	r1, r1
     e6a:	0f 93       	push	r16
     e6c:	1f 93       	push	r17
     e6e:	2f 93       	push	r18
     e70:	3f 93       	push	r19
     e72:	4f 93       	push	r20
     e74:	5f 93       	push	r21
     e76:	6f 93       	push	r22
     e78:	7f 93       	push	r23
     e7a:	8f 93       	push	r24
     e7c:	9f 93       	push	r25
     e7e:	af 93       	push	r26
     e80:	bf 93       	push	r27
     e82:	ef 93       	push	r30
     e84:	ff 93       	push	r31
     e86:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     e8a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     e8e:	ac 01       	movw	r20, r24
     e90:	09 2e       	mov	r0, r25
     e92:	00 0c       	add	r0, r0
     e94:	66 0b       	sbc	r22, r22
     e96:	77 0b       	sbc	r23, r23
     e98:	9a 01       	movw	r18, r20
     e9a:	11 27       	eor	r17, r17
     e9c:	00 27       	eor	r16, r16
     e9e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	40 2b       	or	r20, r16
     eac:	51 2b       	or	r21, r17
     eae:	62 2b       	or	r22, r18
     eb0:	73 2b       	or	r23, r19
     eb2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     eb6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     eba:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     ebe:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     ec2:	b0 9b       	sbis	0x16, 0	; 22
     ec4:	1a c0       	rjmp	.+52     	; 0xefa <__vector_10+0x9a>
     ec6:	01 96       	adiw	r24, 0x01	; 1
     ec8:	09 2e       	mov	r0, r25
     eca:	00 0c       	add	r0, r0
     ecc:	aa 0b       	sbc	r26, r26
     ece:	bb 0b       	sbc	r27, r27
     ed0:	bc 01       	movw	r22, r24
     ed2:	55 27       	eor	r21, r21
     ed4:	44 27       	eor	r20, r20
     ed6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eda:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	84 2b       	or	r24, r20
     ee4:	95 2b       	or	r25, r21
     ee6:	a6 2b       	or	r26, r22
     ee8:	b7 2b       	or	r27, r23
     eea:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     eee:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     ef2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     ef6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     efa:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
     efe:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
     f02:	30 97       	sbiw	r30, 0x00	; 0
     f04:	39 f0       	breq	.+14     	; 0xf14 <__vector_10+0xb4>
     f06:	65 e0       	ldi	r22, 0x05	; 5
     f08:	70 e0       	ldi	r23, 0x00	; 0
     f0a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
     f0e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
     f12:	09 95       	icall
     f14:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     f18:	ff 91       	pop	r31
     f1a:	ef 91       	pop	r30
     f1c:	bf 91       	pop	r27
     f1e:	af 91       	pop	r26
     f20:	9f 91       	pop	r25
     f22:	8f 91       	pop	r24
     f24:	7f 91       	pop	r23
     f26:	6f 91       	pop	r22
     f28:	5f 91       	pop	r21
     f2a:	4f 91       	pop	r20
     f2c:	3f 91       	pop	r19
     f2e:	2f 91       	pop	r18
     f30:	1f 91       	pop	r17
     f32:	0f 91       	pop	r16
     f34:	0f 90       	pop	r0
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	0f 90       	pop	r0
     f3a:	1f 90       	pop	r1
     f3c:	18 95       	reti

00000f3e <__vector_11>:
     f3e:	1f 92       	push	r1
     f40:	0f 92       	push	r0
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	0f 92       	push	r0
     f46:	11 24       	eor	r1, r1
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	2f 93       	push	r18
     f4e:	3f 93       	push	r19
     f50:	4f 93       	push	r20
     f52:	5f 93       	push	r21
     f54:	6f 93       	push	r22
     f56:	7f 93       	push	r23
     f58:	8f 93       	push	r24
     f5a:	9f 93       	push	r25
     f5c:	af 93       	push	r26
     f5e:	bf 93       	push	r27
     f60:	ef 93       	push	r30
     f62:	ff 93       	push	r31
     f64:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     f68:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     f6c:	ac 01       	movw	r20, r24
     f6e:	09 2e       	mov	r0, r25
     f70:	00 0c       	add	r0, r0
     f72:	66 0b       	sbc	r22, r22
     f74:	77 0b       	sbc	r23, r23
     f76:	9a 01       	movw	r18, r20
     f78:	11 27       	eor	r17, r17
     f7a:	00 27       	eor	r16, r16
     f7c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f80:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f84:	60 e0       	ldi	r22, 0x00	; 0
     f86:	70 e0       	ldi	r23, 0x00	; 0
     f88:	40 2b       	or	r20, r16
     f8a:	51 2b       	or	r21, r17
     f8c:	62 2b       	or	r22, r18
     f8e:	73 2b       	or	r23, r19
     f90:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     f94:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     f98:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     f9c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     fa0:	b0 9b       	sbis	0x16, 0	; 22
     fa2:	1a c0       	rjmp	.+52     	; 0xfd8 <__vector_11+0x9a>
     fa4:	01 96       	adiw	r24, 0x01	; 1
     fa6:	09 2e       	mov	r0, r25
     fa8:	00 0c       	add	r0, r0
     faa:	aa 0b       	sbc	r26, r26
     fac:	bb 0b       	sbc	r27, r27
     fae:	bc 01       	movw	r22, r24
     fb0:	55 27       	eor	r21, r21
     fb2:	44 27       	eor	r20, r20
     fb4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fbc:	a0 e0       	ldi	r26, 0x00	; 0
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	84 2b       	or	r24, r20
     fc2:	95 2b       	or	r25, r21
     fc4:	a6 2b       	or	r26, r22
     fc6:	b7 2b       	or	r27, r23
     fc8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     fcc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     fd0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     fd4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     fd8:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
     fdc:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
     fe0:	30 97       	sbiw	r30, 0x00	; 0
     fe2:	39 f0       	breq	.+14     	; 0xff2 <__vector_11+0xb4>
     fe4:	66 e0       	ldi	r22, 0x06	; 6
     fe6:	70 e0       	ldi	r23, 0x00	; 0
     fe8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
     fec:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
     ff0:	09 95       	icall
     ff2:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
     ff6:	ff 91       	pop	r31
     ff8:	ef 91       	pop	r30
     ffa:	bf 91       	pop	r27
     ffc:	af 91       	pop	r26
     ffe:	9f 91       	pop	r25
    1000:	8f 91       	pop	r24
    1002:	7f 91       	pop	r23
    1004:	6f 91       	pop	r22
    1006:	5f 91       	pop	r21
    1008:	4f 91       	pop	r20
    100a:	3f 91       	pop	r19
    100c:	2f 91       	pop	r18
    100e:	1f 91       	pop	r17
    1010:	0f 91       	pop	r16
    1012:	0f 90       	pop	r0
    1014:	0f be       	out	0x3f, r0	; 63
    1016:	0f 90       	pop	r0
    1018:	1f 90       	pop	r1
    101a:	18 95       	reti

0000101c <__vector_12>:
    101c:	1f 92       	push	r1
    101e:	0f 92       	push	r0
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	0f 92       	push	r0
    1024:	11 24       	eor	r1, r1
    1026:	0f 93       	push	r16
    1028:	1f 93       	push	r17
    102a:	2f 93       	push	r18
    102c:	3f 93       	push	r19
    102e:	4f 93       	push	r20
    1030:	5f 93       	push	r21
    1032:	6f 93       	push	r22
    1034:	7f 93       	push	r23
    1036:	8f 93       	push	r24
    1038:	9f 93       	push	r25
    103a:	af 93       	push	r26
    103c:	bf 93       	push	r27
    103e:	ef 93       	push	r30
    1040:	ff 93       	push	r31
    1042:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1046:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    104a:	ac 01       	movw	r20, r24
    104c:	09 2e       	mov	r0, r25
    104e:	00 0c       	add	r0, r0
    1050:	66 0b       	sbc	r22, r22
    1052:	77 0b       	sbc	r23, r23
    1054:	9a 01       	movw	r18, r20
    1056:	11 27       	eor	r17, r17
    1058:	00 27       	eor	r16, r16
    105a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    105e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1062:	60 e0       	ldi	r22, 0x00	; 0
    1064:	70 e0       	ldi	r23, 0x00	; 0
    1066:	40 2b       	or	r20, r16
    1068:	51 2b       	or	r21, r17
    106a:	62 2b       	or	r22, r18
    106c:	73 2b       	or	r23, r19
    106e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1072:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1076:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    107a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    107e:	b0 9b       	sbis	0x16, 0	; 22
    1080:	1a c0       	rjmp	.+52     	; 0x10b6 <__vector_12+0x9a>
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	09 2e       	mov	r0, r25
    1086:	00 0c       	add	r0, r0
    1088:	aa 0b       	sbc	r26, r26
    108a:	bb 0b       	sbc	r27, r27
    108c:	bc 01       	movw	r22, r24
    108e:	55 27       	eor	r21, r21
    1090:	44 27       	eor	r20, r20
    1092:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1096:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    109a:	a0 e0       	ldi	r26, 0x00	; 0
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	84 2b       	or	r24, r20
    10a0:	95 2b       	or	r25, r21
    10a2:	a6 2b       	or	r26, r22
    10a4:	b7 2b       	or	r27, r23
    10a6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    10aa:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    10ae:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    10b2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    10b6:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
    10ba:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
    10be:	30 97       	sbiw	r30, 0x00	; 0
    10c0:	39 f0       	breq	.+14     	; 0x10d0 <__vector_12+0xb4>
    10c2:	67 e0       	ldi	r22, 0x07	; 7
    10c4:	70 e0       	ldi	r23, 0x00	; 0
    10c6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
    10ca:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
    10ce:	09 95       	icall
    10d0:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    10d4:	ff 91       	pop	r31
    10d6:	ef 91       	pop	r30
    10d8:	bf 91       	pop	r27
    10da:	af 91       	pop	r26
    10dc:	9f 91       	pop	r25
    10de:	8f 91       	pop	r24
    10e0:	7f 91       	pop	r23
    10e2:	6f 91       	pop	r22
    10e4:	5f 91       	pop	r21
    10e6:	4f 91       	pop	r20
    10e8:	3f 91       	pop	r19
    10ea:	2f 91       	pop	r18
    10ec:	1f 91       	pop	r17
    10ee:	0f 91       	pop	r16
    10f0:	0f 90       	pop	r0
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	0f 90       	pop	r0
    10f6:	1f 90       	pop	r1
    10f8:	18 95       	reti

000010fa <__vector_13>:
    10fa:	1f 92       	push	r1
    10fc:	0f 92       	push	r0
    10fe:	0f b6       	in	r0, 0x3f	; 63
    1100:	0f 92       	push	r0
    1102:	11 24       	eor	r1, r1
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	2f 93       	push	r18
    110a:	3f 93       	push	r19
    110c:	4f 93       	push	r20
    110e:	5f 93       	push	r21
    1110:	6f 93       	push	r22
    1112:	7f 93       	push	r23
    1114:	8f 93       	push	r24
    1116:	9f 93       	push	r25
    1118:	af 93       	push	r26
    111a:	bf 93       	push	r27
    111c:	ef 93       	push	r30
    111e:	ff 93       	push	r31
    1120:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1124:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1128:	ac 01       	movw	r20, r24
    112a:	09 2e       	mov	r0, r25
    112c:	00 0c       	add	r0, r0
    112e:	66 0b       	sbc	r22, r22
    1130:	77 0b       	sbc	r23, r23
    1132:	9a 01       	movw	r18, r20
    1134:	11 27       	eor	r17, r17
    1136:	00 27       	eor	r16, r16
    1138:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    113c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1140:	60 e0       	ldi	r22, 0x00	; 0
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	40 2b       	or	r20, r16
    1146:	51 2b       	or	r21, r17
    1148:	62 2b       	or	r22, r18
    114a:	73 2b       	or	r23, r19
    114c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1150:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1154:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1158:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    115c:	b0 9b       	sbis	0x16, 0	; 22
    115e:	1a c0       	rjmp	.+52     	; 0x1194 <__vector_13+0x9a>
    1160:	01 96       	adiw	r24, 0x01	; 1
    1162:	09 2e       	mov	r0, r25
    1164:	00 0c       	add	r0, r0
    1166:	aa 0b       	sbc	r26, r26
    1168:	bb 0b       	sbc	r27, r27
    116a:	bc 01       	movw	r22, r24
    116c:	55 27       	eor	r21, r21
    116e:	44 27       	eor	r20, r20
    1170:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1174:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1178:	a0 e0       	ldi	r26, 0x00	; 0
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	84 2b       	or	r24, r20
    117e:	95 2b       	or	r25, r21
    1180:	a6 2b       	or	r26, r22
    1182:	b7 2b       	or	r27, r23
    1184:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1188:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    118c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1190:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1194:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
    1198:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
    119c:	30 97       	sbiw	r30, 0x00	; 0
    119e:	39 f0       	breq	.+14     	; 0x11ae <__vector_13+0xb4>
    11a0:	68 e0       	ldi	r22, 0x08	; 8
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
    11a8:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
    11ac:	09 95       	icall
    11ae:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    11b2:	ff 91       	pop	r31
    11b4:	ef 91       	pop	r30
    11b6:	bf 91       	pop	r27
    11b8:	af 91       	pop	r26
    11ba:	9f 91       	pop	r25
    11bc:	8f 91       	pop	r24
    11be:	7f 91       	pop	r23
    11c0:	6f 91       	pop	r22
    11c2:	5f 91       	pop	r21
    11c4:	4f 91       	pop	r20
    11c6:	3f 91       	pop	r19
    11c8:	2f 91       	pop	r18
    11ca:	1f 91       	pop	r17
    11cc:	0f 91       	pop	r16
    11ce:	0f 90       	pop	r0
    11d0:	0f be       	out	0x3f, r0	; 63
    11d2:	0f 90       	pop	r0
    11d4:	1f 90       	pop	r1
    11d6:	18 95       	reti

000011d8 <__vector_14>:
    11d8:	1f 92       	push	r1
    11da:	0f 92       	push	r0
    11dc:	0f b6       	in	r0, 0x3f	; 63
    11de:	0f 92       	push	r0
    11e0:	11 24       	eor	r1, r1
    11e2:	0f 93       	push	r16
    11e4:	1f 93       	push	r17
    11e6:	2f 93       	push	r18
    11e8:	3f 93       	push	r19
    11ea:	4f 93       	push	r20
    11ec:	5f 93       	push	r21
    11ee:	6f 93       	push	r22
    11f0:	7f 93       	push	r23
    11f2:	8f 93       	push	r24
    11f4:	9f 93       	push	r25
    11f6:	af 93       	push	r26
    11f8:	bf 93       	push	r27
    11fa:	ef 93       	push	r30
    11fc:	ff 93       	push	r31
    11fe:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1202:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1206:	ac 01       	movw	r20, r24
    1208:	09 2e       	mov	r0, r25
    120a:	00 0c       	add	r0, r0
    120c:	66 0b       	sbc	r22, r22
    120e:	77 0b       	sbc	r23, r23
    1210:	9a 01       	movw	r18, r20
    1212:	11 27       	eor	r17, r17
    1214:	00 27       	eor	r16, r16
    1216:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    121a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    121e:	60 e0       	ldi	r22, 0x00	; 0
    1220:	70 e0       	ldi	r23, 0x00	; 0
    1222:	40 2b       	or	r20, r16
    1224:	51 2b       	or	r21, r17
    1226:	62 2b       	or	r22, r18
    1228:	73 2b       	or	r23, r19
    122a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    122e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1232:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1236:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    123a:	b0 9b       	sbis	0x16, 0	; 22
    123c:	1a c0       	rjmp	.+52     	; 0x1272 <__vector_14+0x9a>
    123e:	01 96       	adiw	r24, 0x01	; 1
    1240:	09 2e       	mov	r0, r25
    1242:	00 0c       	add	r0, r0
    1244:	aa 0b       	sbc	r26, r26
    1246:	bb 0b       	sbc	r27, r27
    1248:	bc 01       	movw	r22, r24
    124a:	55 27       	eor	r21, r21
    124c:	44 27       	eor	r20, r20
    124e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1252:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	84 2b       	or	r24, r20
    125c:	95 2b       	or	r25, r21
    125e:	a6 2b       	or	r26, r22
    1260:	b7 2b       	or	r27, r23
    1262:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1266:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    126a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    126e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1272:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    1276:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    127a:	30 97       	sbiw	r30, 0x00	; 0
    127c:	39 f0       	breq	.+14     	; 0x128c <__vector_14+0xb4>
    127e:	69 e0       	ldi	r22, 0x09	; 9
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    1286:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    128a:	09 95       	icall
    128c:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    1290:	ff 91       	pop	r31
    1292:	ef 91       	pop	r30
    1294:	bf 91       	pop	r27
    1296:	af 91       	pop	r26
    1298:	9f 91       	pop	r25
    129a:	8f 91       	pop	r24
    129c:	7f 91       	pop	r23
    129e:	6f 91       	pop	r22
    12a0:	5f 91       	pop	r21
    12a2:	4f 91       	pop	r20
    12a4:	3f 91       	pop	r19
    12a6:	2f 91       	pop	r18
    12a8:	1f 91       	pop	r17
    12aa:	0f 91       	pop	r16
    12ac:	0f 90       	pop	r0
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	0f 90       	pop	r0
    12b2:	1f 90       	pop	r1
    12b4:	18 95       	reti

000012b6 <__vector_15>:
    12b6:	1f 92       	push	r1
    12b8:	0f 92       	push	r0
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	0f 92       	push	r0
    12be:	11 24       	eor	r1, r1
    12c0:	0f 93       	push	r16
    12c2:	1f 93       	push	r17
    12c4:	2f 93       	push	r18
    12c6:	3f 93       	push	r19
    12c8:	4f 93       	push	r20
    12ca:	5f 93       	push	r21
    12cc:	6f 93       	push	r22
    12ce:	7f 93       	push	r23
    12d0:	8f 93       	push	r24
    12d2:	9f 93       	push	r25
    12d4:	af 93       	push	r26
    12d6:	bf 93       	push	r27
    12d8:	ef 93       	push	r30
    12da:	ff 93       	push	r31
    12dc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    12e0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    12e4:	ac 01       	movw	r20, r24
    12e6:	09 2e       	mov	r0, r25
    12e8:	00 0c       	add	r0, r0
    12ea:	66 0b       	sbc	r22, r22
    12ec:	77 0b       	sbc	r23, r23
    12ee:	9a 01       	movw	r18, r20
    12f0:	11 27       	eor	r17, r17
    12f2:	00 27       	eor	r16, r16
    12f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	40 2b       	or	r20, r16
    1302:	51 2b       	or	r21, r17
    1304:	62 2b       	or	r22, r18
    1306:	73 2b       	or	r23, r19
    1308:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    130c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1310:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1314:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1318:	b0 9b       	sbis	0x16, 0	; 22
    131a:	1a c0       	rjmp	.+52     	; 0x1350 <__vector_15+0x9a>
    131c:	01 96       	adiw	r24, 0x01	; 1
    131e:	09 2e       	mov	r0, r25
    1320:	00 0c       	add	r0, r0
    1322:	aa 0b       	sbc	r26, r26
    1324:	bb 0b       	sbc	r27, r27
    1326:	bc 01       	movw	r22, r24
    1328:	55 27       	eor	r21, r21
    132a:	44 27       	eor	r20, r20
    132c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1330:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1334:	a0 e0       	ldi	r26, 0x00	; 0
    1336:	b0 e0       	ldi	r27, 0x00	; 0
    1338:	84 2b       	or	r24, r20
    133a:	95 2b       	or	r25, r21
    133c:	a6 2b       	or	r26, r22
    133e:	b7 2b       	or	r27, r23
    1340:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1344:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1348:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    134c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1350:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    1354:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    1358:	30 97       	sbiw	r30, 0x00	; 0
    135a:	39 f0       	breq	.+14     	; 0x136a <__vector_15+0xb4>
    135c:	6a e0       	ldi	r22, 0x0A	; 10
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    1364:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    1368:	09 95       	icall
    136a:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    136e:	ff 91       	pop	r31
    1370:	ef 91       	pop	r30
    1372:	bf 91       	pop	r27
    1374:	af 91       	pop	r26
    1376:	9f 91       	pop	r25
    1378:	8f 91       	pop	r24
    137a:	7f 91       	pop	r23
    137c:	6f 91       	pop	r22
    137e:	5f 91       	pop	r21
    1380:	4f 91       	pop	r20
    1382:	3f 91       	pop	r19
    1384:	2f 91       	pop	r18
    1386:	1f 91       	pop	r17
    1388:	0f 91       	pop	r16
    138a:	0f 90       	pop	r0
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	0f 90       	pop	r0
    1390:	1f 90       	pop	r1
    1392:	18 95       	reti

00001394 <__vector_16>:
    1394:	1f 92       	push	r1
    1396:	0f 92       	push	r0
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	0f 92       	push	r0
    139c:	11 24       	eor	r1, r1
    139e:	0f 93       	push	r16
    13a0:	1f 93       	push	r17
    13a2:	2f 93       	push	r18
    13a4:	3f 93       	push	r19
    13a6:	4f 93       	push	r20
    13a8:	5f 93       	push	r21
    13aa:	6f 93       	push	r22
    13ac:	7f 93       	push	r23
    13ae:	8f 93       	push	r24
    13b0:	9f 93       	push	r25
    13b2:	af 93       	push	r26
    13b4:	bf 93       	push	r27
    13b6:	ef 93       	push	r30
    13b8:	ff 93       	push	r31
    13ba:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    13be:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    13c2:	ac 01       	movw	r20, r24
    13c4:	09 2e       	mov	r0, r25
    13c6:	00 0c       	add	r0, r0
    13c8:	66 0b       	sbc	r22, r22
    13ca:	77 0b       	sbc	r23, r23
    13cc:	9a 01       	movw	r18, r20
    13ce:	11 27       	eor	r17, r17
    13d0:	00 27       	eor	r16, r16
    13d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13da:	60 e0       	ldi	r22, 0x00	; 0
    13dc:	70 e0       	ldi	r23, 0x00	; 0
    13de:	40 2b       	or	r20, r16
    13e0:	51 2b       	or	r21, r17
    13e2:	62 2b       	or	r22, r18
    13e4:	73 2b       	or	r23, r19
    13e6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    13ea:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    13ee:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    13f2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    13f6:	b0 9b       	sbis	0x16, 0	; 22
    13f8:	1a c0       	rjmp	.+52     	; 0x142e <__vector_16+0x9a>
    13fa:	01 96       	adiw	r24, 0x01	; 1
    13fc:	09 2e       	mov	r0, r25
    13fe:	00 0c       	add	r0, r0
    1400:	aa 0b       	sbc	r26, r26
    1402:	bb 0b       	sbc	r27, r27
    1404:	bc 01       	movw	r22, r24
    1406:	55 27       	eor	r21, r21
    1408:	44 27       	eor	r20, r20
    140a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    140e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1412:	a0 e0       	ldi	r26, 0x00	; 0
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	84 2b       	or	r24, r20
    1418:	95 2b       	or	r25, r21
    141a:	a6 2b       	or	r26, r22
    141c:	b7 2b       	or	r27, r23
    141e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1422:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1426:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    142a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    142e:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    1432:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    1436:	30 97       	sbiw	r30, 0x00	; 0
    1438:	39 f0       	breq	.+14     	; 0x1448 <__vector_16+0xb4>
    143a:	6b e0       	ldi	r22, 0x0B	; 11
    143c:	70 e0       	ldi	r23, 0x00	; 0
    143e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    1442:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    1446:	09 95       	icall
    1448:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    144c:	ff 91       	pop	r31
    144e:	ef 91       	pop	r30
    1450:	bf 91       	pop	r27
    1452:	af 91       	pop	r26
    1454:	9f 91       	pop	r25
    1456:	8f 91       	pop	r24
    1458:	7f 91       	pop	r23
    145a:	6f 91       	pop	r22
    145c:	5f 91       	pop	r21
    145e:	4f 91       	pop	r20
    1460:	3f 91       	pop	r19
    1462:	2f 91       	pop	r18
    1464:	1f 91       	pop	r17
    1466:	0f 91       	pop	r16
    1468:	0f 90       	pop	r0
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	0f 90       	pop	r0
    146e:	1f 90       	pop	r1
    1470:	18 95       	reti

00001472 <__vector_17>:
    1472:	1f 92       	push	r1
    1474:	0f 92       	push	r0
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	0f 92       	push	r0
    147a:	11 24       	eor	r1, r1
    147c:	0f 93       	push	r16
    147e:	1f 93       	push	r17
    1480:	2f 93       	push	r18
    1482:	3f 93       	push	r19
    1484:	4f 93       	push	r20
    1486:	5f 93       	push	r21
    1488:	6f 93       	push	r22
    148a:	7f 93       	push	r23
    148c:	8f 93       	push	r24
    148e:	9f 93       	push	r25
    1490:	af 93       	push	r26
    1492:	bf 93       	push	r27
    1494:	ef 93       	push	r30
    1496:	ff 93       	push	r31
    1498:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    149c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    14a0:	ac 01       	movw	r20, r24
    14a2:	09 2e       	mov	r0, r25
    14a4:	00 0c       	add	r0, r0
    14a6:	66 0b       	sbc	r22, r22
    14a8:	77 0b       	sbc	r23, r23
    14aa:	9a 01       	movw	r18, r20
    14ac:	11 27       	eor	r17, r17
    14ae:	00 27       	eor	r16, r16
    14b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14b8:	60 e0       	ldi	r22, 0x00	; 0
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	40 2b       	or	r20, r16
    14be:	51 2b       	or	r21, r17
    14c0:	62 2b       	or	r22, r18
    14c2:	73 2b       	or	r23, r19
    14c4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    14c8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    14cc:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    14d0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    14d4:	b0 9b       	sbis	0x16, 0	; 22
    14d6:	1a c0       	rjmp	.+52     	; 0x150c <__vector_17+0x9a>
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	09 2e       	mov	r0, r25
    14dc:	00 0c       	add	r0, r0
    14de:	aa 0b       	sbc	r26, r26
    14e0:	bb 0b       	sbc	r27, r27
    14e2:	bc 01       	movw	r22, r24
    14e4:	55 27       	eor	r21, r21
    14e6:	44 27       	eor	r20, r20
    14e8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14f0:	a0 e0       	ldi	r26, 0x00	; 0
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	84 2b       	or	r24, r20
    14f6:	95 2b       	or	r25, r21
    14f8:	a6 2b       	or	r26, r22
    14fa:	b7 2b       	or	r27, r23
    14fc:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1500:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1504:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1508:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    150c:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    1510:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    1514:	30 97       	sbiw	r30, 0x00	; 0
    1516:	39 f0       	breq	.+14     	; 0x1526 <__vector_17+0xb4>
    1518:	6c e0       	ldi	r22, 0x0C	; 12
    151a:	70 e0       	ldi	r23, 0x00	; 0
    151c:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    1520:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    1524:	09 95       	icall
    1526:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    152a:	ff 91       	pop	r31
    152c:	ef 91       	pop	r30
    152e:	bf 91       	pop	r27
    1530:	af 91       	pop	r26
    1532:	9f 91       	pop	r25
    1534:	8f 91       	pop	r24
    1536:	7f 91       	pop	r23
    1538:	6f 91       	pop	r22
    153a:	5f 91       	pop	r21
    153c:	4f 91       	pop	r20
    153e:	3f 91       	pop	r19
    1540:	2f 91       	pop	r18
    1542:	1f 91       	pop	r17
    1544:	0f 91       	pop	r16
    1546:	0f 90       	pop	r0
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	0f 90       	pop	r0
    154c:	1f 90       	pop	r1
    154e:	18 95       	reti

00001550 <__vector_18>:
    1550:	1f 92       	push	r1
    1552:	0f 92       	push	r0
    1554:	0f b6       	in	r0, 0x3f	; 63
    1556:	0f 92       	push	r0
    1558:	11 24       	eor	r1, r1
    155a:	0f 93       	push	r16
    155c:	1f 93       	push	r17
    155e:	2f 93       	push	r18
    1560:	3f 93       	push	r19
    1562:	4f 93       	push	r20
    1564:	5f 93       	push	r21
    1566:	6f 93       	push	r22
    1568:	7f 93       	push	r23
    156a:	8f 93       	push	r24
    156c:	9f 93       	push	r25
    156e:	af 93       	push	r26
    1570:	bf 93       	push	r27
    1572:	ef 93       	push	r30
    1574:	ff 93       	push	r31
    1576:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    157a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    157e:	ac 01       	movw	r20, r24
    1580:	09 2e       	mov	r0, r25
    1582:	00 0c       	add	r0, r0
    1584:	66 0b       	sbc	r22, r22
    1586:	77 0b       	sbc	r23, r23
    1588:	9a 01       	movw	r18, r20
    158a:	11 27       	eor	r17, r17
    158c:	00 27       	eor	r16, r16
    158e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1592:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	70 e0       	ldi	r23, 0x00	; 0
    159a:	40 2b       	or	r20, r16
    159c:	51 2b       	or	r21, r17
    159e:	62 2b       	or	r22, r18
    15a0:	73 2b       	or	r23, r19
    15a2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    15a6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    15aa:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    15ae:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    15b2:	b0 9b       	sbis	0x16, 0	; 22
    15b4:	1a c0       	rjmp	.+52     	; 0x15ea <__vector_18+0x9a>
    15b6:	01 96       	adiw	r24, 0x01	; 1
    15b8:	09 2e       	mov	r0, r25
    15ba:	00 0c       	add	r0, r0
    15bc:	aa 0b       	sbc	r26, r26
    15be:	bb 0b       	sbc	r27, r27
    15c0:	bc 01       	movw	r22, r24
    15c2:	55 27       	eor	r21, r21
    15c4:	44 27       	eor	r20, r20
    15c6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15ca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ce:	a0 e0       	ldi	r26, 0x00	; 0
    15d0:	b0 e0       	ldi	r27, 0x00	; 0
    15d2:	84 2b       	or	r24, r20
    15d4:	95 2b       	or	r25, r21
    15d6:	a6 2b       	or	r26, r22
    15d8:	b7 2b       	or	r27, r23
    15da:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    15de:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    15e2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    15e6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    15ea:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    15ee:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    15f2:	30 97       	sbiw	r30, 0x00	; 0
    15f4:	39 f0       	breq	.+14     	; 0x1604 <__vector_18+0xb4>
    15f6:	6d e0       	ldi	r22, 0x0D	; 13
    15f8:	70 e0       	ldi	r23, 0x00	; 0
    15fa:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    15fe:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    1602:	09 95       	icall
    1604:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    1608:	ff 91       	pop	r31
    160a:	ef 91       	pop	r30
    160c:	bf 91       	pop	r27
    160e:	af 91       	pop	r26
    1610:	9f 91       	pop	r25
    1612:	8f 91       	pop	r24
    1614:	7f 91       	pop	r23
    1616:	6f 91       	pop	r22
    1618:	5f 91       	pop	r21
    161a:	4f 91       	pop	r20
    161c:	3f 91       	pop	r19
    161e:	2f 91       	pop	r18
    1620:	1f 91       	pop	r17
    1622:	0f 91       	pop	r16
    1624:	0f 90       	pop	r0
    1626:	0f be       	out	0x3f, r0	; 63
    1628:	0f 90       	pop	r0
    162a:	1f 90       	pop	r1
    162c:	18 95       	reti

0000162e <__vector_19>:
    162e:	1f 92       	push	r1
    1630:	0f 92       	push	r0
    1632:	0f b6       	in	r0, 0x3f	; 63
    1634:	0f 92       	push	r0
    1636:	11 24       	eor	r1, r1
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	2f 93       	push	r18
    163e:	3f 93       	push	r19
    1640:	4f 93       	push	r20
    1642:	5f 93       	push	r21
    1644:	6f 93       	push	r22
    1646:	7f 93       	push	r23
    1648:	8f 93       	push	r24
    164a:	9f 93       	push	r25
    164c:	af 93       	push	r26
    164e:	bf 93       	push	r27
    1650:	ef 93       	push	r30
    1652:	ff 93       	push	r31
    1654:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1658:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    165c:	ac 01       	movw	r20, r24
    165e:	09 2e       	mov	r0, r25
    1660:	00 0c       	add	r0, r0
    1662:	66 0b       	sbc	r22, r22
    1664:	77 0b       	sbc	r23, r23
    1666:	9a 01       	movw	r18, r20
    1668:	11 27       	eor	r17, r17
    166a:	00 27       	eor	r16, r16
    166c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1670:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1674:	60 e0       	ldi	r22, 0x00	; 0
    1676:	70 e0       	ldi	r23, 0x00	; 0
    1678:	40 2b       	or	r20, r16
    167a:	51 2b       	or	r21, r17
    167c:	62 2b       	or	r22, r18
    167e:	73 2b       	or	r23, r19
    1680:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1684:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1688:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    168c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1690:	b0 9b       	sbis	0x16, 0	; 22
    1692:	1a c0       	rjmp	.+52     	; 0x16c8 <__vector_19+0x9a>
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	09 2e       	mov	r0, r25
    1698:	00 0c       	add	r0, r0
    169a:	aa 0b       	sbc	r26, r26
    169c:	bb 0b       	sbc	r27, r27
    169e:	bc 01       	movw	r22, r24
    16a0:	55 27       	eor	r21, r21
    16a2:	44 27       	eor	r20, r20
    16a4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ac:	a0 e0       	ldi	r26, 0x00	; 0
    16ae:	b0 e0       	ldi	r27, 0x00	; 0
    16b0:	84 2b       	or	r24, r20
    16b2:	95 2b       	or	r25, r21
    16b4:	a6 2b       	or	r26, r22
    16b6:	b7 2b       	or	r27, r23
    16b8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    16bc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    16c0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    16c4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    16c8:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    16cc:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    16d0:	30 97       	sbiw	r30, 0x00	; 0
    16d2:	39 f0       	breq	.+14     	; 0x16e2 <__vector_19+0xb4>
    16d4:	6e e0       	ldi	r22, 0x0E	; 14
    16d6:	70 e0       	ldi	r23, 0x00	; 0
    16d8:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    16dc:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    16e0:	09 95       	icall
    16e2:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    16e6:	ff 91       	pop	r31
    16e8:	ef 91       	pop	r30
    16ea:	bf 91       	pop	r27
    16ec:	af 91       	pop	r26
    16ee:	9f 91       	pop	r25
    16f0:	8f 91       	pop	r24
    16f2:	7f 91       	pop	r23
    16f4:	6f 91       	pop	r22
    16f6:	5f 91       	pop	r21
    16f8:	4f 91       	pop	r20
    16fa:	3f 91       	pop	r19
    16fc:	2f 91       	pop	r18
    16fe:	1f 91       	pop	r17
    1700:	0f 91       	pop	r16
    1702:	0f 90       	pop	r0
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	0f 90       	pop	r0
    1708:	1f 90       	pop	r1
    170a:	18 95       	reti

0000170c <__vector_20>:
    170c:	1f 92       	push	r1
    170e:	0f 92       	push	r0
    1710:	0f b6       	in	r0, 0x3f	; 63
    1712:	0f 92       	push	r0
    1714:	11 24       	eor	r1, r1
    1716:	0f 93       	push	r16
    1718:	1f 93       	push	r17
    171a:	2f 93       	push	r18
    171c:	3f 93       	push	r19
    171e:	4f 93       	push	r20
    1720:	5f 93       	push	r21
    1722:	6f 93       	push	r22
    1724:	7f 93       	push	r23
    1726:	8f 93       	push	r24
    1728:	9f 93       	push	r25
    172a:	af 93       	push	r26
    172c:	bf 93       	push	r27
    172e:	ef 93       	push	r30
    1730:	ff 93       	push	r31
    1732:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1736:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    173a:	ac 01       	movw	r20, r24
    173c:	09 2e       	mov	r0, r25
    173e:	00 0c       	add	r0, r0
    1740:	66 0b       	sbc	r22, r22
    1742:	77 0b       	sbc	r23, r23
    1744:	9a 01       	movw	r18, r20
    1746:	11 27       	eor	r17, r17
    1748:	00 27       	eor	r16, r16
    174a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    174e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1752:	60 e0       	ldi	r22, 0x00	; 0
    1754:	70 e0       	ldi	r23, 0x00	; 0
    1756:	40 2b       	or	r20, r16
    1758:	51 2b       	or	r21, r17
    175a:	62 2b       	or	r22, r18
    175c:	73 2b       	or	r23, r19
    175e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1762:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1766:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    176a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    176e:	b0 9b       	sbis	0x16, 0	; 22
    1770:	1a c0       	rjmp	.+52     	; 0x17a6 <__vector_20+0x9a>
    1772:	01 96       	adiw	r24, 0x01	; 1
    1774:	09 2e       	mov	r0, r25
    1776:	00 0c       	add	r0, r0
    1778:	aa 0b       	sbc	r26, r26
    177a:	bb 0b       	sbc	r27, r27
    177c:	bc 01       	movw	r22, r24
    177e:	55 27       	eor	r21, r21
    1780:	44 27       	eor	r20, r20
    1782:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1786:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    178a:	a0 e0       	ldi	r26, 0x00	; 0
    178c:	b0 e0       	ldi	r27, 0x00	; 0
    178e:	84 2b       	or	r24, r20
    1790:	95 2b       	or	r25, r21
    1792:	a6 2b       	or	r26, r22
    1794:	b7 2b       	or	r27, r23
    1796:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    179a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    179e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    17a2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    17a6:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    17aa:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    17ae:	30 97       	sbiw	r30, 0x00	; 0
    17b0:	39 f0       	breq	.+14     	; 0x17c0 <__vector_20+0xb4>
    17b2:	6f e0       	ldi	r22, 0x0F	; 15
    17b4:	70 e0       	ldi	r23, 0x00	; 0
    17b6:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    17ba:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    17be:	09 95       	icall
    17c0:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    17c4:	ff 91       	pop	r31
    17c6:	ef 91       	pop	r30
    17c8:	bf 91       	pop	r27
    17ca:	af 91       	pop	r26
    17cc:	9f 91       	pop	r25
    17ce:	8f 91       	pop	r24
    17d0:	7f 91       	pop	r23
    17d2:	6f 91       	pop	r22
    17d4:	5f 91       	pop	r21
    17d6:	4f 91       	pop	r20
    17d8:	3f 91       	pop	r19
    17da:	2f 91       	pop	r18
    17dc:	1f 91       	pop	r17
    17de:	0f 91       	pop	r16
    17e0:	0f 90       	pop	r0
    17e2:	0f be       	out	0x3f, r0	; 63
    17e4:	0f 90       	pop	r0
    17e6:	1f 90       	pop	r1
    17e8:	18 95       	reti

000017ea <__vector_21>:
    17ea:	1f 92       	push	r1
    17ec:	0f 92       	push	r0
    17ee:	0f b6       	in	r0, 0x3f	; 63
    17f0:	0f 92       	push	r0
    17f2:	11 24       	eor	r1, r1
    17f4:	0f 93       	push	r16
    17f6:	1f 93       	push	r17
    17f8:	2f 93       	push	r18
    17fa:	3f 93       	push	r19
    17fc:	4f 93       	push	r20
    17fe:	5f 93       	push	r21
    1800:	6f 93       	push	r22
    1802:	7f 93       	push	r23
    1804:	8f 93       	push	r24
    1806:	9f 93       	push	r25
    1808:	af 93       	push	r26
    180a:	bf 93       	push	r27
    180c:	ef 93       	push	r30
    180e:	ff 93       	push	r31
    1810:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1814:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1818:	ac 01       	movw	r20, r24
    181a:	09 2e       	mov	r0, r25
    181c:	00 0c       	add	r0, r0
    181e:	66 0b       	sbc	r22, r22
    1820:	77 0b       	sbc	r23, r23
    1822:	9a 01       	movw	r18, r20
    1824:	11 27       	eor	r17, r17
    1826:	00 27       	eor	r16, r16
    1828:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    182c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1830:	60 e0       	ldi	r22, 0x00	; 0
    1832:	70 e0       	ldi	r23, 0x00	; 0
    1834:	40 2b       	or	r20, r16
    1836:	51 2b       	or	r21, r17
    1838:	62 2b       	or	r22, r18
    183a:	73 2b       	or	r23, r19
    183c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1840:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1844:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1848:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    184c:	b0 9b       	sbis	0x16, 0	; 22
    184e:	1a c0       	rjmp	.+52     	; 0x1884 <__vector_21+0x9a>
    1850:	01 96       	adiw	r24, 0x01	; 1
    1852:	09 2e       	mov	r0, r25
    1854:	00 0c       	add	r0, r0
    1856:	aa 0b       	sbc	r26, r26
    1858:	bb 0b       	sbc	r27, r27
    185a:	bc 01       	movw	r22, r24
    185c:	55 27       	eor	r21, r21
    185e:	44 27       	eor	r20, r20
    1860:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1864:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1868:	a0 e0       	ldi	r26, 0x00	; 0
    186a:	b0 e0       	ldi	r27, 0x00	; 0
    186c:	84 2b       	or	r24, r20
    186e:	95 2b       	or	r25, r21
    1870:	a6 2b       	or	r26, r22
    1872:	b7 2b       	or	r27, r23
    1874:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1878:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    187c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1880:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1884:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    1888:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    188c:	30 97       	sbiw	r30, 0x00	; 0
    188e:	39 f0       	breq	.+14     	; 0x189e <__vector_21+0xb4>
    1890:	60 e1       	ldi	r22, 0x10	; 16
    1892:	70 e0       	ldi	r23, 0x00	; 0
    1894:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    1898:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    189c:	09 95       	icall
    189e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    18a2:	ff 91       	pop	r31
    18a4:	ef 91       	pop	r30
    18a6:	bf 91       	pop	r27
    18a8:	af 91       	pop	r26
    18aa:	9f 91       	pop	r25
    18ac:	8f 91       	pop	r24
    18ae:	7f 91       	pop	r23
    18b0:	6f 91       	pop	r22
    18b2:	5f 91       	pop	r21
    18b4:	4f 91       	pop	r20
    18b6:	3f 91       	pop	r19
    18b8:	2f 91       	pop	r18
    18ba:	1f 91       	pop	r17
    18bc:	0f 91       	pop	r16
    18be:	0f 90       	pop	r0
    18c0:	0f be       	out	0x3f, r0	; 63
    18c2:	0f 90       	pop	r0
    18c4:	1f 90       	pop	r1
    18c6:	18 95       	reti

000018c8 <__vector_22>:
    18c8:	1f 92       	push	r1
    18ca:	0f 92       	push	r0
    18cc:	0f b6       	in	r0, 0x3f	; 63
    18ce:	0f 92       	push	r0
    18d0:	11 24       	eor	r1, r1
    18d2:	0f 93       	push	r16
    18d4:	1f 93       	push	r17
    18d6:	2f 93       	push	r18
    18d8:	3f 93       	push	r19
    18da:	4f 93       	push	r20
    18dc:	5f 93       	push	r21
    18de:	6f 93       	push	r22
    18e0:	7f 93       	push	r23
    18e2:	8f 93       	push	r24
    18e4:	9f 93       	push	r25
    18e6:	af 93       	push	r26
    18e8:	bf 93       	push	r27
    18ea:	ef 93       	push	r30
    18ec:	ff 93       	push	r31
    18ee:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    18f2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    18f6:	ac 01       	movw	r20, r24
    18f8:	09 2e       	mov	r0, r25
    18fa:	00 0c       	add	r0, r0
    18fc:	66 0b       	sbc	r22, r22
    18fe:	77 0b       	sbc	r23, r23
    1900:	9a 01       	movw	r18, r20
    1902:	11 27       	eor	r17, r17
    1904:	00 27       	eor	r16, r16
    1906:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    190a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	70 e0       	ldi	r23, 0x00	; 0
    1912:	40 2b       	or	r20, r16
    1914:	51 2b       	or	r21, r17
    1916:	62 2b       	or	r22, r18
    1918:	73 2b       	or	r23, r19
    191a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    191e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1922:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1926:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    192a:	b0 9b       	sbis	0x16, 0	; 22
    192c:	1a c0       	rjmp	.+52     	; 0x1962 <__vector_22+0x9a>
    192e:	01 96       	adiw	r24, 0x01	; 1
    1930:	09 2e       	mov	r0, r25
    1932:	00 0c       	add	r0, r0
    1934:	aa 0b       	sbc	r26, r26
    1936:	bb 0b       	sbc	r27, r27
    1938:	bc 01       	movw	r22, r24
    193a:	55 27       	eor	r21, r21
    193c:	44 27       	eor	r20, r20
    193e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1942:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1946:	a0 e0       	ldi	r26, 0x00	; 0
    1948:	b0 e0       	ldi	r27, 0x00	; 0
    194a:	84 2b       	or	r24, r20
    194c:	95 2b       	or	r25, r21
    194e:	a6 2b       	or	r26, r22
    1950:	b7 2b       	or	r27, r23
    1952:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1956:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    195a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    195e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1962:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    1966:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    196a:	30 97       	sbiw	r30, 0x00	; 0
    196c:	39 f0       	breq	.+14     	; 0x197c <__vector_22+0xb4>
    196e:	61 e1       	ldi	r22, 0x11	; 17
    1970:	70 e0       	ldi	r23, 0x00	; 0
    1972:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    1976:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    197a:	09 95       	icall
    197c:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    1980:	ff 91       	pop	r31
    1982:	ef 91       	pop	r30
    1984:	bf 91       	pop	r27
    1986:	af 91       	pop	r26
    1988:	9f 91       	pop	r25
    198a:	8f 91       	pop	r24
    198c:	7f 91       	pop	r23
    198e:	6f 91       	pop	r22
    1990:	5f 91       	pop	r21
    1992:	4f 91       	pop	r20
    1994:	3f 91       	pop	r19
    1996:	2f 91       	pop	r18
    1998:	1f 91       	pop	r17
    199a:	0f 91       	pop	r16
    199c:	0f 90       	pop	r0
    199e:	0f be       	out	0x3f, r0	; 63
    19a0:	0f 90       	pop	r0
    19a2:	1f 90       	pop	r1
    19a4:	18 95       	reti

000019a6 <idle>:
    19a6:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    19aa:	78 94       	sei
    19ac:	81 e0       	ldi	r24, 0x01	; 1
    19ae:	83 bf       	out	0x33, r24	; 51
    19b0:	88 95       	sleep
    19b2:	fc cf       	rjmp	.-8      	; 0x19ac <idle+0x6>

000019b4 <__vector_9>:
    19b4:	1f 92       	push	r1
    19b6:	0f 92       	push	r0
    19b8:	0f b6       	in	r0, 0x3f	; 63
    19ba:	0f 92       	push	r0
    19bc:	11 24       	eor	r1, r1
    19be:	2f 93       	push	r18
    19c0:	3f 93       	push	r19
    19c2:	4f 93       	push	r20
    19c4:	5f 93       	push	r21
    19c6:	6f 93       	push	r22
    19c8:	7f 93       	push	r23
    19ca:	8f 93       	push	r24
    19cc:	9f 93       	push	r25
    19ce:	ef 93       	push	r30
    19d0:	ff 93       	push	r31
    19d2:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    19d6:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    19da:	01 96       	adiw	r24, 0x01	; 1
    19dc:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    19e0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    19e4:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    19e8:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    19ec:	30 97       	sbiw	r30, 0x00	; 0
    19ee:	01 f1       	breq	.+64     	; 0x1a30 <__vector_9+0x7c>
    19f0:	42 81       	ldd	r20, Z+2	; 0x02
    19f2:	53 81       	ldd	r21, Z+3	; 0x03
    19f4:	64 81       	ldd	r22, Z+4	; 0x04
    19f6:	75 81       	ldd	r23, Z+5	; 0x05
    19f8:	86 17       	cp	r24, r22
    19fa:	97 07       	cpc	r25, r23
    19fc:	c9 f4       	brne	.+50     	; 0x1a30 <__vector_9+0x7c>
    19fe:	ca 01       	movw	r24, r20
    1a00:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a04:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a08:	42 1b       	sub	r20, r18
    1a0a:	53 0b       	sbc	r21, r19
    1a0c:	41 30       	cpi	r20, 0x01	; 1
    1a0e:	51 05       	cpc	r21, r1
    1a10:	29 f4       	brne	.+10     	; 0x1a1c <__vector_9+0x68>
    1a12:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a16:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a1a:	01 96       	adiw	r24, 0x01	; 1
    1a1c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a20:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a24:	ef e6       	ldi	r30, 0x6F	; 111
    1a26:	f0 e0       	ldi	r31, 0x00	; 0
    1a28:	80 81       	ld	r24, Z
    1a2a:	82 60       	ori	r24, 0x02	; 2
    1a2c:	80 83       	st	Z, r24
    1a2e:	05 c0       	rjmp	.+10     	; 0x1a3a <__vector_9+0x86>
    1a30:	ef e6       	ldi	r30, 0x6F	; 111
    1a32:	f0 e0       	ldi	r31, 0x00	; 0
    1a34:	80 81       	ld	r24, Z
    1a36:	8d 7f       	andi	r24, 0xFD	; 253
    1a38:	80 83       	st	Z, r24
    1a3a:	ff 91       	pop	r31
    1a3c:	ef 91       	pop	r30
    1a3e:	9f 91       	pop	r25
    1a40:	8f 91       	pop	r24
    1a42:	7f 91       	pop	r23
    1a44:	6f 91       	pop	r22
    1a46:	5f 91       	pop	r21
    1a48:	4f 91       	pop	r20
    1a4a:	3f 91       	pop	r19
    1a4c:	2f 91       	pop	r18
    1a4e:	0f 90       	pop	r0
    1a50:	0f be       	out	0x3f, r0	; 63
    1a52:	0f 90       	pop	r0
    1a54:	1f 90       	pop	r1
    1a56:	18 95       	reti

00001a58 <__vector_7>:
    1a58:	1f 92       	push	r1
    1a5a:	0f 92       	push	r0
    1a5c:	0f b6       	in	r0, 0x3f	; 63
    1a5e:	0f 92       	push	r0
    1a60:	11 24       	eor	r1, r1
    1a62:	cf 92       	push	r12
    1a64:	df 92       	push	r13
    1a66:	ef 92       	push	r14
    1a68:	ff 92       	push	r15
    1a6a:	2f 93       	push	r18
    1a6c:	3f 93       	push	r19
    1a6e:	4f 93       	push	r20
    1a70:	5f 93       	push	r21
    1a72:	6f 93       	push	r22
    1a74:	7f 93       	push	r23
    1a76:	8f 93       	push	r24
    1a78:	9f 93       	push	r25
    1a7a:	af 93       	push	r26
    1a7c:	bf 93       	push	r27
    1a7e:	ef 93       	push	r30
    1a80:	ff 93       	push	r31
    1a82:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1a86:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1a8a:	6c 01       	movw	r12, r24
    1a8c:	09 2e       	mov	r0, r25
    1a8e:	00 0c       	add	r0, r0
    1a90:	ee 08       	sbc	r14, r14
    1a92:	ff 08       	sbc	r15, r15
    1a94:	76 01       	movw	r14, r12
    1a96:	dd 24       	eor	r13, r13
    1a98:	cc 24       	eor	r12, r12
    1a9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aa2:	60 e0       	ldi	r22, 0x00	; 0
    1aa4:	70 e0       	ldi	r23, 0x00	; 0
    1aa6:	c4 2a       	or	r12, r20
    1aa8:	d5 2a       	or	r13, r21
    1aaa:	e6 2a       	or	r14, r22
    1aac:	f7 2a       	or	r15, r23
    1aae:	b0 9b       	sbis	0x16, 0	; 22
    1ab0:	1e c0       	rjmp	.+60     	; 0x1aee <__vector_7+0x96>
    1ab2:	6c 01       	movw	r12, r24
    1ab4:	2f ef       	ldi	r18, 0xFF	; 255
    1ab6:	c2 1a       	sub	r12, r18
    1ab8:	d2 0a       	sbc	r13, r18
    1aba:	0d 2c       	mov	r0, r13
    1abc:	00 0c       	add	r0, r0
    1abe:	ee 08       	sbc	r14, r14
    1ac0:	ff 08       	sbc	r15, r15
    1ac2:	d6 01       	movw	r26, r12
    1ac4:	99 27       	eor	r25, r25
    1ac6:	88 27       	eor	r24, r24
    1ac8:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1acc:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ad0:	e1 2c       	mov	r14, r1
    1ad2:	f1 2c       	mov	r15, r1
    1ad4:	c8 2a       	or	r12, r24
    1ad6:	d9 2a       	or	r13, r25
    1ad8:	ea 2a       	or	r14, r26
    1ada:	fb 2a       	or	r15, r27
    1adc:	08 c0       	rjmp	.+16     	; 0x1aee <__vector_7+0x96>
    1ade:	84 e2       	ldi	r24, 0x24	; 36
    1ae0:	91 e0       	ldi	r25, 0x01	; 1
    1ae2:	0e 94 9c 04 	call	0x938	; 0x938 <dequeue>
    1ae6:	66 e2       	ldi	r22, 0x26	; 38
    1ae8:	71 e0       	ldi	r23, 0x01	; 1
    1aea:	0e 94 3a 04 	call	0x874	; 0x874 <enqueueByDeadline>
    1aee:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1af2:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1af6:	30 97       	sbiw	r30, 0x00	; 0
    1af8:	69 f0       	breq	.+26     	; 0x1b14 <__vector_7+0xbc>
    1afa:	82 81       	ldd	r24, Z+2	; 0x02
    1afc:	93 81       	ldd	r25, Z+3	; 0x03
    1afe:	a4 81       	ldd	r26, Z+4	; 0x04
    1b00:	b5 81       	ldd	r27, Z+5	; 0x05
    1b02:	8c 19       	sub	r24, r12
    1b04:	9d 09       	sbc	r25, r13
    1b06:	ae 09       	sbc	r26, r14
    1b08:	bf 09       	sbc	r27, r15
    1b0a:	18 16       	cp	r1, r24
    1b0c:	19 06       	cpc	r1, r25
    1b0e:	1a 06       	cpc	r1, r26
    1b10:	1b 06       	cpc	r1, r27
    1b12:	2c f7       	brge	.-54     	; 0x1ade <__vector_7+0x86>
    1b14:	30 97       	sbiw	r30, 0x00	; 0
    1b16:	21 f1       	breq	.+72     	; 0x1b60 <__vector_7+0x108>
    1b18:	82 81       	ldd	r24, Z+2	; 0x02
    1b1a:	93 81       	ldd	r25, Z+3	; 0x03
    1b1c:	a4 81       	ldd	r26, Z+4	; 0x04
    1b1e:	b5 81       	ldd	r27, Z+5	; 0x05
    1b20:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1b24:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1b28:	2a 17       	cp	r18, r26
    1b2a:	3b 07       	cpc	r19, r27
    1b2c:	c9 f4       	brne	.+50     	; 0x1b60 <__vector_7+0x108>
    1b2e:	9c 01       	movw	r18, r24
    1b30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b38:	84 1b       	sub	r24, r20
    1b3a:	95 0b       	sbc	r25, r21
    1b3c:	01 97       	sbiw	r24, 0x01	; 1
    1b3e:	31 f4       	brne	.+12     	; 0x1b4c <__vector_7+0xf4>
    1b40:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b44:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b48:	2f 5f       	subi	r18, 0xFF	; 255
    1b4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b50:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b54:	ef e6       	ldi	r30, 0x6F	; 111
    1b56:	f0 e0       	ldi	r31, 0x00	; 0
    1b58:	80 81       	ld	r24, Z
    1b5a:	82 60       	ori	r24, 0x02	; 2
    1b5c:	80 83       	st	Z, r24
    1b5e:	05 c0       	rjmp	.+10     	; 0x1b6a <__vector_7+0x112>
    1b60:	ef e6       	ldi	r30, 0x6F	; 111
    1b62:	f0 e0       	ldi	r31, 0x00	; 0
    1b64:	80 81       	ld	r24, Z
    1b66:	8d 7f       	andi	r24, 0xFD	; 253
    1b68:	80 83       	st	Z, r24
    1b6a:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <schedule>
    1b6e:	ff 91       	pop	r31
    1b70:	ef 91       	pop	r30
    1b72:	bf 91       	pop	r27
    1b74:	af 91       	pop	r26
    1b76:	9f 91       	pop	r25
    1b78:	8f 91       	pop	r24
    1b7a:	7f 91       	pop	r23
    1b7c:	6f 91       	pop	r22
    1b7e:	5f 91       	pop	r21
    1b80:	4f 91       	pop	r20
    1b82:	3f 91       	pop	r19
    1b84:	2f 91       	pop	r18
    1b86:	ff 90       	pop	r15
    1b88:	ef 90       	pop	r14
    1b8a:	df 90       	pop	r13
    1b8c:	cf 90       	pop	r12
    1b8e:	0f 90       	pop	r0
    1b90:	0f be       	out	0x3f, r0	; 63
    1b92:	0f 90       	pop	r0
    1b94:	1f 90       	pop	r1
    1b96:	18 95       	reti

00001b98 <async>:
    1b98:	3f 92       	push	r3
    1b9a:	4f 92       	push	r4
    1b9c:	5f 92       	push	r5
    1b9e:	6f 92       	push	r6
    1ba0:	7f 92       	push	r7
    1ba2:	8f 92       	push	r8
    1ba4:	9f 92       	push	r9
    1ba6:	af 92       	push	r10
    1ba8:	bf 92       	push	r11
    1baa:	cf 92       	push	r12
    1bac:	df 92       	push	r13
    1bae:	ef 92       	push	r14
    1bb0:	ff 92       	push	r15
    1bb2:	0f 93       	push	r16
    1bb4:	1f 93       	push	r17
    1bb6:	cf 93       	push	r28
    1bb8:	df 93       	push	r29
    1bba:	2b 01       	movw	r4, r22
    1bbc:	3c 01       	movw	r6, r24
    1bbe:	49 01       	movw	r8, r18
    1bc0:	5a 01       	movw	r10, r20
    1bc2:	8f b7       	in	r24, 0x3f	; 63
    1bc4:	80 78       	andi	r24, 0x80	; 128
    1bc6:	38 2e       	mov	r3, r24
    1bc8:	f8 94       	cli
    1bca:	86 e0       	ldi	r24, 0x06	; 6
    1bcc:	91 e0       	ldi	r25, 0x01	; 1
    1bce:	0e 94 9c 04 	call	0x938	; 0x938 <dequeue>
    1bd2:	ec 01       	movw	r28, r24
    1bd4:	1b 87       	std	Y+11, r17	; 0x0b
    1bd6:	0a 87       	std	Y+10, r16	; 0x0a
    1bd8:	fd 86       	std	Y+13, r15	; 0x0d
    1bda:	ec 86       	std	Y+12, r14	; 0x0c
    1bdc:	df 86       	std	Y+15, r13	; 0x0f
    1bde:	ce 86       	std	Y+14, r12	; 0x0e
    1be0:	33 20       	and	r3, r3
    1be2:	61 f0       	breq	.+24     	; 0x1bfc <async+0x64>
    1be4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1be8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bec:	02 80       	ldd	r0, Z+2	; 0x02
    1bee:	f3 81       	ldd	r31, Z+3	; 0x03
    1bf0:	e0 2d       	mov	r30, r0
    1bf2:	82 81       	ldd	r24, Z+2	; 0x02
    1bf4:	93 81       	ldd	r25, Z+3	; 0x03
    1bf6:	a4 81       	ldd	r26, Z+4	; 0x04
    1bf8:	b5 81       	ldd	r27, Z+5	; 0x05
    1bfa:	08 c0       	rjmp	.+16     	; 0x1c0c <async+0x74>
    1bfc:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    1c00:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    1c04:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    1c08:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    1c0c:	48 0e       	add	r4, r24
    1c0e:	59 1e       	adc	r5, r25
    1c10:	6a 1e       	adc	r6, r26
    1c12:	7b 1e       	adc	r7, r27
    1c14:	4a 82       	std	Y+2, r4	; 0x02
    1c16:	5b 82       	std	Y+3, r5	; 0x03
    1c18:	6c 82       	std	Y+4, r6	; 0x04
    1c1a:	7d 82       	std	Y+5, r7	; 0x05
    1c1c:	18 14       	cp	r1, r8
    1c1e:	19 04       	cpc	r1, r9
    1c20:	1a 04       	cpc	r1, r10
    1c22:	1b 04       	cpc	r1, r11
    1c24:	44 f0       	brlt	.+16     	; 0x1c36 <async+0x9e>
    1c26:	0f 2e       	mov	r0, r31
    1c28:	88 24       	eor	r8, r8
    1c2a:	8a 94       	dec	r8
    1c2c:	98 2c       	mov	r9, r8
    1c2e:	a8 2c       	mov	r10, r8
    1c30:	ff e7       	ldi	r31, 0x7F	; 127
    1c32:	bf 2e       	mov	r11, r31
    1c34:	f0 2d       	mov	r31, r0
    1c36:	84 0c       	add	r8, r4
    1c38:	95 1c       	adc	r9, r5
    1c3a:	a6 1c       	adc	r10, r6
    1c3c:	b7 1c       	adc	r11, r7
    1c3e:	8e 82       	std	Y+6, r8	; 0x06
    1c40:	9f 82       	std	Y+7, r9	; 0x07
    1c42:	a8 86       	std	Y+8, r10	; 0x08
    1c44:	b9 86       	std	Y+9, r11	; 0x09
    1c46:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1c4a:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1c4e:	c9 01       	movw	r24, r18
    1c50:	03 2e       	mov	r0, r19
    1c52:	00 0c       	add	r0, r0
    1c54:	aa 0b       	sbc	r26, r26
    1c56:	bb 0b       	sbc	r27, r27
    1c58:	dc 01       	movw	r26, r24
    1c5a:	99 27       	eor	r25, r25
    1c5c:	88 27       	eor	r24, r24
    1c5e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c62:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	70 e0       	ldi	r23, 0x00	; 0
    1c6a:	84 2b       	or	r24, r20
    1c6c:	95 2b       	or	r25, r21
    1c6e:	a6 2b       	or	r26, r22
    1c70:	b7 2b       	or	r27, r23
    1c72:	b0 9b       	sbis	0x16, 0	; 22
    1c74:	13 c0       	rjmp	.+38     	; 0x1c9c <async+0x104>
    1c76:	c9 01       	movw	r24, r18
    1c78:	01 96       	adiw	r24, 0x01	; 1
    1c7a:	09 2e       	mov	r0, r25
    1c7c:	00 0c       	add	r0, r0
    1c7e:	aa 0b       	sbc	r26, r26
    1c80:	bb 0b       	sbc	r27, r27
    1c82:	dc 01       	movw	r26, r24
    1c84:	99 27       	eor	r25, r25
    1c86:	88 27       	eor	r24, r24
    1c88:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c8c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c90:	60 e0       	ldi	r22, 0x00	; 0
    1c92:	70 e0       	ldi	r23, 0x00	; 0
    1c94:	84 2b       	or	r24, r20
    1c96:	95 2b       	or	r25, r21
    1c98:	a6 2b       	or	r26, r22
    1c9a:	b7 2b       	or	r27, r23
    1c9c:	48 1a       	sub	r4, r24
    1c9e:	59 0a       	sbc	r5, r25
    1ca0:	6a 0a       	sbc	r6, r26
    1ca2:	7b 0a       	sbc	r7, r27
    1ca4:	14 14       	cp	r1, r4
    1ca6:	15 04       	cpc	r1, r5
    1ca8:	16 04       	cpc	r1, r6
    1caa:	17 04       	cpc	r1, r7
    1cac:	ac f5       	brge	.+106    	; 0x1d18 <async+0x180>
    1cae:	64 e2       	ldi	r22, 0x24	; 36
    1cb0:	71 e0       	ldi	r23, 0x01	; 1
    1cb2:	ce 01       	movw	r24, r28
    1cb4:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <enqueueByBaseline>
    1cb8:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1cbc:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1cc0:	30 97       	sbiw	r30, 0x00	; 0
    1cc2:	21 f1       	breq	.+72     	; 0x1d0c <async+0x174>
    1cc4:	82 81       	ldd	r24, Z+2	; 0x02
    1cc6:	93 81       	ldd	r25, Z+3	; 0x03
    1cc8:	a4 81       	ldd	r26, Z+4	; 0x04
    1cca:	b5 81       	ldd	r27, Z+5	; 0x05
    1ccc:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1cd0:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1cd4:	2a 17       	cp	r18, r26
    1cd6:	3b 07       	cpc	r19, r27
    1cd8:	c9 f4       	brne	.+50     	; 0x1d0c <async+0x174>
    1cda:	9c 01       	movw	r18, r24
    1cdc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ce0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ce4:	84 1b       	sub	r24, r20
    1ce6:	95 0b       	sbc	r25, r21
    1ce8:	01 97       	sbiw	r24, 0x01	; 1
    1cea:	31 f4       	brne	.+12     	; 0x1cf8 <async+0x160>
    1cec:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cf0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cf4:	2f 5f       	subi	r18, 0xFF	; 255
    1cf6:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf8:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1cfc:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d00:	ef e6       	ldi	r30, 0x6F	; 111
    1d02:	f0 e0       	ldi	r31, 0x00	; 0
    1d04:	80 81       	ld	r24, Z
    1d06:	82 60       	ori	r24, 0x02	; 2
    1d08:	80 83       	st	Z, r24
    1d0a:	39 c0       	rjmp	.+114    	; 0x1d7e <async+0x1e6>
    1d0c:	ef e6       	ldi	r30, 0x6F	; 111
    1d0e:	f0 e0       	ldi	r31, 0x00	; 0
    1d10:	80 81       	ld	r24, Z
    1d12:	8d 7f       	andi	r24, 0xFD	; 253
    1d14:	80 83       	st	Z, r24
    1d16:	33 c0       	rjmp	.+102    	; 0x1d7e <async+0x1e6>
    1d18:	66 e2       	ldi	r22, 0x26	; 38
    1d1a:	71 e0       	ldi	r23, 0x01	; 1
    1d1c:	ce 01       	movw	r24, r28
    1d1e:	0e 94 3a 04 	call	0x874	; 0x874 <enqueueByDeadline>
    1d22:	33 20       	and	r3, r3
    1d24:	61 f1       	breq	.+88     	; 0x1d7e <async+0x1e6>
    1d26:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1d2a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1d2e:	89 2b       	or	r24, r25
    1d30:	31 f1       	breq	.+76     	; 0x1d7e <async+0x1e6>
    1d32:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1d36:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1d3a:	86 81       	ldd	r24, Z+6	; 0x06
    1d3c:	97 81       	ldd	r25, Z+7	; 0x07
    1d3e:	a0 85       	ldd	r26, Z+8	; 0x08
    1d40:	b1 85       	ldd	r27, Z+9	; 0x09
    1d42:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1d46:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1d4a:	02 80       	ldd	r0, Z+2	; 0x02
    1d4c:	f3 81       	ldd	r31, Z+3	; 0x03
    1d4e:	e0 2d       	mov	r30, r0
    1d50:	46 81       	ldd	r20, Z+6	; 0x06
    1d52:	57 81       	ldd	r21, Z+7	; 0x07
    1d54:	60 85       	ldd	r22, Z+8	; 0x08
    1d56:	71 85       	ldd	r23, Z+9	; 0x09
    1d58:	84 1b       	sub	r24, r20
    1d5a:	95 0b       	sbc	r25, r21
    1d5c:	a6 0b       	sbc	r26, r22
    1d5e:	b7 0b       	sbc	r27, r23
    1d60:	72 f4       	brpl	.+28     	; 0x1d7e <async+0x1e6>
    1d62:	84 e0       	ldi	r24, 0x04	; 4
    1d64:	91 e0       	ldi	r25, 0x01	; 1
    1d66:	0e 94 c7 04 	call	0x98e	; 0x98e <pop>
    1d6a:	62 e0       	ldi	r22, 0x02	; 2
    1d6c:	71 e0       	ldi	r23, 0x01	; 1
    1d6e:	0e 94 bd 04 	call	0x97a	; 0x97a <push>
    1d72:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1d76:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1d7a:	0e 94 1a 04 	call	0x834	; 0x834 <dispatch>
    1d7e:	33 20       	and	r3, r3
    1d80:	09 f0       	breq	.+2      	; 0x1d84 <async+0x1ec>
    1d82:	78 94       	sei
    1d84:	ce 01       	movw	r24, r28
    1d86:	df 91       	pop	r29
    1d88:	cf 91       	pop	r28
    1d8a:	1f 91       	pop	r17
    1d8c:	0f 91       	pop	r16
    1d8e:	ff 90       	pop	r15
    1d90:	ef 90       	pop	r14
    1d92:	df 90       	pop	r13
    1d94:	cf 90       	pop	r12
    1d96:	bf 90       	pop	r11
    1d98:	af 90       	pop	r10
    1d9a:	9f 90       	pop	r9
    1d9c:	8f 90       	pop	r8
    1d9e:	7f 90       	pop	r7
    1da0:	6f 90       	pop	r6
    1da2:	5f 90       	pop	r5
    1da4:	4f 90       	pop	r4
    1da6:	3f 90       	pop	r3
    1da8:	08 95       	ret

00001daa <sync>:
    1daa:	cf 92       	push	r12
    1dac:	df 92       	push	r13
    1dae:	ef 92       	push	r14
    1db0:	ff 92       	push	r15
    1db2:	0f 93       	push	r16
    1db4:	1f 93       	push	r17
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
    1dba:	ec 01       	movw	r28, r24
    1dbc:	7b 01       	movw	r14, r22
    1dbe:	6a 01       	movw	r12, r20
    1dc0:	1f b7       	in	r17, 0x3f	; 63
    1dc2:	10 78       	andi	r17, 0x80	; 128
    1dc4:	f8 94       	cli
    1dc6:	a8 81       	ld	r26, Y
    1dc8:	b9 81       	ldd	r27, Y+1	; 0x01
    1dca:	10 97       	sbiw	r26, 0x00	; 0
    1dcc:	19 f4       	brne	.+6      	; 0x1dd4 <sync+0x2a>
    1dce:	35 c0       	rjmp	.+106    	; 0x1e3a <sync+0x90>
    1dd0:	a0 81       	ld	r26, Z
    1dd2:	b1 81       	ldd	r27, Z+1	; 0x01
    1dd4:	14 96       	adiw	r26, 0x04	; 4
    1dd6:	ed 91       	ld	r30, X+
    1dd8:	fc 91       	ld	r31, X
    1dda:	15 97       	sbiw	r26, 0x05	; 5
    1ddc:	30 97       	sbiw	r30, 0x00	; 0
    1dde:	c1 f7       	brne	.-16     	; 0x1dd0 <sync+0x26>
    1de0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1de4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1de8:	a2 17       	cp	r26, r18
    1dea:	b3 07       	cpc	r27, r19
    1dec:	11 f0       	breq	.+4      	; 0x1df2 <sync+0x48>
    1dee:	11 11       	cpse	r17, r1
    1df0:	07 c0       	rjmp	.+14     	; 0x1e00 <sync+0x56>
    1df2:	11 23       	and	r17, r17
    1df4:	09 f4       	brne	.+2      	; 0x1df8 <sync+0x4e>
    1df6:	4a c0       	rjmp	.+148    	; 0x1e8c <sync+0xe2>
    1df8:	78 94       	sei
    1dfa:	8f ef       	ldi	r24, 0xFF	; 255
    1dfc:	9f ef       	ldi	r25, 0xFF	; 255
    1dfe:	4e c0       	rjmp	.+156    	; 0x1e9c <sync+0xf2>
    1e00:	8a 81       	ldd	r24, Y+2	; 0x02
    1e02:	9b 81       	ldd	r25, Y+3	; 0x03
    1e04:	00 97       	sbiw	r24, 0x00	; 0
    1e06:	19 f0       	breq	.+6      	; 0x1e0e <sync+0x64>
    1e08:	fc 01       	movw	r30, r24
    1e0a:	15 82       	std	Z+5, r1	; 0x05
    1e0c:	14 82       	std	Z+4, r1	; 0x04
    1e0e:	3b 83       	std	Y+3, r19	; 0x03
    1e10:	2a 83       	std	Y+2, r18	; 0x02
    1e12:	f9 01       	movw	r30, r18
    1e14:	d5 83       	std	Z+5, r29	; 0x05
    1e16:	c4 83       	std	Z+4, r28	; 0x04
    1e18:	cd 01       	movw	r24, r26
    1e1a:	0e 94 1a 04 	call	0x834	; 0x834 <dispatch>
    1e1e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e22:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e26:	82 81       	ldd	r24, Z+2	; 0x02
    1e28:	93 81       	ldd	r25, Z+3	; 0x03
    1e2a:	89 2b       	or	r24, r25
    1e2c:	31 f4       	brne	.+12     	; 0x1e3a <sync+0x90>
    1e2e:	11 23       	and	r17, r17
    1e30:	81 f1       	breq	.+96     	; 0x1e92 <sync+0xe8>
    1e32:	78 94       	sei
    1e34:	80 e0       	ldi	r24, 0x00	; 0
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	31 c0       	rjmp	.+98     	; 0x1e9c <sync+0xf2>
    1e3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e3e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e42:	99 83       	std	Y+1, r25	; 0x01
    1e44:	88 83       	st	Y, r24
    1e46:	11 23       	and	r17, r17
    1e48:	29 f0       	breq	.+10     	; 0x1e54 <sync+0xaa>
    1e4a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e4c:	9b 81       	ldd	r25, Y+3	; 0x03
    1e4e:	01 97       	sbiw	r24, 0x01	; 1
    1e50:	09 f0       	breq	.+2      	; 0x1e54 <sync+0xaa>
    1e52:	78 94       	sei
    1e54:	b6 01       	movw	r22, r12
    1e56:	ce 01       	movw	r24, r28
    1e58:	f7 01       	movw	r30, r14
    1e5a:	09 95       	icall
    1e5c:	f8 2e       	mov	r15, r24
    1e5e:	09 2f       	mov	r16, r25
    1e60:	8f b7       	in	r24, 0x3f	; 63
    1e62:	f8 94       	cli
    1e64:	19 82       	std	Y+1, r1	; 0x01
    1e66:	18 82       	st	Y, r1
    1e68:	8a 81       	ldd	r24, Y+2	; 0x02
    1e6a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e6c:	82 30       	cpi	r24, 0x02	; 2
    1e6e:	91 05       	cpc	r25, r1
    1e70:	38 f0       	brcs	.+14     	; 0x1e80 <sync+0xd6>
    1e72:	1b 82       	std	Y+3, r1	; 0x03
    1e74:	1a 82       	std	Y+2, r1	; 0x02
    1e76:	fc 01       	movw	r30, r24
    1e78:	15 82       	std	Z+5, r1	; 0x05
    1e7a:	14 82       	std	Z+4, r1	; 0x04
    1e7c:	0e 94 1a 04 	call	0x834	; 0x834 <dispatch>
    1e80:	11 23       	and	r17, r17
    1e82:	51 f0       	breq	.+20     	; 0x1e98 <sync+0xee>
    1e84:	78 94       	sei
    1e86:	8f 2d       	mov	r24, r15
    1e88:	90 2f       	mov	r25, r16
    1e8a:	08 c0       	rjmp	.+16     	; 0x1e9c <sync+0xf2>
    1e8c:	8f ef       	ldi	r24, 0xFF	; 255
    1e8e:	9f ef       	ldi	r25, 0xFF	; 255
    1e90:	05 c0       	rjmp	.+10     	; 0x1e9c <sync+0xf2>
    1e92:	80 e0       	ldi	r24, 0x00	; 0
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	02 c0       	rjmp	.+4      	; 0x1e9c <sync+0xf2>
    1e98:	8f 2d       	mov	r24, r15
    1e9a:	90 2f       	mov	r25, r16
    1e9c:	df 91       	pop	r29
    1e9e:	cf 91       	pop	r28
    1ea0:	1f 91       	pop	r17
    1ea2:	0f 91       	pop	r16
    1ea4:	ff 90       	pop	r15
    1ea6:	ef 90       	pop	r14
    1ea8:	df 90       	pop	r13
    1eaa:	cf 90       	pop	r12
    1eac:	08 95       	ret

00001eae <run>:
    1eae:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1eb2:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1eb6:	86 e2       	ldi	r24, 0x26	; 38
    1eb8:	91 e0       	ldi	r25, 0x01	; 1
    1eba:	0e 94 9c 04 	call	0x938	; 0x938 <dequeue>
    1ebe:	ec 01       	movw	r28, r24
    1ec0:	f8 01       	movw	r30, r16
    1ec2:	93 83       	std	Z+3, r25	; 0x03
    1ec4:	82 83       	std	Z+2, r24	; 0x02
    1ec6:	78 94       	sei
    1ec8:	6c 85       	ldd	r22, Y+12	; 0x0c
    1eca:	7d 85       	ldd	r23, Y+13	; 0x0d
    1ecc:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ece:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ed0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ed2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ed4:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <sync>
    1ed8:	8f b7       	in	r24, 0x3f	; 63
    1eda:	f8 94       	cli
    1edc:	66 e0       	ldi	r22, 0x06	; 6
    1ede:	71 e0       	ldi	r23, 0x01	; 1
    1ee0:	ce 01       	movw	r24, r28
    1ee2:	0e 94 b3 04 	call	0x966	; 0x966 <insert>
    1ee6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1eea:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1eee:	01 90       	ld	r0, Z+
    1ef0:	f0 81       	ld	r31, Z
    1ef2:	e0 2d       	mov	r30, r0
    1ef4:	c2 81       	ldd	r28, Z+2	; 0x02
    1ef6:	d3 81       	ldd	r29, Z+3	; 0x03
    1ef8:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1efc:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1f00:	30 97       	sbiw	r30, 0x00	; 0
    1f02:	a1 f0       	breq	.+40     	; 0x1f2c <run+0x7e>
    1f04:	20 97       	sbiw	r28, 0x00	; 0
    1f06:	99 f2       	breq	.-90     	; 0x1eae <run>
    1f08:	86 81       	ldd	r24, Z+6	; 0x06
    1f0a:	97 81       	ldd	r25, Z+7	; 0x07
    1f0c:	a0 85       	ldd	r26, Z+8	; 0x08
    1f0e:	b1 85       	ldd	r27, Z+9	; 0x09
    1f10:	4e 81       	ldd	r20, Y+6	; 0x06
    1f12:	5f 81       	ldd	r21, Y+7	; 0x07
    1f14:	68 85       	ldd	r22, Y+8	; 0x08
    1f16:	79 85       	ldd	r23, Y+9	; 0x09
    1f18:	84 1b       	sub	r24, r20
    1f1a:	95 0b       	sbc	r25, r21
    1f1c:	a6 0b       	sbc	r26, r22
    1f1e:	b7 0b       	sbc	r27, r23
    1f20:	18 16       	cp	r1, r24
    1f22:	19 06       	cpc	r1, r25
    1f24:	1a 06       	cpc	r1, r26
    1f26:	1b 06       	cpc	r1, r27
    1f28:	0c f0       	brlt	.+2      	; 0x1f2c <run+0x7e>
    1f2a:	c1 cf       	rjmp	.-126    	; 0x1eae <run>
    1f2c:	82 e0       	ldi	r24, 0x02	; 2
    1f2e:	91 e0       	ldi	r25, 0x01	; 1
    1f30:	0e 94 c7 04 	call	0x98e	; 0x98e <pop>
    1f34:	64 e0       	ldi	r22, 0x04	; 4
    1f36:	71 e0       	ldi	r23, 0x01	; 1
    1f38:	0e 94 bd 04 	call	0x97a	; 0x97a <push>
    1f3c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1f40:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1f44:	02 c0       	rjmp	.+4      	; 0x1f4a <run+0x9c>
    1f46:	a0 81       	ld	r26, Z
    1f48:	b1 81       	ldd	r27, Z+1	; 0x01
    1f4a:	14 96       	adiw	r26, 0x04	; 4
    1f4c:	ed 91       	ld	r30, X+
    1f4e:	fc 91       	ld	r31, X
    1f50:	15 97       	sbiw	r26, 0x05	; 5
    1f52:	30 97       	sbiw	r30, 0x00	; 0
    1f54:	c1 f7       	brne	.-16     	; 0x1f46 <run+0x98>
    1f56:	cd 01       	movw	r24, r26
    1f58:	0e 94 1a 04 	call	0x834	; 0x834 <dispatch>
    1f5c:	a8 cf       	rjmp	.-176    	; 0x1eae <run>

00001f5e <install>:
    1f5e:	fc 01       	movw	r30, r24
    1f60:	42 31       	cpi	r20, 0x12	; 18
    1f62:	b8 f4       	brcc	.+46     	; 0x1f92 <install+0x34>
    1f64:	9f b7       	in	r25, 0x3f	; 63
    1f66:	90 78       	andi	r25, 0x80	; 128
    1f68:	f8 94       	cli
    1f6a:	50 e0       	ldi	r21, 0x00	; 0
    1f6c:	44 0f       	add	r20, r20
    1f6e:	55 1f       	adc	r21, r21
    1f70:	da 01       	movw	r26, r20
    1f72:	a8 5d       	subi	r26, 0xD8	; 216
    1f74:	be 4f       	sbci	r27, 0xFE	; 254
    1f76:	ed 93       	st	X+, r30
    1f78:	fc 93       	st	X, r31
    1f7a:	da 01       	movw	r26, r20
    1f7c:	a0 54       	subi	r26, 0x40	; 64
    1f7e:	be 4f       	sbci	r27, 0xFE	; 254
    1f80:	6d 93       	st	X+, r22
    1f82:	7c 93       	st	X, r23
    1f84:	21 e0       	ldi	r18, 0x01	; 1
    1f86:	30 e0       	ldi	r19, 0x00	; 0
    1f88:	33 83       	std	Z+3, r19	; 0x03
    1f8a:	22 83       	std	Z+2, r18	; 0x02
    1f8c:	99 23       	and	r25, r25
    1f8e:	09 f0       	breq	.+2      	; 0x1f92 <install+0x34>
    1f90:	78 94       	sei
    1f92:	08 95       	ret

00001f94 <tinytimber>:
    1f94:	8c 01       	movw	r16, r24
    1f96:	7b 01       	movw	r14, r22
    1f98:	6a 01       	movw	r12, r20
    1f9a:	8f b7       	in	r24, 0x3f	; 63
    1f9c:	f8 94       	cli
    1f9e:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <initialize>
    1fa2:	78 94       	sei
    1fa4:	e1 14       	cp	r14, r1
    1fa6:	f1 04       	cpc	r15, r1
    1fa8:	41 f0       	breq	.+16     	; 0x1fba <tinytimber+0x26>
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	a9 01       	movw	r20, r18
    1fb0:	60 e0       	ldi	r22, 0x00	; 0
    1fb2:	70 e0       	ldi	r23, 0x00	; 0
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <async>
    1fba:	8f b7       	in	r24, 0x3f	; 63
    1fbc:	f8 94       	cli
    1fbe:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <idle>

00001fc2 <writeToPin>:
	int value = (PINE & (1 << pin) >> pin);
	writeToPin(value, pin);
}

void writeToPin(int value, int pin){
	int mask = (1 << pin);
    1fc2:	21 e0       	ldi	r18, 0x01	; 1
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	06 2e       	mov	r0, r22
    1fc8:	02 c0       	rjmp	.+4      	; 0x1fce <writeToPin+0xc>
    1fca:	22 0f       	add	r18, r18
    1fcc:	33 1f       	adc	r19, r19
    1fce:	0a 94       	dec	r0
    1fd0:	e2 f7       	brpl	.-8      	; 0x1fca <writeToPin+0x8>
	PINE = (PINE & ~mask) | ((value << pin) & mask);
    1fd2:	3c b1       	in	r19, 0x0c	; 12
    1fd4:	06 2e       	mov	r0, r22
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <writeToPin+0x1a>
    1fd8:	88 0f       	add	r24, r24
    1fda:	99 1f       	adc	r25, r25
    1fdc:	0a 94       	dec	r0
    1fde:	e2 f7       	brpl	.-8      	; 0x1fd8 <writeToPin+0x16>
    1fe0:	92 2f       	mov	r25, r18
    1fe2:	90 95       	com	r25
    1fe4:	39 23       	and	r19, r25
    1fe6:	82 23       	and	r24, r18
    1fe8:	83 2b       	or	r24, r19
    1fea:	8c b9       	out	0x0c, r24	; 12
	
	
	if (pin == 4){
    1fec:	64 30       	cpi	r22, 0x04	; 4
    1fee:	71 05       	cpc	r23, r1
    1ff0:	31 f4       	brne	.+12     	; 0x1ffe <writeToPin+0x3c>
		LCDDR13 ^= 0x1;
    1ff2:	e9 ef       	ldi	r30, 0xF9	; 249
    1ff4:	f0 e0       	ldi	r31, 0x00	; 0
    1ff6:	90 81       	ld	r25, Z
    1ff8:	81 e0       	ldi	r24, 0x01	; 1
    1ffa:	89 27       	eor	r24, r25
    1ffc:	80 83       	st	Z, r24
	}
	if (pin == 6)
    1ffe:	66 30       	cpi	r22, 0x06	; 6
    2000:	71 05       	cpc	r23, r1
    2002:	31 f4       	brne	.+12     	; 0x2010 <writeToPin+0x4e>
	{
		LCDDR18 ^= 0x1;
    2004:	ee ef       	ldi	r30, 0xFE	; 254
    2006:	f0 e0       	ldi	r31, 0x00	; 0
    2008:	90 81       	ld	r25, Z
    200a:	81 e0       	ldi	r24, 0x01	; 1
    200c:	89 27       	eor	r24, r25
    200e:	80 83       	st	Z, r24
    2010:	08 95       	ret

00002012 <turnOffPin>:
#include "TinyTimber.h"
#include "Writing.h"


void turnOffPin(PortWriter *self, int pin){
	writeToPin(0, pin);
    2012:	80 e0       	ldi	r24, 0x00	; 0
    2014:	90 e0       	ldi	r25, 0x00	; 0
    2016:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <writeToPin>
    201a:	08 95       	ret

0000201c <invertPin>:
}

void invertPin(PortWriter *self, int pin){
	int value = (PINE & (1 << pin) >> pin);
    201c:	2c b1       	in	r18, 0x0c	; 12
    201e:	30 e0       	ldi	r19, 0x00	; 0
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	90 e0       	ldi	r25, 0x00	; 0
    2024:	06 2e       	mov	r0, r22
    2026:	02 c0       	rjmp	.+4      	; 0x202c <invertPin+0x10>
    2028:	88 0f       	add	r24, r24
    202a:	99 1f       	adc	r25, r25
    202c:	0a 94       	dec	r0
    202e:	e2 f7       	brpl	.-8      	; 0x2028 <invertPin+0xc>
    2030:	06 2e       	mov	r0, r22
    2032:	02 c0       	rjmp	.+4      	; 0x2038 <invertPin+0x1c>
    2034:	95 95       	asr	r25
    2036:	87 95       	ror	r24
    2038:	0a 94       	dec	r0
    203a:	e2 f7       	brpl	.-8      	; 0x2034 <invertPin+0x18>
	writeToPin(value, pin);
    203c:	82 23       	and	r24, r18
    203e:	93 23       	and	r25, r19
    2040:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <writeToPin>
    2044:	08 95       	ret

00002046 <__divmodhi4>:
    2046:	97 fb       	bst	r25, 7
    2048:	07 2e       	mov	r0, r23
    204a:	16 f4       	brtc	.+4      	; 0x2050 <__divmodhi4+0xa>
    204c:	00 94       	com	r0
    204e:	07 d0       	rcall	.+14     	; 0x205e <__divmodhi4_neg1>
    2050:	77 fd       	sbrc	r23, 7
    2052:	09 d0       	rcall	.+18     	; 0x2066 <__divmodhi4_neg2>
    2054:	0e 94 61 10 	call	0x20c2	; 0x20c2 <__udivmodhi4>
    2058:	07 fc       	sbrc	r0, 7
    205a:	05 d0       	rcall	.+10     	; 0x2066 <__divmodhi4_neg2>
    205c:	3e f4       	brtc	.+14     	; 0x206c <__divmodhi4_exit>

0000205e <__divmodhi4_neg1>:
    205e:	90 95       	com	r25
    2060:	81 95       	neg	r24
    2062:	9f 4f       	sbci	r25, 0xFF	; 255
    2064:	08 95       	ret

00002066 <__divmodhi4_neg2>:
    2066:	70 95       	com	r23
    2068:	61 95       	neg	r22
    206a:	7f 4f       	sbci	r23, 0xFF	; 255

0000206c <__divmodhi4_exit>:
    206c:	08 95       	ret

0000206e <__divmodsi4>:
    206e:	05 2e       	mov	r0, r21
    2070:	97 fb       	bst	r25, 7
    2072:	1e f4       	brtc	.+6      	; 0x207a <__divmodsi4+0xc>
    2074:	00 94       	com	r0
    2076:	0e 94 4e 10 	call	0x209c	; 0x209c <__negsi2>
    207a:	57 fd       	sbrc	r21, 7
    207c:	07 d0       	rcall	.+14     	; 0x208c <__divmodsi4_neg2>
    207e:	0e 94 75 10 	call	0x20ea	; 0x20ea <__udivmodsi4>
    2082:	07 fc       	sbrc	r0, 7
    2084:	03 d0       	rcall	.+6      	; 0x208c <__divmodsi4_neg2>
    2086:	4e f4       	brtc	.+18     	; 0x209a <__divmodsi4_exit>
    2088:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__negsi2>

0000208c <__divmodsi4_neg2>:
    208c:	50 95       	com	r21
    208e:	40 95       	com	r20
    2090:	30 95       	com	r19
    2092:	21 95       	neg	r18
    2094:	3f 4f       	sbci	r19, 0xFF	; 255
    2096:	4f 4f       	sbci	r20, 0xFF	; 255
    2098:	5f 4f       	sbci	r21, 0xFF	; 255

0000209a <__divmodsi4_exit>:
    209a:	08 95       	ret

0000209c <__negsi2>:
    209c:	90 95       	com	r25
    209e:	80 95       	com	r24
    20a0:	70 95       	com	r23
    20a2:	61 95       	neg	r22
    20a4:	7f 4f       	sbci	r23, 0xFF	; 255
    20a6:	8f 4f       	sbci	r24, 0xFF	; 255
    20a8:	9f 4f       	sbci	r25, 0xFF	; 255
    20aa:	08 95       	ret

000020ac <__muluhisi3>:
    20ac:	0e 94 97 10 	call	0x212e	; 0x212e <__umulhisi3>
    20b0:	a5 9f       	mul	r26, r21
    20b2:	90 0d       	add	r25, r0
    20b4:	b4 9f       	mul	r27, r20
    20b6:	90 0d       	add	r25, r0
    20b8:	a4 9f       	mul	r26, r20
    20ba:	80 0d       	add	r24, r0
    20bc:	91 1d       	adc	r25, r1
    20be:	11 24       	eor	r1, r1
    20c0:	08 95       	ret

000020c2 <__udivmodhi4>:
    20c2:	aa 1b       	sub	r26, r26
    20c4:	bb 1b       	sub	r27, r27
    20c6:	51 e1       	ldi	r21, 0x11	; 17
    20c8:	07 c0       	rjmp	.+14     	; 0x20d8 <__udivmodhi4_ep>

000020ca <__udivmodhi4_loop>:
    20ca:	aa 1f       	adc	r26, r26
    20cc:	bb 1f       	adc	r27, r27
    20ce:	a6 17       	cp	r26, r22
    20d0:	b7 07       	cpc	r27, r23
    20d2:	10 f0       	brcs	.+4      	; 0x20d8 <__udivmodhi4_ep>
    20d4:	a6 1b       	sub	r26, r22
    20d6:	b7 0b       	sbc	r27, r23

000020d8 <__udivmodhi4_ep>:
    20d8:	88 1f       	adc	r24, r24
    20da:	99 1f       	adc	r25, r25
    20dc:	5a 95       	dec	r21
    20de:	a9 f7       	brne	.-22     	; 0x20ca <__udivmodhi4_loop>
    20e0:	80 95       	com	r24
    20e2:	90 95       	com	r25
    20e4:	bc 01       	movw	r22, r24
    20e6:	cd 01       	movw	r24, r26
    20e8:	08 95       	ret

000020ea <__udivmodsi4>:
    20ea:	a1 e2       	ldi	r26, 0x21	; 33
    20ec:	1a 2e       	mov	r1, r26
    20ee:	aa 1b       	sub	r26, r26
    20f0:	bb 1b       	sub	r27, r27
    20f2:	fd 01       	movw	r30, r26
    20f4:	0d c0       	rjmp	.+26     	; 0x2110 <__udivmodsi4_ep>

000020f6 <__udivmodsi4_loop>:
    20f6:	aa 1f       	adc	r26, r26
    20f8:	bb 1f       	adc	r27, r27
    20fa:	ee 1f       	adc	r30, r30
    20fc:	ff 1f       	adc	r31, r31
    20fe:	a2 17       	cp	r26, r18
    2100:	b3 07       	cpc	r27, r19
    2102:	e4 07       	cpc	r30, r20
    2104:	f5 07       	cpc	r31, r21
    2106:	20 f0       	brcs	.+8      	; 0x2110 <__udivmodsi4_ep>
    2108:	a2 1b       	sub	r26, r18
    210a:	b3 0b       	sbc	r27, r19
    210c:	e4 0b       	sbc	r30, r20
    210e:	f5 0b       	sbc	r31, r21

00002110 <__udivmodsi4_ep>:
    2110:	66 1f       	adc	r22, r22
    2112:	77 1f       	adc	r23, r23
    2114:	88 1f       	adc	r24, r24
    2116:	99 1f       	adc	r25, r25
    2118:	1a 94       	dec	r1
    211a:	69 f7       	brne	.-38     	; 0x20f6 <__udivmodsi4_loop>
    211c:	60 95       	com	r22
    211e:	70 95       	com	r23
    2120:	80 95       	com	r24
    2122:	90 95       	com	r25
    2124:	9b 01       	movw	r18, r22
    2126:	ac 01       	movw	r20, r24
    2128:	bd 01       	movw	r22, r26
    212a:	cf 01       	movw	r24, r30
    212c:	08 95       	ret

0000212e <__umulhisi3>:
    212e:	a2 9f       	mul	r26, r18
    2130:	b0 01       	movw	r22, r0
    2132:	b3 9f       	mul	r27, r19
    2134:	c0 01       	movw	r24, r0
    2136:	a3 9f       	mul	r26, r19
    2138:	70 0d       	add	r23, r0
    213a:	81 1d       	adc	r24, r1
    213c:	11 24       	eor	r1, r1
    213e:	91 1d       	adc	r25, r1
    2140:	b2 9f       	mul	r27, r18
    2142:	70 0d       	add	r23, r0
    2144:	81 1d       	adc	r24, r1
    2146:	11 24       	eor	r1, r1
    2148:	91 1d       	adc	r25, r1
    214a:	08 95       	ret

0000214c <setjmp>:
    214c:	dc 01       	movw	r26, r24
    214e:	2d 92       	st	X+, r2
    2150:	3d 92       	st	X+, r3
    2152:	4d 92       	st	X+, r4
    2154:	5d 92       	st	X+, r5
    2156:	6d 92       	st	X+, r6
    2158:	7d 92       	st	X+, r7
    215a:	8d 92       	st	X+, r8
    215c:	9d 92       	st	X+, r9
    215e:	ad 92       	st	X+, r10
    2160:	bd 92       	st	X+, r11
    2162:	cd 92       	st	X+, r12
    2164:	dd 92       	st	X+, r13
    2166:	ed 92       	st	X+, r14
    2168:	fd 92       	st	X+, r15
    216a:	0d 93       	st	X+, r16
    216c:	1d 93       	st	X+, r17
    216e:	cd 93       	st	X+, r28
    2170:	dd 93       	st	X+, r29
    2172:	ff 91       	pop	r31
    2174:	ef 91       	pop	r30
    2176:	8d b7       	in	r24, 0x3d	; 61
    2178:	8d 93       	st	X+, r24
    217a:	8e b7       	in	r24, 0x3e	; 62
    217c:	8d 93       	st	X+, r24
    217e:	8f b7       	in	r24, 0x3f	; 63
    2180:	8d 93       	st	X+, r24
    2182:	ed 93       	st	X+, r30
    2184:	fd 93       	st	X+, r31
    2186:	88 27       	eor	r24, r24
    2188:	99 27       	eor	r25, r25
    218a:	09 94       	ijmp

0000218c <longjmp>:
    218c:	dc 01       	movw	r26, r24
    218e:	cb 01       	movw	r24, r22
    2190:	81 30       	cpi	r24, 0x01	; 1
    2192:	91 05       	cpc	r25, r1
    2194:	81 1d       	adc	r24, r1
    2196:	2d 90       	ld	r2, X+
    2198:	3d 90       	ld	r3, X+
    219a:	4d 90       	ld	r4, X+
    219c:	5d 90       	ld	r5, X+
    219e:	6d 90       	ld	r6, X+
    21a0:	7d 90       	ld	r7, X+
    21a2:	8d 90       	ld	r8, X+
    21a4:	9d 90       	ld	r9, X+
    21a6:	ad 90       	ld	r10, X+
    21a8:	bd 90       	ld	r11, X+
    21aa:	cd 90       	ld	r12, X+
    21ac:	dd 90       	ld	r13, X+
    21ae:	ed 90       	ld	r14, X+
    21b0:	fd 90       	ld	r15, X+
    21b2:	0d 91       	ld	r16, X+
    21b4:	1d 91       	ld	r17, X+
    21b6:	cd 91       	ld	r28, X+
    21b8:	dd 91       	ld	r29, X+
    21ba:	ed 91       	ld	r30, X+
    21bc:	fd 91       	ld	r31, X+
    21be:	0d 90       	ld	r0, X+
    21c0:	f8 94       	cli
    21c2:	fe bf       	out	0x3e, r31	; 62
    21c4:	0f be       	out	0x3f, r0	; 63
    21c6:	ed bf       	out	0x3d, r30	; 61
    21c8:	ed 91       	ld	r30, X+
    21ca:	fd 91       	ld	r31, X+
    21cc:	09 94       	ijmp

000021ce <_exit>:
    21ce:	f8 94       	cli

000021d0 <__stop_program>:
    21d0:	ff cf       	rjmp	.-2      	; 0x21d0 <__stop_program>
