
Lab-4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00001f72  00002006  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  00002024  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002024  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002054  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00002094  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000286b  00000000  00000000  000022d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010b7  00000000  00000000  00004b3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014dd  00000000  00000000  00005bf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bcc  00000000  00000000  000070d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000096a  00000000  00000000  00007ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000024a9  00000000  00000000  0000860a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  0000aab3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <__vector_1>
       8:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__vector_2>
       c:	0c 94 db 04 	jmp	0x9b6	; 0x9b6 <__vector_3>
      10:	0c 94 4a 05 	jmp	0xa94	; 0xa94 <__vector_4>
      14:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 24 0c 	jmp	0x1848	; 0x1848 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 d2 0b 	jmp	0x17a4	; 0x17a4 <__vector_9>
      28:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__vector_10>
      2c:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__vector_11>
      30:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <__vector_12>
      34:	0c 94 75 07 	jmp	0xeea	; 0xeea <__vector_13>
      38:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__vector_14>
      3c:	0c 94 53 08 	jmp	0x10a6	; 0x10a6 <__vector_15>
      40:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <__vector_16>
      44:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__vector_17>
      48:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__vector_18>
      4c:	0c 94 0f 0a 	jmp	0x141e	; 0x141e <__vector_19>
      50:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__vector_20>
      54:	0c 94 ed 0a 	jmp	0x15da	; 0x15da <__vector_21>
      58:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e2 e7       	ldi	r30, 0x72	; 114
      70:	ff e1       	ldi	r31, 0x1F	; 31
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 89 01 	call	0x312	; 0x312 <main>
      92:	0c 94 b7 0f 	jmp	0x1f6e	; 0x1f6e <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <initialize>:
#include "TinyTimber.h"
#include "PulseGenerator.h"
#include "InputHandler.h"


void initialize(InputHandler *self){
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	ec 01       	movw	r28, r24
	SYNC(self->gui, LCD_INIT, NULL);
      ac:	40 e0       	ldi	r20, 0x00	; 0
      ae:	50 e0       	ldi	r21, 0x00	; 0
      b0:	69 e3       	ldi	r22, 0x39	; 57
      b2:	71 e0       	ldi	r23, 0x01	; 1
      b4:	8a 85       	ldd	r24, Y+10	; 0x0a
      b6:	9b 85       	ldd	r25, Y+11	; 0x0b
      b8:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <sync>
	SYNC(self->gui, Button_INIT, NULL);
      bc:	40 e0       	ldi	r20, 0x00	; 0
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	63 e6       	ldi	r22, 0x63	; 99
      c2:	71 e0       	ldi	r23, 0x01	; 1
      c4:	8a 85       	ldd	r24, Y+10	; 0x0a
      c6:	9b 85       	ldd	r25, Y+11	; 0x0b
      c8:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <sync>
	ASYNC(self->pG[1], generatePulse, NULL);
      cc:	0e 81       	ldd	r16, Y+6	; 0x06
      ce:	1f 81       	ldd	r17, Y+7	; 0x07
      d0:	c1 2c       	mov	r12, r1
      d2:	d1 2c       	mov	r13, r1
      d4:	0f 2e       	mov	r0, r31
      d6:	f4 e1       	ldi	r31, 0x14	; 20
      d8:	ef 2e       	mov	r14, r31
      da:	f2 e0       	ldi	r31, 0x02	; 2
      dc:	ff 2e       	mov	r15, r31
      de:	f0 2d       	mov	r31, r0
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	a9 01       	movw	r20, r18
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	70 e0       	ldi	r23, 0x00	; 0
      ea:	cb 01       	movw	r24, r22
      ec:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
	ASYNC(self->pG[2], generatePulse, NULL);
      f0:	08 85       	ldd	r16, Y+8	; 0x08
      f2:	19 85       	ldd	r17, Y+9	; 0x09
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	a9 01       	movw	r20, r18
      fa:	60 e0       	ldi	r22, 0x00	; 0
      fc:	70 e0       	ldi	r23, 0x00	; 0
      fe:	cb 01       	movw	r24, r22
     100:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
}
     104:	df 91       	pop	r29
     106:	cf 91       	pop	r28
     108:	1f 91       	pop	r17
     10a:	0f 91       	pop	r16
     10c:	ff 90       	pop	r15
     10e:	ef 90       	pop	r14
     110:	df 90       	pop	r13
     112:	cf 90       	pop	r12
     114:	08 95       	ret

00000116 <joystickHorizontal>:

void joystickHorizontal(InputHandler *self){
     116:	cf 92       	push	r12
     118:	df 92       	push	r13
     11a:	ef 92       	push	r14
     11c:	ff 92       	push	r15
     11e:	0f 93       	push	r16
     120:	1f 93       	push	r17
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	ec 01       	movw	r28, r24
	#define leftMask (1 << 2)
	#define rightMask (1 << 3)
	
	if ((PINE & leftMask) == 0){
     128:	62 99       	sbic	0x0c, 2	; 12
     12a:	13 c0       	rjmp	.+38     	; 0x152 <joystickHorizontal+0x3c>
		ASYNC(self->gui, changeCurrent, 1);
     12c:	0a 85       	ldd	r16, Y+10	; 0x0a
     12e:	1b 85       	ldd	r17, Y+11	; 0x0b
     130:	cc 24       	eor	r12, r12
     132:	c3 94       	inc	r12
     134:	d1 2c       	mov	r13, r1
     136:	0f 2e       	mov	r0, r31
     138:	f3 e3       	ldi	r31, 0x33	; 51
     13a:	ef 2e       	mov	r14, r31
     13c:	f1 e0       	ldi	r31, 0x01	; 1
     13e:	ff 2e       	mov	r15, r31
     140:	f0 2d       	mov	r31, r0
     142:	20 e0       	ldi	r18, 0x00	; 0
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	a9 01       	movw	r20, r18
     148:	60 e0       	ldi	r22, 0x00	; 0
     14a:	70 e0       	ldi	r23, 0x00	; 0
     14c:	cb 01       	movw	r24, r22
     14e:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
	}
	
	if ((PINE & rightMask) == 0){
     152:	63 99       	sbic	0x0c, 3	; 12
     154:	14 c0       	rjmp	.+40     	; 0x17e <joystickHorizontal+0x68>
		ASYNC(self->gui, changeCurrent, 2);
     156:	0a 85       	ldd	r16, Y+10	; 0x0a
     158:	1b 85       	ldd	r17, Y+11	; 0x0b
     15a:	68 94       	set
     15c:	cc 24       	eor	r12, r12
     15e:	c1 f8       	bld	r12, 1
     160:	d1 2c       	mov	r13, r1
     162:	0f 2e       	mov	r0, r31
     164:	f3 e3       	ldi	r31, 0x33	; 51
     166:	ef 2e       	mov	r14, r31
     168:	f1 e0       	ldi	r31, 0x01	; 1
     16a:	ff 2e       	mov	r15, r31
     16c:	f0 2d       	mov	r31, r0
     16e:	20 e0       	ldi	r18, 0x00	; 0
     170:	30 e0       	ldi	r19, 0x00	; 0
     172:	a9 01       	movw	r20, r18
     174:	60 e0       	ldi	r22, 0x00	; 0
     176:	70 e0       	ldi	r23, 0x00	; 0
     178:	cb 01       	movw	r24, r22
     17a:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
	}
}
     17e:	df 91       	pop	r29
     180:	cf 91       	pop	r28
     182:	1f 91       	pop	r17
     184:	0f 91       	pop	r16
     186:	ff 90       	pop	r15
     188:	ef 90       	pop	r14
     18a:	df 90       	pop	r13
     18c:	cf 90       	pop	r12
     18e:	08 95       	ret

00000190 <joystickVerticalPressed>:

void joystickVerticalPressed(InputHandler *self){
     190:	08 95       	ret

00000192 <writeChar>:
void printAt(GUI *self, int num) {
	int pp = self->current * 4;
	writeChar( (num % 100) / 10 + '0', pp);
	pp++;
	writeChar( num % 10 + '0', pp);
}
     192:	cf 93       	push	r28
     194:	df 93       	push	r29
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	66 97       	sbiw	r28, 0x16	; 22
     19c:	0f b6       	in	r0, 0x3f	; 63
     19e:	f8 94       	cli
     1a0:	de bf       	out	0x3e, r29	; 62
     1a2:	0f be       	out	0x3f, r0	; 63
     1a4:	cd bf       	out	0x3d, r28	; 61
     1a6:	66 30       	cpi	r22, 0x06	; 6
     1a8:	71 05       	cpc	r23, r1
     1aa:	08 f0       	brcs	.+2      	; 0x1ae <writeChar+0x1c>
     1ac:	43 c0       	rjmp	.+134    	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
     1ae:	96 e1       	ldi	r25, 0x16	; 22
     1b0:	e8 e0       	ldi	r30, 0x08	; 8
     1b2:	f1 e0       	ldi	r31, 0x01	; 1
     1b4:	de 01       	movw	r26, r28
     1b6:	11 96       	adiw	r26, 0x01	; 1
     1b8:	01 90       	ld	r0, Z+
     1ba:	0d 92       	st	X+, r0
     1bc:	9a 95       	dec	r25
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <writeChar+0x26>
     1c0:	90 ed       	ldi	r25, 0xD0	; 208
     1c2:	98 0f       	add	r25, r24
     1c4:	9a 30       	cpi	r25, 0x0A	; 10
     1c6:	70 f4       	brcc	.+28     	; 0x1e4 <writeChar+0x52>
     1c8:	e8 2f       	mov	r30, r24
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	f0 97       	sbiw	r30, 0x30	; 48
     1ce:	ee 0f       	add	r30, r30
     1d0:	ff 1f       	adc	r31, r31
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	8c 0f       	add	r24, r28
     1d8:	9d 1f       	adc	r25, r29
     1da:	e8 0f       	add	r30, r24
     1dc:	f9 1f       	adc	r31, r25
     1de:	40 81       	ld	r20, Z
     1e0:	51 81       	ldd	r21, Z+1	; 0x01
     1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <writeChar+0x56>
     1e4:	48 e2       	ldi	r20, 0x28	; 40
     1e6:	50 ec       	ldi	r21, 0xC0	; 192
     1e8:	fb 01       	movw	r30, r22
     1ea:	f5 95       	asr	r31
     1ec:	e7 95       	ror	r30
     1ee:	e4 51       	subi	r30, 0x14	; 20
     1f0:	ff 4f       	sbci	r31, 0xFF	; 255
     1f2:	db 01       	movw	r26, r22
     1f4:	a1 70       	andi	r26, 0x01	; 1
     1f6:	bb 27       	eor	r27, r27
     1f8:	60 fd       	sbrc	r22, 0
     1fa:	02 c0       	rjmp	.+4      	; 0x200 <__EEPROM_REGION_LENGTH__>
     1fc:	60 ef       	ldi	r22, 0xF0	; 240
     1fe:	01 c0       	rjmp	.+2      	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
     200:	6f e0       	ldi	r22, 0x0F	; 15
     202:	20 e0       	ldi	r18, 0x00	; 0
     204:	30 e0       	ldi	r19, 0x00	; 0
     206:	13 c0       	rjmp	.+38     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
     208:	84 2f       	mov	r24, r20
     20a:	8f 70       	andi	r24, 0x0F	; 15
     20c:	52 95       	swap	r21
     20e:	42 95       	swap	r20
     210:	4f 70       	andi	r20, 0x0F	; 15
     212:	45 27       	eor	r20, r21
     214:	5f 70       	andi	r21, 0x0F	; 15
     216:	45 27       	eor	r20, r21
     218:	10 97       	sbiw	r26, 0x00	; 0
     21a:	11 f0       	breq	.+4      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
     21c:	82 95       	swap	r24
     21e:	80 7f       	andi	r24, 0xF0	; 240
     220:	90 81       	ld	r25, Z
     222:	96 23       	and	r25, r22
     224:	89 2b       	or	r24, r25
     226:	80 83       	st	Z, r24
     228:	35 96       	adiw	r30, 0x05	; 5
     22a:	2f 5f       	subi	r18, 0xFF	; 255
     22c:	3f 4f       	sbci	r19, 0xFF	; 255
     22e:	24 30       	cpi	r18, 0x04	; 4
     230:	31 05       	cpc	r19, r1
     232:	54 f3       	brlt	.-44     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
     234:	66 96       	adiw	r28, 0x16	; 22
     236:	0f b6       	in	r0, 0x3f	; 63
     238:	f8 94       	cli
     23a:	de bf       	out	0x3e, r29	; 62
     23c:	0f be       	out	0x3f, r0	; 63
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	08 95       	ret

00000246 <printCurrent>:
	self->current = arg;
	printCurrent(self);
}

void printCurrent(GUI *self){
	if (self->current == 1){
     246:	fc 01       	movw	r30, r24
     248:	84 81       	ldd	r24, Z+4	; 0x04
     24a:	95 81       	ldd	r25, Z+5	; 0x05
     24c:	81 30       	cpi	r24, 0x01	; 1
     24e:	91 05       	cpc	r25, r1
     250:	21 f4       	brne	.+8      	; 0x25a <printCurrent+0x14>
		LCDDR1 = (1 << 0);
     252:	81 e0       	ldi	r24, 0x01	; 1
     254:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     258:	08 95       	ret
	} else if (self->current == 2){
     25a:	02 97       	sbiw	r24, 0x02	; 2
     25c:	19 f4       	brne	.+6      	; 0x264 <printCurrent+0x1e>
		LCDDR1 = (1 << 4);
     25e:	80 e1       	ldi	r24, 0x10	; 16
     260:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     264:	08 95       	ret

00000266 <changeCurrent>:
	pp++;
	writeChar( num % 10 + '0', pp);
}

void changeCurrent(GUI *self, int arg){
	self->current = arg;
     266:	fc 01       	movw	r30, r24
     268:	75 83       	std	Z+5, r23	; 0x05
     26a:	64 83       	std	Z+4, r22	; 0x04
	printCurrent(self);
     26c:	0e 94 23 01 	call	0x246	; 0x246 <printCurrent>
     270:	08 95       	ret

00000272 <LCD_INIT>:
	}
}

 void LCD_INIT(void){
	 // LCD
	 CLKPR = 0x80;
     272:	e1 e6       	ldi	r30, 0x61	; 97
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 e8       	ldi	r24, 0x80	; 128
     278:	80 83       	st	Z, r24
	 CLKPR = 0x00;
     27a:	10 82       	st	Z, r1
	 
	 //Set drive time to 300 milliseconds and contrast control voltage to 3.35 V
	 LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     27c:	8f e0       	ldi	r24, 0x0F	; 15
     27e:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	 
	 //Set external clock source, 1/3 bias, 1/4 duty cycle, 25 segments
	 LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     282:	87 eb       	ldi	r24, 0xB7	; 183
     284:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>

	 //Set prescaler setting N=16 and clock divide settings D=8
	 LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     288:	87 e0       	ldi	r24, 0x07	; 7
     28a:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>

	 //Enable low power waveform, no frame interrupt, no blanking, LCD enable
	 LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     28e:	80 ec       	ldi	r24, 0xC0	; 192
     290:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	 
	 asm("nop");
     294:	00 00       	nop
	 
	 LCDDR1 = (1 << 0);
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
	 writeChar('0', 0);
     29c:	60 e0       	ldi	r22, 0x00	; 0
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	80 e3       	ldi	r24, 0x30	; 48
     2a2:	0e 94 c9 00 	call	0x192	; 0x192 <writeChar>
	 writeChar('0', 1);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	70 e0       	ldi	r23, 0x00	; 0
     2aa:	80 e3       	ldi	r24, 0x30	; 48
     2ac:	0e 94 c9 00 	call	0x192	; 0x192 <writeChar>
	 writeChar('0', 4);
     2b0:	64 e0       	ldi	r22, 0x04	; 4
     2b2:	70 e0       	ldi	r23, 0x00	; 0
     2b4:	80 e3       	ldi	r24, 0x30	; 48
     2b6:	0e 94 c9 00 	call	0x192	; 0x192 <writeChar>
	 writeChar('0', 5);
     2ba:	65 e0       	ldi	r22, 0x05	; 5
     2bc:	70 e0       	ldi	r23, 0x00	; 0
     2be:	80 e3       	ldi	r24, 0x30	; 48
     2c0:	0e 94 c9 00 	call	0x192	; 0x192 <writeChar>
     2c4:	08 95       	ret

000002c6 <Button_INIT>:
 }
 
 void Button_INIT(void){
	 //Initialize for butterfly joystick
	 EIMSK = (1<<PCIE1) | (1<<PCIE0) | EIMSK;
     2c6:	8d b3       	in	r24, 0x1d	; 29
     2c8:	80 6c       	ori	r24, 0xC0	; 192
     2ca:	8d bb       	out	0x1d, r24	; 29
	 
	 //Press down
	 PORTB = (1<<PB7) | PORTB;
     2cc:	85 b1       	in	r24, 0x05	; 5
     2ce:	80 68       	ori	r24, 0x80	; 128
     2d0:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT15) | PCMSK1;
     2d2:	ec e6       	ldi	r30, 0x6C	; 108
     2d4:	f0 e0       	ldi	r31, 0x00	; 0
     2d6:	80 81       	ld	r24, Z
     2d8:	80 68       	ori	r24, 0x80	; 128
     2da:	80 83       	st	Z, r24
	 
	 //Press  upp
	 PORTB = (1<<PB6) | PORTB;
     2dc:	85 b1       	in	r24, 0x05	; 5
     2de:	80 64       	ori	r24, 0x40	; 64
     2e0:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT14) | PCMSK1;
     2e2:	80 81       	ld	r24, Z
     2e4:	80 64       	ori	r24, 0x40	; 64
     2e6:	80 83       	st	Z, r24
	 
	 //Press right
	 PORTE = (1<<PE3) | PORTE;
     2e8:	8e b1       	in	r24, 0x0e	; 14
     2ea:	88 60       	ori	r24, 0x08	; 8
     2ec:	8e b9       	out	0x0e, r24	; 14
	 PCMSK0 = (1<<PCINT3) | PCMSK0;
     2ee:	ab e6       	ldi	r26, 0x6B	; 107
     2f0:	b0 e0       	ldi	r27, 0x00	; 0
     2f2:	8c 91       	ld	r24, X
     2f4:	88 60       	ori	r24, 0x08	; 8
     2f6:	8c 93       	st	X, r24
	 
	 //Press left
	 PORTE = (1<<PE2) | PORTE;
     2f8:	8e b1       	in	r24, 0x0e	; 14
     2fa:	84 60       	ori	r24, 0x04	; 4
     2fc:	8e b9       	out	0x0e, r24	; 14
	 PCMSK0 = (1<<PCINT2) | PCMSK0;
     2fe:	8c 91       	ld	r24, X
     300:	84 60       	ori	r24, 0x04	; 4
     302:	8c 93       	st	X, r24
	 
	 //Press in
	 PORTB = (1<<PB4) | PORTB;
     304:	85 b1       	in	r24, 0x05	; 5
     306:	80 61       	ori	r24, 0x10	; 16
     308:	85 b9       	out	0x05, r24	; 5
	 PCMSK1 = (1<<PCINT12) | PCMSK1;
     30a:	80 81       	ld	r24, Z
     30c:	80 61       	ori	r24, 0x10	; 16
     30e:	80 83       	st	Z, r24
     310:	08 95       	ret

00000312 <main>:
#include "InputHandler.h"



int main(void)
{
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	cd b7       	in	r28, 0x3d	; 61
     318:	de b7       	in	r29, 0x3e	; 62
     31a:	c8 54       	subi	r28, 0x48	; 72
     31c:	d1 09       	sbc	r29, r1
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
	PortWriter		portWriter	 = initPortWriter();
     328:	1a 82       	std	Y+2, r1	; 0x02
     32a:	19 82       	std	Y+1, r1	; 0x01
     32c:	1c 82       	std	Y+4, r1	; 0x04
     32e:	1b 82       	std	Y+3, r1	; 0x03
	GUI				gui			 = initGUI();
     330:	1e 82       	std	Y+6, r1	; 0x06
     332:	1d 82       	std	Y+5, r1	; 0x05
     334:	18 86       	std	Y+8, r1	; 0x08
     336:	1f 82       	std	Y+7, r1	; 0x07
     338:	41 e0       	ldi	r20, 0x01	; 1
     33a:	50 e0       	ldi	r21, 0x00	; 0
     33c:	5a 87       	std	Y+10, r21	; 0x0a
     33e:	49 87       	std	Y+9, r20	; 0x09
	PulseGenerator	pG0		 = initPulseGenerator(&portWriter, &gui, 4);
     340:	1c 86       	std	Y+12, r1	; 0x0c
     342:	1b 86       	std	Y+11, r1	; 0x0b
     344:	1e 86       	std	Y+14, r1	; 0x0e
     346:	1d 86       	std	Y+13, r1	; 0x0d
     348:	9e 01       	movw	r18, r28
     34a:	2f 5f       	subi	r18, 0xFF	; 255
     34c:	3f 4f       	sbci	r19, 0xFF	; 255
     34e:	38 8b       	std	Y+16, r19	; 0x10
     350:	2f 87       	std	Y+15, r18	; 0x0f
     352:	ce 01       	movw	r24, r28
     354:	05 96       	adiw	r24, 0x05	; 5
     356:	9a 8b       	std	Y+18, r25	; 0x12
     358:	89 8b       	std	Y+17, r24	; 0x11
     35a:	64 e0       	ldi	r22, 0x04	; 4
     35c:	70 e0       	ldi	r23, 0x00	; 0
     35e:	7c 8b       	std	Y+20, r23	; 0x14
     360:	6b 8b       	std	Y+19, r22	; 0x13
     362:	1e 8a       	std	Y+22, r1	; 0x16
     364:	1d 8a       	std	Y+21, r1	; 0x15
     366:	18 8e       	std	Y+24, r1	; 0x18
     368:	1f 8a       	std	Y+23, r1	; 0x17
     36a:	1a 8e       	std	Y+26, r1	; 0x1a
     36c:	19 8e       	std	Y+25, r1	; 0x19
	PulseGenerator	pG1		 = initPulseGenerator(&portWriter, &gui, 6);
     36e:	1c 8e       	std	Y+28, r1	; 0x1c
     370:	1b 8e       	std	Y+27, r1	; 0x1b
     372:	1e 8e       	std	Y+30, r1	; 0x1e
     374:	1d 8e       	std	Y+29, r1	; 0x1d
     376:	38 a3       	std	Y+32, r19	; 0x20
     378:	2f 8f       	std	Y+31, r18	; 0x1f
     37a:	9a a3       	std	Y+34, r25	; 0x22
     37c:	89 a3       	std	Y+33, r24	; 0x21
     37e:	66 e0       	ldi	r22, 0x06	; 6
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	7c a3       	std	Y+36, r23	; 0x24
     384:	6b a3       	std	Y+35, r22	; 0x23
     386:	1e a2       	std	Y+38, r1	; 0x26
     388:	1d a2       	std	Y+37, r1	; 0x25
     38a:	18 a6       	std	Y+40, r1	; 0x28
     38c:	1f a2       	std	Y+39, r1	; 0x27
     38e:	1a a6       	std	Y+42, r1	; 0x2a
     390:	19 a6       	std	Y+41, r1	; 0x29
	PulseGenerator	pG2		 = initPulseGenerator(&portWriter, &gui, 7);
     392:	1c a6       	std	Y+44, r1	; 0x2c
     394:	1b a6       	std	Y+43, r1	; 0x2b
     396:	1e a6       	std	Y+46, r1	; 0x2e
     398:	1d a6       	std	Y+45, r1	; 0x2d
     39a:	38 ab       	std	Y+48, r19	; 0x30
     39c:	2f a7       	std	Y+47, r18	; 0x2f
     39e:	9a ab       	std	Y+50, r25	; 0x32
     3a0:	89 ab       	std	Y+49, r24	; 0x31
     3a2:	27 e0       	ldi	r18, 0x07	; 7
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	3c ab       	std	Y+52, r19	; 0x34
     3a8:	2b ab       	std	Y+51, r18	; 0x33
     3aa:	1e aa       	std	Y+54, r1	; 0x36
     3ac:	1d aa       	std	Y+53, r1	; 0x35
     3ae:	18 ae       	std	Y+56, r1	; 0x38
     3b0:	1f aa       	std	Y+55, r1	; 0x37
     3b2:	1a ae       	std	Y+58, r1	; 0x3a
     3b4:	19 ae       	std	Y+57, r1	; 0x39
	InputHandler	inputHandler = initInputHandler(&gui, &pG0, &pG1, &pG2);
     3b6:	1c ae       	std	Y+60, r1	; 0x3c
     3b8:	1b ae       	std	Y+59, r1	; 0x3b
     3ba:	1e ae       	std	Y+62, r1	; 0x3e
     3bc:	1d ae       	std	Y+61, r1	; 0x3d
     3be:	21 96       	adiw	r28, 0x01	; 1
     3c0:	9f af       	std	Y+63, r25	; 0x3f
     3c2:	8e af       	std	Y+62, r24	; 0x3e
     3c4:	21 97       	sbiw	r28, 0x01	; 1
     3c6:	06 96       	adiw	r24, 0x06	; 6
     3c8:	23 96       	adiw	r28, 0x03	; 3
     3ca:	9f af       	std	Y+63, r25	; 0x3f
     3cc:	8e af       	std	Y+62, r24	; 0x3e
     3ce:	23 97       	sbiw	r28, 0x03	; 3
     3d0:	40 96       	adiw	r24, 0x10	; 16
     3d2:	25 96       	adiw	r28, 0x05	; 5
     3d4:	9f af       	std	Y+63, r25	; 0x3f
     3d6:	8e af       	std	Y+62, r24	; 0x3e
     3d8:	25 97       	sbiw	r28, 0x05	; 5
     3da:	40 96       	adiw	r24, 0x10	; 16
     3dc:	27 96       	adiw	r28, 0x07	; 7
     3de:	9f af       	std	Y+63, r25	; 0x3f
     3e0:	8e af       	std	Y+62, r24	; 0x3e
     3e2:	27 97       	sbiw	r28, 0x07	; 7
     3e4:	29 96       	adiw	r28, 0x09	; 9
     3e6:	5f af       	std	Y+63, r21	; 0x3f
     3e8:	4e af       	std	Y+62, r20	; 0x3e
     3ea:	29 97       	sbiw	r28, 0x09	; 9
	
		INSTALL(&inputHandler, joystickHorizontal, IRQ_PCINT0);	// Left & Right
     3ec:	6b e8       	ldi	r22, 0x8B	; 139
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	40 96       	adiw	r24, 0x10	; 16
     3f2:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <install>
		INSTALL(&inputHandler, joystickVerticalPressed, IRQ_PCINT1);	// Up, Down & Pressed
     3f6:	42 e0       	ldi	r20, 0x02	; 2
     3f8:	68 ec       	ldi	r22, 0xC8	; 200
     3fa:	70 e0       	ldi	r23, 0x00	; 0
     3fc:	ce 01       	movw	r24, r28
     3fe:	cb 96       	adiw	r24, 0x3b	; 59
     400:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <install>
	
	return TINYTIMBER(&inputHandler, initialize, NULL);
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	50 e0       	ldi	r21, 0x00	; 0
     408:	6d e4       	ldi	r22, 0x4D	; 77
     40a:	70 e0       	ldi	r23, 0x00	; 0
     40c:	ce 01       	movw	r24, r28
     40e:	cb 96       	adiw	r24, 0x3b	; 59
     410:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <tinytimber>
     414:	c8 5b       	subi	r28, 0xB8	; 184
     416:	df 4f       	sbci	r29, 0xFF	; 255
     418:	0f b6       	in	r0, 0x3f	; 63
     41a:	f8 94       	cli
     41c:	de bf       	out	0x3e, r29	; 62
     41e:	0f be       	out	0x3f, r0	; 63
     420:	cd bf       	out	0x3d, r28	; 61
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	08 95       	ret

00000428 <generatePulse>:
#include "TinyTimber.h"
#include "PulseGenerator.h"
#include "Writing.h"


void generatePulse(PulseGenerator *self){
     428:	cf 92       	push	r12
     42a:	df 92       	push	r13
     42c:	ef 92       	push	r14
     42e:	ff 92       	push	r15
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	ec 01       	movw	r28, r24
	if (self->savedFreq == 0){
     43a:	8c 85       	ldd	r24, Y+12	; 0x0c
     43c:	9d 85       	ldd	r25, Y+13	; 0x0d
     43e:	89 2b       	or	r24, r25
     440:	d9 f4       	brne	.+54     	; 0x478 <generatePulse+0x50>
		SYNC(self->pw, turnOffPin, self->pin);
     442:	48 85       	ldd	r20, Y+8	; 0x08
     444:	59 85       	ldd	r21, Y+9	; 0x09
     446:	61 e0       	ldi	r22, 0x01	; 1
     448:	7f e0       	ldi	r23, 0x0F	; 15
     44a:	8c 81       	ldd	r24, Y+4	; 0x04
     44c:	9d 81       	ldd	r25, Y+5	; 0x05
     44e:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <sync>
		AFTER(MSEC(500), self, generatePulse, NULL);
     452:	c1 2c       	mov	r12, r1
     454:	d1 2c       	mov	r13, r1
     456:	0f 2e       	mov	r0, r31
     458:	f4 e1       	ldi	r31, 0x14	; 20
     45a:	ef 2e       	mov	r14, r31
     45c:	f2 e0       	ldi	r31, 0x02	; 2
     45e:	ff 2e       	mov	r15, r31
     460:	f0 2d       	mov	r31, r0
     462:	8e 01       	movw	r16, r28
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	a9 01       	movw	r20, r18
     46a:	69 e0       	ldi	r22, 0x09	; 9
     46c:	7d e3       	ldi	r23, 0x3D	; 61
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
     476:	2e c0       	rjmp	.+92     	; 0x4d4 <generatePulse+0xac>
	} else {
		SYNC(self->pw, invertPin, self->pin);
     478:	48 85       	ldd	r20, Y+8	; 0x08
     47a:	59 85       	ldd	r21, Y+9	; 0x09
     47c:	66 e0       	ldi	r22, 0x06	; 6
     47e:	7f e0       	ldi	r23, 0x0F	; 15
     480:	8c 81       	ldd	r24, Y+4	; 0x04
     482:	9d 81       	ldd	r25, Y+5	; 0x05
     484:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <sync>
		AFTER(USEC(500000/self->savedFreq), self, generatePulse, NULL);
     488:	2c 85       	ldd	r18, Y+12	; 0x0c
     48a:	3d 85       	ldd	r19, Y+13	; 0x0d
     48c:	03 2e       	mov	r0, r19
     48e:	00 0c       	add	r0, r0
     490:	44 0b       	sbc	r20, r20
     492:	55 0b       	sbc	r21, r21
     494:	60 e2       	ldi	r22, 0x20	; 32
     496:	71 ea       	ldi	r23, 0xA1	; 161
     498:	87 e0       	ldi	r24, 0x07	; 7
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <__divmodsi4>
     4a0:	ad e7       	ldi	r26, 0x7D	; 125
     4a2:	b0 e0       	ldi	r27, 0x00	; 0
     4a4:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <__muluhisi3>
     4a8:	20 ea       	ldi	r18, 0xA0	; 160
     4aa:	3f e0       	ldi	r19, 0x0F	; 15
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <__divmodsi4>
     4b4:	ca 01       	movw	r24, r20
     4b6:	b9 01       	movw	r22, r18
     4b8:	c1 2c       	mov	r12, r1
     4ba:	d1 2c       	mov	r13, r1
     4bc:	0f 2e       	mov	r0, r31
     4be:	f4 e1       	ldi	r31, 0x14	; 20
     4c0:	ef 2e       	mov	r14, r31
     4c2:	f2 e0       	ldi	r31, 0x02	; 2
     4c4:	ff 2e       	mov	r15, r31
     4c6:	f0 2d       	mov	r31, r0
     4c8:	8e 01       	movw	r16, r28
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	a9 01       	movw	r20, r18
     4d0:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
	}
}
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	1f 91       	pop	r17
     4da:	0f 91       	pop	r16
     4dc:	ff 90       	pop	r15
     4de:	ef 90       	pop	r14
     4e0:	df 90       	pop	r13
     4e2:	cf 90       	pop	r12
     4e4:	08 95       	ret

000004e6 <initialize>:
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	00 d0       	rcall	.+0      	; 0x4ec <initialize+0x6>
     4ec:	00 d0       	rcall	.+0      	; 0x4ee <initialize+0x8>
     4ee:	cd b7       	in	r28, 0x3d	; 61
     4f0:	de b7       	in	r29, 0x3e	; 62
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	18 c0       	rjmp	.+48     	; 0x528 <__stack+0x29>
     4f8:	ac 01       	movw	r20, r24
     4fa:	4f 5f       	subi	r20, 0xFF	; 255
     4fc:	5f 4f       	sbci	r21, 0xFF	; 255
     4fe:	9a 01       	movw	r18, r20
     500:	22 95       	swap	r18
     502:	32 95       	swap	r19
     504:	30 7f       	andi	r19, 0xF0	; 240
     506:	32 27       	eor	r19, r18
     508:	20 7f       	andi	r18, 0xF0	; 240
     50a:	32 27       	eor	r19, r18
     50c:	2f 5f       	subi	r18, 0xFF	; 255
     50e:	3d 4f       	sbci	r19, 0xFD	; 253
     510:	82 95       	swap	r24
     512:	92 95       	swap	r25
     514:	90 7f       	andi	r25, 0xF0	; 240
     516:	98 27       	eor	r25, r24
     518:	80 7f       	andi	r24, 0xF0	; 240
     51a:	98 27       	eor	r25, r24
     51c:	fc 01       	movw	r30, r24
     51e:	ef 5f       	subi	r30, 0xFF	; 255
     520:	fd 4f       	sbci	r31, 0xFD	; 253
     522:	31 83       	std	Z+1, r19	; 0x01
     524:	20 83       	st	Z, r18
     526:	ca 01       	movw	r24, r20
     528:	8e 30       	cpi	r24, 0x0E	; 14
     52a:	91 05       	cpc	r25, r1
     52c:	2c f3       	brlt	.-54     	; 0x4f8 <initialize+0x12>
     52e:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     532:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	15 c0       	rjmp	.+42     	; 0x566 <__stack+0x67>
     53c:	ac 01       	movw	r20, r24
     53e:	4f 5f       	subi	r20, 0xFF	; 255
     540:	5f 4f       	sbci	r21, 0xFF	; 255
     542:	6d e1       	ldi	r22, 0x1D	; 29
     544:	64 9f       	mul	r22, r20
     546:	90 01       	movw	r18, r0
     548:	65 9f       	mul	r22, r21
     54a:	30 0d       	add	r19, r0
     54c:	11 24       	eor	r1, r1
     54e:	24 5b       	subi	r18, 0xB4	; 180
     550:	3e 4f       	sbci	r19, 0xFE	; 254
     552:	68 9f       	mul	r22, r24
     554:	f0 01       	movw	r30, r0
     556:	69 9f       	mul	r22, r25
     558:	f0 0d       	add	r31, r0
     55a:	11 24       	eor	r1, r1
     55c:	e4 5b       	subi	r30, 0xB4	; 180
     55e:	fe 4f       	sbci	r31, 0xFE	; 254
     560:	31 83       	std	Z+1, r19	; 0x01
     562:	20 83       	st	Z, r18
     564:	ca 01       	movw	r24, r20
     566:	83 30       	cpi	r24, 0x03	; 3
     568:	91 05       	cpc	r25, r1
     56a:	44 f3       	brlt	.-48     	; 0x53c <__stack+0x3d>
     56c:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <threads+0x58>
     570:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <threads+0x57>
     574:	1a 82       	std	Y+2, r1	; 0x02
     576:	19 82       	std	Y+1, r1	; 0x01
     578:	32 c0       	rjmp	.+100    	; 0x5de <__stack+0xdf>
     57a:	2d e1       	ldi	r18, 0x1D	; 29
     57c:	49 81       	ldd	r20, Y+1	; 0x01
     57e:	5a 81       	ldd	r21, Y+2	; 0x02
     580:	24 9f       	mul	r18, r20
     582:	c0 01       	movw	r24, r0
     584:	25 9f       	mul	r18, r21
     586:	90 0d       	add	r25, r0
     588:	11 24       	eor	r1, r1
     58a:	fc 01       	movw	r30, r24
     58c:	ee 5a       	subi	r30, 0xAE	; 174
     58e:	fe 4f       	sbci	r31, 0xFE	; 254
     590:	fc 83       	std	Y+4, r31	; 0x04
     592:	eb 83       	std	Y+3, r30	; 0x03
     594:	cf 01       	movw	r24, r30
     596:	0e 94 76 0f 	call	0x1eec	; 0x1eec <setjmp>
     59a:	20 e6       	ldi	r18, 0x60	; 96
     59c:	49 81       	ldd	r20, Y+1	; 0x01
     59e:	5a 81       	ldd	r21, Y+2	; 0x02
     5a0:	24 9f       	mul	r18, r20
     5a2:	c0 01       	movw	r24, r0
     5a4:	25 9f       	mul	r18, r21
     5a6:	90 0d       	add	r25, r0
     5a8:	11 24       	eor	r1, r1
     5aa:	83 5b       	subi	r24, 0xB3	; 179
     5ac:	9c 4f       	sbci	r25, 0xFC	; 252
     5ae:	eb 81       	ldd	r30, Y+3	; 0x03
     5b0:	fc 81       	ldd	r31, Y+4	; 0x04
     5b2:	91 8b       	std	Z+17, r25	; 0x11
     5b4:	80 8b       	std	Z+16, r24	; 0x10
     5b6:	93 8b       	std	Z+19, r25	; 0x13
     5b8:	82 8b       	std	Z+18, r24	; 0x12
     5ba:	8f e4       	ldi	r24, 0x4F	; 79
     5bc:	9e e0       	ldi	r25, 0x0E	; 14
     5be:	96 8b       	std	Z+22, r25	; 0x16
     5c0:	85 8b       	std	Z+21, r24	; 0x15
     5c2:	8d e1       	ldi	r24, 0x1D	; 29
     5c4:	84 9f       	mul	r24, r20
     5c6:	f0 01       	movw	r30, r0
     5c8:	85 9f       	mul	r24, r21
     5ca:	f0 0d       	add	r31, r0
     5cc:	11 24       	eor	r1, r1
     5ce:	e4 5b       	subi	r30, 0xB4	; 180
     5d0:	fe 4f       	sbci	r31, 0xFE	; 254
     5d2:	15 82       	std	Z+5, r1	; 0x05
     5d4:	14 82       	std	Z+4, r1	; 0x04
     5d6:	4f 5f       	subi	r20, 0xFF	; 255
     5d8:	5f 4f       	sbci	r21, 0xFF	; 255
     5da:	5a 83       	std	Y+2, r21	; 0x02
     5dc:	49 83       	std	Y+1, r20	; 0x01
     5de:	29 81       	ldd	r18, Y+1	; 0x01
     5e0:	3a 81       	ldd	r19, Y+2	; 0x02
     5e2:	24 30       	cpi	r18, 0x04	; 4
     5e4:	31 05       	cpc	r19, r1
     5e6:	4c f2       	brlt	.-110    	; 0x57a <__stack+0x7b>
     5e8:	e4 ee       	ldi	r30, 0xE4	; 228
     5ea:	f1 e0       	ldi	r31, 0x01	; 1
     5ec:	11 82       	std	Z+1, r1	; 0x01
     5ee:	10 82       	st	Z, r1
     5f0:	15 82       	std	Z+5, r1	; 0x05
     5f2:	14 82       	std	Z+4, r1	; 0x04
     5f4:	13 82       	std	Z+3, r1	; 0x03
     5f6:	12 82       	std	Z+2, r1	; 0x02
     5f8:	e1 e6       	ldi	r30, 0x61	; 97
     5fa:	f0 e0       	ldi	r31, 0x00	; 0
     5fc:	80 e8       	ldi	r24, 0x80	; 128
     5fe:	80 83       	st	Z, r24
     600:	10 82       	st	Z, r1
     602:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     606:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     60a:	84 e0       	ldi	r24, 0x04	; 4
     60c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	0f 90       	pop	r0
     61e:	df 91       	pop	r29
     620:	cf 91       	pop	r28
     622:	08 95       	ret

00000624 <dispatch>:
     624:	cf 93       	push	r28
     626:	df 93       	push	r29
     628:	00 d0       	rcall	.+0      	; 0x62a <dispatch+0x6>
     62a:	cd b7       	in	r28, 0x3d	; 61
     62c:	de b7       	in	r29, 0x3e	; 62
     62e:	9a 83       	std	Y+2, r25	; 0x02
     630:	89 83       	std	Y+1, r24	; 0x01
     632:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     636:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     63a:	06 96       	adiw	r24, 0x06	; 6
     63c:	0e 94 76 0f 	call	0x1eec	; 0x1eec <setjmp>
     640:	89 2b       	or	r24, r25
     642:	59 f4       	brne	.+22     	; 0x65a <dispatch+0x36>
     644:	89 81       	ldd	r24, Y+1	; 0x01
     646:	9a 81       	ldd	r25, Y+2	; 0x02
     648:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     64c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     650:	61 e0       	ldi	r22, 0x01	; 1
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	06 96       	adiw	r24, 0x06	; 6
     656:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <longjmp>
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	df 91       	pop	r29
     660:	cf 91       	pop	r28
     662:	08 95       	ret

00000664 <enqueueByDeadline>:
     664:	0f 93       	push	r16
     666:	1f 93       	push	r17
     668:	cf 93       	push	r28
     66a:	df 93       	push	r29
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	eb 01       	movw	r28, r22
     672:	e8 81       	ld	r30, Y
     674:	f9 81       	ldd	r31, Y+1	; 0x01
     676:	c0 e0       	ldi	r28, 0x00	; 0
     678:	d0 e0       	ldi	r29, 0x00	; 0
     67a:	04 c0       	rjmp	.+8      	; 0x684 <enqueueByDeadline+0x20>
     67c:	ef 01       	movw	r28, r30
     67e:	01 90       	ld	r0, Z+
     680:	f0 81       	ld	r31, Z
     682:	e0 2d       	mov	r30, r0
     684:	30 97       	sbiw	r30, 0x00	; 0
     686:	79 f0       	breq	.+30     	; 0x6a6 <enqueueByDeadline+0x42>
     688:	06 81       	ldd	r16, Z+6	; 0x06
     68a:	17 81       	ldd	r17, Z+7	; 0x07
     68c:	20 85       	ldd	r18, Z+8	; 0x08
     68e:	31 85       	ldd	r19, Z+9	; 0x09
     690:	16 96       	adiw	r26, 0x06	; 6
     692:	4d 91       	ld	r20, X+
     694:	5d 91       	ld	r21, X+
     696:	6d 91       	ld	r22, X+
     698:	7c 91       	ld	r23, X
     69a:	19 97       	sbiw	r26, 0x09	; 9
     69c:	40 17       	cp	r20, r16
     69e:	51 07       	cpc	r21, r17
     6a0:	62 07       	cpc	r22, r18
     6a2:	73 07       	cpc	r23, r19
     6a4:	5c f7       	brge	.-42     	; 0x67c <enqueueByDeadline+0x18>
     6a6:	11 96       	adiw	r26, 0x01	; 1
     6a8:	fc 93       	st	X, r31
     6aa:	ee 93       	st	-X, r30
     6ac:	20 97       	sbiw	r28, 0x00	; 0
     6ae:	21 f4       	brne	.+8      	; 0x6b8 <enqueueByDeadline+0x54>
     6b0:	fc 01       	movw	r30, r24
     6b2:	b1 83       	std	Z+1, r27	; 0x01
     6b4:	a0 83       	st	Z, r26
     6b6:	02 c0       	rjmp	.+4      	; 0x6bc <enqueueByDeadline+0x58>
     6b8:	b9 83       	std	Y+1, r27	; 0x01
     6ba:	a8 83       	st	Y, r26
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	1f 91       	pop	r17
     6c2:	0f 91       	pop	r16
     6c4:	08 95       	ret

000006c6 <enqueueByBaseline>:
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	dc 01       	movw	r26, r24
     6d0:	cb 01       	movw	r24, r22
     6d2:	eb 01       	movw	r28, r22
     6d4:	e8 81       	ld	r30, Y
     6d6:	f9 81       	ldd	r31, Y+1	; 0x01
     6d8:	c0 e0       	ldi	r28, 0x00	; 0
     6da:	d0 e0       	ldi	r29, 0x00	; 0
     6dc:	04 c0       	rjmp	.+8      	; 0x6e6 <enqueueByBaseline+0x20>
     6de:	ef 01       	movw	r28, r30
     6e0:	01 90       	ld	r0, Z+
     6e2:	f0 81       	ld	r31, Z
     6e4:	e0 2d       	mov	r30, r0
     6e6:	30 97       	sbiw	r30, 0x00	; 0
     6e8:	79 f0       	breq	.+30     	; 0x708 <enqueueByBaseline+0x42>
     6ea:	02 81       	ldd	r16, Z+2	; 0x02
     6ec:	13 81       	ldd	r17, Z+3	; 0x03
     6ee:	24 81       	ldd	r18, Z+4	; 0x04
     6f0:	35 81       	ldd	r19, Z+5	; 0x05
     6f2:	12 96       	adiw	r26, 0x02	; 2
     6f4:	4d 91       	ld	r20, X+
     6f6:	5d 91       	ld	r21, X+
     6f8:	6d 91       	ld	r22, X+
     6fa:	7c 91       	ld	r23, X
     6fc:	15 97       	sbiw	r26, 0x05	; 5
     6fe:	40 17       	cp	r20, r16
     700:	51 07       	cpc	r21, r17
     702:	62 07       	cpc	r22, r18
     704:	73 07       	cpc	r23, r19
     706:	5c f7       	brge	.-42     	; 0x6de <enqueueByBaseline+0x18>
     708:	11 96       	adiw	r26, 0x01	; 1
     70a:	fc 93       	st	X, r31
     70c:	ee 93       	st	-X, r30
     70e:	20 97       	sbiw	r28, 0x00	; 0
     710:	21 f4       	brne	.+8      	; 0x71a <enqueueByBaseline+0x54>
     712:	fc 01       	movw	r30, r24
     714:	b1 83       	std	Z+1, r27	; 0x01
     716:	a0 83       	st	Z, r26
     718:	02 c0       	rjmp	.+4      	; 0x71e <enqueueByBaseline+0x58>
     71a:	b9 83       	std	Y+1, r27	; 0x01
     71c:	a8 83       	st	Y, r26
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	1f 91       	pop	r17
     724:	0f 91       	pop	r16
     726:	08 95       	ret

00000728 <dequeue>:
     728:	dc 01       	movw	r26, r24
     72a:	ed 91       	ld	r30, X+
     72c:	fc 91       	ld	r31, X
     72e:	11 97       	sbiw	r26, 0x01	; 1
     730:	30 97       	sbiw	r30, 0x00	; 0
     732:	59 f4       	brne	.+22     	; 0x74a <dequeue+0x22>
     734:	8f ef       	ldi	r24, 0xFF	; 255
     736:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     73a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     73e:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	83 bf       	out	0x33, r24	; 51
     746:	88 95       	sleep
     748:	fc cf       	rjmp	.-8      	; 0x742 <dequeue+0x1a>
     74a:	20 81       	ld	r18, Z
     74c:	31 81       	ldd	r19, Z+1	; 0x01
     74e:	2d 93       	st	X+, r18
     750:	3c 93       	st	X, r19
     752:	cf 01       	movw	r24, r30
     754:	08 95       	ret

00000756 <insert>:
     756:	fb 01       	movw	r30, r22
     758:	20 81       	ld	r18, Z
     75a:	31 81       	ldd	r19, Z+1	; 0x01
     75c:	fc 01       	movw	r30, r24
     75e:	31 83       	std	Z+1, r19	; 0x01
     760:	20 83       	st	Z, r18
     762:	fb 01       	movw	r30, r22
     764:	91 83       	std	Z+1, r25	; 0x01
     766:	80 83       	st	Z, r24
     768:	08 95       	ret

0000076a <push>:
     76a:	fb 01       	movw	r30, r22
     76c:	20 81       	ld	r18, Z
     76e:	31 81       	ldd	r19, Z+1	; 0x01
     770:	fc 01       	movw	r30, r24
     772:	31 83       	std	Z+1, r19	; 0x01
     774:	20 83       	st	Z, r18
     776:	fb 01       	movw	r30, r22
     778:	91 83       	std	Z+1, r25	; 0x01
     77a:	80 83       	st	Z, r24
     77c:	08 95       	ret

0000077e <pop>:
     77e:	dc 01       	movw	r26, r24
     780:	ed 91       	ld	r30, X+
     782:	fc 91       	ld	r31, X
     784:	11 97       	sbiw	r26, 0x01	; 1
     786:	20 81       	ld	r18, Z
     788:	31 81       	ldd	r19, Z+1	; 0x01
     78a:	2d 93       	st	X+, r18
     78c:	3c 93       	st	X, r19
     78e:	cf 01       	movw	r24, r30
     790:	08 95       	ret

00000792 <schedule>:
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     79a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     79e:	c2 81       	ldd	r28, Z+2	; 0x02
     7a0:	d3 81       	ldd	r29, Z+3	; 0x03
     7a2:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     7a6:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     7aa:	30 97       	sbiw	r30, 0x00	; 0
     7ac:	19 f1       	breq	.+70     	; 0x7f4 <schedule+0x62>
     7ae:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     7b2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     7b6:	89 2b       	or	r24, r25
     7b8:	e9 f0       	breq	.+58     	; 0x7f4 <schedule+0x62>
     7ba:	20 97       	sbiw	r28, 0x00	; 0
     7bc:	69 f0       	breq	.+26     	; 0x7d8 <schedule+0x46>
     7be:	86 81       	ldd	r24, Z+6	; 0x06
     7c0:	97 81       	ldd	r25, Z+7	; 0x07
     7c2:	a0 85       	ldd	r26, Z+8	; 0x08
     7c4:	b1 85       	ldd	r27, Z+9	; 0x09
     7c6:	4e 81       	ldd	r20, Y+6	; 0x06
     7c8:	5f 81       	ldd	r21, Y+7	; 0x07
     7ca:	68 85       	ldd	r22, Y+8	; 0x08
     7cc:	79 85       	ldd	r23, Y+9	; 0x09
     7ce:	84 1b       	sub	r24, r20
     7d0:	95 0b       	sbc	r25, r21
     7d2:	a6 0b       	sbc	r26, r22
     7d4:	b7 0b       	sbc	r27, r23
     7d6:	72 f4       	brpl	.+28     	; 0x7f4 <schedule+0x62>
     7d8:	84 e0       	ldi	r24, 0x04	; 4
     7da:	91 e0       	ldi	r25, 0x01	; 1
     7dc:	0e 94 bf 03 	call	0x77e	; 0x77e <pop>
     7e0:	62 e0       	ldi	r22, 0x02	; 2
     7e2:	71 e0       	ldi	r23, 0x01	; 1
     7e4:	0e 94 b5 03 	call	0x76a	; 0x76a <push>
     7e8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     7ec:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     7f0:	0e 94 12 03 	call	0x624	; 0x624 <dispatch>
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	08 95       	ret

000007fa <__vector_1>:
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0f 93       	push	r16
     806:	1f 93       	push	r17
     808:	2f 93       	push	r18
     80a:	3f 93       	push	r19
     80c:	4f 93       	push	r20
     80e:	5f 93       	push	r21
     810:	6f 93       	push	r22
     812:	7f 93       	push	r23
     814:	8f 93       	push	r24
     816:	9f 93       	push	r25
     818:	af 93       	push	r26
     81a:	bf 93       	push	r27
     81c:	ef 93       	push	r30
     81e:	ff 93       	push	r31
     820:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     824:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     828:	ac 01       	movw	r20, r24
     82a:	09 2e       	mov	r0, r25
     82c:	00 0c       	add	r0, r0
     82e:	66 0b       	sbc	r22, r22
     830:	77 0b       	sbc	r23, r23
     832:	9a 01       	movw	r18, r20
     834:	11 27       	eor	r17, r17
     836:	00 27       	eor	r16, r16
     838:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     83c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     840:	60 e0       	ldi	r22, 0x00	; 0
     842:	70 e0       	ldi	r23, 0x00	; 0
     844:	40 2b       	or	r20, r16
     846:	51 2b       	or	r21, r17
     848:	62 2b       	or	r22, r18
     84a:	73 2b       	or	r23, r19
     84c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     850:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     854:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     858:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     85c:	b0 9b       	sbis	0x16, 0	; 22
     85e:	1a c0       	rjmp	.+52     	; 0x894 <__vector_1+0x9a>
     860:	01 96       	adiw	r24, 0x01	; 1
     862:	09 2e       	mov	r0, r25
     864:	00 0c       	add	r0, r0
     866:	aa 0b       	sbc	r26, r26
     868:	bb 0b       	sbc	r27, r27
     86a:	bc 01       	movw	r22, r24
     86c:	55 27       	eor	r21, r21
     86e:	44 27       	eor	r20, r20
     870:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     874:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	84 2b       	or	r24, r20
     87e:	95 2b       	or	r25, r21
     880:	a6 2b       	or	r26, r22
     882:	b7 2b       	or	r27, r23
     884:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     888:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     88c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     890:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     894:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     898:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     89c:	30 97       	sbiw	r30, 0x00	; 0
     89e:	39 f0       	breq	.+14     	; 0x8ae <__vector_1+0xb4>
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     8a8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     8ac:	09 95       	icall
     8ae:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     8b2:	ff 91       	pop	r31
     8b4:	ef 91       	pop	r30
     8b6:	bf 91       	pop	r27
     8b8:	af 91       	pop	r26
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	7f 91       	pop	r23
     8c0:	6f 91       	pop	r22
     8c2:	5f 91       	pop	r21
     8c4:	4f 91       	pop	r20
     8c6:	3f 91       	pop	r19
     8c8:	2f 91       	pop	r18
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	0f 90       	pop	r0
     8d0:	0f be       	out	0x3f, r0	; 63
     8d2:	0f 90       	pop	r0
     8d4:	1f 90       	pop	r1
     8d6:	18 95       	reti

000008d8 <__vector_2>:
     8d8:	1f 92       	push	r1
     8da:	0f 92       	push	r0
     8dc:	0f b6       	in	r0, 0x3f	; 63
     8de:	0f 92       	push	r0
     8e0:	11 24       	eor	r1, r1
     8e2:	0f 93       	push	r16
     8e4:	1f 93       	push	r17
     8e6:	2f 93       	push	r18
     8e8:	3f 93       	push	r19
     8ea:	4f 93       	push	r20
     8ec:	5f 93       	push	r21
     8ee:	6f 93       	push	r22
     8f0:	7f 93       	push	r23
     8f2:	8f 93       	push	r24
     8f4:	9f 93       	push	r25
     8f6:	af 93       	push	r26
     8f8:	bf 93       	push	r27
     8fa:	ef 93       	push	r30
     8fc:	ff 93       	push	r31
     8fe:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     902:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     906:	ac 01       	movw	r20, r24
     908:	09 2e       	mov	r0, r25
     90a:	00 0c       	add	r0, r0
     90c:	66 0b       	sbc	r22, r22
     90e:	77 0b       	sbc	r23, r23
     910:	9a 01       	movw	r18, r20
     912:	11 27       	eor	r17, r17
     914:	00 27       	eor	r16, r16
     916:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     91a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	70 e0       	ldi	r23, 0x00	; 0
     922:	40 2b       	or	r20, r16
     924:	51 2b       	or	r21, r17
     926:	62 2b       	or	r22, r18
     928:	73 2b       	or	r23, r19
     92a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     92e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     932:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     936:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     93a:	b0 9b       	sbis	0x16, 0	; 22
     93c:	1a c0       	rjmp	.+52     	; 0x972 <__vector_2+0x9a>
     93e:	01 96       	adiw	r24, 0x01	; 1
     940:	09 2e       	mov	r0, r25
     942:	00 0c       	add	r0, r0
     944:	aa 0b       	sbc	r26, r26
     946:	bb 0b       	sbc	r27, r27
     948:	bc 01       	movw	r22, r24
     94a:	55 27       	eor	r21, r21
     94c:	44 27       	eor	r20, r20
     94e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     952:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     956:	a0 e0       	ldi	r26, 0x00	; 0
     958:	b0 e0       	ldi	r27, 0x00	; 0
     95a:	84 2b       	or	r24, r20
     95c:	95 2b       	or	r25, r21
     95e:	a6 2b       	or	r26, r22
     960:	b7 2b       	or	r27, r23
     962:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     966:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     96a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     96e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     972:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     976:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     97a:	30 97       	sbiw	r30, 0x00	; 0
     97c:	39 f0       	breq	.+14     	; 0x98c <__vector_2+0xb4>
     97e:	61 e0       	ldi	r22, 0x01	; 1
     980:	70 e0       	ldi	r23, 0x00	; 0
     982:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     986:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     98a:	09 95       	icall
     98c:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     990:	ff 91       	pop	r31
     992:	ef 91       	pop	r30
     994:	bf 91       	pop	r27
     996:	af 91       	pop	r26
     998:	9f 91       	pop	r25
     99a:	8f 91       	pop	r24
     99c:	7f 91       	pop	r23
     99e:	6f 91       	pop	r22
     9a0:	5f 91       	pop	r21
     9a2:	4f 91       	pop	r20
     9a4:	3f 91       	pop	r19
     9a6:	2f 91       	pop	r18
     9a8:	1f 91       	pop	r17
     9aa:	0f 91       	pop	r16
     9ac:	0f 90       	pop	r0
     9ae:	0f be       	out	0x3f, r0	; 63
     9b0:	0f 90       	pop	r0
     9b2:	1f 90       	pop	r1
     9b4:	18 95       	reti

000009b6 <__vector_3>:
     9b6:	1f 92       	push	r1
     9b8:	0f 92       	push	r0
     9ba:	0f b6       	in	r0, 0x3f	; 63
     9bc:	0f 92       	push	r0
     9be:	11 24       	eor	r1, r1
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	2f 93       	push	r18
     9c6:	3f 93       	push	r19
     9c8:	4f 93       	push	r20
     9ca:	5f 93       	push	r21
     9cc:	6f 93       	push	r22
     9ce:	7f 93       	push	r23
     9d0:	8f 93       	push	r24
     9d2:	9f 93       	push	r25
     9d4:	af 93       	push	r26
     9d6:	bf 93       	push	r27
     9d8:	ef 93       	push	r30
     9da:	ff 93       	push	r31
     9dc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     9e0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     9e4:	ac 01       	movw	r20, r24
     9e6:	09 2e       	mov	r0, r25
     9e8:	00 0c       	add	r0, r0
     9ea:	66 0b       	sbc	r22, r22
     9ec:	77 0b       	sbc	r23, r23
     9ee:	9a 01       	movw	r18, r20
     9f0:	11 27       	eor	r17, r17
     9f2:	00 27       	eor	r16, r16
     9f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	40 2b       	or	r20, r16
     a02:	51 2b       	or	r21, r17
     a04:	62 2b       	or	r22, r18
     a06:	73 2b       	or	r23, r19
     a08:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     a0c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     a10:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     a14:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     a18:	b0 9b       	sbis	0x16, 0	; 22
     a1a:	1a c0       	rjmp	.+52     	; 0xa50 <__vector_3+0x9a>
     a1c:	01 96       	adiw	r24, 0x01	; 1
     a1e:	09 2e       	mov	r0, r25
     a20:	00 0c       	add	r0, r0
     a22:	aa 0b       	sbc	r26, r26
     a24:	bb 0b       	sbc	r27, r27
     a26:	bc 01       	movw	r22, r24
     a28:	55 27       	eor	r21, r21
     a2a:	44 27       	eor	r20, r20
     a2c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a30:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	84 2b       	or	r24, r20
     a3a:	95 2b       	or	r25, r21
     a3c:	a6 2b       	or	r26, r22
     a3e:	b7 2b       	or	r27, r23
     a40:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     a44:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     a48:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     a4c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     a50:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     a54:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     a58:	30 97       	sbiw	r30, 0x00	; 0
     a5a:	39 f0       	breq	.+14     	; 0xa6a <__vector_3+0xb4>
     a5c:	62 e0       	ldi	r22, 0x02	; 2
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     a64:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     a68:	09 95       	icall
     a6a:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     a6e:	ff 91       	pop	r31
     a70:	ef 91       	pop	r30
     a72:	bf 91       	pop	r27
     a74:	af 91       	pop	r26
     a76:	9f 91       	pop	r25
     a78:	8f 91       	pop	r24
     a7a:	7f 91       	pop	r23
     a7c:	6f 91       	pop	r22
     a7e:	5f 91       	pop	r21
     a80:	4f 91       	pop	r20
     a82:	3f 91       	pop	r19
     a84:	2f 91       	pop	r18
     a86:	1f 91       	pop	r17
     a88:	0f 91       	pop	r16
     a8a:	0f 90       	pop	r0
     a8c:	0f be       	out	0x3f, r0	; 63
     a8e:	0f 90       	pop	r0
     a90:	1f 90       	pop	r1
     a92:	18 95       	reti

00000a94 <__vector_4>:
     a94:	1f 92       	push	r1
     a96:	0f 92       	push	r0
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	0f 92       	push	r0
     a9c:	11 24       	eor	r1, r1
     a9e:	0f 93       	push	r16
     aa0:	1f 93       	push	r17
     aa2:	2f 93       	push	r18
     aa4:	3f 93       	push	r19
     aa6:	4f 93       	push	r20
     aa8:	5f 93       	push	r21
     aaa:	6f 93       	push	r22
     aac:	7f 93       	push	r23
     aae:	8f 93       	push	r24
     ab0:	9f 93       	push	r25
     ab2:	af 93       	push	r26
     ab4:	bf 93       	push	r27
     ab6:	ef 93       	push	r30
     ab8:	ff 93       	push	r31
     aba:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     abe:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     ac2:	ac 01       	movw	r20, r24
     ac4:	09 2e       	mov	r0, r25
     ac6:	00 0c       	add	r0, r0
     ac8:	66 0b       	sbc	r22, r22
     aca:	77 0b       	sbc	r23, r23
     acc:	9a 01       	movw	r18, r20
     ace:	11 27       	eor	r17, r17
     ad0:	00 27       	eor	r16, r16
     ad2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ad6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ada:	60 e0       	ldi	r22, 0x00	; 0
     adc:	70 e0       	ldi	r23, 0x00	; 0
     ade:	40 2b       	or	r20, r16
     ae0:	51 2b       	or	r21, r17
     ae2:	62 2b       	or	r22, r18
     ae4:	73 2b       	or	r23, r19
     ae6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     aea:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     aee:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     af2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     af6:	b0 9b       	sbis	0x16, 0	; 22
     af8:	1a c0       	rjmp	.+52     	; 0xb2e <__vector_4+0x9a>
     afa:	01 96       	adiw	r24, 0x01	; 1
     afc:	09 2e       	mov	r0, r25
     afe:	00 0c       	add	r0, r0
     b00:	aa 0b       	sbc	r26, r26
     b02:	bb 0b       	sbc	r27, r27
     b04:	bc 01       	movw	r22, r24
     b06:	55 27       	eor	r21, r21
     b08:	44 27       	eor	r20, r20
     b0a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b0e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b12:	a0 e0       	ldi	r26, 0x00	; 0
     b14:	b0 e0       	ldi	r27, 0x00	; 0
     b16:	84 2b       	or	r24, r20
     b18:	95 2b       	or	r25, r21
     b1a:	a6 2b       	or	r26, r22
     b1c:	b7 2b       	or	r27, r23
     b1e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     b22:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     b26:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     b2a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     b2e:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     b32:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     b36:	30 97       	sbiw	r30, 0x00	; 0
     b38:	39 f0       	breq	.+14     	; 0xb48 <__vector_4+0xb4>
     b3a:	63 e0       	ldi	r22, 0x03	; 3
     b3c:	70 e0       	ldi	r23, 0x00	; 0
     b3e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     b42:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     b46:	09 95       	icall
     b48:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     b4c:	ff 91       	pop	r31
     b4e:	ef 91       	pop	r30
     b50:	bf 91       	pop	r27
     b52:	af 91       	pop	r26
     b54:	9f 91       	pop	r25
     b56:	8f 91       	pop	r24
     b58:	7f 91       	pop	r23
     b5a:	6f 91       	pop	r22
     b5c:	5f 91       	pop	r21
     b5e:	4f 91       	pop	r20
     b60:	3f 91       	pop	r19
     b62:	2f 91       	pop	r18
     b64:	1f 91       	pop	r17
     b66:	0f 91       	pop	r16
     b68:	0f 90       	pop	r0
     b6a:	0f be       	out	0x3f, r0	; 63
     b6c:	0f 90       	pop	r0
     b6e:	1f 90       	pop	r1
     b70:	18 95       	reti

00000b72 <__vector_5>:
     b72:	1f 92       	push	r1
     b74:	0f 92       	push	r0
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	0f 92       	push	r0
     b7a:	11 24       	eor	r1, r1
     b7c:	0f 93       	push	r16
     b7e:	1f 93       	push	r17
     b80:	2f 93       	push	r18
     b82:	3f 93       	push	r19
     b84:	4f 93       	push	r20
     b86:	5f 93       	push	r21
     b88:	6f 93       	push	r22
     b8a:	7f 93       	push	r23
     b8c:	8f 93       	push	r24
     b8e:	9f 93       	push	r25
     b90:	af 93       	push	r26
     b92:	bf 93       	push	r27
     b94:	ef 93       	push	r30
     b96:	ff 93       	push	r31
     b98:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     b9c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     ba0:	ac 01       	movw	r20, r24
     ba2:	09 2e       	mov	r0, r25
     ba4:	00 0c       	add	r0, r0
     ba6:	66 0b       	sbc	r22, r22
     ba8:	77 0b       	sbc	r23, r23
     baa:	9a 01       	movw	r18, r20
     bac:	11 27       	eor	r17, r17
     bae:	00 27       	eor	r16, r16
     bb0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bb8:	60 e0       	ldi	r22, 0x00	; 0
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	40 2b       	or	r20, r16
     bbe:	51 2b       	or	r21, r17
     bc0:	62 2b       	or	r22, r18
     bc2:	73 2b       	or	r23, r19
     bc4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     bc8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     bcc:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     bd0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     bd4:	b0 9b       	sbis	0x16, 0	; 22
     bd6:	1a c0       	rjmp	.+52     	; 0xc0c <__vector_5+0x9a>
     bd8:	01 96       	adiw	r24, 0x01	; 1
     bda:	09 2e       	mov	r0, r25
     bdc:	00 0c       	add	r0, r0
     bde:	aa 0b       	sbc	r26, r26
     be0:	bb 0b       	sbc	r27, r27
     be2:	bc 01       	movw	r22, r24
     be4:	55 27       	eor	r21, r21
     be6:	44 27       	eor	r20, r20
     be8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf0:	a0 e0       	ldi	r26, 0x00	; 0
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	84 2b       	or	r24, r20
     bf6:	95 2b       	or	r25, r21
     bf8:	a6 2b       	or	r26, r22
     bfa:	b7 2b       	or	r27, r23
     bfc:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     c00:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     c04:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     c08:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     c0c:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     c10:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     c14:	30 97       	sbiw	r30, 0x00	; 0
     c16:	39 f0       	breq	.+14     	; 0xc26 <__vector_5+0xb4>
     c18:	64 e0       	ldi	r22, 0x04	; 4
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     c20:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     c24:	09 95       	icall
     c26:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     c2a:	ff 91       	pop	r31
     c2c:	ef 91       	pop	r30
     c2e:	bf 91       	pop	r27
     c30:	af 91       	pop	r26
     c32:	9f 91       	pop	r25
     c34:	8f 91       	pop	r24
     c36:	7f 91       	pop	r23
     c38:	6f 91       	pop	r22
     c3a:	5f 91       	pop	r21
     c3c:	4f 91       	pop	r20
     c3e:	3f 91       	pop	r19
     c40:	2f 91       	pop	r18
     c42:	1f 91       	pop	r17
     c44:	0f 91       	pop	r16
     c46:	0f 90       	pop	r0
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	0f 90       	pop	r0
     c4c:	1f 90       	pop	r1
     c4e:	18 95       	reti

00000c50 <__vector_10>:
     c50:	1f 92       	push	r1
     c52:	0f 92       	push	r0
     c54:	0f b6       	in	r0, 0x3f	; 63
     c56:	0f 92       	push	r0
     c58:	11 24       	eor	r1, r1
     c5a:	0f 93       	push	r16
     c5c:	1f 93       	push	r17
     c5e:	2f 93       	push	r18
     c60:	3f 93       	push	r19
     c62:	4f 93       	push	r20
     c64:	5f 93       	push	r21
     c66:	6f 93       	push	r22
     c68:	7f 93       	push	r23
     c6a:	8f 93       	push	r24
     c6c:	9f 93       	push	r25
     c6e:	af 93       	push	r26
     c70:	bf 93       	push	r27
     c72:	ef 93       	push	r30
     c74:	ff 93       	push	r31
     c76:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     c7a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     c7e:	ac 01       	movw	r20, r24
     c80:	09 2e       	mov	r0, r25
     c82:	00 0c       	add	r0, r0
     c84:	66 0b       	sbc	r22, r22
     c86:	77 0b       	sbc	r23, r23
     c88:	9a 01       	movw	r18, r20
     c8a:	11 27       	eor	r17, r17
     c8c:	00 27       	eor	r16, r16
     c8e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c92:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	40 2b       	or	r20, r16
     c9c:	51 2b       	or	r21, r17
     c9e:	62 2b       	or	r22, r18
     ca0:	73 2b       	or	r23, r19
     ca2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     ca6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     caa:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     cae:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     cb2:	b0 9b       	sbis	0x16, 0	; 22
     cb4:	1a c0       	rjmp	.+52     	; 0xcea <__vector_10+0x9a>
     cb6:	01 96       	adiw	r24, 0x01	; 1
     cb8:	09 2e       	mov	r0, r25
     cba:	00 0c       	add	r0, r0
     cbc:	aa 0b       	sbc	r26, r26
     cbe:	bb 0b       	sbc	r27, r27
     cc0:	bc 01       	movw	r22, r24
     cc2:	55 27       	eor	r21, r21
     cc4:	44 27       	eor	r20, r20
     cc6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cce:	a0 e0       	ldi	r26, 0x00	; 0
     cd0:	b0 e0       	ldi	r27, 0x00	; 0
     cd2:	84 2b       	or	r24, r20
     cd4:	95 2b       	or	r25, r21
     cd6:	a6 2b       	or	r26, r22
     cd8:	b7 2b       	or	r27, r23
     cda:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     cde:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     ce2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     ce6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     cea:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
     cee:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
     cf2:	30 97       	sbiw	r30, 0x00	; 0
     cf4:	39 f0       	breq	.+14     	; 0xd04 <__vector_10+0xb4>
     cf6:	65 e0       	ldi	r22, 0x05	; 5
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
     cfe:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
     d02:	09 95       	icall
     d04:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     d08:	ff 91       	pop	r31
     d0a:	ef 91       	pop	r30
     d0c:	bf 91       	pop	r27
     d0e:	af 91       	pop	r26
     d10:	9f 91       	pop	r25
     d12:	8f 91       	pop	r24
     d14:	7f 91       	pop	r23
     d16:	6f 91       	pop	r22
     d18:	5f 91       	pop	r21
     d1a:	4f 91       	pop	r20
     d1c:	3f 91       	pop	r19
     d1e:	2f 91       	pop	r18
     d20:	1f 91       	pop	r17
     d22:	0f 91       	pop	r16
     d24:	0f 90       	pop	r0
     d26:	0f be       	out	0x3f, r0	; 63
     d28:	0f 90       	pop	r0
     d2a:	1f 90       	pop	r1
     d2c:	18 95       	reti

00000d2e <__vector_11>:
     d2e:	1f 92       	push	r1
     d30:	0f 92       	push	r0
     d32:	0f b6       	in	r0, 0x3f	; 63
     d34:	0f 92       	push	r0
     d36:	11 24       	eor	r1, r1
     d38:	0f 93       	push	r16
     d3a:	1f 93       	push	r17
     d3c:	2f 93       	push	r18
     d3e:	3f 93       	push	r19
     d40:	4f 93       	push	r20
     d42:	5f 93       	push	r21
     d44:	6f 93       	push	r22
     d46:	7f 93       	push	r23
     d48:	8f 93       	push	r24
     d4a:	9f 93       	push	r25
     d4c:	af 93       	push	r26
     d4e:	bf 93       	push	r27
     d50:	ef 93       	push	r30
     d52:	ff 93       	push	r31
     d54:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     d58:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     d5c:	ac 01       	movw	r20, r24
     d5e:	09 2e       	mov	r0, r25
     d60:	00 0c       	add	r0, r0
     d62:	66 0b       	sbc	r22, r22
     d64:	77 0b       	sbc	r23, r23
     d66:	9a 01       	movw	r18, r20
     d68:	11 27       	eor	r17, r17
     d6a:	00 27       	eor	r16, r16
     d6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d74:	60 e0       	ldi	r22, 0x00	; 0
     d76:	70 e0       	ldi	r23, 0x00	; 0
     d78:	40 2b       	or	r20, r16
     d7a:	51 2b       	or	r21, r17
     d7c:	62 2b       	or	r22, r18
     d7e:	73 2b       	or	r23, r19
     d80:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     d84:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     d88:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     d8c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     d90:	b0 9b       	sbis	0x16, 0	; 22
     d92:	1a c0       	rjmp	.+52     	; 0xdc8 <__vector_11+0x9a>
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	09 2e       	mov	r0, r25
     d98:	00 0c       	add	r0, r0
     d9a:	aa 0b       	sbc	r26, r26
     d9c:	bb 0b       	sbc	r27, r27
     d9e:	bc 01       	movw	r22, r24
     da0:	55 27       	eor	r21, r21
     da2:	44 27       	eor	r20, r20
     da4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     da8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dac:	a0 e0       	ldi	r26, 0x00	; 0
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	84 2b       	or	r24, r20
     db2:	95 2b       	or	r25, r21
     db4:	a6 2b       	or	r26, r22
     db6:	b7 2b       	or	r27, r23
     db8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     dbc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     dc0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     dc4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     dc8:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
     dcc:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
     dd0:	30 97       	sbiw	r30, 0x00	; 0
     dd2:	39 f0       	breq	.+14     	; 0xde2 <__vector_11+0xb4>
     dd4:	66 e0       	ldi	r22, 0x06	; 6
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
     ddc:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
     de0:	09 95       	icall
     de2:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     de6:	ff 91       	pop	r31
     de8:	ef 91       	pop	r30
     dea:	bf 91       	pop	r27
     dec:	af 91       	pop	r26
     dee:	9f 91       	pop	r25
     df0:	8f 91       	pop	r24
     df2:	7f 91       	pop	r23
     df4:	6f 91       	pop	r22
     df6:	5f 91       	pop	r21
     df8:	4f 91       	pop	r20
     dfa:	3f 91       	pop	r19
     dfc:	2f 91       	pop	r18
     dfe:	1f 91       	pop	r17
     e00:	0f 91       	pop	r16
     e02:	0f 90       	pop	r0
     e04:	0f be       	out	0x3f, r0	; 63
     e06:	0f 90       	pop	r0
     e08:	1f 90       	pop	r1
     e0a:	18 95       	reti

00000e0c <__vector_12>:
     e0c:	1f 92       	push	r1
     e0e:	0f 92       	push	r0
     e10:	0f b6       	in	r0, 0x3f	; 63
     e12:	0f 92       	push	r0
     e14:	11 24       	eor	r1, r1
     e16:	0f 93       	push	r16
     e18:	1f 93       	push	r17
     e1a:	2f 93       	push	r18
     e1c:	3f 93       	push	r19
     e1e:	4f 93       	push	r20
     e20:	5f 93       	push	r21
     e22:	6f 93       	push	r22
     e24:	7f 93       	push	r23
     e26:	8f 93       	push	r24
     e28:	9f 93       	push	r25
     e2a:	af 93       	push	r26
     e2c:	bf 93       	push	r27
     e2e:	ef 93       	push	r30
     e30:	ff 93       	push	r31
     e32:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     e36:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     e3a:	ac 01       	movw	r20, r24
     e3c:	09 2e       	mov	r0, r25
     e3e:	00 0c       	add	r0, r0
     e40:	66 0b       	sbc	r22, r22
     e42:	77 0b       	sbc	r23, r23
     e44:	9a 01       	movw	r18, r20
     e46:	11 27       	eor	r17, r17
     e48:	00 27       	eor	r16, r16
     e4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	70 e0       	ldi	r23, 0x00	; 0
     e56:	40 2b       	or	r20, r16
     e58:	51 2b       	or	r21, r17
     e5a:	62 2b       	or	r22, r18
     e5c:	73 2b       	or	r23, r19
     e5e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     e62:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     e66:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     e6a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     e6e:	b0 9b       	sbis	0x16, 0	; 22
     e70:	1a c0       	rjmp	.+52     	; 0xea6 <__vector_12+0x9a>
     e72:	01 96       	adiw	r24, 0x01	; 1
     e74:	09 2e       	mov	r0, r25
     e76:	00 0c       	add	r0, r0
     e78:	aa 0b       	sbc	r26, r26
     e7a:	bb 0b       	sbc	r27, r27
     e7c:	bc 01       	movw	r22, r24
     e7e:	55 27       	eor	r21, r21
     e80:	44 27       	eor	r20, r20
     e82:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e86:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e8a:	a0 e0       	ldi	r26, 0x00	; 0
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	84 2b       	or	r24, r20
     e90:	95 2b       	or	r25, r21
     e92:	a6 2b       	or	r26, r22
     e94:	b7 2b       	or	r27, r23
     e96:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e9a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e9e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     ea2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     ea6:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
     eaa:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
     eae:	30 97       	sbiw	r30, 0x00	; 0
     eb0:	39 f0       	breq	.+14     	; 0xec0 <__vector_12+0xb4>
     eb2:	67 e0       	ldi	r22, 0x07	; 7
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
     eba:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
     ebe:	09 95       	icall
     ec0:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     ec4:	ff 91       	pop	r31
     ec6:	ef 91       	pop	r30
     ec8:	bf 91       	pop	r27
     eca:	af 91       	pop	r26
     ecc:	9f 91       	pop	r25
     ece:	8f 91       	pop	r24
     ed0:	7f 91       	pop	r23
     ed2:	6f 91       	pop	r22
     ed4:	5f 91       	pop	r21
     ed6:	4f 91       	pop	r20
     ed8:	3f 91       	pop	r19
     eda:	2f 91       	pop	r18
     edc:	1f 91       	pop	r17
     ede:	0f 91       	pop	r16
     ee0:	0f 90       	pop	r0
     ee2:	0f be       	out	0x3f, r0	; 63
     ee4:	0f 90       	pop	r0
     ee6:	1f 90       	pop	r1
     ee8:	18 95       	reti

00000eea <__vector_13>:
     eea:	1f 92       	push	r1
     eec:	0f 92       	push	r0
     eee:	0f b6       	in	r0, 0x3f	; 63
     ef0:	0f 92       	push	r0
     ef2:	11 24       	eor	r1, r1
     ef4:	0f 93       	push	r16
     ef6:	1f 93       	push	r17
     ef8:	2f 93       	push	r18
     efa:	3f 93       	push	r19
     efc:	4f 93       	push	r20
     efe:	5f 93       	push	r21
     f00:	6f 93       	push	r22
     f02:	7f 93       	push	r23
     f04:	8f 93       	push	r24
     f06:	9f 93       	push	r25
     f08:	af 93       	push	r26
     f0a:	bf 93       	push	r27
     f0c:	ef 93       	push	r30
     f0e:	ff 93       	push	r31
     f10:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     f14:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     f18:	ac 01       	movw	r20, r24
     f1a:	09 2e       	mov	r0, r25
     f1c:	00 0c       	add	r0, r0
     f1e:	66 0b       	sbc	r22, r22
     f20:	77 0b       	sbc	r23, r23
     f22:	9a 01       	movw	r18, r20
     f24:	11 27       	eor	r17, r17
     f26:	00 27       	eor	r16, r16
     f28:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f2c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	40 2b       	or	r20, r16
     f36:	51 2b       	or	r21, r17
     f38:	62 2b       	or	r22, r18
     f3a:	73 2b       	or	r23, r19
     f3c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     f40:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     f44:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     f48:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     f4c:	b0 9b       	sbis	0x16, 0	; 22
     f4e:	1a c0       	rjmp	.+52     	; 0xf84 <__vector_13+0x9a>
     f50:	01 96       	adiw	r24, 0x01	; 1
     f52:	09 2e       	mov	r0, r25
     f54:	00 0c       	add	r0, r0
     f56:	aa 0b       	sbc	r26, r26
     f58:	bb 0b       	sbc	r27, r27
     f5a:	bc 01       	movw	r22, r24
     f5c:	55 27       	eor	r21, r21
     f5e:	44 27       	eor	r20, r20
     f60:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f64:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f68:	a0 e0       	ldi	r26, 0x00	; 0
     f6a:	b0 e0       	ldi	r27, 0x00	; 0
     f6c:	84 2b       	or	r24, r20
     f6e:	95 2b       	or	r25, r21
     f70:	a6 2b       	or	r26, r22
     f72:	b7 2b       	or	r27, r23
     f74:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     f78:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     f7c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     f80:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f84:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
     f88:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
     f8c:	30 97       	sbiw	r30, 0x00	; 0
     f8e:	39 f0       	breq	.+14     	; 0xf9e <__vector_13+0xb4>
     f90:	68 e0       	ldi	r22, 0x08	; 8
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
     f98:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
     f9c:	09 95       	icall
     f9e:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
     fa2:	ff 91       	pop	r31
     fa4:	ef 91       	pop	r30
     fa6:	bf 91       	pop	r27
     fa8:	af 91       	pop	r26
     faa:	9f 91       	pop	r25
     fac:	8f 91       	pop	r24
     fae:	7f 91       	pop	r23
     fb0:	6f 91       	pop	r22
     fb2:	5f 91       	pop	r21
     fb4:	4f 91       	pop	r20
     fb6:	3f 91       	pop	r19
     fb8:	2f 91       	pop	r18
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	0f 90       	pop	r0
     fc0:	0f be       	out	0x3f, r0	; 63
     fc2:	0f 90       	pop	r0
     fc4:	1f 90       	pop	r1
     fc6:	18 95       	reti

00000fc8 <__vector_14>:
     fc8:	1f 92       	push	r1
     fca:	0f 92       	push	r0
     fcc:	0f b6       	in	r0, 0x3f	; 63
     fce:	0f 92       	push	r0
     fd0:	11 24       	eor	r1, r1
     fd2:	0f 93       	push	r16
     fd4:	1f 93       	push	r17
     fd6:	2f 93       	push	r18
     fd8:	3f 93       	push	r19
     fda:	4f 93       	push	r20
     fdc:	5f 93       	push	r21
     fde:	6f 93       	push	r22
     fe0:	7f 93       	push	r23
     fe2:	8f 93       	push	r24
     fe4:	9f 93       	push	r25
     fe6:	af 93       	push	r26
     fe8:	bf 93       	push	r27
     fea:	ef 93       	push	r30
     fec:	ff 93       	push	r31
     fee:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     ff2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     ff6:	ac 01       	movw	r20, r24
     ff8:	09 2e       	mov	r0, r25
     ffa:	00 0c       	add	r0, r0
     ffc:	66 0b       	sbc	r22, r22
     ffe:	77 0b       	sbc	r23, r23
    1000:	9a 01       	movw	r18, r20
    1002:	11 27       	eor	r17, r17
    1004:	00 27       	eor	r16, r16
    1006:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    100a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    100e:	60 e0       	ldi	r22, 0x00	; 0
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	40 2b       	or	r20, r16
    1014:	51 2b       	or	r21, r17
    1016:	62 2b       	or	r22, r18
    1018:	73 2b       	or	r23, r19
    101a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    101e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1022:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1026:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    102a:	b0 9b       	sbis	0x16, 0	; 22
    102c:	1a c0       	rjmp	.+52     	; 0x1062 <__vector_14+0x9a>
    102e:	01 96       	adiw	r24, 0x01	; 1
    1030:	09 2e       	mov	r0, r25
    1032:	00 0c       	add	r0, r0
    1034:	aa 0b       	sbc	r26, r26
    1036:	bb 0b       	sbc	r27, r27
    1038:	bc 01       	movw	r22, r24
    103a:	55 27       	eor	r21, r21
    103c:	44 27       	eor	r20, r20
    103e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1042:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	84 2b       	or	r24, r20
    104c:	95 2b       	or	r25, r21
    104e:	a6 2b       	or	r26, r22
    1050:	b7 2b       	or	r27, r23
    1052:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1056:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    105a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    105e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1062:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    1066:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    106a:	30 97       	sbiw	r30, 0x00	; 0
    106c:	39 f0       	breq	.+14     	; 0x107c <__vector_14+0xb4>
    106e:	69 e0       	ldi	r22, 0x09	; 9
    1070:	70 e0       	ldi	r23, 0x00	; 0
    1072:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    1076:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    107a:	09 95       	icall
    107c:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    1080:	ff 91       	pop	r31
    1082:	ef 91       	pop	r30
    1084:	bf 91       	pop	r27
    1086:	af 91       	pop	r26
    1088:	9f 91       	pop	r25
    108a:	8f 91       	pop	r24
    108c:	7f 91       	pop	r23
    108e:	6f 91       	pop	r22
    1090:	5f 91       	pop	r21
    1092:	4f 91       	pop	r20
    1094:	3f 91       	pop	r19
    1096:	2f 91       	pop	r18
    1098:	1f 91       	pop	r17
    109a:	0f 91       	pop	r16
    109c:	0f 90       	pop	r0
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	0f 90       	pop	r0
    10a2:	1f 90       	pop	r1
    10a4:	18 95       	reti

000010a6 <__vector_15>:
    10a6:	1f 92       	push	r1
    10a8:	0f 92       	push	r0
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	0f 92       	push	r0
    10ae:	11 24       	eor	r1, r1
    10b0:	0f 93       	push	r16
    10b2:	1f 93       	push	r17
    10b4:	2f 93       	push	r18
    10b6:	3f 93       	push	r19
    10b8:	4f 93       	push	r20
    10ba:	5f 93       	push	r21
    10bc:	6f 93       	push	r22
    10be:	7f 93       	push	r23
    10c0:	8f 93       	push	r24
    10c2:	9f 93       	push	r25
    10c4:	af 93       	push	r26
    10c6:	bf 93       	push	r27
    10c8:	ef 93       	push	r30
    10ca:	ff 93       	push	r31
    10cc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    10d0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    10d4:	ac 01       	movw	r20, r24
    10d6:	09 2e       	mov	r0, r25
    10d8:	00 0c       	add	r0, r0
    10da:	66 0b       	sbc	r22, r22
    10dc:	77 0b       	sbc	r23, r23
    10de:	9a 01       	movw	r18, r20
    10e0:	11 27       	eor	r17, r17
    10e2:	00 27       	eor	r16, r16
    10e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ec:	60 e0       	ldi	r22, 0x00	; 0
    10ee:	70 e0       	ldi	r23, 0x00	; 0
    10f0:	40 2b       	or	r20, r16
    10f2:	51 2b       	or	r21, r17
    10f4:	62 2b       	or	r22, r18
    10f6:	73 2b       	or	r23, r19
    10f8:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    10fc:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1100:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1104:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1108:	b0 9b       	sbis	0x16, 0	; 22
    110a:	1a c0       	rjmp	.+52     	; 0x1140 <__vector_15+0x9a>
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	09 2e       	mov	r0, r25
    1110:	00 0c       	add	r0, r0
    1112:	aa 0b       	sbc	r26, r26
    1114:	bb 0b       	sbc	r27, r27
    1116:	bc 01       	movw	r22, r24
    1118:	55 27       	eor	r21, r21
    111a:	44 27       	eor	r20, r20
    111c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1120:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1124:	a0 e0       	ldi	r26, 0x00	; 0
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	84 2b       	or	r24, r20
    112a:	95 2b       	or	r25, r21
    112c:	a6 2b       	or	r26, r22
    112e:	b7 2b       	or	r27, r23
    1130:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1134:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1138:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    113c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1140:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    1144:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    1148:	30 97       	sbiw	r30, 0x00	; 0
    114a:	39 f0       	breq	.+14     	; 0x115a <__vector_15+0xb4>
    114c:	6a e0       	ldi	r22, 0x0A	; 10
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    1154:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    1158:	09 95       	icall
    115a:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    115e:	ff 91       	pop	r31
    1160:	ef 91       	pop	r30
    1162:	bf 91       	pop	r27
    1164:	af 91       	pop	r26
    1166:	9f 91       	pop	r25
    1168:	8f 91       	pop	r24
    116a:	7f 91       	pop	r23
    116c:	6f 91       	pop	r22
    116e:	5f 91       	pop	r21
    1170:	4f 91       	pop	r20
    1172:	3f 91       	pop	r19
    1174:	2f 91       	pop	r18
    1176:	1f 91       	pop	r17
    1178:	0f 91       	pop	r16
    117a:	0f 90       	pop	r0
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	0f 90       	pop	r0
    1180:	1f 90       	pop	r1
    1182:	18 95       	reti

00001184 <__vector_16>:
    1184:	1f 92       	push	r1
    1186:	0f 92       	push	r0
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	0f 92       	push	r0
    118c:	11 24       	eor	r1, r1
    118e:	0f 93       	push	r16
    1190:	1f 93       	push	r17
    1192:	2f 93       	push	r18
    1194:	3f 93       	push	r19
    1196:	4f 93       	push	r20
    1198:	5f 93       	push	r21
    119a:	6f 93       	push	r22
    119c:	7f 93       	push	r23
    119e:	8f 93       	push	r24
    11a0:	9f 93       	push	r25
    11a2:	af 93       	push	r26
    11a4:	bf 93       	push	r27
    11a6:	ef 93       	push	r30
    11a8:	ff 93       	push	r31
    11aa:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    11ae:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    11b2:	ac 01       	movw	r20, r24
    11b4:	09 2e       	mov	r0, r25
    11b6:	00 0c       	add	r0, r0
    11b8:	66 0b       	sbc	r22, r22
    11ba:	77 0b       	sbc	r23, r23
    11bc:	9a 01       	movw	r18, r20
    11be:	11 27       	eor	r17, r17
    11c0:	00 27       	eor	r16, r16
    11c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ca:	60 e0       	ldi	r22, 0x00	; 0
    11cc:	70 e0       	ldi	r23, 0x00	; 0
    11ce:	40 2b       	or	r20, r16
    11d0:	51 2b       	or	r21, r17
    11d2:	62 2b       	or	r22, r18
    11d4:	73 2b       	or	r23, r19
    11d6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    11da:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    11de:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    11e2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    11e6:	b0 9b       	sbis	0x16, 0	; 22
    11e8:	1a c0       	rjmp	.+52     	; 0x121e <__vector_16+0x9a>
    11ea:	01 96       	adiw	r24, 0x01	; 1
    11ec:	09 2e       	mov	r0, r25
    11ee:	00 0c       	add	r0, r0
    11f0:	aa 0b       	sbc	r26, r26
    11f2:	bb 0b       	sbc	r27, r27
    11f4:	bc 01       	movw	r22, r24
    11f6:	55 27       	eor	r21, r21
    11f8:	44 27       	eor	r20, r20
    11fa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11fe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1202:	a0 e0       	ldi	r26, 0x00	; 0
    1204:	b0 e0       	ldi	r27, 0x00	; 0
    1206:	84 2b       	or	r24, r20
    1208:	95 2b       	or	r25, r21
    120a:	a6 2b       	or	r26, r22
    120c:	b7 2b       	or	r27, r23
    120e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1212:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1216:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    121a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    121e:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    1222:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    1226:	30 97       	sbiw	r30, 0x00	; 0
    1228:	39 f0       	breq	.+14     	; 0x1238 <__vector_16+0xb4>
    122a:	6b e0       	ldi	r22, 0x0B	; 11
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    1232:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    1236:	09 95       	icall
    1238:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    123c:	ff 91       	pop	r31
    123e:	ef 91       	pop	r30
    1240:	bf 91       	pop	r27
    1242:	af 91       	pop	r26
    1244:	9f 91       	pop	r25
    1246:	8f 91       	pop	r24
    1248:	7f 91       	pop	r23
    124a:	6f 91       	pop	r22
    124c:	5f 91       	pop	r21
    124e:	4f 91       	pop	r20
    1250:	3f 91       	pop	r19
    1252:	2f 91       	pop	r18
    1254:	1f 91       	pop	r17
    1256:	0f 91       	pop	r16
    1258:	0f 90       	pop	r0
    125a:	0f be       	out	0x3f, r0	; 63
    125c:	0f 90       	pop	r0
    125e:	1f 90       	pop	r1
    1260:	18 95       	reti

00001262 <__vector_17>:
    1262:	1f 92       	push	r1
    1264:	0f 92       	push	r0
    1266:	0f b6       	in	r0, 0x3f	; 63
    1268:	0f 92       	push	r0
    126a:	11 24       	eor	r1, r1
    126c:	0f 93       	push	r16
    126e:	1f 93       	push	r17
    1270:	2f 93       	push	r18
    1272:	3f 93       	push	r19
    1274:	4f 93       	push	r20
    1276:	5f 93       	push	r21
    1278:	6f 93       	push	r22
    127a:	7f 93       	push	r23
    127c:	8f 93       	push	r24
    127e:	9f 93       	push	r25
    1280:	af 93       	push	r26
    1282:	bf 93       	push	r27
    1284:	ef 93       	push	r30
    1286:	ff 93       	push	r31
    1288:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    128c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1290:	ac 01       	movw	r20, r24
    1292:	09 2e       	mov	r0, r25
    1294:	00 0c       	add	r0, r0
    1296:	66 0b       	sbc	r22, r22
    1298:	77 0b       	sbc	r23, r23
    129a:	9a 01       	movw	r18, r20
    129c:	11 27       	eor	r17, r17
    129e:	00 27       	eor	r16, r16
    12a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a8:	60 e0       	ldi	r22, 0x00	; 0
    12aa:	70 e0       	ldi	r23, 0x00	; 0
    12ac:	40 2b       	or	r20, r16
    12ae:	51 2b       	or	r21, r17
    12b0:	62 2b       	or	r22, r18
    12b2:	73 2b       	or	r23, r19
    12b4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    12b8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    12bc:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    12c0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    12c4:	b0 9b       	sbis	0x16, 0	; 22
    12c6:	1a c0       	rjmp	.+52     	; 0x12fc <__vector_17+0x9a>
    12c8:	01 96       	adiw	r24, 0x01	; 1
    12ca:	09 2e       	mov	r0, r25
    12cc:	00 0c       	add	r0, r0
    12ce:	aa 0b       	sbc	r26, r26
    12d0:	bb 0b       	sbc	r27, r27
    12d2:	bc 01       	movw	r22, r24
    12d4:	55 27       	eor	r21, r21
    12d6:	44 27       	eor	r20, r20
    12d8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12dc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12e0:	a0 e0       	ldi	r26, 0x00	; 0
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
    12e4:	84 2b       	or	r24, r20
    12e6:	95 2b       	or	r25, r21
    12e8:	a6 2b       	or	r26, r22
    12ea:	b7 2b       	or	r27, r23
    12ec:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    12f0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    12f4:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    12f8:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    12fc:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    1300:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    1304:	30 97       	sbiw	r30, 0x00	; 0
    1306:	39 f0       	breq	.+14     	; 0x1316 <__vector_17+0xb4>
    1308:	6c e0       	ldi	r22, 0x0C	; 12
    130a:	70 e0       	ldi	r23, 0x00	; 0
    130c:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    1310:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    1314:	09 95       	icall
    1316:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    131a:	ff 91       	pop	r31
    131c:	ef 91       	pop	r30
    131e:	bf 91       	pop	r27
    1320:	af 91       	pop	r26
    1322:	9f 91       	pop	r25
    1324:	8f 91       	pop	r24
    1326:	7f 91       	pop	r23
    1328:	6f 91       	pop	r22
    132a:	5f 91       	pop	r21
    132c:	4f 91       	pop	r20
    132e:	3f 91       	pop	r19
    1330:	2f 91       	pop	r18
    1332:	1f 91       	pop	r17
    1334:	0f 91       	pop	r16
    1336:	0f 90       	pop	r0
    1338:	0f be       	out	0x3f, r0	; 63
    133a:	0f 90       	pop	r0
    133c:	1f 90       	pop	r1
    133e:	18 95       	reti

00001340 <__vector_18>:
    1340:	1f 92       	push	r1
    1342:	0f 92       	push	r0
    1344:	0f b6       	in	r0, 0x3f	; 63
    1346:	0f 92       	push	r0
    1348:	11 24       	eor	r1, r1
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	2f 93       	push	r18
    1350:	3f 93       	push	r19
    1352:	4f 93       	push	r20
    1354:	5f 93       	push	r21
    1356:	6f 93       	push	r22
    1358:	7f 93       	push	r23
    135a:	8f 93       	push	r24
    135c:	9f 93       	push	r25
    135e:	af 93       	push	r26
    1360:	bf 93       	push	r27
    1362:	ef 93       	push	r30
    1364:	ff 93       	push	r31
    1366:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    136a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    136e:	ac 01       	movw	r20, r24
    1370:	09 2e       	mov	r0, r25
    1372:	00 0c       	add	r0, r0
    1374:	66 0b       	sbc	r22, r22
    1376:	77 0b       	sbc	r23, r23
    1378:	9a 01       	movw	r18, r20
    137a:	11 27       	eor	r17, r17
    137c:	00 27       	eor	r16, r16
    137e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1382:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	40 2b       	or	r20, r16
    138c:	51 2b       	or	r21, r17
    138e:	62 2b       	or	r22, r18
    1390:	73 2b       	or	r23, r19
    1392:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1396:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    139a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    139e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    13a2:	b0 9b       	sbis	0x16, 0	; 22
    13a4:	1a c0       	rjmp	.+52     	; 0x13da <__vector_18+0x9a>
    13a6:	01 96       	adiw	r24, 0x01	; 1
    13a8:	09 2e       	mov	r0, r25
    13aa:	00 0c       	add	r0, r0
    13ac:	aa 0b       	sbc	r26, r26
    13ae:	bb 0b       	sbc	r27, r27
    13b0:	bc 01       	movw	r22, r24
    13b2:	55 27       	eor	r21, r21
    13b4:	44 27       	eor	r20, r20
    13b6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13ba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13be:	a0 e0       	ldi	r26, 0x00	; 0
    13c0:	b0 e0       	ldi	r27, 0x00	; 0
    13c2:	84 2b       	or	r24, r20
    13c4:	95 2b       	or	r25, r21
    13c6:	a6 2b       	or	r26, r22
    13c8:	b7 2b       	or	r27, r23
    13ca:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    13ce:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    13d2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    13d6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    13da:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    13de:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    13e2:	30 97       	sbiw	r30, 0x00	; 0
    13e4:	39 f0       	breq	.+14     	; 0x13f4 <__vector_18+0xb4>
    13e6:	6d e0       	ldi	r22, 0x0D	; 13
    13e8:	70 e0       	ldi	r23, 0x00	; 0
    13ea:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    13ee:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    13f2:	09 95       	icall
    13f4:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    13f8:	ff 91       	pop	r31
    13fa:	ef 91       	pop	r30
    13fc:	bf 91       	pop	r27
    13fe:	af 91       	pop	r26
    1400:	9f 91       	pop	r25
    1402:	8f 91       	pop	r24
    1404:	7f 91       	pop	r23
    1406:	6f 91       	pop	r22
    1408:	5f 91       	pop	r21
    140a:	4f 91       	pop	r20
    140c:	3f 91       	pop	r19
    140e:	2f 91       	pop	r18
    1410:	1f 91       	pop	r17
    1412:	0f 91       	pop	r16
    1414:	0f 90       	pop	r0
    1416:	0f be       	out	0x3f, r0	; 63
    1418:	0f 90       	pop	r0
    141a:	1f 90       	pop	r1
    141c:	18 95       	reti

0000141e <__vector_19>:
    141e:	1f 92       	push	r1
    1420:	0f 92       	push	r0
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	0f 92       	push	r0
    1426:	11 24       	eor	r1, r1
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	2f 93       	push	r18
    142e:	3f 93       	push	r19
    1430:	4f 93       	push	r20
    1432:	5f 93       	push	r21
    1434:	6f 93       	push	r22
    1436:	7f 93       	push	r23
    1438:	8f 93       	push	r24
    143a:	9f 93       	push	r25
    143c:	af 93       	push	r26
    143e:	bf 93       	push	r27
    1440:	ef 93       	push	r30
    1442:	ff 93       	push	r31
    1444:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1448:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    144c:	ac 01       	movw	r20, r24
    144e:	09 2e       	mov	r0, r25
    1450:	00 0c       	add	r0, r0
    1452:	66 0b       	sbc	r22, r22
    1454:	77 0b       	sbc	r23, r23
    1456:	9a 01       	movw	r18, r20
    1458:	11 27       	eor	r17, r17
    145a:	00 27       	eor	r16, r16
    145c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1460:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1464:	60 e0       	ldi	r22, 0x00	; 0
    1466:	70 e0       	ldi	r23, 0x00	; 0
    1468:	40 2b       	or	r20, r16
    146a:	51 2b       	or	r21, r17
    146c:	62 2b       	or	r22, r18
    146e:	73 2b       	or	r23, r19
    1470:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1474:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1478:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    147c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1480:	b0 9b       	sbis	0x16, 0	; 22
    1482:	1a c0       	rjmp	.+52     	; 0x14b8 <__vector_19+0x9a>
    1484:	01 96       	adiw	r24, 0x01	; 1
    1486:	09 2e       	mov	r0, r25
    1488:	00 0c       	add	r0, r0
    148a:	aa 0b       	sbc	r26, r26
    148c:	bb 0b       	sbc	r27, r27
    148e:	bc 01       	movw	r22, r24
    1490:	55 27       	eor	r21, r21
    1492:	44 27       	eor	r20, r20
    1494:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1498:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    149c:	a0 e0       	ldi	r26, 0x00	; 0
    149e:	b0 e0       	ldi	r27, 0x00	; 0
    14a0:	84 2b       	or	r24, r20
    14a2:	95 2b       	or	r25, r21
    14a4:	a6 2b       	or	r26, r22
    14a6:	b7 2b       	or	r27, r23
    14a8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    14ac:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    14b0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    14b4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    14b8:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    14bc:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    14c0:	30 97       	sbiw	r30, 0x00	; 0
    14c2:	39 f0       	breq	.+14     	; 0x14d2 <__vector_19+0xb4>
    14c4:	6e e0       	ldi	r22, 0x0E	; 14
    14c6:	70 e0       	ldi	r23, 0x00	; 0
    14c8:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    14cc:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    14d0:	09 95       	icall
    14d2:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    14d6:	ff 91       	pop	r31
    14d8:	ef 91       	pop	r30
    14da:	bf 91       	pop	r27
    14dc:	af 91       	pop	r26
    14de:	9f 91       	pop	r25
    14e0:	8f 91       	pop	r24
    14e2:	7f 91       	pop	r23
    14e4:	6f 91       	pop	r22
    14e6:	5f 91       	pop	r21
    14e8:	4f 91       	pop	r20
    14ea:	3f 91       	pop	r19
    14ec:	2f 91       	pop	r18
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	0f 90       	pop	r0
    14f4:	0f be       	out	0x3f, r0	; 63
    14f6:	0f 90       	pop	r0
    14f8:	1f 90       	pop	r1
    14fa:	18 95       	reti

000014fc <__vector_20>:
    14fc:	1f 92       	push	r1
    14fe:	0f 92       	push	r0
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	0f 92       	push	r0
    1504:	11 24       	eor	r1, r1
    1506:	0f 93       	push	r16
    1508:	1f 93       	push	r17
    150a:	2f 93       	push	r18
    150c:	3f 93       	push	r19
    150e:	4f 93       	push	r20
    1510:	5f 93       	push	r21
    1512:	6f 93       	push	r22
    1514:	7f 93       	push	r23
    1516:	8f 93       	push	r24
    1518:	9f 93       	push	r25
    151a:	af 93       	push	r26
    151c:	bf 93       	push	r27
    151e:	ef 93       	push	r30
    1520:	ff 93       	push	r31
    1522:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1526:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    152a:	ac 01       	movw	r20, r24
    152c:	09 2e       	mov	r0, r25
    152e:	00 0c       	add	r0, r0
    1530:	66 0b       	sbc	r22, r22
    1532:	77 0b       	sbc	r23, r23
    1534:	9a 01       	movw	r18, r20
    1536:	11 27       	eor	r17, r17
    1538:	00 27       	eor	r16, r16
    153a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    153e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1542:	60 e0       	ldi	r22, 0x00	; 0
    1544:	70 e0       	ldi	r23, 0x00	; 0
    1546:	40 2b       	or	r20, r16
    1548:	51 2b       	or	r21, r17
    154a:	62 2b       	or	r22, r18
    154c:	73 2b       	or	r23, r19
    154e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1552:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1556:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    155a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    155e:	b0 9b       	sbis	0x16, 0	; 22
    1560:	1a c0       	rjmp	.+52     	; 0x1596 <__vector_20+0x9a>
    1562:	01 96       	adiw	r24, 0x01	; 1
    1564:	09 2e       	mov	r0, r25
    1566:	00 0c       	add	r0, r0
    1568:	aa 0b       	sbc	r26, r26
    156a:	bb 0b       	sbc	r27, r27
    156c:	bc 01       	movw	r22, r24
    156e:	55 27       	eor	r21, r21
    1570:	44 27       	eor	r20, r20
    1572:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1576:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    157a:	a0 e0       	ldi	r26, 0x00	; 0
    157c:	b0 e0       	ldi	r27, 0x00	; 0
    157e:	84 2b       	or	r24, r20
    1580:	95 2b       	or	r25, r21
    1582:	a6 2b       	or	r26, r22
    1584:	b7 2b       	or	r27, r23
    1586:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    158a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    158e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1592:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1596:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    159a:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    159e:	30 97       	sbiw	r30, 0x00	; 0
    15a0:	39 f0       	breq	.+14     	; 0x15b0 <__vector_20+0xb4>
    15a2:	6f e0       	ldi	r22, 0x0F	; 15
    15a4:	70 e0       	ldi	r23, 0x00	; 0
    15a6:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    15aa:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    15ae:	09 95       	icall
    15b0:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    15b4:	ff 91       	pop	r31
    15b6:	ef 91       	pop	r30
    15b8:	bf 91       	pop	r27
    15ba:	af 91       	pop	r26
    15bc:	9f 91       	pop	r25
    15be:	8f 91       	pop	r24
    15c0:	7f 91       	pop	r23
    15c2:	6f 91       	pop	r22
    15c4:	5f 91       	pop	r21
    15c6:	4f 91       	pop	r20
    15c8:	3f 91       	pop	r19
    15ca:	2f 91       	pop	r18
    15cc:	1f 91       	pop	r17
    15ce:	0f 91       	pop	r16
    15d0:	0f 90       	pop	r0
    15d2:	0f be       	out	0x3f, r0	; 63
    15d4:	0f 90       	pop	r0
    15d6:	1f 90       	pop	r1
    15d8:	18 95       	reti

000015da <__vector_21>:
    15da:	1f 92       	push	r1
    15dc:	0f 92       	push	r0
    15de:	0f b6       	in	r0, 0x3f	; 63
    15e0:	0f 92       	push	r0
    15e2:	11 24       	eor	r1, r1
    15e4:	0f 93       	push	r16
    15e6:	1f 93       	push	r17
    15e8:	2f 93       	push	r18
    15ea:	3f 93       	push	r19
    15ec:	4f 93       	push	r20
    15ee:	5f 93       	push	r21
    15f0:	6f 93       	push	r22
    15f2:	7f 93       	push	r23
    15f4:	8f 93       	push	r24
    15f6:	9f 93       	push	r25
    15f8:	af 93       	push	r26
    15fa:	bf 93       	push	r27
    15fc:	ef 93       	push	r30
    15fe:	ff 93       	push	r31
    1600:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1604:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1608:	ac 01       	movw	r20, r24
    160a:	09 2e       	mov	r0, r25
    160c:	00 0c       	add	r0, r0
    160e:	66 0b       	sbc	r22, r22
    1610:	77 0b       	sbc	r23, r23
    1612:	9a 01       	movw	r18, r20
    1614:	11 27       	eor	r17, r17
    1616:	00 27       	eor	r16, r16
    1618:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    161c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1620:	60 e0       	ldi	r22, 0x00	; 0
    1622:	70 e0       	ldi	r23, 0x00	; 0
    1624:	40 2b       	or	r20, r16
    1626:	51 2b       	or	r21, r17
    1628:	62 2b       	or	r22, r18
    162a:	73 2b       	or	r23, r19
    162c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1630:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1634:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1638:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    163c:	b0 9b       	sbis	0x16, 0	; 22
    163e:	1a c0       	rjmp	.+52     	; 0x1674 <__vector_21+0x9a>
    1640:	01 96       	adiw	r24, 0x01	; 1
    1642:	09 2e       	mov	r0, r25
    1644:	00 0c       	add	r0, r0
    1646:	aa 0b       	sbc	r26, r26
    1648:	bb 0b       	sbc	r27, r27
    164a:	bc 01       	movw	r22, r24
    164c:	55 27       	eor	r21, r21
    164e:	44 27       	eor	r20, r20
    1650:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1654:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1658:	a0 e0       	ldi	r26, 0x00	; 0
    165a:	b0 e0       	ldi	r27, 0x00	; 0
    165c:	84 2b       	or	r24, r20
    165e:	95 2b       	or	r25, r21
    1660:	a6 2b       	or	r26, r22
    1662:	b7 2b       	or	r27, r23
    1664:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1668:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    166c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1670:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1674:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    1678:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    167c:	30 97       	sbiw	r30, 0x00	; 0
    167e:	39 f0       	breq	.+14     	; 0x168e <__vector_21+0xb4>
    1680:	60 e1       	ldi	r22, 0x10	; 16
    1682:	70 e0       	ldi	r23, 0x00	; 0
    1684:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    1688:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    168c:	09 95       	icall
    168e:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    1692:	ff 91       	pop	r31
    1694:	ef 91       	pop	r30
    1696:	bf 91       	pop	r27
    1698:	af 91       	pop	r26
    169a:	9f 91       	pop	r25
    169c:	8f 91       	pop	r24
    169e:	7f 91       	pop	r23
    16a0:	6f 91       	pop	r22
    16a2:	5f 91       	pop	r21
    16a4:	4f 91       	pop	r20
    16a6:	3f 91       	pop	r19
    16a8:	2f 91       	pop	r18
    16aa:	1f 91       	pop	r17
    16ac:	0f 91       	pop	r16
    16ae:	0f 90       	pop	r0
    16b0:	0f be       	out	0x3f, r0	; 63
    16b2:	0f 90       	pop	r0
    16b4:	1f 90       	pop	r1
    16b6:	18 95       	reti

000016b8 <__vector_22>:
    16b8:	1f 92       	push	r1
    16ba:	0f 92       	push	r0
    16bc:	0f b6       	in	r0, 0x3f	; 63
    16be:	0f 92       	push	r0
    16c0:	11 24       	eor	r1, r1
    16c2:	0f 93       	push	r16
    16c4:	1f 93       	push	r17
    16c6:	2f 93       	push	r18
    16c8:	3f 93       	push	r19
    16ca:	4f 93       	push	r20
    16cc:	5f 93       	push	r21
    16ce:	6f 93       	push	r22
    16d0:	7f 93       	push	r23
    16d2:	8f 93       	push	r24
    16d4:	9f 93       	push	r25
    16d6:	af 93       	push	r26
    16d8:	bf 93       	push	r27
    16da:	ef 93       	push	r30
    16dc:	ff 93       	push	r31
    16de:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    16e2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    16e6:	ac 01       	movw	r20, r24
    16e8:	09 2e       	mov	r0, r25
    16ea:	00 0c       	add	r0, r0
    16ec:	66 0b       	sbc	r22, r22
    16ee:	77 0b       	sbc	r23, r23
    16f0:	9a 01       	movw	r18, r20
    16f2:	11 27       	eor	r17, r17
    16f4:	00 27       	eor	r16, r16
    16f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16fe:	60 e0       	ldi	r22, 0x00	; 0
    1700:	70 e0       	ldi	r23, 0x00	; 0
    1702:	40 2b       	or	r20, r16
    1704:	51 2b       	or	r21, r17
    1706:	62 2b       	or	r22, r18
    1708:	73 2b       	or	r23, r19
    170a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    170e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1712:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1716:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    171a:	b0 9b       	sbis	0x16, 0	; 22
    171c:	1a c0       	rjmp	.+52     	; 0x1752 <__vector_22+0x9a>
    171e:	01 96       	adiw	r24, 0x01	; 1
    1720:	09 2e       	mov	r0, r25
    1722:	00 0c       	add	r0, r0
    1724:	aa 0b       	sbc	r26, r26
    1726:	bb 0b       	sbc	r27, r27
    1728:	bc 01       	movw	r22, r24
    172a:	55 27       	eor	r21, r21
    172c:	44 27       	eor	r20, r20
    172e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1732:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1736:	a0 e0       	ldi	r26, 0x00	; 0
    1738:	b0 e0       	ldi	r27, 0x00	; 0
    173a:	84 2b       	or	r24, r20
    173c:	95 2b       	or	r25, r21
    173e:	a6 2b       	or	r26, r22
    1740:	b7 2b       	or	r27, r23
    1742:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1746:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    174a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    174e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1752:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    1756:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    175a:	30 97       	sbiw	r30, 0x00	; 0
    175c:	39 f0       	breq	.+14     	; 0x176c <__vector_22+0xb4>
    175e:	61 e1       	ldi	r22, 0x11	; 17
    1760:	70 e0       	ldi	r23, 0x00	; 0
    1762:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    1766:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    176a:	09 95       	icall
    176c:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    1770:	ff 91       	pop	r31
    1772:	ef 91       	pop	r30
    1774:	bf 91       	pop	r27
    1776:	af 91       	pop	r26
    1778:	9f 91       	pop	r25
    177a:	8f 91       	pop	r24
    177c:	7f 91       	pop	r23
    177e:	6f 91       	pop	r22
    1780:	5f 91       	pop	r21
    1782:	4f 91       	pop	r20
    1784:	3f 91       	pop	r19
    1786:	2f 91       	pop	r18
    1788:	1f 91       	pop	r17
    178a:	0f 91       	pop	r16
    178c:	0f 90       	pop	r0
    178e:	0f be       	out	0x3f, r0	; 63
    1790:	0f 90       	pop	r0
    1792:	1f 90       	pop	r1
    1794:	18 95       	reti

00001796 <idle>:
    1796:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    179a:	78 94       	sei
    179c:	81 e0       	ldi	r24, 0x01	; 1
    179e:	83 bf       	out	0x33, r24	; 51
    17a0:	88 95       	sleep
    17a2:	fc cf       	rjmp	.-8      	; 0x179c <idle+0x6>

000017a4 <__vector_9>:
    17a4:	1f 92       	push	r1
    17a6:	0f 92       	push	r0
    17a8:	0f b6       	in	r0, 0x3f	; 63
    17aa:	0f 92       	push	r0
    17ac:	11 24       	eor	r1, r1
    17ae:	2f 93       	push	r18
    17b0:	3f 93       	push	r19
    17b2:	4f 93       	push	r20
    17b4:	5f 93       	push	r21
    17b6:	6f 93       	push	r22
    17b8:	7f 93       	push	r23
    17ba:	8f 93       	push	r24
    17bc:	9f 93       	push	r25
    17be:	ef 93       	push	r30
    17c0:	ff 93       	push	r31
    17c2:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    17c6:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    17ca:	01 96       	adiw	r24, 0x01	; 1
    17cc:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    17d0:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    17d4:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    17d8:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    17dc:	30 97       	sbiw	r30, 0x00	; 0
    17de:	01 f1       	breq	.+64     	; 0x1820 <__vector_9+0x7c>
    17e0:	42 81       	ldd	r20, Z+2	; 0x02
    17e2:	53 81       	ldd	r21, Z+3	; 0x03
    17e4:	64 81       	ldd	r22, Z+4	; 0x04
    17e6:	75 81       	ldd	r23, Z+5	; 0x05
    17e8:	86 17       	cp	r24, r22
    17ea:	97 07       	cpc	r25, r23
    17ec:	c9 f4       	brne	.+50     	; 0x1820 <__vector_9+0x7c>
    17ee:	ca 01       	movw	r24, r20
    17f0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17f4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17f8:	42 1b       	sub	r20, r18
    17fa:	53 0b       	sbc	r21, r19
    17fc:	41 30       	cpi	r20, 0x01	; 1
    17fe:	51 05       	cpc	r21, r1
    1800:	29 f4       	brne	.+10     	; 0x180c <__vector_9+0x68>
    1802:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1806:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    180a:	01 96       	adiw	r24, 0x01	; 1
    180c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1810:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1814:	ef e6       	ldi	r30, 0x6F	; 111
    1816:	f0 e0       	ldi	r31, 0x00	; 0
    1818:	80 81       	ld	r24, Z
    181a:	82 60       	ori	r24, 0x02	; 2
    181c:	80 83       	st	Z, r24
    181e:	05 c0       	rjmp	.+10     	; 0x182a <__vector_9+0x86>
    1820:	ef e6       	ldi	r30, 0x6F	; 111
    1822:	f0 e0       	ldi	r31, 0x00	; 0
    1824:	80 81       	ld	r24, Z
    1826:	8d 7f       	andi	r24, 0xFD	; 253
    1828:	80 83       	st	Z, r24
    182a:	ff 91       	pop	r31
    182c:	ef 91       	pop	r30
    182e:	9f 91       	pop	r25
    1830:	8f 91       	pop	r24
    1832:	7f 91       	pop	r23
    1834:	6f 91       	pop	r22
    1836:	5f 91       	pop	r21
    1838:	4f 91       	pop	r20
    183a:	3f 91       	pop	r19
    183c:	2f 91       	pop	r18
    183e:	0f 90       	pop	r0
    1840:	0f be       	out	0x3f, r0	; 63
    1842:	0f 90       	pop	r0
    1844:	1f 90       	pop	r1
    1846:	18 95       	reti

00001848 <__vector_7>:
    1848:	1f 92       	push	r1
    184a:	0f 92       	push	r0
    184c:	0f b6       	in	r0, 0x3f	; 63
    184e:	0f 92       	push	r0
    1850:	11 24       	eor	r1, r1
    1852:	cf 92       	push	r12
    1854:	df 92       	push	r13
    1856:	ef 92       	push	r14
    1858:	ff 92       	push	r15
    185a:	2f 93       	push	r18
    185c:	3f 93       	push	r19
    185e:	4f 93       	push	r20
    1860:	5f 93       	push	r21
    1862:	6f 93       	push	r22
    1864:	7f 93       	push	r23
    1866:	8f 93       	push	r24
    1868:	9f 93       	push	r25
    186a:	af 93       	push	r26
    186c:	bf 93       	push	r27
    186e:	ef 93       	push	r30
    1870:	ff 93       	push	r31
    1872:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1876:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    187a:	6c 01       	movw	r12, r24
    187c:	09 2e       	mov	r0, r25
    187e:	00 0c       	add	r0, r0
    1880:	ee 08       	sbc	r14, r14
    1882:	ff 08       	sbc	r15, r15
    1884:	76 01       	movw	r14, r12
    1886:	dd 24       	eor	r13, r13
    1888:	cc 24       	eor	r12, r12
    188a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    188e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1892:	60 e0       	ldi	r22, 0x00	; 0
    1894:	70 e0       	ldi	r23, 0x00	; 0
    1896:	c4 2a       	or	r12, r20
    1898:	d5 2a       	or	r13, r21
    189a:	e6 2a       	or	r14, r22
    189c:	f7 2a       	or	r15, r23
    189e:	b0 9b       	sbis	0x16, 0	; 22
    18a0:	1e c0       	rjmp	.+60     	; 0x18de <__vector_7+0x96>
    18a2:	6c 01       	movw	r12, r24
    18a4:	2f ef       	ldi	r18, 0xFF	; 255
    18a6:	c2 1a       	sub	r12, r18
    18a8:	d2 0a       	sbc	r13, r18
    18aa:	0d 2c       	mov	r0, r13
    18ac:	00 0c       	add	r0, r0
    18ae:	ee 08       	sbc	r14, r14
    18b0:	ff 08       	sbc	r15, r15
    18b2:	d6 01       	movw	r26, r12
    18b4:	99 27       	eor	r25, r25
    18b6:	88 27       	eor	r24, r24
    18b8:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18bc:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c0:	e1 2c       	mov	r14, r1
    18c2:	f1 2c       	mov	r15, r1
    18c4:	c8 2a       	or	r12, r24
    18c6:	d9 2a       	or	r13, r25
    18c8:	ea 2a       	or	r14, r26
    18ca:	fb 2a       	or	r15, r27
    18cc:	08 c0       	rjmp	.+16     	; 0x18de <__vector_7+0x96>
    18ce:	84 e2       	ldi	r24, 0x24	; 36
    18d0:	91 e0       	ldi	r25, 0x01	; 1
    18d2:	0e 94 94 03 	call	0x728	; 0x728 <dequeue>
    18d6:	66 e2       	ldi	r22, 0x26	; 38
    18d8:	71 e0       	ldi	r23, 0x01	; 1
    18da:	0e 94 32 03 	call	0x664	; 0x664 <enqueueByDeadline>
    18de:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    18e2:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    18e6:	30 97       	sbiw	r30, 0x00	; 0
    18e8:	69 f0       	breq	.+26     	; 0x1904 <__vector_7+0xbc>
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	a4 81       	ldd	r26, Z+4	; 0x04
    18f0:	b5 81       	ldd	r27, Z+5	; 0x05
    18f2:	8c 19       	sub	r24, r12
    18f4:	9d 09       	sbc	r25, r13
    18f6:	ae 09       	sbc	r26, r14
    18f8:	bf 09       	sbc	r27, r15
    18fa:	18 16       	cp	r1, r24
    18fc:	19 06       	cpc	r1, r25
    18fe:	1a 06       	cpc	r1, r26
    1900:	1b 06       	cpc	r1, r27
    1902:	2c f7       	brge	.-54     	; 0x18ce <__vector_7+0x86>
    1904:	30 97       	sbiw	r30, 0x00	; 0
    1906:	21 f1       	breq	.+72     	; 0x1950 <__vector_7+0x108>
    1908:	82 81       	ldd	r24, Z+2	; 0x02
    190a:	93 81       	ldd	r25, Z+3	; 0x03
    190c:	a4 81       	ldd	r26, Z+4	; 0x04
    190e:	b5 81       	ldd	r27, Z+5	; 0x05
    1910:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1914:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1918:	2a 17       	cp	r18, r26
    191a:	3b 07       	cpc	r19, r27
    191c:	c9 f4       	brne	.+50     	; 0x1950 <__vector_7+0x108>
    191e:	9c 01       	movw	r18, r24
    1920:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1924:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1928:	84 1b       	sub	r24, r20
    192a:	95 0b       	sbc	r25, r21
    192c:	01 97       	sbiw	r24, 0x01	; 1
    192e:	31 f4       	brne	.+12     	; 0x193c <__vector_7+0xf4>
    1930:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1934:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1938:	2f 5f       	subi	r18, 0xFF	; 255
    193a:	3f 4f       	sbci	r19, 0xFF	; 255
    193c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1940:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1944:	ef e6       	ldi	r30, 0x6F	; 111
    1946:	f0 e0       	ldi	r31, 0x00	; 0
    1948:	80 81       	ld	r24, Z
    194a:	82 60       	ori	r24, 0x02	; 2
    194c:	80 83       	st	Z, r24
    194e:	05 c0       	rjmp	.+10     	; 0x195a <__vector_7+0x112>
    1950:	ef e6       	ldi	r30, 0x6F	; 111
    1952:	f0 e0       	ldi	r31, 0x00	; 0
    1954:	80 81       	ld	r24, Z
    1956:	8d 7f       	andi	r24, 0xFD	; 253
    1958:	80 83       	st	Z, r24
    195a:	0e 94 c9 03 	call	0x792	; 0x792 <schedule>
    195e:	ff 91       	pop	r31
    1960:	ef 91       	pop	r30
    1962:	bf 91       	pop	r27
    1964:	af 91       	pop	r26
    1966:	9f 91       	pop	r25
    1968:	8f 91       	pop	r24
    196a:	7f 91       	pop	r23
    196c:	6f 91       	pop	r22
    196e:	5f 91       	pop	r21
    1970:	4f 91       	pop	r20
    1972:	3f 91       	pop	r19
    1974:	2f 91       	pop	r18
    1976:	ff 90       	pop	r15
    1978:	ef 90       	pop	r14
    197a:	df 90       	pop	r13
    197c:	cf 90       	pop	r12
    197e:	0f 90       	pop	r0
    1980:	0f be       	out	0x3f, r0	; 63
    1982:	0f 90       	pop	r0
    1984:	1f 90       	pop	r1
    1986:	18 95       	reti

00001988 <async>:
    1988:	3f 92       	push	r3
    198a:	4f 92       	push	r4
    198c:	5f 92       	push	r5
    198e:	6f 92       	push	r6
    1990:	7f 92       	push	r7
    1992:	8f 92       	push	r8
    1994:	9f 92       	push	r9
    1996:	af 92       	push	r10
    1998:	bf 92       	push	r11
    199a:	cf 92       	push	r12
    199c:	df 92       	push	r13
    199e:	ef 92       	push	r14
    19a0:	ff 92       	push	r15
    19a2:	0f 93       	push	r16
    19a4:	1f 93       	push	r17
    19a6:	cf 93       	push	r28
    19a8:	df 93       	push	r29
    19aa:	2b 01       	movw	r4, r22
    19ac:	3c 01       	movw	r6, r24
    19ae:	49 01       	movw	r8, r18
    19b0:	5a 01       	movw	r10, r20
    19b2:	8f b7       	in	r24, 0x3f	; 63
    19b4:	80 78       	andi	r24, 0x80	; 128
    19b6:	38 2e       	mov	r3, r24
    19b8:	f8 94       	cli
    19ba:	86 e0       	ldi	r24, 0x06	; 6
    19bc:	91 e0       	ldi	r25, 0x01	; 1
    19be:	0e 94 94 03 	call	0x728	; 0x728 <dequeue>
    19c2:	ec 01       	movw	r28, r24
    19c4:	1b 87       	std	Y+11, r17	; 0x0b
    19c6:	0a 87       	std	Y+10, r16	; 0x0a
    19c8:	fd 86       	std	Y+13, r15	; 0x0d
    19ca:	ec 86       	std	Y+12, r14	; 0x0c
    19cc:	df 86       	std	Y+15, r13	; 0x0f
    19ce:	ce 86       	std	Y+14, r12	; 0x0e
    19d0:	33 20       	and	r3, r3
    19d2:	61 f0       	breq	.+24     	; 0x19ec <async+0x64>
    19d4:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19d8:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19dc:	02 80       	ldd	r0, Z+2	; 0x02
    19de:	f3 81       	ldd	r31, Z+3	; 0x03
    19e0:	e0 2d       	mov	r30, r0
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	a4 81       	ldd	r26, Z+4	; 0x04
    19e8:	b5 81       	ldd	r27, Z+5	; 0x05
    19ea:	08 c0       	rjmp	.+16     	; 0x19fc <async+0x74>
    19ec:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    19f0:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    19f4:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    19f8:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    19fc:	48 0e       	add	r4, r24
    19fe:	59 1e       	adc	r5, r25
    1a00:	6a 1e       	adc	r6, r26
    1a02:	7b 1e       	adc	r7, r27
    1a04:	4a 82       	std	Y+2, r4	; 0x02
    1a06:	5b 82       	std	Y+3, r5	; 0x03
    1a08:	6c 82       	std	Y+4, r6	; 0x04
    1a0a:	7d 82       	std	Y+5, r7	; 0x05
    1a0c:	18 14       	cp	r1, r8
    1a0e:	19 04       	cpc	r1, r9
    1a10:	1a 04       	cpc	r1, r10
    1a12:	1b 04       	cpc	r1, r11
    1a14:	44 f0       	brlt	.+16     	; 0x1a26 <async+0x9e>
    1a16:	0f 2e       	mov	r0, r31
    1a18:	88 24       	eor	r8, r8
    1a1a:	8a 94       	dec	r8
    1a1c:	98 2c       	mov	r9, r8
    1a1e:	a8 2c       	mov	r10, r8
    1a20:	ff e7       	ldi	r31, 0x7F	; 127
    1a22:	bf 2e       	mov	r11, r31
    1a24:	f0 2d       	mov	r31, r0
    1a26:	84 0c       	add	r8, r4
    1a28:	95 1c       	adc	r9, r5
    1a2a:	a6 1c       	adc	r10, r6
    1a2c:	b7 1c       	adc	r11, r7
    1a2e:	8e 82       	std	Y+6, r8	; 0x06
    1a30:	9f 82       	std	Y+7, r9	; 0x07
    1a32:	a8 86       	std	Y+8, r10	; 0x08
    1a34:	b9 86       	std	Y+9, r11	; 0x09
    1a36:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1a3a:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1a3e:	c9 01       	movw	r24, r18
    1a40:	03 2e       	mov	r0, r19
    1a42:	00 0c       	add	r0, r0
    1a44:	aa 0b       	sbc	r26, r26
    1a46:	bb 0b       	sbc	r27, r27
    1a48:	dc 01       	movw	r26, r24
    1a4a:	99 27       	eor	r25, r25
    1a4c:	88 27       	eor	r24, r24
    1a4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a56:	60 e0       	ldi	r22, 0x00	; 0
    1a58:	70 e0       	ldi	r23, 0x00	; 0
    1a5a:	84 2b       	or	r24, r20
    1a5c:	95 2b       	or	r25, r21
    1a5e:	a6 2b       	or	r26, r22
    1a60:	b7 2b       	or	r27, r23
    1a62:	b0 9b       	sbis	0x16, 0	; 22
    1a64:	13 c0       	rjmp	.+38     	; 0x1a8c <async+0x104>
    1a66:	c9 01       	movw	r24, r18
    1a68:	01 96       	adiw	r24, 0x01	; 1
    1a6a:	09 2e       	mov	r0, r25
    1a6c:	00 0c       	add	r0, r0
    1a6e:	aa 0b       	sbc	r26, r26
    1a70:	bb 0b       	sbc	r27, r27
    1a72:	dc 01       	movw	r26, r24
    1a74:	99 27       	eor	r25, r25
    1a76:	88 27       	eor	r24, r24
    1a78:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a7c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a80:	60 e0       	ldi	r22, 0x00	; 0
    1a82:	70 e0       	ldi	r23, 0x00	; 0
    1a84:	84 2b       	or	r24, r20
    1a86:	95 2b       	or	r25, r21
    1a88:	a6 2b       	or	r26, r22
    1a8a:	b7 2b       	or	r27, r23
    1a8c:	48 1a       	sub	r4, r24
    1a8e:	59 0a       	sbc	r5, r25
    1a90:	6a 0a       	sbc	r6, r26
    1a92:	7b 0a       	sbc	r7, r27
    1a94:	14 14       	cp	r1, r4
    1a96:	15 04       	cpc	r1, r5
    1a98:	16 04       	cpc	r1, r6
    1a9a:	17 04       	cpc	r1, r7
    1a9c:	ac f5       	brge	.+106    	; 0x1b08 <async+0x180>
    1a9e:	64 e2       	ldi	r22, 0x24	; 36
    1aa0:	71 e0       	ldi	r23, 0x01	; 1
    1aa2:	ce 01       	movw	r24, r28
    1aa4:	0e 94 63 03 	call	0x6c6	; 0x6c6 <enqueueByBaseline>
    1aa8:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1aac:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1ab0:	30 97       	sbiw	r30, 0x00	; 0
    1ab2:	21 f1       	breq	.+72     	; 0x1afc <async+0x174>
    1ab4:	82 81       	ldd	r24, Z+2	; 0x02
    1ab6:	93 81       	ldd	r25, Z+3	; 0x03
    1ab8:	a4 81       	ldd	r26, Z+4	; 0x04
    1aba:	b5 81       	ldd	r27, Z+5	; 0x05
    1abc:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1ac0:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1ac4:	2a 17       	cp	r18, r26
    1ac6:	3b 07       	cpc	r19, r27
    1ac8:	c9 f4       	brne	.+50     	; 0x1afc <async+0x174>
    1aca:	9c 01       	movw	r18, r24
    1acc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ad0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ad4:	84 1b       	sub	r24, r20
    1ad6:	95 0b       	sbc	r25, r21
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	31 f4       	brne	.+12     	; 0x1ae8 <async+0x160>
    1adc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ae0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ae4:	2f 5f       	subi	r18, 0xFF	; 255
    1ae6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae8:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1aec:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1af0:	ef e6       	ldi	r30, 0x6F	; 111
    1af2:	f0 e0       	ldi	r31, 0x00	; 0
    1af4:	80 81       	ld	r24, Z
    1af6:	82 60       	ori	r24, 0x02	; 2
    1af8:	80 83       	st	Z, r24
    1afa:	39 c0       	rjmp	.+114    	; 0x1b6e <async+0x1e6>
    1afc:	ef e6       	ldi	r30, 0x6F	; 111
    1afe:	f0 e0       	ldi	r31, 0x00	; 0
    1b00:	80 81       	ld	r24, Z
    1b02:	8d 7f       	andi	r24, 0xFD	; 253
    1b04:	80 83       	st	Z, r24
    1b06:	33 c0       	rjmp	.+102    	; 0x1b6e <async+0x1e6>
    1b08:	66 e2       	ldi	r22, 0x26	; 38
    1b0a:	71 e0       	ldi	r23, 0x01	; 1
    1b0c:	ce 01       	movw	r24, r28
    1b0e:	0e 94 32 03 	call	0x664	; 0x664 <enqueueByDeadline>
    1b12:	33 20       	and	r3, r3
    1b14:	61 f1       	breq	.+88     	; 0x1b6e <async+0x1e6>
    1b16:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1b1a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1b1e:	89 2b       	or	r24, r25
    1b20:	31 f1       	breq	.+76     	; 0x1b6e <async+0x1e6>
    1b22:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1b26:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1b2a:	86 81       	ldd	r24, Z+6	; 0x06
    1b2c:	97 81       	ldd	r25, Z+7	; 0x07
    1b2e:	a0 85       	ldd	r26, Z+8	; 0x08
    1b30:	b1 85       	ldd	r27, Z+9	; 0x09
    1b32:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1b36:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1b3a:	02 80       	ldd	r0, Z+2	; 0x02
    1b3c:	f3 81       	ldd	r31, Z+3	; 0x03
    1b3e:	e0 2d       	mov	r30, r0
    1b40:	46 81       	ldd	r20, Z+6	; 0x06
    1b42:	57 81       	ldd	r21, Z+7	; 0x07
    1b44:	60 85       	ldd	r22, Z+8	; 0x08
    1b46:	71 85       	ldd	r23, Z+9	; 0x09
    1b48:	84 1b       	sub	r24, r20
    1b4a:	95 0b       	sbc	r25, r21
    1b4c:	a6 0b       	sbc	r26, r22
    1b4e:	b7 0b       	sbc	r27, r23
    1b50:	72 f4       	brpl	.+28     	; 0x1b6e <async+0x1e6>
    1b52:	84 e0       	ldi	r24, 0x04	; 4
    1b54:	91 e0       	ldi	r25, 0x01	; 1
    1b56:	0e 94 bf 03 	call	0x77e	; 0x77e <pop>
    1b5a:	62 e0       	ldi	r22, 0x02	; 2
    1b5c:	71 e0       	ldi	r23, 0x01	; 1
    1b5e:	0e 94 b5 03 	call	0x76a	; 0x76a <push>
    1b62:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1b66:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1b6a:	0e 94 12 03 	call	0x624	; 0x624 <dispatch>
    1b6e:	33 20       	and	r3, r3
    1b70:	09 f0       	breq	.+2      	; 0x1b74 <async+0x1ec>
    1b72:	78 94       	sei
    1b74:	ce 01       	movw	r24, r28
    1b76:	df 91       	pop	r29
    1b78:	cf 91       	pop	r28
    1b7a:	1f 91       	pop	r17
    1b7c:	0f 91       	pop	r16
    1b7e:	ff 90       	pop	r15
    1b80:	ef 90       	pop	r14
    1b82:	df 90       	pop	r13
    1b84:	cf 90       	pop	r12
    1b86:	bf 90       	pop	r11
    1b88:	af 90       	pop	r10
    1b8a:	9f 90       	pop	r9
    1b8c:	8f 90       	pop	r8
    1b8e:	7f 90       	pop	r7
    1b90:	6f 90       	pop	r6
    1b92:	5f 90       	pop	r5
    1b94:	4f 90       	pop	r4
    1b96:	3f 90       	pop	r3
    1b98:	08 95       	ret

00001b9a <sync>:
    1b9a:	cf 92       	push	r12
    1b9c:	df 92       	push	r13
    1b9e:	ef 92       	push	r14
    1ba0:	ff 92       	push	r15
    1ba2:	0f 93       	push	r16
    1ba4:	1f 93       	push	r17
    1ba6:	cf 93       	push	r28
    1ba8:	df 93       	push	r29
    1baa:	ec 01       	movw	r28, r24
    1bac:	7b 01       	movw	r14, r22
    1bae:	6a 01       	movw	r12, r20
    1bb0:	1f b7       	in	r17, 0x3f	; 63
    1bb2:	10 78       	andi	r17, 0x80	; 128
    1bb4:	f8 94       	cli
    1bb6:	a8 81       	ld	r26, Y
    1bb8:	b9 81       	ldd	r27, Y+1	; 0x01
    1bba:	10 97       	sbiw	r26, 0x00	; 0
    1bbc:	19 f4       	brne	.+6      	; 0x1bc4 <sync+0x2a>
    1bbe:	35 c0       	rjmp	.+106    	; 0x1c2a <sync+0x90>
    1bc0:	a0 81       	ld	r26, Z
    1bc2:	b1 81       	ldd	r27, Z+1	; 0x01
    1bc4:	14 96       	adiw	r26, 0x04	; 4
    1bc6:	ed 91       	ld	r30, X+
    1bc8:	fc 91       	ld	r31, X
    1bca:	15 97       	sbiw	r26, 0x05	; 5
    1bcc:	30 97       	sbiw	r30, 0x00	; 0
    1bce:	c1 f7       	brne	.-16     	; 0x1bc0 <sync+0x26>
    1bd0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bd4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bd8:	a2 17       	cp	r26, r18
    1bda:	b3 07       	cpc	r27, r19
    1bdc:	11 f0       	breq	.+4      	; 0x1be2 <sync+0x48>
    1bde:	11 11       	cpse	r17, r1
    1be0:	07 c0       	rjmp	.+14     	; 0x1bf0 <sync+0x56>
    1be2:	11 23       	and	r17, r17
    1be4:	09 f4       	brne	.+2      	; 0x1be8 <sync+0x4e>
    1be6:	4a c0       	rjmp	.+148    	; 0x1c7c <sync+0xe2>
    1be8:	78 94       	sei
    1bea:	8f ef       	ldi	r24, 0xFF	; 255
    1bec:	9f ef       	ldi	r25, 0xFF	; 255
    1bee:	4e c0       	rjmp	.+156    	; 0x1c8c <sync+0xf2>
    1bf0:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf2:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf4:	00 97       	sbiw	r24, 0x00	; 0
    1bf6:	19 f0       	breq	.+6      	; 0x1bfe <sync+0x64>
    1bf8:	fc 01       	movw	r30, r24
    1bfa:	15 82       	std	Z+5, r1	; 0x05
    1bfc:	14 82       	std	Z+4, r1	; 0x04
    1bfe:	3b 83       	std	Y+3, r19	; 0x03
    1c00:	2a 83       	std	Y+2, r18	; 0x02
    1c02:	f9 01       	movw	r30, r18
    1c04:	d5 83       	std	Z+5, r29	; 0x05
    1c06:	c4 83       	std	Z+4, r28	; 0x04
    1c08:	cd 01       	movw	r24, r26
    1c0a:	0e 94 12 03 	call	0x624	; 0x624 <dispatch>
    1c0e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c12:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c16:	82 81       	ldd	r24, Z+2	; 0x02
    1c18:	93 81       	ldd	r25, Z+3	; 0x03
    1c1a:	89 2b       	or	r24, r25
    1c1c:	31 f4       	brne	.+12     	; 0x1c2a <sync+0x90>
    1c1e:	11 23       	and	r17, r17
    1c20:	81 f1       	breq	.+96     	; 0x1c82 <sync+0xe8>
    1c22:	78 94       	sei
    1c24:	80 e0       	ldi	r24, 0x00	; 0
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	31 c0       	rjmp	.+98     	; 0x1c8c <sync+0xf2>
    1c2a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c2e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c32:	99 83       	std	Y+1, r25	; 0x01
    1c34:	88 83       	st	Y, r24
    1c36:	11 23       	and	r17, r17
    1c38:	29 f0       	breq	.+10     	; 0x1c44 <sync+0xaa>
    1c3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3e:	01 97       	sbiw	r24, 0x01	; 1
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <sync+0xaa>
    1c42:	78 94       	sei
    1c44:	b6 01       	movw	r22, r12
    1c46:	ce 01       	movw	r24, r28
    1c48:	f7 01       	movw	r30, r14
    1c4a:	09 95       	icall
    1c4c:	f8 2e       	mov	r15, r24
    1c4e:	09 2f       	mov	r16, r25
    1c50:	8f b7       	in	r24, 0x3f	; 63
    1c52:	f8 94       	cli
    1c54:	19 82       	std	Y+1, r1	; 0x01
    1c56:	18 82       	st	Y, r1
    1c58:	8a 81       	ldd	r24, Y+2	; 0x02
    1c5a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c5c:	82 30       	cpi	r24, 0x02	; 2
    1c5e:	91 05       	cpc	r25, r1
    1c60:	38 f0       	brcs	.+14     	; 0x1c70 <sync+0xd6>
    1c62:	1b 82       	std	Y+3, r1	; 0x03
    1c64:	1a 82       	std	Y+2, r1	; 0x02
    1c66:	fc 01       	movw	r30, r24
    1c68:	15 82       	std	Z+5, r1	; 0x05
    1c6a:	14 82       	std	Z+4, r1	; 0x04
    1c6c:	0e 94 12 03 	call	0x624	; 0x624 <dispatch>
    1c70:	11 23       	and	r17, r17
    1c72:	51 f0       	breq	.+20     	; 0x1c88 <sync+0xee>
    1c74:	78 94       	sei
    1c76:	8f 2d       	mov	r24, r15
    1c78:	90 2f       	mov	r25, r16
    1c7a:	08 c0       	rjmp	.+16     	; 0x1c8c <sync+0xf2>
    1c7c:	8f ef       	ldi	r24, 0xFF	; 255
    1c7e:	9f ef       	ldi	r25, 0xFF	; 255
    1c80:	05 c0       	rjmp	.+10     	; 0x1c8c <sync+0xf2>
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	02 c0       	rjmp	.+4      	; 0x1c8c <sync+0xf2>
    1c88:	8f 2d       	mov	r24, r15
    1c8a:	90 2f       	mov	r25, r16
    1c8c:	df 91       	pop	r29
    1c8e:	cf 91       	pop	r28
    1c90:	1f 91       	pop	r17
    1c92:	0f 91       	pop	r16
    1c94:	ff 90       	pop	r15
    1c96:	ef 90       	pop	r14
    1c98:	df 90       	pop	r13
    1c9a:	cf 90       	pop	r12
    1c9c:	08 95       	ret

00001c9e <run>:
    1c9e:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ca2:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ca6:	86 e2       	ldi	r24, 0x26	; 38
    1ca8:	91 e0       	ldi	r25, 0x01	; 1
    1caa:	0e 94 94 03 	call	0x728	; 0x728 <dequeue>
    1cae:	ec 01       	movw	r28, r24
    1cb0:	f8 01       	movw	r30, r16
    1cb2:	93 83       	std	Z+3, r25	; 0x03
    1cb4:	82 83       	std	Z+2, r24	; 0x02
    1cb6:	78 94       	sei
    1cb8:	6c 85       	ldd	r22, Y+12	; 0x0c
    1cba:	7d 85       	ldd	r23, Y+13	; 0x0d
    1cbc:	4e 85       	ldd	r20, Y+14	; 0x0e
    1cbe:	5f 85       	ldd	r21, Y+15	; 0x0f
    1cc0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1cc2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1cc4:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <sync>
    1cc8:	8f b7       	in	r24, 0x3f	; 63
    1cca:	f8 94       	cli
    1ccc:	66 e0       	ldi	r22, 0x06	; 6
    1cce:	71 e0       	ldi	r23, 0x01	; 1
    1cd0:	ce 01       	movw	r24, r28
    1cd2:	0e 94 ab 03 	call	0x756	; 0x756 <insert>
    1cd6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1cda:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1cde:	01 90       	ld	r0, Z+
    1ce0:	f0 81       	ld	r31, Z
    1ce2:	e0 2d       	mov	r30, r0
    1ce4:	c2 81       	ldd	r28, Z+2	; 0x02
    1ce6:	d3 81       	ldd	r29, Z+3	; 0x03
    1ce8:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1cec:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1cf0:	30 97       	sbiw	r30, 0x00	; 0
    1cf2:	a1 f0       	breq	.+40     	; 0x1d1c <run+0x7e>
    1cf4:	20 97       	sbiw	r28, 0x00	; 0
    1cf6:	99 f2       	breq	.-90     	; 0x1c9e <run>
    1cf8:	86 81       	ldd	r24, Z+6	; 0x06
    1cfa:	97 81       	ldd	r25, Z+7	; 0x07
    1cfc:	a0 85       	ldd	r26, Z+8	; 0x08
    1cfe:	b1 85       	ldd	r27, Z+9	; 0x09
    1d00:	4e 81       	ldd	r20, Y+6	; 0x06
    1d02:	5f 81       	ldd	r21, Y+7	; 0x07
    1d04:	68 85       	ldd	r22, Y+8	; 0x08
    1d06:	79 85       	ldd	r23, Y+9	; 0x09
    1d08:	84 1b       	sub	r24, r20
    1d0a:	95 0b       	sbc	r25, r21
    1d0c:	a6 0b       	sbc	r26, r22
    1d0e:	b7 0b       	sbc	r27, r23
    1d10:	18 16       	cp	r1, r24
    1d12:	19 06       	cpc	r1, r25
    1d14:	1a 06       	cpc	r1, r26
    1d16:	1b 06       	cpc	r1, r27
    1d18:	0c f0       	brlt	.+2      	; 0x1d1c <run+0x7e>
    1d1a:	c1 cf       	rjmp	.-126    	; 0x1c9e <run>
    1d1c:	82 e0       	ldi	r24, 0x02	; 2
    1d1e:	91 e0       	ldi	r25, 0x01	; 1
    1d20:	0e 94 bf 03 	call	0x77e	; 0x77e <pop>
    1d24:	64 e0       	ldi	r22, 0x04	; 4
    1d26:	71 e0       	ldi	r23, 0x01	; 1
    1d28:	0e 94 b5 03 	call	0x76a	; 0x76a <push>
    1d2c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1d30:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1d34:	02 c0       	rjmp	.+4      	; 0x1d3a <run+0x9c>
    1d36:	a0 81       	ld	r26, Z
    1d38:	b1 81       	ldd	r27, Z+1	; 0x01
    1d3a:	14 96       	adiw	r26, 0x04	; 4
    1d3c:	ed 91       	ld	r30, X+
    1d3e:	fc 91       	ld	r31, X
    1d40:	15 97       	sbiw	r26, 0x05	; 5
    1d42:	30 97       	sbiw	r30, 0x00	; 0
    1d44:	c1 f7       	brne	.-16     	; 0x1d36 <run+0x98>
    1d46:	cd 01       	movw	r24, r26
    1d48:	0e 94 12 03 	call	0x624	; 0x624 <dispatch>
    1d4c:	a8 cf       	rjmp	.-176    	; 0x1c9e <run>

00001d4e <install>:
    1d4e:	fc 01       	movw	r30, r24
    1d50:	42 31       	cpi	r20, 0x12	; 18
    1d52:	b8 f4       	brcc	.+46     	; 0x1d82 <install+0x34>
    1d54:	9f b7       	in	r25, 0x3f	; 63
    1d56:	90 78       	andi	r25, 0x80	; 128
    1d58:	f8 94       	cli
    1d5a:	50 e0       	ldi	r21, 0x00	; 0
    1d5c:	44 0f       	add	r20, r20
    1d5e:	55 1f       	adc	r21, r21
    1d60:	da 01       	movw	r26, r20
    1d62:	a8 5d       	subi	r26, 0xD8	; 216
    1d64:	be 4f       	sbci	r27, 0xFE	; 254
    1d66:	ed 93       	st	X+, r30
    1d68:	fc 93       	st	X, r31
    1d6a:	da 01       	movw	r26, r20
    1d6c:	a0 54       	subi	r26, 0x40	; 64
    1d6e:	be 4f       	sbci	r27, 0xFE	; 254
    1d70:	6d 93       	st	X+, r22
    1d72:	7c 93       	st	X, r23
    1d74:	21 e0       	ldi	r18, 0x01	; 1
    1d76:	30 e0       	ldi	r19, 0x00	; 0
    1d78:	33 83       	std	Z+3, r19	; 0x03
    1d7a:	22 83       	std	Z+2, r18	; 0x02
    1d7c:	99 23       	and	r25, r25
    1d7e:	09 f0       	breq	.+2      	; 0x1d82 <install+0x34>
    1d80:	78 94       	sei
    1d82:	08 95       	ret

00001d84 <tinytimber>:
    1d84:	8c 01       	movw	r16, r24
    1d86:	7b 01       	movw	r14, r22
    1d88:	6a 01       	movw	r12, r20
    1d8a:	8f b7       	in	r24, 0x3f	; 63
    1d8c:	f8 94       	cli
    1d8e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <initialize>
    1d92:	78 94       	sei
    1d94:	e1 14       	cp	r14, r1
    1d96:	f1 04       	cpc	r15, r1
    1d98:	41 f0       	breq	.+16     	; 0x1daa <tinytimber+0x26>
    1d9a:	20 e0       	ldi	r18, 0x00	; 0
    1d9c:	30 e0       	ldi	r19, 0x00	; 0
    1d9e:	a9 01       	movw	r20, r18
    1da0:	60 e0       	ldi	r22, 0x00	; 0
    1da2:	70 e0       	ldi	r23, 0x00	; 0
    1da4:	cb 01       	movw	r24, r22
    1da6:	0e 94 c4 0c 	call	0x1988	; 0x1988 <async>
    1daa:	8f b7       	in	r24, 0x3f	; 63
    1dac:	f8 94       	cli
    1dae:	0e 94 cb 0b 	call	0x1796	; 0x1796 <idle>

00001db2 <writeToPin>:
	int value = (PINE & (1 << pin) >> pin);
	writeToPin(value, pin);
}

void writeToPin(int value, int pin){
	int mask = (1 << pin);
    1db2:	21 e0       	ldi	r18, 0x01	; 1
    1db4:	30 e0       	ldi	r19, 0x00	; 0
    1db6:	06 2e       	mov	r0, r22
    1db8:	02 c0       	rjmp	.+4      	; 0x1dbe <writeToPin+0xc>
    1dba:	22 0f       	add	r18, r18
    1dbc:	33 1f       	adc	r19, r19
    1dbe:	0a 94       	dec	r0
    1dc0:	e2 f7       	brpl	.-8      	; 0x1dba <writeToPin+0x8>
	PINE = (PINE & ~mask) | ((value << pin) & mask);
    1dc2:	3c b1       	in	r19, 0x0c	; 12
    1dc4:	06 2e       	mov	r0, r22
    1dc6:	02 c0       	rjmp	.+4      	; 0x1dcc <writeToPin+0x1a>
    1dc8:	88 0f       	add	r24, r24
    1dca:	99 1f       	adc	r25, r25
    1dcc:	0a 94       	dec	r0
    1dce:	e2 f7       	brpl	.-8      	; 0x1dc8 <writeToPin+0x16>
    1dd0:	92 2f       	mov	r25, r18
    1dd2:	90 95       	com	r25
    1dd4:	39 23       	and	r19, r25
    1dd6:	82 23       	and	r24, r18
    1dd8:	83 2b       	or	r24, r19
    1dda:	8c b9       	out	0x0c, r24	; 12
	
	
	if (pin == 4){
    1ddc:	64 30       	cpi	r22, 0x04	; 4
    1dde:	71 05       	cpc	r23, r1
    1de0:	31 f4       	brne	.+12     	; 0x1dee <writeToPin+0x3c>
		LCDDR13 ^= 0x1;
    1de2:	e9 ef       	ldi	r30, 0xF9	; 249
    1de4:	f0 e0       	ldi	r31, 0x00	; 0
    1de6:	90 81       	ld	r25, Z
    1de8:	81 e0       	ldi	r24, 0x01	; 1
    1dea:	89 27       	eor	r24, r25
    1dec:	80 83       	st	Z, r24
	}
	if (pin == 6)
    1dee:	66 30       	cpi	r22, 0x06	; 6
    1df0:	71 05       	cpc	r23, r1
    1df2:	31 f4       	brne	.+12     	; 0x1e00 <writeToPin+0x4e>
	{
		LCDDR18 ^= 0x1;
    1df4:	ee ef       	ldi	r30, 0xFE	; 254
    1df6:	f0 e0       	ldi	r31, 0x00	; 0
    1df8:	90 81       	ld	r25, Z
    1dfa:	81 e0       	ldi	r24, 0x01	; 1
    1dfc:	89 27       	eor	r24, r25
    1dfe:	80 83       	st	Z, r24
    1e00:	08 95       	ret

00001e02 <turnOffPin>:
#include "TinyTimber.h"
#include "Writing.h"


void turnOffPin(PortWriter *self, int pin){
	writeToPin(0, pin);
    1e02:	80 e0       	ldi	r24, 0x00	; 0
    1e04:	90 e0       	ldi	r25, 0x00	; 0
    1e06:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <writeToPin>
    1e0a:	08 95       	ret

00001e0c <invertPin>:
}

void invertPin(PortWriter *self, int pin){
	int value = (PINE & (1 << pin) >> pin);
    1e0c:	2c b1       	in	r18, 0x0c	; 12
    1e0e:	30 e0       	ldi	r19, 0x00	; 0
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	06 2e       	mov	r0, r22
    1e16:	02 c0       	rjmp	.+4      	; 0x1e1c <invertPin+0x10>
    1e18:	88 0f       	add	r24, r24
    1e1a:	99 1f       	adc	r25, r25
    1e1c:	0a 94       	dec	r0
    1e1e:	e2 f7       	brpl	.-8      	; 0x1e18 <invertPin+0xc>
    1e20:	06 2e       	mov	r0, r22
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <invertPin+0x1c>
    1e24:	95 95       	asr	r25
    1e26:	87 95       	ror	r24
    1e28:	0a 94       	dec	r0
    1e2a:	e2 f7       	brpl	.-8      	; 0x1e24 <invertPin+0x18>
	writeToPin(value, pin);
    1e2c:	82 23       	and	r24, r18
    1e2e:	93 23       	and	r25, r19
    1e30:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <writeToPin>
    1e34:	08 95       	ret

00001e36 <__divmodsi4>:
    1e36:	05 2e       	mov	r0, r21
    1e38:	97 fb       	bst	r25, 7
    1e3a:	1e f4       	brtc	.+6      	; 0x1e42 <__divmodsi4+0xc>
    1e3c:	00 94       	com	r0
    1e3e:	0e 94 32 0f 	call	0x1e64	; 0x1e64 <__negsi2>
    1e42:	57 fd       	sbrc	r21, 7
    1e44:	07 d0       	rcall	.+14     	; 0x1e54 <__divmodsi4_neg2>
    1e46:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <__udivmodsi4>
    1e4a:	07 fc       	sbrc	r0, 7
    1e4c:	03 d0       	rcall	.+6      	; 0x1e54 <__divmodsi4_neg2>
    1e4e:	4e f4       	brtc	.+18     	; 0x1e62 <__divmodsi4_exit>
    1e50:	0c 94 32 0f 	jmp	0x1e64	; 0x1e64 <__negsi2>

00001e54 <__divmodsi4_neg2>:
    1e54:	50 95       	com	r21
    1e56:	40 95       	com	r20
    1e58:	30 95       	com	r19
    1e5a:	21 95       	neg	r18
    1e5c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e5e:	4f 4f       	sbci	r20, 0xFF	; 255
    1e60:	5f 4f       	sbci	r21, 0xFF	; 255

00001e62 <__divmodsi4_exit>:
    1e62:	08 95       	ret

00001e64 <__negsi2>:
    1e64:	90 95       	com	r25
    1e66:	80 95       	com	r24
    1e68:	70 95       	com	r23
    1e6a:	61 95       	neg	r22
    1e6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e6e:	8f 4f       	sbci	r24, 0xFF	; 255
    1e70:	9f 4f       	sbci	r25, 0xFF	; 255
    1e72:	08 95       	ret

00001e74 <__muluhisi3>:
    1e74:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__umulhisi3>
    1e78:	a5 9f       	mul	r26, r21
    1e7a:	90 0d       	add	r25, r0
    1e7c:	b4 9f       	mul	r27, r20
    1e7e:	90 0d       	add	r25, r0
    1e80:	a4 9f       	mul	r26, r20
    1e82:	80 0d       	add	r24, r0
    1e84:	91 1d       	adc	r25, r1
    1e86:	11 24       	eor	r1, r1
    1e88:	08 95       	ret

00001e8a <__udivmodsi4>:
    1e8a:	a1 e2       	ldi	r26, 0x21	; 33
    1e8c:	1a 2e       	mov	r1, r26
    1e8e:	aa 1b       	sub	r26, r26
    1e90:	bb 1b       	sub	r27, r27
    1e92:	fd 01       	movw	r30, r26
    1e94:	0d c0       	rjmp	.+26     	; 0x1eb0 <__udivmodsi4_ep>

00001e96 <__udivmodsi4_loop>:
    1e96:	aa 1f       	adc	r26, r26
    1e98:	bb 1f       	adc	r27, r27
    1e9a:	ee 1f       	adc	r30, r30
    1e9c:	ff 1f       	adc	r31, r31
    1e9e:	a2 17       	cp	r26, r18
    1ea0:	b3 07       	cpc	r27, r19
    1ea2:	e4 07       	cpc	r30, r20
    1ea4:	f5 07       	cpc	r31, r21
    1ea6:	20 f0       	brcs	.+8      	; 0x1eb0 <__udivmodsi4_ep>
    1ea8:	a2 1b       	sub	r26, r18
    1eaa:	b3 0b       	sbc	r27, r19
    1eac:	e4 0b       	sbc	r30, r20
    1eae:	f5 0b       	sbc	r31, r21

00001eb0 <__udivmodsi4_ep>:
    1eb0:	66 1f       	adc	r22, r22
    1eb2:	77 1f       	adc	r23, r23
    1eb4:	88 1f       	adc	r24, r24
    1eb6:	99 1f       	adc	r25, r25
    1eb8:	1a 94       	dec	r1
    1eba:	69 f7       	brne	.-38     	; 0x1e96 <__udivmodsi4_loop>
    1ebc:	60 95       	com	r22
    1ebe:	70 95       	com	r23
    1ec0:	80 95       	com	r24
    1ec2:	90 95       	com	r25
    1ec4:	9b 01       	movw	r18, r22
    1ec6:	ac 01       	movw	r20, r24
    1ec8:	bd 01       	movw	r22, r26
    1eca:	cf 01       	movw	r24, r30
    1ecc:	08 95       	ret

00001ece <__umulhisi3>:
    1ece:	a2 9f       	mul	r26, r18
    1ed0:	b0 01       	movw	r22, r0
    1ed2:	b3 9f       	mul	r27, r19
    1ed4:	c0 01       	movw	r24, r0
    1ed6:	a3 9f       	mul	r26, r19
    1ed8:	70 0d       	add	r23, r0
    1eda:	81 1d       	adc	r24, r1
    1edc:	11 24       	eor	r1, r1
    1ede:	91 1d       	adc	r25, r1
    1ee0:	b2 9f       	mul	r27, r18
    1ee2:	70 0d       	add	r23, r0
    1ee4:	81 1d       	adc	r24, r1
    1ee6:	11 24       	eor	r1, r1
    1ee8:	91 1d       	adc	r25, r1
    1eea:	08 95       	ret

00001eec <setjmp>:
    1eec:	dc 01       	movw	r26, r24
    1eee:	2d 92       	st	X+, r2
    1ef0:	3d 92       	st	X+, r3
    1ef2:	4d 92       	st	X+, r4
    1ef4:	5d 92       	st	X+, r5
    1ef6:	6d 92       	st	X+, r6
    1ef8:	7d 92       	st	X+, r7
    1efa:	8d 92       	st	X+, r8
    1efc:	9d 92       	st	X+, r9
    1efe:	ad 92       	st	X+, r10
    1f00:	bd 92       	st	X+, r11
    1f02:	cd 92       	st	X+, r12
    1f04:	dd 92       	st	X+, r13
    1f06:	ed 92       	st	X+, r14
    1f08:	fd 92       	st	X+, r15
    1f0a:	0d 93       	st	X+, r16
    1f0c:	1d 93       	st	X+, r17
    1f0e:	cd 93       	st	X+, r28
    1f10:	dd 93       	st	X+, r29
    1f12:	ff 91       	pop	r31
    1f14:	ef 91       	pop	r30
    1f16:	8d b7       	in	r24, 0x3d	; 61
    1f18:	8d 93       	st	X+, r24
    1f1a:	8e b7       	in	r24, 0x3e	; 62
    1f1c:	8d 93       	st	X+, r24
    1f1e:	8f b7       	in	r24, 0x3f	; 63
    1f20:	8d 93       	st	X+, r24
    1f22:	ed 93       	st	X+, r30
    1f24:	fd 93       	st	X+, r31
    1f26:	88 27       	eor	r24, r24
    1f28:	99 27       	eor	r25, r25
    1f2a:	09 94       	ijmp

00001f2c <longjmp>:
    1f2c:	dc 01       	movw	r26, r24
    1f2e:	cb 01       	movw	r24, r22
    1f30:	81 30       	cpi	r24, 0x01	; 1
    1f32:	91 05       	cpc	r25, r1
    1f34:	81 1d       	adc	r24, r1
    1f36:	2d 90       	ld	r2, X+
    1f38:	3d 90       	ld	r3, X+
    1f3a:	4d 90       	ld	r4, X+
    1f3c:	5d 90       	ld	r5, X+
    1f3e:	6d 90       	ld	r6, X+
    1f40:	7d 90       	ld	r7, X+
    1f42:	8d 90       	ld	r8, X+
    1f44:	9d 90       	ld	r9, X+
    1f46:	ad 90       	ld	r10, X+
    1f48:	bd 90       	ld	r11, X+
    1f4a:	cd 90       	ld	r12, X+
    1f4c:	dd 90       	ld	r13, X+
    1f4e:	ed 90       	ld	r14, X+
    1f50:	fd 90       	ld	r15, X+
    1f52:	0d 91       	ld	r16, X+
    1f54:	1d 91       	ld	r17, X+
    1f56:	cd 91       	ld	r28, X+
    1f58:	dd 91       	ld	r29, X+
    1f5a:	ed 91       	ld	r30, X+
    1f5c:	fd 91       	ld	r31, X+
    1f5e:	0d 90       	ld	r0, X+
    1f60:	f8 94       	cli
    1f62:	fe bf       	out	0x3e, r31	; 62
    1f64:	0f be       	out	0x3f, r0	; 63
    1f66:	ed bf       	out	0x3d, r30	; 61
    1f68:	ed 91       	ld	r30, X+
    1f6a:	fd 91       	ld	r31, X+
    1f6c:	09 94       	ijmp

00001f6e <_exit>:
    1f6e:	f8 94       	cli

00001f70 <__stop_program>:
    1f70:	ff cf       	rjmp	.-2      	; 0x1f70 <__stop_program>
