
D0003E-lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000106  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000017a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b7d  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d0  00000000  00000000  00000de1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004be  00000000  00000000  000016b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  00001b70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000493  00000000  00000000  00001cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000407  00000000  00000000  0000214f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002556  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   8:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  10:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  14:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  1c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  24:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  28:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  2c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  30:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  40:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  44:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  48:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  4c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  50:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  54:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  58:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	11 e0       	ldi	r17, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	e6 e0       	ldi	r30, 0x06	; 6
  70:	f1 e0       	ldi	r31, 0x01	; 1
  72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
  74:	05 90       	lpm	r0, Z+
  76:	0d 92       	st	X+, r0
  78:	a0 30       	cpi	r26, 0x00	; 0
  7a:	b1 07       	cpc	r27, r17
  7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
  7e:	21 e0       	ldi	r18, 0x01	; 1
  80:	a0 e0       	ldi	r26, 0x00	; 0
  82:	b1 e0       	ldi	r27, 0x01	; 1
  84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
  86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
  88:	a2 30       	cpi	r26, 0x02	; 2
  8a:	b2 07       	cpc	r27, r18
  8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
  8e:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  92:	0c 94 81 00 	jmp	0x102	; 0x102 <_exit>

00000096 <__bad_interrupt>:
  96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <LCDInit>:
	PORTB = (1<<PB7) | PORTB;

	while (true){
		primes2();
		blink2();
		button2();
  9a:	8f e0       	ldi	r24, 0x0F	; 15
  9c:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__DATA_REGION_ORIGIN__+0x87>
  a0:	87 eb       	ldi	r24, 0xB7	; 183
  a2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__DATA_REGION_ORIGIN__+0x85>
  a6:	87 e0       	ldi	r24, 0x07	; 7
  a8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__DATA_REGION_ORIGIN__+0x86>
  ac:	80 ec       	ldi	r24, 0xC0	; 192
  ae:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__DATA_REGION_ORIGIN__+0x84>
  b2:	08 95       	ret

000000b4 <button>:
  b4:	8e b1       	in	r24, 0x0e	; 14
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	8e b9       	out	0x0e, r24	; 14
  ba:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
  be:	15 c0       	rjmp	.+42     	; 0xea <button+0x36>
  c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
  c4:	81 11       	cpse	r24, r1
  c6:	11 c0       	rjmp	.+34     	; 0xea <button+0x36>
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
  ce:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <onFlag>
  d2:	81 11       	cpse	r24, r1
  d4:	06 c0       	rjmp	.+12     	; 0xe2 <button+0x2e>
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__DATA_REGION_ORIGIN__+0x99>
  dc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <onFlag>
  e0:	04 c0       	rjmp	.+8      	; 0xea <button+0x36>
  e2:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__DATA_REGION_ORIGIN__+0x99>
  e6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <onFlag>
  ea:	63 9b       	sbis	0x0c, 3	; 12
  ec:	e9 cf       	rjmp	.-46     	; 0xc0 <button+0xc>
  ee:	e5 cf       	rjmp	.-54     	; 0xba <button+0x6>

000000f0 <main>:


int main(void)
{
	//Disable CPU clock prescaler functionality
	CLKPR = 0x80;
  f0:	e1 e6       	ldi	r30, 0x61	; 97
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 e8       	ldi	r24, 0x80	; 128
  f6:	80 83       	st	Z, r24
	CLKPR = 0x00;
  f8:	10 82       	st	Z, r1
	
	LCDInit();
  fa:	0e 94 4d 00 	call	0x9a	; 0x9a <LCDInit>

	//writeLong(1234567890);		//Max 10 digit numbers
	//primes();
	button();
  fe:	0e 94 5a 00 	call	0xb4	; 0xb4 <button>

00000102 <_exit>:
 102:	f8 94       	cli

00000104 <__stop_program>:
 104:	ff cf       	rjmp	.-2      	; 0x104 <__stop_program>
