
Lab-5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000021fa  0000228e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  000022ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000022ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  0000231c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002fc7  00000000  00000000  000025ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000108b  00000000  00000000  00005573  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015c6  00000000  00000000  000065fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d6c  00000000  00000000  00007bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009a8  00000000  00000000  00008930  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002bed  00000000  00000000  000092d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000bec5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 b6 05 	jmp	0xb6c	; 0xb6c <__vector_1>
       8:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__vector_2>
       c:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__vector_3>
      10:	0c 94 03 07 	jmp	0xe06	; 0xe06 <__vector_4>
      14:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 dd 0d 	jmp	0x1bba	; 0x1bba <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__vector_9>
      28:	0c 94 e1 07 	jmp	0xfc2	; 0xfc2 <__vector_10>
      2c:	0c 94 50 08 	jmp	0x10a0	; 0x10a0 <__vector_11>
      30:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__vector_12>
      34:	0c 94 2e 09 	jmp	0x125c	; 0x125c <__vector_13>
      38:	0c 94 9d 09 	jmp	0x133a	; 0x133a <__vector_14>
      3c:	0c 94 0c 0a 	jmp	0x1418	; 0x1418 <__vector_15>
      40:	0c 94 7b 0a 	jmp	0x14f6	; 0x14f6 <__vector_16>
      44:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__vector_17>
      48:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__vector_18>
      4c:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__vector_19>
      50:	0c 94 37 0c 	jmp	0x186e	; 0x186e <__vector_20>
      54:	0c 94 a6 0c 	jmp	0x194c	; 0x194c <__vector_21>
      58:	0c 94 15 0d 	jmp	0x1a2a	; 0x1a2a <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ea ef       	ldi	r30, 0xFA	; 250
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 c9 03 	call	0x792	; 0x792 <main>
      92:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <decBridge>:


void lightsRed(Controller *self){
	self->lights = RED;
	ASYNC(self->OpH, outputLights, self->lights );
}
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	fc 01       	movw	r30, r24
      a8:	c4 80       	ldd	r12, Z+4	; 0x04
      aa:	d5 80       	ldd	r13, Z+5	; 0x05
      ac:	81 e0       	ldi	r24, 0x01	; 1
      ae:	c8 1a       	sub	r12, r24
      b0:	d1 08       	sbc	r13, r1
      b2:	d5 82       	std	Z+5, r13	; 0x05
      b4:	c4 82       	std	Z+4, r12	; 0x04
      b6:	02 89       	ldd	r16, Z+18	; 0x12
      b8:	13 89       	ldd	r17, Z+19	; 0x13
      ba:	0f 2e       	mov	r0, r31
      bc:	f8 e4       	ldi	r31, 0x48	; 72
      be:	ef 2e       	mov	r14, r31
      c0:	f3 e0       	ldi	r31, 0x03	; 3
      c2:	ff 2e       	mov	r15, r31
      c4:	f0 2d       	mov	r31, r0
      c6:	20 e0       	ldi	r18, 0x00	; 0
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	a9 01       	movw	r20, r18
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	cb 01       	movw	r24, r22
      d2:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
      d6:	1f 91       	pop	r17
      d8:	0f 91       	pop	r16
      da:	ff 90       	pop	r15
      dc:	ef 90       	pop	r14
      de:	df 90       	pop	r13
      e0:	cf 90       	pop	r12
      e2:	08 95       	ret

000000e4 <addQueue>:
      e4:	cf 92       	push	r12
      e6:	df 92       	push	r13
      e8:	ef 92       	push	r14
      ea:	ff 92       	push	r15
      ec:	0f 93       	push	r16
      ee:	1f 93       	push	r17
      f0:	61 30       	cpi	r22, 0x01	; 1
      f2:	71 05       	cpc	r23, r1
      f4:	d1 f4       	brne	.+52     	; 0x12a <addQueue+0x46>
      f6:	fc 01       	movw	r30, r24
      f8:	c6 80       	ldd	r12, Z+6	; 0x06
      fa:	d7 80       	ldd	r13, Z+7	; 0x07
      fc:	ff ef       	ldi	r31, 0xFF	; 255
      fe:	cf 1a       	sub	r12, r31
     100:	df 0a       	sbc	r13, r31
     102:	fc 01       	movw	r30, r24
     104:	d7 82       	std	Z+7, r13	; 0x07
     106:	c6 82       	std	Z+6, r12	; 0x06
     108:	02 89       	ldd	r16, Z+18	; 0x12
     10a:	13 89       	ldd	r17, Z+19	; 0x13
     10c:	0f 2e       	mov	r0, r31
     10e:	fe e3       	ldi	r31, 0x3E	; 62
     110:	ef 2e       	mov	r14, r31
     112:	f3 e0       	ldi	r31, 0x03	; 3
     114:	ff 2e       	mov	r15, r31
     116:	f0 2d       	mov	r31, r0
     118:	20 e0       	ldi	r18, 0x00	; 0
     11a:	30 e0       	ldi	r19, 0x00	; 0
     11c:	a9 01       	movw	r20, r18
     11e:	60 e0       	ldi	r22, 0x00	; 0
     120:	70 e0       	ldi	r23, 0x00	; 0
     122:	cb 01       	movw	r24, r22
     124:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     128:	1c c0       	rjmp	.+56     	; 0x162 <addQueue+0x7e>
     12a:	62 30       	cpi	r22, 0x02	; 2
     12c:	71 05       	cpc	r23, r1
     12e:	c9 f4       	brne	.+50     	; 0x162 <addQueue+0x7e>
     130:	fc 01       	movw	r30, r24
     132:	c0 84       	ldd	r12, Z+8	; 0x08
     134:	d1 84       	ldd	r13, Z+9	; 0x09
     136:	ff ef       	ldi	r31, 0xFF	; 255
     138:	cf 1a       	sub	r12, r31
     13a:	df 0a       	sbc	r13, r31
     13c:	fc 01       	movw	r30, r24
     13e:	d1 86       	std	Z+9, r13	; 0x09
     140:	c0 86       	std	Z+8, r12	; 0x08
     142:	02 89       	ldd	r16, Z+18	; 0x12
     144:	13 89       	ldd	r17, Z+19	; 0x13
     146:	0f 2e       	mov	r0, r31
     148:	f3 e4       	ldi	r31, 0x43	; 67
     14a:	ef 2e       	mov	r14, r31
     14c:	f3 e0       	ldi	r31, 0x03	; 3
     14e:	ff 2e       	mov	r15, r31
     150:	f0 2d       	mov	r31, r0
     152:	20 e0       	ldi	r18, 0x00	; 0
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	a9 01       	movw	r20, r18
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	cb 01       	movw	r24, r22
     15e:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     162:	1f 91       	pop	r17
     164:	0f 91       	pop	r16
     166:	ff 90       	pop	r15
     168:	ef 90       	pop	r14
     16a:	df 90       	pop	r13
     16c:	cf 90       	pop	r12
     16e:	08 95       	ret

00000170 <decQueue>:
     170:	cf 92       	push	r12
     172:	df 92       	push	r13
     174:	ef 92       	push	r14
     176:	ff 92       	push	r15
     178:	0f 93       	push	r16
     17a:	1f 93       	push	r17
     17c:	61 30       	cpi	r22, 0x01	; 1
     17e:	71 05       	cpc	r23, r1
     180:	d1 f4       	brne	.+52     	; 0x1b6 <decQueue+0x46>
     182:	fc 01       	movw	r30, r24
     184:	c6 80       	ldd	r12, Z+6	; 0x06
     186:	d7 80       	ldd	r13, Z+7	; 0x07
     188:	f1 e0       	ldi	r31, 0x01	; 1
     18a:	cf 1a       	sub	r12, r31
     18c:	d1 08       	sbc	r13, r1
     18e:	fc 01       	movw	r30, r24
     190:	d7 82       	std	Z+7, r13	; 0x07
     192:	c6 82       	std	Z+6, r12	; 0x06
     194:	02 89       	ldd	r16, Z+18	; 0x12
     196:	13 89       	ldd	r17, Z+19	; 0x13
     198:	0f 2e       	mov	r0, r31
     19a:	fe e3       	ldi	r31, 0x3E	; 62
     19c:	ef 2e       	mov	r14, r31
     19e:	f3 e0       	ldi	r31, 0x03	; 3
     1a0:	ff 2e       	mov	r15, r31
     1a2:	f0 2d       	mov	r31, r0
     1a4:	20 e0       	ldi	r18, 0x00	; 0
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	a9 01       	movw	r20, r18
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	70 e0       	ldi	r23, 0x00	; 0
     1ae:	cb 01       	movw	r24, r22
     1b0:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     1b4:	1c c0       	rjmp	.+56     	; 0x1ee <decQueue+0x7e>
     1b6:	62 30       	cpi	r22, 0x02	; 2
     1b8:	71 05       	cpc	r23, r1
     1ba:	c9 f4       	brne	.+50     	; 0x1ee <decQueue+0x7e>
     1bc:	fc 01       	movw	r30, r24
     1be:	c0 84       	ldd	r12, Z+8	; 0x08
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	f1 e0       	ldi	r31, 0x01	; 1
     1c4:	cf 1a       	sub	r12, r31
     1c6:	d1 08       	sbc	r13, r1
     1c8:	fc 01       	movw	r30, r24
     1ca:	d1 86       	std	Z+9, r13	; 0x09
     1cc:	c0 86       	std	Z+8, r12	; 0x08
     1ce:	02 89       	ldd	r16, Z+18	; 0x12
     1d0:	13 89       	ldd	r17, Z+19	; 0x13
     1d2:	0f 2e       	mov	r0, r31
     1d4:	f3 e4       	ldi	r31, 0x43	; 67
     1d6:	ef 2e       	mov	r14, r31
     1d8:	f3 e0       	ldi	r31, 0x03	; 3
     1da:	ff 2e       	mov	r15, r31
     1dc:	f0 2d       	mov	r31, r0
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	a9 01       	movw	r20, r18
     1e4:	60 e0       	ldi	r22, 0x00	; 0
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	cb 01       	movw	r24, r22
     1ea:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     1ee:	1f 91       	pop	r17
     1f0:	0f 91       	pop	r16
     1f2:	ff 90       	pop	r15
     1f4:	ef 90       	pop	r14
     1f6:	df 90       	pop	r13
     1f8:	cf 90       	pop	r12
     1fa:	08 95       	ret

000001fc <addBridge>:
     1fc:	cf 92       	push	r12
     1fe:	df 92       	push	r13
     200:	ef 92       	push	r14
     202:	ff 92       	push	r15
     204:	0f 93       	push	r16
     206:	1f 93       	push	r17
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	ec 01       	movw	r28, r24
     20e:	6b 01       	movw	r12, r22
     210:	0e 94 b8 00 	call	0x170	; 0x170 <decQueue>
     214:	db 86       	std	Y+11, r13	; 0x0b
     216:	ca 86       	std	Y+10, r12	; 0x0a
     218:	8e 85       	ldd	r24, Y+14	; 0x0e
     21a:	9f 85       	ldd	r25, Y+15	; 0x0f
     21c:	01 96       	adiw	r24, 0x01	; 1
     21e:	9f 87       	std	Y+15, r25	; 0x0f
     220:	8e 87       	std	Y+14, r24	; 0x0e
     222:	cc 80       	ldd	r12, Y+4	; 0x04
     224:	dd 80       	ldd	r13, Y+5	; 0x05
     226:	8f ef       	ldi	r24, 0xFF	; 255
     228:	c8 1a       	sub	r12, r24
     22a:	d8 0a       	sbc	r13, r24
     22c:	dd 82       	std	Y+5, r13	; 0x05
     22e:	cc 82       	std	Y+4, r12	; 0x04
     230:	0a 89       	ldd	r16, Y+18	; 0x12
     232:	1b 89       	ldd	r17, Y+19	; 0x13
     234:	0f 2e       	mov	r0, r31
     236:	f8 e4       	ldi	r31, 0x48	; 72
     238:	ef 2e       	mov	r14, r31
     23a:	f3 e0       	ldi	r31, 0x03	; 3
     23c:	ff 2e       	mov	r15, r31
     23e:	f0 2d       	mov	r31, r0
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	a9 01       	movw	r20, r18
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	70 e0       	ldi	r23, 0x00	; 0
     24a:	cb 01       	movw	r24, r22
     24c:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     250:	c1 2c       	mov	r12, r1
     252:	d1 2c       	mov	r13, r1
     254:	0f 2e       	mov	r0, r31
     256:	fd e4       	ldi	r31, 0x4D	; 77
     258:	ef 2e       	mov	r14, r31
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	ff 2e       	mov	r15, r31
     25e:	f0 2d       	mov	r31, r0
     260:	8e 01       	movw	r16, r28
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	a9 01       	movw	r20, r18
     268:	6a e5       	ldi	r22, 0x5A	; 90
     26a:	72 e6       	ldi	r23, 0x62	; 98
     26c:	82 e0       	ldi	r24, 0x02	; 2
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	1f 91       	pop	r17
     27a:	0f 91       	pop	r16
     27c:	ff 90       	pop	r15
     27e:	ef 90       	pop	r14
     280:	df 90       	pop	r13
     282:	cf 90       	pop	r12
     284:	08 95       	ret

00000286 <longestQueue>:
     286:	fc 01       	movw	r30, r24
     288:	26 81       	ldd	r18, Z+6	; 0x06
     28a:	37 81       	ldd	r19, Z+7	; 0x07
     28c:	80 85       	ldd	r24, Z+8	; 0x08
     28e:	91 85       	ldd	r25, Z+9	; 0x09
     290:	28 17       	cp	r18, r24
     292:	39 07       	cpc	r19, r25
     294:	1c f0       	brlt	.+6      	; 0x29c <longestQueue+0x16>
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	08 95       	ret
     29c:	82 e0       	ldi	r24, 0x02	; 2
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	08 95       	ret

000002a2 <lightGreen>:

void lightGreen(Controller *self, int dir){
     2a2:	cf 92       	push	r12
     2a4:	df 92       	push	r13
     2a6:	ef 92       	push	r14
     2a8:	ff 92       	push	r15
     2aa:	0f 93       	push	r16
     2ac:	1f 93       	push	r17
     2ae:	fc 01       	movw	r30, r24
	self->carsPassed = 0;
     2b0:	17 86       	std	Z+15, r1	; 0x0f
     2b2:	16 86       	std	Z+14, r1	; 0x0e
	self->lights = dir;
     2b4:	75 87       	std	Z+13, r23	; 0x0d
     2b6:	64 87       	std	Z+12, r22	; 0x0c
	ASYNC(self->OpH, outputLights, self->lights );
     2b8:	00 89       	ldd	r16, Z+16	; 0x10
     2ba:	11 89       	ldd	r17, Z+17	; 0x11
     2bc:	6b 01       	movw	r12, r22
     2be:	0f 2e       	mov	r0, r31
     2c0:	f9 e1       	ldi	r31, 0x19	; 25
     2c2:	ef 2e       	mov	r14, r31
     2c4:	f4 e0       	ldi	r31, 0x04	; 4
     2c6:	ff 2e       	mov	r15, r31
     2c8:	f0 2d       	mov	r31, r0
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	a9 01       	movw	r20, r18
     2d0:	60 e0       	ldi	r22, 0x00	; 0
     2d2:	70 e0       	ldi	r23, 0x00	; 0
     2d4:	cb 01       	movw	r24, r22
     2d6:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
}
     2da:	1f 91       	pop	r17
     2dc:	0f 91       	pop	r16
     2de:	ff 90       	pop	r15
     2e0:	ef 90       	pop	r14
     2e2:	df 90       	pop	r13
     2e4:	cf 90       	pop	r12
     2e6:	08 95       	ret

000002e8 <lightsNorth>:
			AFTER(SEC(6), self, lightsBridge, NULL);
		}
	}*/
}

void lightsNorth(Controller *self){
     2e8:	cf 92       	push	r12
     2ea:	df 92       	push	r13
     2ec:	ef 92       	push	r14
     2ee:	ff 92       	push	r15
     2f0:	0f 93       	push	r16
     2f2:	1f 93       	push	r17
     2f4:	8c 01       	movw	r16, r24
	if (self->carsPassed <= maxCarsBeforeSwap && self->queue[NORTH] > 0){
     2f6:	fc 01       	movw	r30, r24
     2f8:	86 85       	ldd	r24, Z+14	; 0x0e
     2fa:	97 85       	ldd	r25, Z+15	; 0x0f
     2fc:	06 97       	sbiw	r24, 0x06	; 6
     2fe:	e4 f4       	brge	.+56     	; 0x338 <lightsNorth+0x50>
     300:	86 81       	ldd	r24, Z+6	; 0x06
     302:	97 81       	ldd	r25, Z+7	; 0x07
     304:	18 16       	cp	r1, r24
     306:	19 06       	cpc	r1, r25
     308:	bc f4       	brge	.+46     	; 0x338 <lightsNorth+0x50>
		lightGreen(self, NORTH);
     30a:	61 e0       	ldi	r22, 0x01	; 1
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	c8 01       	movw	r24, r16
     310:	0e 94 51 01 	call	0x2a2	; 0x2a2 <lightGreen>
		AFTER(SEC(1), self, lightsNorth, NULL);
     314:	c1 2c       	mov	r12, r1
     316:	d1 2c       	mov	r13, r1
     318:	0f 2e       	mov	r0, r31
     31a:	f4 e7       	ldi	r31, 0x74	; 116
     31c:	ef 2e       	mov	r14, r31
     31e:	f1 e0       	ldi	r31, 0x01	; 1
     320:	ff 2e       	mov	r15, r31
     322:	f0 2d       	mov	r31, r0
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	a9 01       	movw	r20, r18
     32a:	62 e1       	ldi	r22, 0x12	; 18
     32c:	7a e7       	ldi	r23, 0x7A	; 122
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     336:	11 c0       	rjmp	.+34     	; 0x35a <lightsNorth+0x72>
	} else {
		AFTER(SEC(5), self, lightsSouth, NULL);
     338:	c1 2c       	mov	r12, r1
     33a:	d1 2c       	mov	r13, r1
     33c:	0f 2e       	mov	r0, r31
     33e:	f4 eb       	ldi	r31, 0xB4	; 180
     340:	ef 2e       	mov	r14, r31
     342:	f1 e0       	ldi	r31, 0x01	; 1
     344:	ff 2e       	mov	r15, r31
     346:	f0 2d       	mov	r31, r0
     348:	20 e0       	ldi	r18, 0x00	; 0
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	a9 01       	movw	r20, r18
     34e:	6a e5       	ldi	r22, 0x5A	; 90
     350:	72 e6       	ldi	r23, 0x62	; 98
     352:	82 e0       	ldi	r24, 0x02	; 2
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	}
}
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	ff 90       	pop	r15
     360:	ef 90       	pop	r14
     362:	df 90       	pop	r13
     364:	cf 90       	pop	r12
     366:	08 95       	ret

00000368 <lightsSouth>:

void lightsSouth(Controller *self){
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	0f 93       	push	r16
     372:	1f 93       	push	r17
     374:	8c 01       	movw	r16, r24
	if (self->carsPassed <= maxCarsBeforeSwap && self->queue[SOUTH] > 0){
     376:	fc 01       	movw	r30, r24
     378:	86 85       	ldd	r24, Z+14	; 0x0e
     37a:	97 85       	ldd	r25, Z+15	; 0x0f
     37c:	06 97       	sbiw	r24, 0x06	; 6
     37e:	e4 f4       	brge	.+56     	; 0x3b8 <lightsSouth+0x50>
     380:	80 85       	ldd	r24, Z+8	; 0x08
     382:	91 85       	ldd	r25, Z+9	; 0x09
     384:	18 16       	cp	r1, r24
     386:	19 06       	cpc	r1, r25
     388:	bc f4       	brge	.+46     	; 0x3b8 <lightsSouth+0x50>
		lightGreen(self, SOUTH);
     38a:	62 e0       	ldi	r22, 0x02	; 2
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	c8 01       	movw	r24, r16
     390:	0e 94 51 01 	call	0x2a2	; 0x2a2 <lightGreen>
		AFTER(SEC(1), self, lightsSouth, NULL);
     394:	c1 2c       	mov	r12, r1
     396:	d1 2c       	mov	r13, r1
     398:	0f 2e       	mov	r0, r31
     39a:	f4 eb       	ldi	r31, 0xB4	; 180
     39c:	ef 2e       	mov	r14, r31
     39e:	f1 e0       	ldi	r31, 0x01	; 1
     3a0:	ff 2e       	mov	r15, r31
     3a2:	f0 2d       	mov	r31, r0
     3a4:	20 e0       	ldi	r18, 0x00	; 0
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	a9 01       	movw	r20, r18
     3aa:	62 e1       	ldi	r22, 0x12	; 18
     3ac:	7a e7       	ldi	r23, 0x7A	; 122
     3ae:	80 e0       	ldi	r24, 0x00	; 0
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     3b6:	11 c0       	rjmp	.+34     	; 0x3da <lightsSouth+0x72>
		} else {
		AFTER(SEC(5), self, lightsNorth, NULL);
     3b8:	c1 2c       	mov	r12, r1
     3ba:	d1 2c       	mov	r13, r1
     3bc:	0f 2e       	mov	r0, r31
     3be:	f4 e7       	ldi	r31, 0x74	; 116
     3c0:	ef 2e       	mov	r14, r31
     3c2:	f1 e0       	ldi	r31, 0x01	; 1
     3c4:	ff 2e       	mov	r15, r31
     3c6:	f0 2d       	mov	r31, r0
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	a9 01       	movw	r20, r18
     3ce:	6a e5       	ldi	r22, 0x5A	; 90
     3d0:	72 e6       	ldi	r23, 0x62	; 98
     3d2:	82 e0       	ldi	r24, 0x02	; 2
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	}
}
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	cf 90       	pop	r12
     3e6:	08 95       	ret

000003e8 <lightsBridge>:
	self->lights = dir;
	ASYNC(self->OpH, outputLights, self->lights );
}


void lightsBridge(Controller *self){
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	ec 01       	movw	r28, r24
	int longest = longestQueue(self);
     3ee:	0e 94 43 01 	call	0x286	; 0x286 <longestQueue>
	
	switch (longest)
     3f2:	81 30       	cpi	r24, 0x01	; 1
     3f4:	91 05       	cpc	r25, r1
     3f6:	19 f0       	breq	.+6      	; 0x3fe <lightsBridge+0x16>
     3f8:	02 97       	sbiw	r24, 0x02	; 2
     3fa:	29 f0       	breq	.+10     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
     3fc:	07 c0       	rjmp	.+14     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
	{
	case NORTH:
		lightsNorth(self);
     3fe:	ce 01       	movw	r24, r28
     400:	0e 94 74 01 	call	0x2e8	; 0x2e8 <lightsNorth>
		break;
     404:	03 c0       	rjmp	.+6      	; 0x40c <__DATA_REGION_LENGTH__+0xc>
		
	case SOUTH:
		lightsSouth(self);
     406:	ce 01       	movw	r24, r28
     408:	0e 94 b4 01 	call	0x368	; 0x368 <lightsSouth>
			lightsRed(self);
			AFTER(SEC(5), self, lightGreen, shortest);
			AFTER(SEC(6), self, lightsBridge, NULL);
		}
	}*/
}
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <initialize>:
		} else {
		AFTER(SEC(5), self, lightsNorth, NULL);
	}
}

void initialize(Controller *self){
     412:	cf 92       	push	r12
     414:	df 92       	push	r13
     416:	ef 92       	push	r14
     418:	ff 92       	push	r15
     41a:	0f 93       	push	r16
     41c:	1f 93       	push	r17
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	ec 01       	movw	r28, r24
	ASYNC(self->gui, init, NULL);
     424:	0a 89       	ldd	r16, Y+18	; 0x12
     426:	1b 89       	ldd	r17, Y+19	; 0x13
     428:	c1 2c       	mov	r12, r1
     42a:	d1 2c       	mov	r13, r1
     42c:	0f 2e       	mov	r0, r31
     42e:	f9 e3       	ldi	r31, 0x39	; 57
     430:	ef 2e       	mov	r14, r31
     432:	f3 e0       	ldi	r31, 0x03	; 3
     434:	ff 2e       	mov	r15, r31
     436:	f0 2d       	mov	r31, r0
     438:	20 e0       	ldi	r18, 0x00	; 0
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	a9 01       	movw	r20, r18
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	cb 01       	movw	r24, r22
     444:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	ASYNC(self->gui, displayNorthQueue, self->queue[NORTH]);
     448:	0a 89       	ldd	r16, Y+18	; 0x12
     44a:	1b 89       	ldd	r17, Y+19	; 0x13
     44c:	ce 80       	ldd	r12, Y+6	; 0x06
     44e:	df 80       	ldd	r13, Y+7	; 0x07
     450:	0f 2e       	mov	r0, r31
     452:	fe e3       	ldi	r31, 0x3E	; 62
     454:	ef 2e       	mov	r14, r31
     456:	f3 e0       	ldi	r31, 0x03	; 3
     458:	ff 2e       	mov	r15, r31
     45a:	f0 2d       	mov	r31, r0
     45c:	20 e0       	ldi	r18, 0x00	; 0
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	a9 01       	movw	r20, r18
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	cb 01       	movw	r24, r22
     468:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	ASYNC(self->gui, displaySouthQueue, self->queue[SOUTH]);
     46c:	0a 89       	ldd	r16, Y+18	; 0x12
     46e:	1b 89       	ldd	r17, Y+19	; 0x13
     470:	c8 84       	ldd	r12, Y+8	; 0x08
     472:	d9 84       	ldd	r13, Y+9	; 0x09
     474:	0f 2e       	mov	r0, r31
     476:	f3 e4       	ldi	r31, 0x43	; 67
     478:	ef 2e       	mov	r14, r31
     47a:	f3 e0       	ldi	r31, 0x03	; 3
     47c:	ff 2e       	mov	r15, r31
     47e:	f0 2d       	mov	r31, r0
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	a9 01       	movw	r20, r18
     486:	60 e0       	ldi	r22, 0x00	; 0
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	cb 01       	movw	r24, r22
     48c:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	ASYNC(self->gui, displayBridgeQueue, self->queue[BRIDGE]);
     490:	0a 89       	ldd	r16, Y+18	; 0x12
     492:	1b 89       	ldd	r17, Y+19	; 0x13
     494:	cc 80       	ldd	r12, Y+4	; 0x04
     496:	dd 80       	ldd	r13, Y+5	; 0x05
     498:	0f 2e       	mov	r0, r31
     49a:	f8 e4       	ldi	r31, 0x48	; 72
     49c:	ef 2e       	mov	r14, r31
     49e:	f3 e0       	ldi	r31, 0x03	; 3
     4a0:	ff 2e       	mov	r15, r31
     4a2:	f0 2d       	mov	r31, r0
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	a9 01       	movw	r20, r18
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	cb 01       	movw	r24, r22
     4b0:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	ASYNC(self, lightsBridge, NULL);
     4b4:	c1 2c       	mov	r12, r1
     4b6:	d1 2c       	mov	r13, r1
     4b8:	0f 2e       	mov	r0, r31
     4ba:	f4 ef       	ldi	r31, 0xF4	; 244
     4bc:	ef 2e       	mov	r14, r31
     4be:	f1 e0       	ldi	r31, 0x01	; 1
     4c0:	ff 2e       	mov	r15, r31
     4c2:	f0 2d       	mov	r31, r0
     4c4:	8e 01       	movw	r16, r28
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	a9 01       	movw	r20, r18
     4cc:	60 e0       	ldi	r22, 0x00	; 0
     4ce:	70 e0       	ldi	r23, 0x00	; 0
     4d0:	cb 01       	movw	r24, r22
     4d2:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     4d6:	df 91       	pop	r29
     4d8:	cf 91       	pop	r28
     4da:	1f 91       	pop	r17
     4dc:	0f 91       	pop	r16
     4de:	ff 90       	pop	r15
     4e0:	ef 90       	pop	r14
     4e2:	df 90       	pop	r13
     4e4:	cf 90       	pop	r12
     4e6:	08 95       	ret

000004e8 <writeChar>:
		}
	else {
		pos = 2;
	}
	
	printAt(pos,arg[1]);
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	66 97       	sbiw	r28, 0x16	; 22
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	de bf       	out	0x3e, r29	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	cd bf       	out	0x3d, r28	; 61
     4fc:	66 30       	cpi	r22, 0x06	; 6
     4fe:	71 05       	cpc	r23, r1
     500:	08 f0       	brcs	.+2      	; 0x504 <__stack+0x5>
     502:	43 c0       	rjmp	.+134    	; 0x58a <__stack+0x8b>
     504:	96 e1       	ldi	r25, 0x16	; 22
     506:	e8 e0       	ldi	r30, 0x08	; 8
     508:	f1 e0       	ldi	r31, 0x01	; 1
     50a:	de 01       	movw	r26, r28
     50c:	11 96       	adiw	r26, 0x01	; 1
     50e:	01 90       	ld	r0, Z+
     510:	0d 92       	st	X+, r0
     512:	9a 95       	dec	r25
     514:	e1 f7       	brne	.-8      	; 0x50e <__stack+0xf>
     516:	90 ed       	ldi	r25, 0xD0	; 208
     518:	98 0f       	add	r25, r24
     51a:	9a 30       	cpi	r25, 0x0A	; 10
     51c:	70 f4       	brcc	.+28     	; 0x53a <__stack+0x3b>
     51e:	e8 2f       	mov	r30, r24
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	f0 97       	sbiw	r30, 0x30	; 48
     524:	ee 0f       	add	r30, r30
     526:	ff 1f       	adc	r31, r31
     528:	81 e0       	ldi	r24, 0x01	; 1
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	8c 0f       	add	r24, r28
     52e:	9d 1f       	adc	r25, r29
     530:	e8 0f       	add	r30, r24
     532:	f9 1f       	adc	r31, r25
     534:	40 81       	ld	r20, Z
     536:	51 81       	ldd	r21, Z+1	; 0x01
     538:	02 c0       	rjmp	.+4      	; 0x53e <__stack+0x3f>
     53a:	48 e2       	ldi	r20, 0x28	; 40
     53c:	50 ec       	ldi	r21, 0xC0	; 192
     53e:	fb 01       	movw	r30, r22
     540:	f5 95       	asr	r31
     542:	e7 95       	ror	r30
     544:	e4 51       	subi	r30, 0x14	; 20
     546:	ff 4f       	sbci	r31, 0xFF	; 255
     548:	db 01       	movw	r26, r22
     54a:	a1 70       	andi	r26, 0x01	; 1
     54c:	bb 27       	eor	r27, r27
     54e:	60 fd       	sbrc	r22, 0
     550:	02 c0       	rjmp	.+4      	; 0x556 <__stack+0x57>
     552:	60 ef       	ldi	r22, 0xF0	; 240
     554:	01 c0       	rjmp	.+2      	; 0x558 <__stack+0x59>
     556:	6f e0       	ldi	r22, 0x0F	; 15
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	13 c0       	rjmp	.+38     	; 0x584 <__stack+0x85>
     55e:	84 2f       	mov	r24, r20
     560:	8f 70       	andi	r24, 0x0F	; 15
     562:	52 95       	swap	r21
     564:	42 95       	swap	r20
     566:	4f 70       	andi	r20, 0x0F	; 15
     568:	45 27       	eor	r20, r21
     56a:	5f 70       	andi	r21, 0x0F	; 15
     56c:	45 27       	eor	r20, r21
     56e:	10 97       	sbiw	r26, 0x00	; 0
     570:	11 f0       	breq	.+4      	; 0x576 <__stack+0x77>
     572:	82 95       	swap	r24
     574:	80 7f       	andi	r24, 0xF0	; 240
     576:	90 81       	ld	r25, Z
     578:	96 23       	and	r25, r22
     57a:	89 2b       	or	r24, r25
     57c:	80 83       	st	Z, r24
     57e:	35 96       	adiw	r30, 0x05	; 5
     580:	2f 5f       	subi	r18, 0xFF	; 255
     582:	3f 4f       	sbci	r19, 0xFF	; 255
     584:	24 30       	cpi	r18, 0x04	; 4
     586:	31 05       	cpc	r19, r1
     588:	54 f3       	brlt	.-44     	; 0x55e <__stack+0x5f>
     58a:	66 96       	adiw	r28, 0x16	; 22
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	08 95       	ret

0000059c <printAt>:
     59c:	ef 92       	push	r14
     59e:	ff 92       	push	r15
     5a0:	0f 93       	push	r16
     5a2:	1f 93       	push	r17
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
     5a8:	ec 01       	movw	r28, r24
     5aa:	7b 01       	movw	r14, r22
     5ac:	cb 01       	movw	r24, r22
     5ae:	64 e6       	ldi	r22, 0x64	; 100
     5b0:	70 e0       	ldi	r23, 0x00	; 0
     5b2:	0e 94 92 10 	call	0x2124	; 0x2124 <__divmodhi4>
     5b6:	0a e0       	ldi	r16, 0x0A	; 10
     5b8:	10 e0       	ldi	r17, 0x00	; 0
     5ba:	b8 01       	movw	r22, r16
     5bc:	0e 94 92 10 	call	0x2124	; 0x2124 <__divmodhi4>
     5c0:	86 2f       	mov	r24, r22
     5c2:	be 01       	movw	r22, r28
     5c4:	80 5d       	subi	r24, 0xD0	; 208
     5c6:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     5ca:	21 96       	adiw	r28, 0x01	; 1
     5cc:	c7 01       	movw	r24, r14
     5ce:	b8 01       	movw	r22, r16
     5d0:	0e 94 92 10 	call	0x2124	; 0x2124 <__divmodhi4>
     5d4:	be 01       	movw	r22, r28
     5d6:	80 5d       	subi	r24, 0xD0	; 208
     5d8:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     5dc:	df 91       	pop	r29
     5de:	cf 91       	pop	r28
     5e0:	1f 91       	pop	r17
     5e2:	0f 91       	pop	r16
     5e4:	ff 90       	pop	r15
     5e6:	ef 90       	pop	r14
     5e8:	08 95       	ret

000005ea <initLCD>:
     5ea:	e1 e6       	ldi	r30, 0x61	; 97
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	80 e8       	ldi	r24, 0x80	; 128
     5f0:	80 83       	st	Z, r24
     5f2:	10 82       	st	Z, r1
     5f4:	8f e0       	ldi	r24, 0x0F	; 15
     5f6:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     5fa:	87 eb       	ldi	r24, 0xB7	; 183
     5fc:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     600:	87 e0       	ldi	r24, 0x07	; 7
     602:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     606:	80 ec       	ldi	r24, 0xC0	; 192
     608:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     60c:	81 e0       	ldi	r24, 0x01	; 1
     60e:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
     612:	60 e0       	ldi	r22, 0x00	; 0
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	80 e3       	ldi	r24, 0x30	; 48
     618:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     61c:	61 e0       	ldi	r22, 0x01	; 1
     61e:	70 e0       	ldi	r23, 0x00	; 0
     620:	80 e3       	ldi	r24, 0x30	; 48
     622:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     626:	62 e0       	ldi	r22, 0x02	; 2
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	80 e3       	ldi	r24, 0x30	; 48
     62c:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     630:	63 e0       	ldi	r22, 0x03	; 3
     632:	70 e0       	ldi	r23, 0x00	; 0
     634:	80 e3       	ldi	r24, 0x30	; 48
     636:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     63a:	64 e0       	ldi	r22, 0x04	; 4
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	80 e3       	ldi	r24, 0x30	; 48
     640:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     644:	65 e0       	ldi	r22, 0x05	; 5
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	80 e3       	ldi	r24, 0x30	; 48
     64a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <writeChar>
     64e:	08 95       	ret

00000650 <initUSART>:
     650:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
     654:	83 e3       	ldi	r24, 0x33	; 51
     656:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
     65a:	e1 ec       	ldi	r30, 0xC1	; 193
     65c:	f0 e0       	ldi	r31, 0x00	; 0
     65e:	80 81       	ld	r24, Z
     660:	88 61       	ori	r24, 0x18	; 24
     662:	80 83       	st	Z, r24
     664:	80 81       	ld	r24, Z
     666:	80 68       	ori	r24, 0x80	; 128
     668:	80 83       	st	Z, r24
     66a:	86 e0       	ldi	r24, 0x06	; 6
     66c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
     670:	08 95       	ret

00000672 <init>:
     672:	0e 94 f5 02 	call	0x5ea	; 0x5ea <initLCD>
     676:	0e 94 28 03 	call	0x650	; 0x650 <initUSART>
     67a:	08 95       	ret

0000067c <displayNorthQueue>:
}
void displayNorthQueue (GUI *self,int num){
		printAt(0,num);
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 ce 02 	call	0x59c	; 0x59c <printAt>
     684:	08 95       	ret

00000686 <displaySouthQueue>:
}

void displaySouthQueue (GUI *self,int num){
		printAt(4,num);
     686:	84 e0       	ldi	r24, 0x04	; 4
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	0e 94 ce 02 	call	0x59c	; 0x59c <printAt>
     68e:	08 95       	ret

00000690 <displayBridgeQueue>:
}

void displayBridgeQueue (GUI *self,int num){
		printAt(2,num);
     690:	82 e0       	ldi	r24, 0x02	; 2
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	0e 94 ce 02 	call	0x59c	; 0x59c <printAt>
     698:	08 95       	ret

0000069a <sensorInterupt>:


#include "InputHandler.h"
#include <avr/io.h>

void sensorInterupt (InputHandler *self, uint8_t arg){
     69a:	cf 92       	push	r12
     69c:	df 92       	push	r13
     69e:	ef 92       	push	r14
     6a0:	ff 92       	push	r15
     6a2:	0f 93       	push	r16
     6a4:	1f 93       	push	r17
     6a6:	cf 93       	push	r28
     6a8:	df 93       	push	r29
     6aa:	1f 92       	push	r1
     6ac:	cd b7       	in	r28, 0x3d	; 61
     6ae:	de b7       	in	r29, 0x3e	; 62
     6b0:	fc 01       	movw	r30, r24
	volatile uint8_t data = UDR0;
     6b2:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     6b6:	99 83       	std	Y+1, r25	; 0x01
	
	if ((data >> 0) & 1){
     6b8:	99 81       	ldd	r25, Y+1	; 0x01
     6ba:	90 ff       	sbrs	r25, 0
     6bc:	14 c0       	rjmp	.+40     	; 0x6e6 <sensorInterupt+0x4c>
		// add to Nqueue
		ASYNC(self->controller, addQueue, 1);
     6be:	04 81       	ldd	r16, Z+4	; 0x04
     6c0:	15 81       	ldd	r17, Z+5	; 0x05
     6c2:	cc 24       	eor	r12, r12
     6c4:	c3 94       	inc	r12
     6c6:	d1 2c       	mov	r13, r1
     6c8:	0f 2e       	mov	r0, r31
     6ca:	f2 e7       	ldi	r31, 0x72	; 114
     6cc:	ef 2e       	mov	r14, r31
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	ff 2e       	mov	r15, r31
     6d2:	f0 2d       	mov	r31, r0
     6d4:	20 e0       	ldi	r18, 0x00	; 0
     6d6:	30 e0       	ldi	r19, 0x00	; 0
     6d8:	a9 01       	movw	r20, r18
     6da:	60 e0       	ldi	r22, 0x00	; 0
     6dc:	70 e0       	ldi	r23, 0x00	; 0
     6de:	cb 01       	movw	r24, r22
     6e0:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     6e4:	4c c0       	rjmp	.+152    	; 0x77e <sensorInterupt+0xe4>
	}
	
	else if ( data & northBridge ){
     6e6:	89 81       	ldd	r24, Y+1	; 0x01
     6e8:	81 ff       	sbrs	r24, 1
     6ea:	14 c0       	rjmp	.+40     	; 0x714 <sensorInterupt+0x7a>
		// North car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 1);
     6ec:	04 81       	ldd	r16, Z+4	; 0x04
     6ee:	15 81       	ldd	r17, Z+5	; 0x05
     6f0:	cc 24       	eor	r12, r12
     6f2:	c3 94       	inc	r12
     6f4:	d1 2c       	mov	r13, r1
     6f6:	0f 2e       	mov	r0, r31
     6f8:	fe ef       	ldi	r31, 0xFE	; 254
     6fa:	ef 2e       	mov	r14, r31
     6fc:	f0 e0       	ldi	r31, 0x00	; 0
     6fe:	ff 2e       	mov	r15, r31
     700:	f0 2d       	mov	r31, r0
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	a9 01       	movw	r20, r18
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	cb 01       	movw	r24, r22
     70e:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     712:	35 c0       	rjmp	.+106    	; 0x77e <sensorInterupt+0xe4>
	}
	
	else if (data & southCar){
     714:	89 81       	ldd	r24, Y+1	; 0x01
     716:	82 ff       	sbrs	r24, 2
     718:	15 c0       	rjmp	.+42     	; 0x744 <sensorInterupt+0xaa>
		// add to Squeue
		ASYNC(self->controller, addQueue, 2);
     71a:	04 81       	ldd	r16, Z+4	; 0x04
     71c:	15 81       	ldd	r17, Z+5	; 0x05
     71e:	68 94       	set
     720:	cc 24       	eor	r12, r12
     722:	c1 f8       	bld	r12, 1
     724:	d1 2c       	mov	r13, r1
     726:	0f 2e       	mov	r0, r31
     728:	f2 e7       	ldi	r31, 0x72	; 114
     72a:	ef 2e       	mov	r14, r31
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	ff 2e       	mov	r15, r31
     730:	f0 2d       	mov	r31, r0
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	a9 01       	movw	r20, r18
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	cb 01       	movw	r24, r22
     73e:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
     742:	1d c0       	rjmp	.+58     	; 0x77e <sensorInterupt+0xe4>
	}
	
	else if ( data & southBridge ){
     744:	89 81       	ldd	r24, Y+1	; 0x01
     746:	83 ff       	sbrs	r24, 3
     748:	1a c0       	rjmp	.+52     	; 0x77e <sensorInterupt+0xe4>
		LCDDR18 ^= 0x1;
     74a:	ae ef       	ldi	r26, 0xFE	; 254
     74c:	b0 e0       	ldi	r27, 0x00	; 0
     74e:	9c 91       	ld	r25, X
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	89 27       	eor	r24, r25
     754:	8c 93       	st	X, r24
		// South car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 2);
     756:	04 81       	ldd	r16, Z+4	; 0x04
     758:	15 81       	ldd	r17, Z+5	; 0x05
     75a:	68 94       	set
     75c:	cc 24       	eor	r12, r12
     75e:	c1 f8       	bld	r12, 1
     760:	d1 2c       	mov	r13, r1
     762:	0f 2e       	mov	r0, r31
     764:	fe ef       	ldi	r31, 0xFE	; 254
     766:	ef 2e       	mov	r14, r31
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	ff 2e       	mov	r15, r31
     76c:	f0 2d       	mov	r31, r0
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	a9 01       	movw	r20, r18
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	cb 01       	movw	r24, r22
     77a:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
	}
}
     77e:	0f 90       	pop	r0
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	1f 91       	pop	r17
     786:	0f 91       	pop	r16
     788:	ff 90       	pop	r15
     78a:	ef 90       	pop	r14
     78c:	df 90       	pop	r13
     78e:	cf 90       	pop	r12
     790:	08 95       	ret

00000792 <main>:
#include "OutputHandler.h"
#include "InputHandler.h"
#include "TinyTimber.h"

int main(void)
{
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	cd b7       	in	r28, 0x3d	; 61
     79c:	de b7       	in	r29, 0x3e	; 62
     79e:	a6 97       	sbiw	r28, 0x26	; 38
     7a0:	0f b6       	in	r0, 0x3f	; 63
     7a2:	f8 94       	cli
     7a4:	de bf       	out	0x3e, r29	; 62
     7a6:	0f be       	out	0x3f, r0	; 63
     7a8:	cd bf       	out	0x3d, r28	; 61
 
  GUI gui = initGUI();
     7aa:	1a 82       	std	Y+2, r1	; 0x02
     7ac:	19 82       	std	Y+1, r1	; 0x01
     7ae:	1c 82       	std	Y+4, r1	; 0x04
     7b0:	1b 82       	std	Y+3, r1	; 0x03
     7b2:	1e 82       	std	Y+6, r1	; 0x06
     7b4:	1d 82       	std	Y+5, r1	; 0x05
  
  OutputHandler opH = initOutputHandler();
     7b6:	18 86       	std	Y+8, r1	; 0x08
     7b8:	1f 82       	std	Y+7, r1	; 0x07
     7ba:	1a 86       	std	Y+10, r1	; 0x0a
     7bc:	19 86       	std	Y+9, r1	; 0x09
  
  Controller controller = initController(&opH, &gui);
     7be:	1c 86       	std	Y+12, r1	; 0x0c
     7c0:	1b 86       	std	Y+11, r1	; 0x0b
     7c2:	1e 86       	std	Y+14, r1	; 0x0e
     7c4:	1d 86       	std	Y+13, r1	; 0x0d
     7c6:	18 8a       	std	Y+16, r1	; 0x10
     7c8:	1f 86       	std	Y+15, r1	; 0x0f
     7ca:	1a 8a       	std	Y+18, r1	; 0x12
     7cc:	19 8a       	std	Y+17, r1	; 0x11
     7ce:	1c 8a       	std	Y+20, r1	; 0x14
     7d0:	1b 8a       	std	Y+19, r1	; 0x13
     7d2:	1e 8a       	std	Y+22, r1	; 0x16
     7d4:	1d 8a       	std	Y+21, r1	; 0x15
     7d6:	18 8e       	std	Y+24, r1	; 0x18
     7d8:	1f 8a       	std	Y+23, r1	; 0x17
     7da:	1a 8e       	std	Y+26, r1	; 0x1a
     7dc:	19 8e       	std	Y+25, r1	; 0x19
     7de:	ce 01       	movw	r24, r28
     7e0:	07 96       	adiw	r24, 0x07	; 7
     7e2:	9c 8f       	std	Y+28, r25	; 0x1c
     7e4:	8b 8f       	std	Y+27, r24	; 0x1b
     7e6:	06 97       	sbiw	r24, 0x06	; 6
     7e8:	9e 8f       	std	Y+30, r25	; 0x1e
     7ea:	8d 8f       	std	Y+29, r24	; 0x1d

  InputHandler inputHandler = initInputHandler(&controller, &gui);
     7ec:	18 a2       	std	Y+32, r1	; 0x20
     7ee:	1f 8e       	std	Y+31, r1	; 0x1f
     7f0:	1a a2       	std	Y+34, r1	; 0x22
     7f2:	19 a2       	std	Y+33, r1	; 0x21
     7f4:	8e 01       	movw	r16, r28
     7f6:	05 5f       	subi	r16, 0xF5	; 245
     7f8:	1f 4f       	sbci	r17, 0xFF	; 255
     7fa:	1c a3       	std	Y+36, r17	; 0x24
     7fc:	0b a3       	std	Y+35, r16	; 0x23
     7fe:	9e a3       	std	Y+38, r25	; 0x26
     800:	8d a3       	std	Y+37, r24	; 0x25
  
  INSTALL (&inputHandler, &sensorInterupt, IRQ_USART0_RX);
     802:	48 e0       	ldi	r20, 0x08	; 8
     804:	6d e4       	ldi	r22, 0x4D	; 77
     806:	73 e0       	ldi	r23, 0x03	; 3
     808:	4e 96       	adiw	r24, 0x1e	; 30
     80a:	0e 94 60 10 	call	0x20c0	; 0x20c0 <install>
  
  return TINYTIMBER(&controller, initialize, NULL);
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	50 e0       	ldi	r21, 0x00	; 0
     812:	69 e0       	ldi	r22, 0x09	; 9
     814:	72 e0       	ldi	r23, 0x02	; 2
     816:	c8 01       	movw	r24, r16
     818:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <tinytimber>

	
}
     81c:	a6 96       	adiw	r28, 0x26	; 38
     81e:	0f b6       	in	r0, 0x3f	; 63
     820:	f8 94       	cli
     822:	de bf       	out	0x3e, r29	; 62
     824:	0f be       	out	0x3f, r0	; 63
     826:	cd bf       	out	0x3d, r28	; 61
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	08 95       	ret

00000832 <outputLights>:

void outputLights(OutputHandler *self, int lights){
	
	//while ( !(UCSR0A & (1<<UDRE0)) ); // Wait until empty transmit buffer

	if (lights == 0){ // North and south is Red 
     832:	61 15       	cp	r22, r1
     834:	71 05       	cpc	r23, r1
     836:	19 f4       	brne	.+6      	; 0x83e <outputLights+0xc>
		//UDR0 = 0b1010;
		UDR0 = 0x10;
     838:	80 e1       	ldi	r24, 0x10	; 16
     83a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	}
	if (lights == 1){ // North is Green south is Red
     83e:	61 30       	cpi	r22, 0x01	; 1
     840:	71 05       	cpc	r23, r1
     842:	19 f4       	brne	.+6      	; 0x84a <outputLights+0x18>
		//UDR0 = 0b1001;
		UDR0 = 0x9;
     844:	89 e0       	ldi	r24, 0x09	; 9
     846:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	}
	if (lights == 2){ // North is Red south is Green
     84a:	62 30       	cpi	r22, 0x02	; 2
     84c:	71 05       	cpc	r23, r1
     84e:	19 f4       	brne	.+6      	; 0x856 <outputLights+0x24>
		//UDR0 = 0b0110;	
		UDR0 = 0x6;	
     850:	86 e0       	ldi	r24, 0x06	; 6
     852:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     856:	08 95       	ret

00000858 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     858:	cf 93       	push	r28
     85a:	df 93       	push	r29
     85c:	00 d0       	rcall	.+0      	; 0x85e <initialize+0x6>
     85e:	00 d0       	rcall	.+0      	; 0x860 <initialize+0x8>
     860:	cd b7       	in	r28, 0x3d	; 61
     862:	de b7       	in	r29, 0x3e	; 62
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	18 c0       	rjmp	.+48     	; 0x89a <initialize+0x42>
     86a:	ac 01       	movw	r20, r24
     86c:	4f 5f       	subi	r20, 0xFF	; 255
     86e:	5f 4f       	sbci	r21, 0xFF	; 255
     870:	9a 01       	movw	r18, r20
     872:	22 95       	swap	r18
     874:	32 95       	swap	r19
     876:	30 7f       	andi	r19, 0xF0	; 240
     878:	32 27       	eor	r19, r18
     87a:	20 7f       	andi	r18, 0xF0	; 240
     87c:	32 27       	eor	r19, r18
     87e:	2f 5f       	subi	r18, 0xFF	; 255
     880:	3d 4f       	sbci	r19, 0xFD	; 253
     882:	82 95       	swap	r24
     884:	92 95       	swap	r25
     886:	90 7f       	andi	r25, 0xF0	; 240
     888:	98 27       	eor	r25, r24
     88a:	80 7f       	andi	r24, 0xF0	; 240
     88c:	98 27       	eor	r25, r24
     88e:	fc 01       	movw	r30, r24
     890:	ef 5f       	subi	r30, 0xFF	; 255
     892:	fd 4f       	sbci	r31, 0xFD	; 253
     894:	31 83       	std	Z+1, r19	; 0x01
     896:	20 83       	st	Z, r18
     898:	ca 01       	movw	r24, r20
     89a:	8e 30       	cpi	r24, 0x0E	; 14
     89c:	91 05       	cpc	r25, r1
     89e:	2c f3       	brlt	.-54     	; 0x86a <initialize+0x12>
     8a0:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     8a4:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	15 c0       	rjmp	.+42     	; 0x8d8 <initialize+0x80>
     8ae:	ac 01       	movw	r20, r24
     8b0:	4f 5f       	subi	r20, 0xFF	; 255
     8b2:	5f 4f       	sbci	r21, 0xFF	; 255
     8b4:	6d e1       	ldi	r22, 0x1D	; 29
     8b6:	64 9f       	mul	r22, r20
     8b8:	90 01       	movw	r18, r0
     8ba:	65 9f       	mul	r22, r21
     8bc:	30 0d       	add	r19, r0
     8be:	11 24       	eor	r1, r1
     8c0:	24 5b       	subi	r18, 0xB4	; 180
     8c2:	3e 4f       	sbci	r19, 0xFE	; 254
     8c4:	68 9f       	mul	r22, r24
     8c6:	f0 01       	movw	r30, r0
     8c8:	69 9f       	mul	r22, r25
     8ca:	f0 0d       	add	r31, r0
     8cc:	11 24       	eor	r1, r1
     8ce:	e4 5b       	subi	r30, 0xB4	; 180
     8d0:	fe 4f       	sbci	r31, 0xFE	; 254
     8d2:	31 83       	std	Z+1, r19	; 0x01
     8d4:	20 83       	st	Z, r18
     8d6:	ca 01       	movw	r24, r20
     8d8:	83 30       	cpi	r24, 0x03	; 3
     8da:	91 05       	cpc	r25, r1
     8dc:	44 f3       	brlt	.-48     	; 0x8ae <initialize+0x56>
     8de:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <threads+0x58>
     8e2:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <threads+0x57>
     8e6:	1a 82       	std	Y+2, r1	; 0x02
     8e8:	19 82       	std	Y+1, r1	; 0x01
     8ea:	32 c0       	rjmp	.+100    	; 0x950 <initialize+0xf8>
     8ec:	2d e1       	ldi	r18, 0x1D	; 29
     8ee:	49 81       	ldd	r20, Y+1	; 0x01
     8f0:	5a 81       	ldd	r21, Y+2	; 0x02
     8f2:	24 9f       	mul	r18, r20
     8f4:	c0 01       	movw	r24, r0
     8f6:	25 9f       	mul	r18, r21
     8f8:	90 0d       	add	r25, r0
     8fa:	11 24       	eor	r1, r1
     8fc:	fc 01       	movw	r30, r24
     8fe:	ee 5a       	subi	r30, 0xAE	; 174
     900:	fe 4f       	sbci	r31, 0xFE	; 254
     902:	fc 83       	std	Y+4, r31	; 0x04
     904:	eb 83       	std	Y+3, r30	; 0x03
     906:	cf 01       	movw	r24, r30
     908:	0e 94 ba 10 	call	0x2174	; 0x2174 <setjmp>
     90c:	20 e6       	ldi	r18, 0x60	; 96
     90e:	49 81       	ldd	r20, Y+1	; 0x01
     910:	5a 81       	ldd	r21, Y+2	; 0x02
     912:	24 9f       	mul	r18, r20
     914:	c0 01       	movw	r24, r0
     916:	25 9f       	mul	r18, r21
     918:	90 0d       	add	r25, r0
     91a:	11 24       	eor	r1, r1
     91c:	83 5b       	subi	r24, 0xB3	; 179
     91e:	9c 4f       	sbci	r25, 0xFC	; 252
     920:	eb 81       	ldd	r30, Y+3	; 0x03
     922:	fc 81       	ldd	r31, Y+4	; 0x04
     924:	91 8b       	std	Z+17, r25	; 0x11
     926:	80 8b       	std	Z+16, r24	; 0x10
     928:	93 8b       	std	Z+19, r25	; 0x13
     92a:	82 8b       	std	Z+18, r24	; 0x12
     92c:	88 e0       	ldi	r24, 0x08	; 8
     92e:	90 e1       	ldi	r25, 0x10	; 16
     930:	96 8b       	std	Z+22, r25	; 0x16
     932:	85 8b       	std	Z+21, r24	; 0x15
     934:	8d e1       	ldi	r24, 0x1D	; 29
     936:	84 9f       	mul	r24, r20
     938:	f0 01       	movw	r30, r0
     93a:	85 9f       	mul	r24, r21
     93c:	f0 0d       	add	r31, r0
     93e:	11 24       	eor	r1, r1
     940:	e4 5b       	subi	r30, 0xB4	; 180
     942:	fe 4f       	sbci	r31, 0xFE	; 254
     944:	15 82       	std	Z+5, r1	; 0x05
     946:	14 82       	std	Z+4, r1	; 0x04
     948:	4f 5f       	subi	r20, 0xFF	; 255
     94a:	5f 4f       	sbci	r21, 0xFF	; 255
     94c:	5a 83       	std	Y+2, r21	; 0x02
     94e:	49 83       	std	Y+1, r20	; 0x01
     950:	29 81       	ldd	r18, Y+1	; 0x01
     952:	3a 81       	ldd	r19, Y+2	; 0x02
     954:	24 30       	cpi	r18, 0x04	; 4
     956:	31 05       	cpc	r19, r1
     958:	4c f2       	brlt	.-110    	; 0x8ec <initialize+0x94>
     95a:	e4 ee       	ldi	r30, 0xE4	; 228
     95c:	f1 e0       	ldi	r31, 0x01	; 1
     95e:	11 82       	std	Z+1, r1	; 0x01
     960:	10 82       	st	Z, r1
     962:	15 82       	std	Z+5, r1	; 0x05
     964:	14 82       	std	Z+4, r1	; 0x04
     966:	13 82       	std	Z+3, r1	; 0x03
     968:	12 82       	std	Z+2, r1	; 0x02
     96a:	e1 e6       	ldi	r30, 0x61	; 97
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	80 e8       	ldi	r24, 0x80	; 128
     970:	80 83       	st	Z, r24
     972:	10 82       	st	Z, r1
     974:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     978:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     97c:	84 e0       	ldi	r24, 0x04	; 4
     97e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     988:	0f 90       	pop	r0
     98a:	0f 90       	pop	r0
     98c:	0f 90       	pop	r0
     98e:	0f 90       	pop	r0
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	08 95       	ret

00000996 <dispatch>:
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	00 d0       	rcall	.+0      	; 0x99c <dispatch+0x6>
     99c:	cd b7       	in	r28, 0x3d	; 61
     99e:	de b7       	in	r29, 0x3e	; 62
     9a0:	9a 83       	std	Y+2, r25	; 0x02
     9a2:	89 83       	std	Y+1, r24	; 0x01
     9a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9a8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9ac:	06 96       	adiw	r24, 0x06	; 6
     9ae:	0e 94 ba 10 	call	0x2174	; 0x2174 <setjmp>
     9b2:	89 2b       	or	r24, r25
     9b4:	59 f4       	brne	.+22     	; 0x9cc <dispatch+0x36>
     9b6:	89 81       	ldd	r24, Y+1	; 0x01
     9b8:	9a 81       	ldd	r25, Y+2	; 0x02
     9ba:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9be:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     9c2:	61 e0       	ldi	r22, 0x01	; 1
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	06 96       	adiw	r24, 0x06	; 6
     9c8:	0e 94 da 10 	call	0x21b4	; 0x21b4 <longjmp>
     9cc:	0f 90       	pop	r0
     9ce:	0f 90       	pop	r0
     9d0:	df 91       	pop	r29
     9d2:	cf 91       	pop	r28
     9d4:	08 95       	ret

000009d6 <enqueueByDeadline>:
     9d6:	0f 93       	push	r16
     9d8:	1f 93       	push	r17
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
     9de:	dc 01       	movw	r26, r24
     9e0:	cb 01       	movw	r24, r22
     9e2:	eb 01       	movw	r28, r22
     9e4:	e8 81       	ld	r30, Y
     9e6:	f9 81       	ldd	r31, Y+1	; 0x01
     9e8:	c0 e0       	ldi	r28, 0x00	; 0
     9ea:	d0 e0       	ldi	r29, 0x00	; 0
     9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <enqueueByDeadline+0x20>
     9ee:	ef 01       	movw	r28, r30
     9f0:	01 90       	ld	r0, Z+
     9f2:	f0 81       	ld	r31, Z
     9f4:	e0 2d       	mov	r30, r0
     9f6:	30 97       	sbiw	r30, 0x00	; 0
     9f8:	79 f0       	breq	.+30     	; 0xa18 <enqueueByDeadline+0x42>
     9fa:	06 81       	ldd	r16, Z+6	; 0x06
     9fc:	17 81       	ldd	r17, Z+7	; 0x07
     9fe:	20 85       	ldd	r18, Z+8	; 0x08
     a00:	31 85       	ldd	r19, Z+9	; 0x09
     a02:	16 96       	adiw	r26, 0x06	; 6
     a04:	4d 91       	ld	r20, X+
     a06:	5d 91       	ld	r21, X+
     a08:	6d 91       	ld	r22, X+
     a0a:	7c 91       	ld	r23, X
     a0c:	19 97       	sbiw	r26, 0x09	; 9
     a0e:	40 17       	cp	r20, r16
     a10:	51 07       	cpc	r21, r17
     a12:	62 07       	cpc	r22, r18
     a14:	73 07       	cpc	r23, r19
     a16:	5c f7       	brge	.-42     	; 0x9ee <enqueueByDeadline+0x18>
     a18:	11 96       	adiw	r26, 0x01	; 1
     a1a:	fc 93       	st	X, r31
     a1c:	ee 93       	st	-X, r30
     a1e:	20 97       	sbiw	r28, 0x00	; 0
     a20:	21 f4       	brne	.+8      	; 0xa2a <enqueueByDeadline+0x54>
     a22:	fc 01       	movw	r30, r24
     a24:	b1 83       	std	Z+1, r27	; 0x01
     a26:	a0 83       	st	Z, r26
     a28:	02 c0       	rjmp	.+4      	; 0xa2e <enqueueByDeadline+0x58>
     a2a:	b9 83       	std	Y+1, r27	; 0x01
     a2c:	a8 83       	st	Y, r26
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	08 95       	ret

00000a38 <enqueueByBaseline>:
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
     a3e:	df 93       	push	r29
     a40:	dc 01       	movw	r26, r24
     a42:	cb 01       	movw	r24, r22
     a44:	eb 01       	movw	r28, r22
     a46:	e8 81       	ld	r30, Y
     a48:	f9 81       	ldd	r31, Y+1	; 0x01
     a4a:	c0 e0       	ldi	r28, 0x00	; 0
     a4c:	d0 e0       	ldi	r29, 0x00	; 0
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <enqueueByBaseline+0x20>
     a50:	ef 01       	movw	r28, r30
     a52:	01 90       	ld	r0, Z+
     a54:	f0 81       	ld	r31, Z
     a56:	e0 2d       	mov	r30, r0
     a58:	30 97       	sbiw	r30, 0x00	; 0
     a5a:	79 f0       	breq	.+30     	; 0xa7a <enqueueByBaseline+0x42>
     a5c:	02 81       	ldd	r16, Z+2	; 0x02
     a5e:	13 81       	ldd	r17, Z+3	; 0x03
     a60:	24 81       	ldd	r18, Z+4	; 0x04
     a62:	35 81       	ldd	r19, Z+5	; 0x05
     a64:	12 96       	adiw	r26, 0x02	; 2
     a66:	4d 91       	ld	r20, X+
     a68:	5d 91       	ld	r21, X+
     a6a:	6d 91       	ld	r22, X+
     a6c:	7c 91       	ld	r23, X
     a6e:	15 97       	sbiw	r26, 0x05	; 5
     a70:	40 17       	cp	r20, r16
     a72:	51 07       	cpc	r21, r17
     a74:	62 07       	cpc	r22, r18
     a76:	73 07       	cpc	r23, r19
     a78:	5c f7       	brge	.-42     	; 0xa50 <enqueueByBaseline+0x18>
     a7a:	11 96       	adiw	r26, 0x01	; 1
     a7c:	fc 93       	st	X, r31
     a7e:	ee 93       	st	-X, r30
     a80:	20 97       	sbiw	r28, 0x00	; 0
     a82:	21 f4       	brne	.+8      	; 0xa8c <enqueueByBaseline+0x54>
     a84:	fc 01       	movw	r30, r24
     a86:	b1 83       	std	Z+1, r27	; 0x01
     a88:	a0 83       	st	Z, r26
     a8a:	02 c0       	rjmp	.+4      	; 0xa90 <enqueueByBaseline+0x58>
     a8c:	b9 83       	std	Y+1, r27	; 0x01
     a8e:	a8 83       	st	Y, r26
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	1f 91       	pop	r17
     a96:	0f 91       	pop	r16
     a98:	08 95       	ret

00000a9a <dequeue>:
     a9a:	dc 01       	movw	r26, r24
     a9c:	ed 91       	ld	r30, X+
     a9e:	fc 91       	ld	r31, X
     aa0:	11 97       	sbiw	r26, 0x01	; 1
     aa2:	30 97       	sbiw	r30, 0x00	; 0
     aa4:	59 f4       	brne	.+22     	; 0xabc <dequeue+0x22>
     aa6:	8f ef       	ldi	r24, 0xFF	; 255
     aa8:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     aac:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     ab0:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	83 bf       	out	0x33, r24	; 51
     ab8:	88 95       	sleep
     aba:	fc cf       	rjmp	.-8      	; 0xab4 <dequeue+0x1a>
     abc:	20 81       	ld	r18, Z
     abe:	31 81       	ldd	r19, Z+1	; 0x01
     ac0:	2d 93       	st	X+, r18
     ac2:	3c 93       	st	X, r19
     ac4:	cf 01       	movw	r24, r30
     ac6:	08 95       	ret

00000ac8 <insert>:
     ac8:	fb 01       	movw	r30, r22
     aca:	20 81       	ld	r18, Z
     acc:	31 81       	ldd	r19, Z+1	; 0x01
     ace:	fc 01       	movw	r30, r24
     ad0:	31 83       	std	Z+1, r19	; 0x01
     ad2:	20 83       	st	Z, r18
     ad4:	fb 01       	movw	r30, r22
     ad6:	91 83       	std	Z+1, r25	; 0x01
     ad8:	80 83       	st	Z, r24
     ada:	08 95       	ret

00000adc <push>:
     adc:	fb 01       	movw	r30, r22
     ade:	20 81       	ld	r18, Z
     ae0:	31 81       	ldd	r19, Z+1	; 0x01
     ae2:	fc 01       	movw	r30, r24
     ae4:	31 83       	std	Z+1, r19	; 0x01
     ae6:	20 83       	st	Z, r18
     ae8:	fb 01       	movw	r30, r22
     aea:	91 83       	std	Z+1, r25	; 0x01
     aec:	80 83       	st	Z, r24
     aee:	08 95       	ret

00000af0 <pop>:
     af0:	dc 01       	movw	r26, r24
     af2:	ed 91       	ld	r30, X+
     af4:	fc 91       	ld	r31, X
     af6:	11 97       	sbiw	r26, 0x01	; 1
     af8:	20 81       	ld	r18, Z
     afa:	31 81       	ldd	r19, Z+1	; 0x01
     afc:	2d 93       	st	X+, r18
     afe:	3c 93       	st	X, r19
     b00:	cf 01       	movw	r24, r30
     b02:	08 95       	ret

00000b04 <schedule>:
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     b0c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     b10:	c2 81       	ldd	r28, Z+2	; 0x02
     b12:	d3 81       	ldd	r29, Z+3	; 0x03
     b14:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     b18:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     b1c:	30 97       	sbiw	r30, 0x00	; 0
     b1e:	19 f1       	breq	.+70     	; 0xb66 <schedule+0x62>
     b20:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     b24:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     b28:	89 2b       	or	r24, r25
     b2a:	e9 f0       	breq	.+58     	; 0xb66 <schedule+0x62>
     b2c:	20 97       	sbiw	r28, 0x00	; 0
     b2e:	69 f0       	breq	.+26     	; 0xb4a <schedule+0x46>
     b30:	86 81       	ldd	r24, Z+6	; 0x06
     b32:	97 81       	ldd	r25, Z+7	; 0x07
     b34:	a0 85       	ldd	r26, Z+8	; 0x08
     b36:	b1 85       	ldd	r27, Z+9	; 0x09
     b38:	4e 81       	ldd	r20, Y+6	; 0x06
     b3a:	5f 81       	ldd	r21, Y+7	; 0x07
     b3c:	68 85       	ldd	r22, Y+8	; 0x08
     b3e:	79 85       	ldd	r23, Y+9	; 0x09
     b40:	84 1b       	sub	r24, r20
     b42:	95 0b       	sbc	r25, r21
     b44:	a6 0b       	sbc	r26, r22
     b46:	b7 0b       	sbc	r27, r23
     b48:	72 f4       	brpl	.+28     	; 0xb66 <schedule+0x62>
     b4a:	84 e0       	ldi	r24, 0x04	; 4
     b4c:	91 e0       	ldi	r25, 0x01	; 1
     b4e:	0e 94 78 05 	call	0xaf0	; 0xaf0 <pop>
     b52:	62 e0       	ldi	r22, 0x02	; 2
     b54:	71 e0       	ldi	r23, 0x01	; 1
     b56:	0e 94 6e 05 	call	0xadc	; 0xadc <push>
     b5a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     b5e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     b62:	0e 94 cb 04 	call	0x996	; 0x996 <dispatch>
     b66:	df 91       	pop	r29
     b68:	cf 91       	pop	r28
     b6a:	08 95       	ret

00000b6c <__vector_1>:
     b6c:	1f 92       	push	r1
     b6e:	0f 92       	push	r0
     b70:	0f b6       	in	r0, 0x3f	; 63
     b72:	0f 92       	push	r0
     b74:	11 24       	eor	r1, r1
     b76:	0f 93       	push	r16
     b78:	1f 93       	push	r17
     b7a:	2f 93       	push	r18
     b7c:	3f 93       	push	r19
     b7e:	4f 93       	push	r20
     b80:	5f 93       	push	r21
     b82:	6f 93       	push	r22
     b84:	7f 93       	push	r23
     b86:	8f 93       	push	r24
     b88:	9f 93       	push	r25
     b8a:	af 93       	push	r26
     b8c:	bf 93       	push	r27
     b8e:	ef 93       	push	r30
     b90:	ff 93       	push	r31
     b92:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     b96:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     b9a:	ac 01       	movw	r20, r24
     b9c:	09 2e       	mov	r0, r25
     b9e:	00 0c       	add	r0, r0
     ba0:	66 0b       	sbc	r22, r22
     ba2:	77 0b       	sbc	r23, r23
     ba4:	9a 01       	movw	r18, r20
     ba6:	11 27       	eor	r17, r17
     ba8:	00 27       	eor	r16, r16
     baa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	40 2b       	or	r20, r16
     bb8:	51 2b       	or	r21, r17
     bba:	62 2b       	or	r22, r18
     bbc:	73 2b       	or	r23, r19
     bbe:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     bc2:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     bc6:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     bca:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     bce:	b0 9b       	sbis	0x16, 0	; 22
     bd0:	1a c0       	rjmp	.+52     	; 0xc06 <__vector_1+0x9a>
     bd2:	01 96       	adiw	r24, 0x01	; 1
     bd4:	09 2e       	mov	r0, r25
     bd6:	00 0c       	add	r0, r0
     bd8:	aa 0b       	sbc	r26, r26
     bda:	bb 0b       	sbc	r27, r27
     bdc:	bc 01       	movw	r22, r24
     bde:	55 27       	eor	r21, r21
     be0:	44 27       	eor	r20, r20
     be2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     be6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bea:	a0 e0       	ldi	r26, 0x00	; 0
     bec:	b0 e0       	ldi	r27, 0x00	; 0
     bee:	84 2b       	or	r24, r20
     bf0:	95 2b       	or	r25, r21
     bf2:	a6 2b       	or	r26, r22
     bf4:	b7 2b       	or	r27, r23
     bf6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     bfa:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     bfe:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     c02:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     c06:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     c0a:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     c0e:	30 97       	sbiw	r30, 0x00	; 0
     c10:	39 f0       	breq	.+14     	; 0xc20 <__vector_1+0xb4>
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	70 e0       	ldi	r23, 0x00	; 0
     c16:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     c1a:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     c1e:	09 95       	icall
     c20:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
     c24:	ff 91       	pop	r31
     c26:	ef 91       	pop	r30
     c28:	bf 91       	pop	r27
     c2a:	af 91       	pop	r26
     c2c:	9f 91       	pop	r25
     c2e:	8f 91       	pop	r24
     c30:	7f 91       	pop	r23
     c32:	6f 91       	pop	r22
     c34:	5f 91       	pop	r21
     c36:	4f 91       	pop	r20
     c38:	3f 91       	pop	r19
     c3a:	2f 91       	pop	r18
     c3c:	1f 91       	pop	r17
     c3e:	0f 91       	pop	r16
     c40:	0f 90       	pop	r0
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	0f 90       	pop	r0
     c46:	1f 90       	pop	r1
     c48:	18 95       	reti

00000c4a <__vector_2>:
     c4a:	1f 92       	push	r1
     c4c:	0f 92       	push	r0
     c4e:	0f b6       	in	r0, 0x3f	; 63
     c50:	0f 92       	push	r0
     c52:	11 24       	eor	r1, r1
     c54:	0f 93       	push	r16
     c56:	1f 93       	push	r17
     c58:	2f 93       	push	r18
     c5a:	3f 93       	push	r19
     c5c:	4f 93       	push	r20
     c5e:	5f 93       	push	r21
     c60:	6f 93       	push	r22
     c62:	7f 93       	push	r23
     c64:	8f 93       	push	r24
     c66:	9f 93       	push	r25
     c68:	af 93       	push	r26
     c6a:	bf 93       	push	r27
     c6c:	ef 93       	push	r30
     c6e:	ff 93       	push	r31
     c70:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     c74:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     c78:	ac 01       	movw	r20, r24
     c7a:	09 2e       	mov	r0, r25
     c7c:	00 0c       	add	r0, r0
     c7e:	66 0b       	sbc	r22, r22
     c80:	77 0b       	sbc	r23, r23
     c82:	9a 01       	movw	r18, r20
     c84:	11 27       	eor	r17, r17
     c86:	00 27       	eor	r16, r16
     c88:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c8c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c90:	60 e0       	ldi	r22, 0x00	; 0
     c92:	70 e0       	ldi	r23, 0x00	; 0
     c94:	40 2b       	or	r20, r16
     c96:	51 2b       	or	r21, r17
     c98:	62 2b       	or	r22, r18
     c9a:	73 2b       	or	r23, r19
     c9c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     ca0:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     ca4:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     ca8:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     cac:	b0 9b       	sbis	0x16, 0	; 22
     cae:	1a c0       	rjmp	.+52     	; 0xce4 <__vector_2+0x9a>
     cb0:	01 96       	adiw	r24, 0x01	; 1
     cb2:	09 2e       	mov	r0, r25
     cb4:	00 0c       	add	r0, r0
     cb6:	aa 0b       	sbc	r26, r26
     cb8:	bb 0b       	sbc	r27, r27
     cba:	bc 01       	movw	r22, r24
     cbc:	55 27       	eor	r21, r21
     cbe:	44 27       	eor	r20, r20
     cc0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cc4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cc8:	a0 e0       	ldi	r26, 0x00	; 0
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	84 2b       	or	r24, r20
     cce:	95 2b       	or	r25, r21
     cd0:	a6 2b       	or	r26, r22
     cd2:	b7 2b       	or	r27, r23
     cd4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     cd8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     cdc:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     ce0:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     ce4:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     ce8:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     cec:	30 97       	sbiw	r30, 0x00	; 0
     cee:	39 f0       	breq	.+14     	; 0xcfe <__vector_2+0xb4>
     cf0:	61 e0       	ldi	r22, 0x01	; 1
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     cf8:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     cfc:	09 95       	icall
     cfe:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
     d02:	ff 91       	pop	r31
     d04:	ef 91       	pop	r30
     d06:	bf 91       	pop	r27
     d08:	af 91       	pop	r26
     d0a:	9f 91       	pop	r25
     d0c:	8f 91       	pop	r24
     d0e:	7f 91       	pop	r23
     d10:	6f 91       	pop	r22
     d12:	5f 91       	pop	r21
     d14:	4f 91       	pop	r20
     d16:	3f 91       	pop	r19
     d18:	2f 91       	pop	r18
     d1a:	1f 91       	pop	r17
     d1c:	0f 91       	pop	r16
     d1e:	0f 90       	pop	r0
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	0f 90       	pop	r0
     d24:	1f 90       	pop	r1
     d26:	18 95       	reti

00000d28 <__vector_3>:
     d28:	1f 92       	push	r1
     d2a:	0f 92       	push	r0
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	0f 92       	push	r0
     d30:	11 24       	eor	r1, r1
     d32:	0f 93       	push	r16
     d34:	1f 93       	push	r17
     d36:	2f 93       	push	r18
     d38:	3f 93       	push	r19
     d3a:	4f 93       	push	r20
     d3c:	5f 93       	push	r21
     d3e:	6f 93       	push	r22
     d40:	7f 93       	push	r23
     d42:	8f 93       	push	r24
     d44:	9f 93       	push	r25
     d46:	af 93       	push	r26
     d48:	bf 93       	push	r27
     d4a:	ef 93       	push	r30
     d4c:	ff 93       	push	r31
     d4e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     d52:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     d56:	ac 01       	movw	r20, r24
     d58:	09 2e       	mov	r0, r25
     d5a:	00 0c       	add	r0, r0
     d5c:	66 0b       	sbc	r22, r22
     d5e:	77 0b       	sbc	r23, r23
     d60:	9a 01       	movw	r18, r20
     d62:	11 27       	eor	r17, r17
     d64:	00 27       	eor	r16, r16
     d66:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d6a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d6e:	60 e0       	ldi	r22, 0x00	; 0
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	40 2b       	or	r20, r16
     d74:	51 2b       	or	r21, r17
     d76:	62 2b       	or	r22, r18
     d78:	73 2b       	or	r23, r19
     d7a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     d7e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     d82:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     d86:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     d8a:	b0 9b       	sbis	0x16, 0	; 22
     d8c:	1a c0       	rjmp	.+52     	; 0xdc2 <__vector_3+0x9a>
     d8e:	01 96       	adiw	r24, 0x01	; 1
     d90:	09 2e       	mov	r0, r25
     d92:	00 0c       	add	r0, r0
     d94:	aa 0b       	sbc	r26, r26
     d96:	bb 0b       	sbc	r27, r27
     d98:	bc 01       	movw	r22, r24
     d9a:	55 27       	eor	r21, r21
     d9c:	44 27       	eor	r20, r20
     d9e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     da2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     da6:	a0 e0       	ldi	r26, 0x00	; 0
     da8:	b0 e0       	ldi	r27, 0x00	; 0
     daa:	84 2b       	or	r24, r20
     dac:	95 2b       	or	r25, r21
     dae:	a6 2b       	or	r26, r22
     db0:	b7 2b       	or	r27, r23
     db2:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     db6:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     dba:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     dbe:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     dc2:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     dc6:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     dca:	30 97       	sbiw	r30, 0x00	; 0
     dcc:	39 f0       	breq	.+14     	; 0xddc <__vector_3+0xb4>
     dce:	62 e0       	ldi	r22, 0x02	; 2
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     dd6:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     dda:	09 95       	icall
     ddc:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
     de0:	ff 91       	pop	r31
     de2:	ef 91       	pop	r30
     de4:	bf 91       	pop	r27
     de6:	af 91       	pop	r26
     de8:	9f 91       	pop	r25
     dea:	8f 91       	pop	r24
     dec:	7f 91       	pop	r23
     dee:	6f 91       	pop	r22
     df0:	5f 91       	pop	r21
     df2:	4f 91       	pop	r20
     df4:	3f 91       	pop	r19
     df6:	2f 91       	pop	r18
     df8:	1f 91       	pop	r17
     dfa:	0f 91       	pop	r16
     dfc:	0f 90       	pop	r0
     dfe:	0f be       	out	0x3f, r0	; 63
     e00:	0f 90       	pop	r0
     e02:	1f 90       	pop	r1
     e04:	18 95       	reti

00000e06 <__vector_4>:
     e06:	1f 92       	push	r1
     e08:	0f 92       	push	r0
     e0a:	0f b6       	in	r0, 0x3f	; 63
     e0c:	0f 92       	push	r0
     e0e:	11 24       	eor	r1, r1
     e10:	0f 93       	push	r16
     e12:	1f 93       	push	r17
     e14:	2f 93       	push	r18
     e16:	3f 93       	push	r19
     e18:	4f 93       	push	r20
     e1a:	5f 93       	push	r21
     e1c:	6f 93       	push	r22
     e1e:	7f 93       	push	r23
     e20:	8f 93       	push	r24
     e22:	9f 93       	push	r25
     e24:	af 93       	push	r26
     e26:	bf 93       	push	r27
     e28:	ef 93       	push	r30
     e2a:	ff 93       	push	r31
     e2c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     e30:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     e34:	ac 01       	movw	r20, r24
     e36:	09 2e       	mov	r0, r25
     e38:	00 0c       	add	r0, r0
     e3a:	66 0b       	sbc	r22, r22
     e3c:	77 0b       	sbc	r23, r23
     e3e:	9a 01       	movw	r18, r20
     e40:	11 27       	eor	r17, r17
     e42:	00 27       	eor	r16, r16
     e44:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e48:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e4c:	60 e0       	ldi	r22, 0x00	; 0
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	40 2b       	or	r20, r16
     e52:	51 2b       	or	r21, r17
     e54:	62 2b       	or	r22, r18
     e56:	73 2b       	or	r23, r19
     e58:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     e5c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     e60:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     e64:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     e68:	b0 9b       	sbis	0x16, 0	; 22
     e6a:	1a c0       	rjmp	.+52     	; 0xea0 <__vector_4+0x9a>
     e6c:	01 96       	adiw	r24, 0x01	; 1
     e6e:	09 2e       	mov	r0, r25
     e70:	00 0c       	add	r0, r0
     e72:	aa 0b       	sbc	r26, r26
     e74:	bb 0b       	sbc	r27, r27
     e76:	bc 01       	movw	r22, r24
     e78:	55 27       	eor	r21, r21
     e7a:	44 27       	eor	r20, r20
     e7c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e80:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e84:	a0 e0       	ldi	r26, 0x00	; 0
     e86:	b0 e0       	ldi	r27, 0x00	; 0
     e88:	84 2b       	or	r24, r20
     e8a:	95 2b       	or	r25, r21
     e8c:	a6 2b       	or	r26, r22
     e8e:	b7 2b       	or	r27, r23
     e90:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e94:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e98:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e9c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     ea0:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     ea4:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     ea8:	30 97       	sbiw	r30, 0x00	; 0
     eaa:	39 f0       	breq	.+14     	; 0xeba <__vector_4+0xb4>
     eac:	63 e0       	ldi	r22, 0x03	; 3
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     eb4:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     eb8:	09 95       	icall
     eba:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
     ebe:	ff 91       	pop	r31
     ec0:	ef 91       	pop	r30
     ec2:	bf 91       	pop	r27
     ec4:	af 91       	pop	r26
     ec6:	9f 91       	pop	r25
     ec8:	8f 91       	pop	r24
     eca:	7f 91       	pop	r23
     ecc:	6f 91       	pop	r22
     ece:	5f 91       	pop	r21
     ed0:	4f 91       	pop	r20
     ed2:	3f 91       	pop	r19
     ed4:	2f 91       	pop	r18
     ed6:	1f 91       	pop	r17
     ed8:	0f 91       	pop	r16
     eda:	0f 90       	pop	r0
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	0f 90       	pop	r0
     ee0:	1f 90       	pop	r1
     ee2:	18 95       	reti

00000ee4 <__vector_5>:
     ee4:	1f 92       	push	r1
     ee6:	0f 92       	push	r0
     ee8:	0f b6       	in	r0, 0x3f	; 63
     eea:	0f 92       	push	r0
     eec:	11 24       	eor	r1, r1
     eee:	0f 93       	push	r16
     ef0:	1f 93       	push	r17
     ef2:	2f 93       	push	r18
     ef4:	3f 93       	push	r19
     ef6:	4f 93       	push	r20
     ef8:	5f 93       	push	r21
     efa:	6f 93       	push	r22
     efc:	7f 93       	push	r23
     efe:	8f 93       	push	r24
     f00:	9f 93       	push	r25
     f02:	af 93       	push	r26
     f04:	bf 93       	push	r27
     f06:	ef 93       	push	r30
     f08:	ff 93       	push	r31
     f0a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     f0e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     f12:	ac 01       	movw	r20, r24
     f14:	09 2e       	mov	r0, r25
     f16:	00 0c       	add	r0, r0
     f18:	66 0b       	sbc	r22, r22
     f1a:	77 0b       	sbc	r23, r23
     f1c:	9a 01       	movw	r18, r20
     f1e:	11 27       	eor	r17, r17
     f20:	00 27       	eor	r16, r16
     f22:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f26:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f2a:	60 e0       	ldi	r22, 0x00	; 0
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	40 2b       	or	r20, r16
     f30:	51 2b       	or	r21, r17
     f32:	62 2b       	or	r22, r18
     f34:	73 2b       	or	r23, r19
     f36:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     f3a:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     f3e:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     f42:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     f46:	b0 9b       	sbis	0x16, 0	; 22
     f48:	1a c0       	rjmp	.+52     	; 0xf7e <__vector_5+0x9a>
     f4a:	01 96       	adiw	r24, 0x01	; 1
     f4c:	09 2e       	mov	r0, r25
     f4e:	00 0c       	add	r0, r0
     f50:	aa 0b       	sbc	r26, r26
     f52:	bb 0b       	sbc	r27, r27
     f54:	bc 01       	movw	r22, r24
     f56:	55 27       	eor	r21, r21
     f58:	44 27       	eor	r20, r20
     f5a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f5e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f62:	a0 e0       	ldi	r26, 0x00	; 0
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	84 2b       	or	r24, r20
     f68:	95 2b       	or	r25, r21
     f6a:	a6 2b       	or	r26, r22
     f6c:	b7 2b       	or	r27, r23
     f6e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     f72:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     f76:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     f7a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f7e:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     f82:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     f86:	30 97       	sbiw	r30, 0x00	; 0
     f88:	39 f0       	breq	.+14     	; 0xf98 <__vector_5+0xb4>
     f8a:	64 e0       	ldi	r22, 0x04	; 4
     f8c:	70 e0       	ldi	r23, 0x00	; 0
     f8e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     f92:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     f96:	09 95       	icall
     f98:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
     f9c:	ff 91       	pop	r31
     f9e:	ef 91       	pop	r30
     fa0:	bf 91       	pop	r27
     fa2:	af 91       	pop	r26
     fa4:	9f 91       	pop	r25
     fa6:	8f 91       	pop	r24
     fa8:	7f 91       	pop	r23
     faa:	6f 91       	pop	r22
     fac:	5f 91       	pop	r21
     fae:	4f 91       	pop	r20
     fb0:	3f 91       	pop	r19
     fb2:	2f 91       	pop	r18
     fb4:	1f 91       	pop	r17
     fb6:	0f 91       	pop	r16
     fb8:	0f 90       	pop	r0
     fba:	0f be       	out	0x3f, r0	; 63
     fbc:	0f 90       	pop	r0
     fbe:	1f 90       	pop	r1
     fc0:	18 95       	reti

00000fc2 <__vector_10>:
     fc2:	1f 92       	push	r1
     fc4:	0f 92       	push	r0
     fc6:	0f b6       	in	r0, 0x3f	; 63
     fc8:	0f 92       	push	r0
     fca:	11 24       	eor	r1, r1
     fcc:	0f 93       	push	r16
     fce:	1f 93       	push	r17
     fd0:	2f 93       	push	r18
     fd2:	3f 93       	push	r19
     fd4:	4f 93       	push	r20
     fd6:	5f 93       	push	r21
     fd8:	6f 93       	push	r22
     fda:	7f 93       	push	r23
     fdc:	8f 93       	push	r24
     fde:	9f 93       	push	r25
     fe0:	af 93       	push	r26
     fe2:	bf 93       	push	r27
     fe4:	ef 93       	push	r30
     fe6:	ff 93       	push	r31
     fe8:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     fec:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     ff0:	ac 01       	movw	r20, r24
     ff2:	09 2e       	mov	r0, r25
     ff4:	00 0c       	add	r0, r0
     ff6:	66 0b       	sbc	r22, r22
     ff8:	77 0b       	sbc	r23, r23
     ffa:	9a 01       	movw	r18, r20
     ffc:	11 27       	eor	r17, r17
     ffe:	00 27       	eor	r16, r16
    1000:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1004:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1008:	60 e0       	ldi	r22, 0x00	; 0
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	40 2b       	or	r20, r16
    100e:	51 2b       	or	r21, r17
    1010:	62 2b       	or	r22, r18
    1012:	73 2b       	or	r23, r19
    1014:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1018:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    101c:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1020:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1024:	b0 9b       	sbis	0x16, 0	; 22
    1026:	1a c0       	rjmp	.+52     	; 0x105c <__vector_10+0x9a>
    1028:	01 96       	adiw	r24, 0x01	; 1
    102a:	09 2e       	mov	r0, r25
    102c:	00 0c       	add	r0, r0
    102e:	aa 0b       	sbc	r26, r26
    1030:	bb 0b       	sbc	r27, r27
    1032:	bc 01       	movw	r22, r24
    1034:	55 27       	eor	r21, r21
    1036:	44 27       	eor	r20, r20
    1038:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    103c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1040:	a0 e0       	ldi	r26, 0x00	; 0
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	84 2b       	or	r24, r20
    1046:	95 2b       	or	r25, r21
    1048:	a6 2b       	or	r26, r22
    104a:	b7 2b       	or	r27, r23
    104c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1050:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1054:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1058:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    105c:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
    1060:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
    1064:	30 97       	sbiw	r30, 0x00	; 0
    1066:	39 f0       	breq	.+14     	; 0x1076 <__vector_10+0xb4>
    1068:	65 e0       	ldi	r22, 0x05	; 5
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
    1070:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
    1074:	09 95       	icall
    1076:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    107a:	ff 91       	pop	r31
    107c:	ef 91       	pop	r30
    107e:	bf 91       	pop	r27
    1080:	af 91       	pop	r26
    1082:	9f 91       	pop	r25
    1084:	8f 91       	pop	r24
    1086:	7f 91       	pop	r23
    1088:	6f 91       	pop	r22
    108a:	5f 91       	pop	r21
    108c:	4f 91       	pop	r20
    108e:	3f 91       	pop	r19
    1090:	2f 91       	pop	r18
    1092:	1f 91       	pop	r17
    1094:	0f 91       	pop	r16
    1096:	0f 90       	pop	r0
    1098:	0f be       	out	0x3f, r0	; 63
    109a:	0f 90       	pop	r0
    109c:	1f 90       	pop	r1
    109e:	18 95       	reti

000010a0 <__vector_11>:
    10a0:	1f 92       	push	r1
    10a2:	0f 92       	push	r0
    10a4:	0f b6       	in	r0, 0x3f	; 63
    10a6:	0f 92       	push	r0
    10a8:	11 24       	eor	r1, r1
    10aa:	0f 93       	push	r16
    10ac:	1f 93       	push	r17
    10ae:	2f 93       	push	r18
    10b0:	3f 93       	push	r19
    10b2:	4f 93       	push	r20
    10b4:	5f 93       	push	r21
    10b6:	6f 93       	push	r22
    10b8:	7f 93       	push	r23
    10ba:	8f 93       	push	r24
    10bc:	9f 93       	push	r25
    10be:	af 93       	push	r26
    10c0:	bf 93       	push	r27
    10c2:	ef 93       	push	r30
    10c4:	ff 93       	push	r31
    10c6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    10ca:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    10ce:	ac 01       	movw	r20, r24
    10d0:	09 2e       	mov	r0, r25
    10d2:	00 0c       	add	r0, r0
    10d4:	66 0b       	sbc	r22, r22
    10d6:	77 0b       	sbc	r23, r23
    10d8:	9a 01       	movw	r18, r20
    10da:	11 27       	eor	r17, r17
    10dc:	00 27       	eor	r16, r16
    10de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10e6:	60 e0       	ldi	r22, 0x00	; 0
    10e8:	70 e0       	ldi	r23, 0x00	; 0
    10ea:	40 2b       	or	r20, r16
    10ec:	51 2b       	or	r21, r17
    10ee:	62 2b       	or	r22, r18
    10f0:	73 2b       	or	r23, r19
    10f2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    10f6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    10fa:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    10fe:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1102:	b0 9b       	sbis	0x16, 0	; 22
    1104:	1a c0       	rjmp	.+52     	; 0x113a <__vector_11+0x9a>
    1106:	01 96       	adiw	r24, 0x01	; 1
    1108:	09 2e       	mov	r0, r25
    110a:	00 0c       	add	r0, r0
    110c:	aa 0b       	sbc	r26, r26
    110e:	bb 0b       	sbc	r27, r27
    1110:	bc 01       	movw	r22, r24
    1112:	55 27       	eor	r21, r21
    1114:	44 27       	eor	r20, r20
    1116:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    111a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    111e:	a0 e0       	ldi	r26, 0x00	; 0
    1120:	b0 e0       	ldi	r27, 0x00	; 0
    1122:	84 2b       	or	r24, r20
    1124:	95 2b       	or	r25, r21
    1126:	a6 2b       	or	r26, r22
    1128:	b7 2b       	or	r27, r23
    112a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    112e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1132:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1136:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    113a:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
    113e:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
    1142:	30 97       	sbiw	r30, 0x00	; 0
    1144:	39 f0       	breq	.+14     	; 0x1154 <__vector_11+0xb4>
    1146:	66 e0       	ldi	r22, 0x06	; 6
    1148:	70 e0       	ldi	r23, 0x00	; 0
    114a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
    114e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
    1152:	09 95       	icall
    1154:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1158:	ff 91       	pop	r31
    115a:	ef 91       	pop	r30
    115c:	bf 91       	pop	r27
    115e:	af 91       	pop	r26
    1160:	9f 91       	pop	r25
    1162:	8f 91       	pop	r24
    1164:	7f 91       	pop	r23
    1166:	6f 91       	pop	r22
    1168:	5f 91       	pop	r21
    116a:	4f 91       	pop	r20
    116c:	3f 91       	pop	r19
    116e:	2f 91       	pop	r18
    1170:	1f 91       	pop	r17
    1172:	0f 91       	pop	r16
    1174:	0f 90       	pop	r0
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	0f 90       	pop	r0
    117a:	1f 90       	pop	r1
    117c:	18 95       	reti

0000117e <__vector_12>:
    117e:	1f 92       	push	r1
    1180:	0f 92       	push	r0
    1182:	0f b6       	in	r0, 0x3f	; 63
    1184:	0f 92       	push	r0
    1186:	11 24       	eor	r1, r1
    1188:	0f 93       	push	r16
    118a:	1f 93       	push	r17
    118c:	2f 93       	push	r18
    118e:	3f 93       	push	r19
    1190:	4f 93       	push	r20
    1192:	5f 93       	push	r21
    1194:	6f 93       	push	r22
    1196:	7f 93       	push	r23
    1198:	8f 93       	push	r24
    119a:	9f 93       	push	r25
    119c:	af 93       	push	r26
    119e:	bf 93       	push	r27
    11a0:	ef 93       	push	r30
    11a2:	ff 93       	push	r31
    11a4:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    11a8:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    11ac:	ac 01       	movw	r20, r24
    11ae:	09 2e       	mov	r0, r25
    11b0:	00 0c       	add	r0, r0
    11b2:	66 0b       	sbc	r22, r22
    11b4:	77 0b       	sbc	r23, r23
    11b6:	9a 01       	movw	r18, r20
    11b8:	11 27       	eor	r17, r17
    11ba:	00 27       	eor	r16, r16
    11bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11c4:	60 e0       	ldi	r22, 0x00	; 0
    11c6:	70 e0       	ldi	r23, 0x00	; 0
    11c8:	40 2b       	or	r20, r16
    11ca:	51 2b       	or	r21, r17
    11cc:	62 2b       	or	r22, r18
    11ce:	73 2b       	or	r23, r19
    11d0:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    11d4:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    11d8:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    11dc:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    11e0:	b0 9b       	sbis	0x16, 0	; 22
    11e2:	1a c0       	rjmp	.+52     	; 0x1218 <__vector_12+0x9a>
    11e4:	01 96       	adiw	r24, 0x01	; 1
    11e6:	09 2e       	mov	r0, r25
    11e8:	00 0c       	add	r0, r0
    11ea:	aa 0b       	sbc	r26, r26
    11ec:	bb 0b       	sbc	r27, r27
    11ee:	bc 01       	movw	r22, r24
    11f0:	55 27       	eor	r21, r21
    11f2:	44 27       	eor	r20, r20
    11f4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11f8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11fc:	a0 e0       	ldi	r26, 0x00	; 0
    11fe:	b0 e0       	ldi	r27, 0x00	; 0
    1200:	84 2b       	or	r24, r20
    1202:	95 2b       	or	r25, r21
    1204:	a6 2b       	or	r26, r22
    1206:	b7 2b       	or	r27, r23
    1208:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    120c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1210:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1214:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1218:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
    121c:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
    1220:	30 97       	sbiw	r30, 0x00	; 0
    1222:	39 f0       	breq	.+14     	; 0x1232 <__vector_12+0xb4>
    1224:	67 e0       	ldi	r22, 0x07	; 7
    1226:	70 e0       	ldi	r23, 0x00	; 0
    1228:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
    122c:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
    1230:	09 95       	icall
    1232:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1236:	ff 91       	pop	r31
    1238:	ef 91       	pop	r30
    123a:	bf 91       	pop	r27
    123c:	af 91       	pop	r26
    123e:	9f 91       	pop	r25
    1240:	8f 91       	pop	r24
    1242:	7f 91       	pop	r23
    1244:	6f 91       	pop	r22
    1246:	5f 91       	pop	r21
    1248:	4f 91       	pop	r20
    124a:	3f 91       	pop	r19
    124c:	2f 91       	pop	r18
    124e:	1f 91       	pop	r17
    1250:	0f 91       	pop	r16
    1252:	0f 90       	pop	r0
    1254:	0f be       	out	0x3f, r0	; 63
    1256:	0f 90       	pop	r0
    1258:	1f 90       	pop	r1
    125a:	18 95       	reti

0000125c <__vector_13>:
    125c:	1f 92       	push	r1
    125e:	0f 92       	push	r0
    1260:	0f b6       	in	r0, 0x3f	; 63
    1262:	0f 92       	push	r0
    1264:	11 24       	eor	r1, r1
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	2f 93       	push	r18
    126c:	3f 93       	push	r19
    126e:	4f 93       	push	r20
    1270:	5f 93       	push	r21
    1272:	6f 93       	push	r22
    1274:	7f 93       	push	r23
    1276:	8f 93       	push	r24
    1278:	9f 93       	push	r25
    127a:	af 93       	push	r26
    127c:	bf 93       	push	r27
    127e:	ef 93       	push	r30
    1280:	ff 93       	push	r31
    1282:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1286:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    128a:	ac 01       	movw	r20, r24
    128c:	09 2e       	mov	r0, r25
    128e:	00 0c       	add	r0, r0
    1290:	66 0b       	sbc	r22, r22
    1292:	77 0b       	sbc	r23, r23
    1294:	9a 01       	movw	r18, r20
    1296:	11 27       	eor	r17, r17
    1298:	00 27       	eor	r16, r16
    129a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    129e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a2:	60 e0       	ldi	r22, 0x00	; 0
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	40 2b       	or	r20, r16
    12a8:	51 2b       	or	r21, r17
    12aa:	62 2b       	or	r22, r18
    12ac:	73 2b       	or	r23, r19
    12ae:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    12b2:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    12b6:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    12ba:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    12be:	b0 9b       	sbis	0x16, 0	; 22
    12c0:	1a c0       	rjmp	.+52     	; 0x12f6 <__vector_13+0x9a>
    12c2:	01 96       	adiw	r24, 0x01	; 1
    12c4:	09 2e       	mov	r0, r25
    12c6:	00 0c       	add	r0, r0
    12c8:	aa 0b       	sbc	r26, r26
    12ca:	bb 0b       	sbc	r27, r27
    12cc:	bc 01       	movw	r22, r24
    12ce:	55 27       	eor	r21, r21
    12d0:	44 27       	eor	r20, r20
    12d2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12d6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12da:	a0 e0       	ldi	r26, 0x00	; 0
    12dc:	b0 e0       	ldi	r27, 0x00	; 0
    12de:	84 2b       	or	r24, r20
    12e0:	95 2b       	or	r25, r21
    12e2:	a6 2b       	or	r26, r22
    12e4:	b7 2b       	or	r27, r23
    12e6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    12ea:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    12ee:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    12f2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    12f6:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
    12fa:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
    12fe:	30 97       	sbiw	r30, 0x00	; 0
    1300:	39 f0       	breq	.+14     	; 0x1310 <__vector_13+0xb4>
    1302:	68 e0       	ldi	r22, 0x08	; 8
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
    130a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
    130e:	09 95       	icall
    1310:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1314:	ff 91       	pop	r31
    1316:	ef 91       	pop	r30
    1318:	bf 91       	pop	r27
    131a:	af 91       	pop	r26
    131c:	9f 91       	pop	r25
    131e:	8f 91       	pop	r24
    1320:	7f 91       	pop	r23
    1322:	6f 91       	pop	r22
    1324:	5f 91       	pop	r21
    1326:	4f 91       	pop	r20
    1328:	3f 91       	pop	r19
    132a:	2f 91       	pop	r18
    132c:	1f 91       	pop	r17
    132e:	0f 91       	pop	r16
    1330:	0f 90       	pop	r0
    1332:	0f be       	out	0x3f, r0	; 63
    1334:	0f 90       	pop	r0
    1336:	1f 90       	pop	r1
    1338:	18 95       	reti

0000133a <__vector_14>:
    133a:	1f 92       	push	r1
    133c:	0f 92       	push	r0
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	0f 92       	push	r0
    1342:	11 24       	eor	r1, r1
    1344:	0f 93       	push	r16
    1346:	1f 93       	push	r17
    1348:	2f 93       	push	r18
    134a:	3f 93       	push	r19
    134c:	4f 93       	push	r20
    134e:	5f 93       	push	r21
    1350:	6f 93       	push	r22
    1352:	7f 93       	push	r23
    1354:	8f 93       	push	r24
    1356:	9f 93       	push	r25
    1358:	af 93       	push	r26
    135a:	bf 93       	push	r27
    135c:	ef 93       	push	r30
    135e:	ff 93       	push	r31
    1360:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1364:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1368:	ac 01       	movw	r20, r24
    136a:	09 2e       	mov	r0, r25
    136c:	00 0c       	add	r0, r0
    136e:	66 0b       	sbc	r22, r22
    1370:	77 0b       	sbc	r23, r23
    1372:	9a 01       	movw	r18, r20
    1374:	11 27       	eor	r17, r17
    1376:	00 27       	eor	r16, r16
    1378:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    137c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1380:	60 e0       	ldi	r22, 0x00	; 0
    1382:	70 e0       	ldi	r23, 0x00	; 0
    1384:	40 2b       	or	r20, r16
    1386:	51 2b       	or	r21, r17
    1388:	62 2b       	or	r22, r18
    138a:	73 2b       	or	r23, r19
    138c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1390:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1394:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1398:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    139c:	b0 9b       	sbis	0x16, 0	; 22
    139e:	1a c0       	rjmp	.+52     	; 0x13d4 <__vector_14+0x9a>
    13a0:	01 96       	adiw	r24, 0x01	; 1
    13a2:	09 2e       	mov	r0, r25
    13a4:	00 0c       	add	r0, r0
    13a6:	aa 0b       	sbc	r26, r26
    13a8:	bb 0b       	sbc	r27, r27
    13aa:	bc 01       	movw	r22, r24
    13ac:	55 27       	eor	r21, r21
    13ae:	44 27       	eor	r20, r20
    13b0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13b4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13b8:	a0 e0       	ldi	r26, 0x00	; 0
    13ba:	b0 e0       	ldi	r27, 0x00	; 0
    13bc:	84 2b       	or	r24, r20
    13be:	95 2b       	or	r25, r21
    13c0:	a6 2b       	or	r26, r22
    13c2:	b7 2b       	or	r27, r23
    13c4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    13c8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    13cc:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    13d0:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    13d4:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    13d8:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    13dc:	30 97       	sbiw	r30, 0x00	; 0
    13de:	39 f0       	breq	.+14     	; 0x13ee <__vector_14+0xb4>
    13e0:	69 e0       	ldi	r22, 0x09	; 9
    13e2:	70 e0       	ldi	r23, 0x00	; 0
    13e4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    13e8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    13ec:	09 95       	icall
    13ee:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    13f2:	ff 91       	pop	r31
    13f4:	ef 91       	pop	r30
    13f6:	bf 91       	pop	r27
    13f8:	af 91       	pop	r26
    13fa:	9f 91       	pop	r25
    13fc:	8f 91       	pop	r24
    13fe:	7f 91       	pop	r23
    1400:	6f 91       	pop	r22
    1402:	5f 91       	pop	r21
    1404:	4f 91       	pop	r20
    1406:	3f 91       	pop	r19
    1408:	2f 91       	pop	r18
    140a:	1f 91       	pop	r17
    140c:	0f 91       	pop	r16
    140e:	0f 90       	pop	r0
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	0f 90       	pop	r0
    1414:	1f 90       	pop	r1
    1416:	18 95       	reti

00001418 <__vector_15>:
    1418:	1f 92       	push	r1
    141a:	0f 92       	push	r0
    141c:	0f b6       	in	r0, 0x3f	; 63
    141e:	0f 92       	push	r0
    1420:	11 24       	eor	r1, r1
    1422:	0f 93       	push	r16
    1424:	1f 93       	push	r17
    1426:	2f 93       	push	r18
    1428:	3f 93       	push	r19
    142a:	4f 93       	push	r20
    142c:	5f 93       	push	r21
    142e:	6f 93       	push	r22
    1430:	7f 93       	push	r23
    1432:	8f 93       	push	r24
    1434:	9f 93       	push	r25
    1436:	af 93       	push	r26
    1438:	bf 93       	push	r27
    143a:	ef 93       	push	r30
    143c:	ff 93       	push	r31
    143e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1442:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1446:	ac 01       	movw	r20, r24
    1448:	09 2e       	mov	r0, r25
    144a:	00 0c       	add	r0, r0
    144c:	66 0b       	sbc	r22, r22
    144e:	77 0b       	sbc	r23, r23
    1450:	9a 01       	movw	r18, r20
    1452:	11 27       	eor	r17, r17
    1454:	00 27       	eor	r16, r16
    1456:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    145a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	40 2b       	or	r20, r16
    1464:	51 2b       	or	r21, r17
    1466:	62 2b       	or	r22, r18
    1468:	73 2b       	or	r23, r19
    146a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    146e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1472:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1476:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    147a:	b0 9b       	sbis	0x16, 0	; 22
    147c:	1a c0       	rjmp	.+52     	; 0x14b2 <__vector_15+0x9a>
    147e:	01 96       	adiw	r24, 0x01	; 1
    1480:	09 2e       	mov	r0, r25
    1482:	00 0c       	add	r0, r0
    1484:	aa 0b       	sbc	r26, r26
    1486:	bb 0b       	sbc	r27, r27
    1488:	bc 01       	movw	r22, r24
    148a:	55 27       	eor	r21, r21
    148c:	44 27       	eor	r20, r20
    148e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1492:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1496:	a0 e0       	ldi	r26, 0x00	; 0
    1498:	b0 e0       	ldi	r27, 0x00	; 0
    149a:	84 2b       	or	r24, r20
    149c:	95 2b       	or	r25, r21
    149e:	a6 2b       	or	r26, r22
    14a0:	b7 2b       	or	r27, r23
    14a2:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    14a6:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    14aa:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    14ae:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    14b2:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    14b6:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    14ba:	30 97       	sbiw	r30, 0x00	; 0
    14bc:	39 f0       	breq	.+14     	; 0x14cc <__vector_15+0xb4>
    14be:	6a e0       	ldi	r22, 0x0A	; 10
    14c0:	70 e0       	ldi	r23, 0x00	; 0
    14c2:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    14c6:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    14ca:	09 95       	icall
    14cc:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    14d0:	ff 91       	pop	r31
    14d2:	ef 91       	pop	r30
    14d4:	bf 91       	pop	r27
    14d6:	af 91       	pop	r26
    14d8:	9f 91       	pop	r25
    14da:	8f 91       	pop	r24
    14dc:	7f 91       	pop	r23
    14de:	6f 91       	pop	r22
    14e0:	5f 91       	pop	r21
    14e2:	4f 91       	pop	r20
    14e4:	3f 91       	pop	r19
    14e6:	2f 91       	pop	r18
    14e8:	1f 91       	pop	r17
    14ea:	0f 91       	pop	r16
    14ec:	0f 90       	pop	r0
    14ee:	0f be       	out	0x3f, r0	; 63
    14f0:	0f 90       	pop	r0
    14f2:	1f 90       	pop	r1
    14f4:	18 95       	reti

000014f6 <__vector_16>:
    14f6:	1f 92       	push	r1
    14f8:	0f 92       	push	r0
    14fa:	0f b6       	in	r0, 0x3f	; 63
    14fc:	0f 92       	push	r0
    14fe:	11 24       	eor	r1, r1
    1500:	0f 93       	push	r16
    1502:	1f 93       	push	r17
    1504:	2f 93       	push	r18
    1506:	3f 93       	push	r19
    1508:	4f 93       	push	r20
    150a:	5f 93       	push	r21
    150c:	6f 93       	push	r22
    150e:	7f 93       	push	r23
    1510:	8f 93       	push	r24
    1512:	9f 93       	push	r25
    1514:	af 93       	push	r26
    1516:	bf 93       	push	r27
    1518:	ef 93       	push	r30
    151a:	ff 93       	push	r31
    151c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1520:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1524:	ac 01       	movw	r20, r24
    1526:	09 2e       	mov	r0, r25
    1528:	00 0c       	add	r0, r0
    152a:	66 0b       	sbc	r22, r22
    152c:	77 0b       	sbc	r23, r23
    152e:	9a 01       	movw	r18, r20
    1530:	11 27       	eor	r17, r17
    1532:	00 27       	eor	r16, r16
    1534:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1538:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153c:	60 e0       	ldi	r22, 0x00	; 0
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	40 2b       	or	r20, r16
    1542:	51 2b       	or	r21, r17
    1544:	62 2b       	or	r22, r18
    1546:	73 2b       	or	r23, r19
    1548:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    154c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1550:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1554:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1558:	b0 9b       	sbis	0x16, 0	; 22
    155a:	1a c0       	rjmp	.+52     	; 0x1590 <__vector_16+0x9a>
    155c:	01 96       	adiw	r24, 0x01	; 1
    155e:	09 2e       	mov	r0, r25
    1560:	00 0c       	add	r0, r0
    1562:	aa 0b       	sbc	r26, r26
    1564:	bb 0b       	sbc	r27, r27
    1566:	bc 01       	movw	r22, r24
    1568:	55 27       	eor	r21, r21
    156a:	44 27       	eor	r20, r20
    156c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1570:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1574:	a0 e0       	ldi	r26, 0x00	; 0
    1576:	b0 e0       	ldi	r27, 0x00	; 0
    1578:	84 2b       	or	r24, r20
    157a:	95 2b       	or	r25, r21
    157c:	a6 2b       	or	r26, r22
    157e:	b7 2b       	or	r27, r23
    1580:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1584:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1588:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    158c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1590:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    1594:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    1598:	30 97       	sbiw	r30, 0x00	; 0
    159a:	39 f0       	breq	.+14     	; 0x15aa <__vector_16+0xb4>
    159c:	6b e0       	ldi	r22, 0x0B	; 11
    159e:	70 e0       	ldi	r23, 0x00	; 0
    15a0:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    15a4:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    15a8:	09 95       	icall
    15aa:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    15ae:	ff 91       	pop	r31
    15b0:	ef 91       	pop	r30
    15b2:	bf 91       	pop	r27
    15b4:	af 91       	pop	r26
    15b6:	9f 91       	pop	r25
    15b8:	8f 91       	pop	r24
    15ba:	7f 91       	pop	r23
    15bc:	6f 91       	pop	r22
    15be:	5f 91       	pop	r21
    15c0:	4f 91       	pop	r20
    15c2:	3f 91       	pop	r19
    15c4:	2f 91       	pop	r18
    15c6:	1f 91       	pop	r17
    15c8:	0f 91       	pop	r16
    15ca:	0f 90       	pop	r0
    15cc:	0f be       	out	0x3f, r0	; 63
    15ce:	0f 90       	pop	r0
    15d0:	1f 90       	pop	r1
    15d2:	18 95       	reti

000015d4 <__vector_17>:
    15d4:	1f 92       	push	r1
    15d6:	0f 92       	push	r0
    15d8:	0f b6       	in	r0, 0x3f	; 63
    15da:	0f 92       	push	r0
    15dc:	11 24       	eor	r1, r1
    15de:	0f 93       	push	r16
    15e0:	1f 93       	push	r17
    15e2:	2f 93       	push	r18
    15e4:	3f 93       	push	r19
    15e6:	4f 93       	push	r20
    15e8:	5f 93       	push	r21
    15ea:	6f 93       	push	r22
    15ec:	7f 93       	push	r23
    15ee:	8f 93       	push	r24
    15f0:	9f 93       	push	r25
    15f2:	af 93       	push	r26
    15f4:	bf 93       	push	r27
    15f6:	ef 93       	push	r30
    15f8:	ff 93       	push	r31
    15fa:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    15fe:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1602:	ac 01       	movw	r20, r24
    1604:	09 2e       	mov	r0, r25
    1606:	00 0c       	add	r0, r0
    1608:	66 0b       	sbc	r22, r22
    160a:	77 0b       	sbc	r23, r23
    160c:	9a 01       	movw	r18, r20
    160e:	11 27       	eor	r17, r17
    1610:	00 27       	eor	r16, r16
    1612:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1616:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    161a:	60 e0       	ldi	r22, 0x00	; 0
    161c:	70 e0       	ldi	r23, 0x00	; 0
    161e:	40 2b       	or	r20, r16
    1620:	51 2b       	or	r21, r17
    1622:	62 2b       	or	r22, r18
    1624:	73 2b       	or	r23, r19
    1626:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    162a:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    162e:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1632:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1636:	b0 9b       	sbis	0x16, 0	; 22
    1638:	1a c0       	rjmp	.+52     	; 0x166e <__vector_17+0x9a>
    163a:	01 96       	adiw	r24, 0x01	; 1
    163c:	09 2e       	mov	r0, r25
    163e:	00 0c       	add	r0, r0
    1640:	aa 0b       	sbc	r26, r26
    1642:	bb 0b       	sbc	r27, r27
    1644:	bc 01       	movw	r22, r24
    1646:	55 27       	eor	r21, r21
    1648:	44 27       	eor	r20, r20
    164a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    164e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1652:	a0 e0       	ldi	r26, 0x00	; 0
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	84 2b       	or	r24, r20
    1658:	95 2b       	or	r25, r21
    165a:	a6 2b       	or	r26, r22
    165c:	b7 2b       	or	r27, r23
    165e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1662:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1666:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    166a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    166e:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    1672:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    1676:	30 97       	sbiw	r30, 0x00	; 0
    1678:	39 f0       	breq	.+14     	; 0x1688 <__vector_17+0xb4>
    167a:	6c e0       	ldi	r22, 0x0C	; 12
    167c:	70 e0       	ldi	r23, 0x00	; 0
    167e:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    1682:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    1686:	09 95       	icall
    1688:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    168c:	ff 91       	pop	r31
    168e:	ef 91       	pop	r30
    1690:	bf 91       	pop	r27
    1692:	af 91       	pop	r26
    1694:	9f 91       	pop	r25
    1696:	8f 91       	pop	r24
    1698:	7f 91       	pop	r23
    169a:	6f 91       	pop	r22
    169c:	5f 91       	pop	r21
    169e:	4f 91       	pop	r20
    16a0:	3f 91       	pop	r19
    16a2:	2f 91       	pop	r18
    16a4:	1f 91       	pop	r17
    16a6:	0f 91       	pop	r16
    16a8:	0f 90       	pop	r0
    16aa:	0f be       	out	0x3f, r0	; 63
    16ac:	0f 90       	pop	r0
    16ae:	1f 90       	pop	r1
    16b0:	18 95       	reti

000016b2 <__vector_18>:
    16b2:	1f 92       	push	r1
    16b4:	0f 92       	push	r0
    16b6:	0f b6       	in	r0, 0x3f	; 63
    16b8:	0f 92       	push	r0
    16ba:	11 24       	eor	r1, r1
    16bc:	0f 93       	push	r16
    16be:	1f 93       	push	r17
    16c0:	2f 93       	push	r18
    16c2:	3f 93       	push	r19
    16c4:	4f 93       	push	r20
    16c6:	5f 93       	push	r21
    16c8:	6f 93       	push	r22
    16ca:	7f 93       	push	r23
    16cc:	8f 93       	push	r24
    16ce:	9f 93       	push	r25
    16d0:	af 93       	push	r26
    16d2:	bf 93       	push	r27
    16d4:	ef 93       	push	r30
    16d6:	ff 93       	push	r31
    16d8:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    16dc:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    16e0:	ac 01       	movw	r20, r24
    16e2:	09 2e       	mov	r0, r25
    16e4:	00 0c       	add	r0, r0
    16e6:	66 0b       	sbc	r22, r22
    16e8:	77 0b       	sbc	r23, r23
    16ea:	9a 01       	movw	r18, r20
    16ec:	11 27       	eor	r17, r17
    16ee:	00 27       	eor	r16, r16
    16f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16f8:	60 e0       	ldi	r22, 0x00	; 0
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	40 2b       	or	r20, r16
    16fe:	51 2b       	or	r21, r17
    1700:	62 2b       	or	r22, r18
    1702:	73 2b       	or	r23, r19
    1704:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1708:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    170c:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1710:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1714:	b0 9b       	sbis	0x16, 0	; 22
    1716:	1a c0       	rjmp	.+52     	; 0x174c <__vector_18+0x9a>
    1718:	01 96       	adiw	r24, 0x01	; 1
    171a:	09 2e       	mov	r0, r25
    171c:	00 0c       	add	r0, r0
    171e:	aa 0b       	sbc	r26, r26
    1720:	bb 0b       	sbc	r27, r27
    1722:	bc 01       	movw	r22, r24
    1724:	55 27       	eor	r21, r21
    1726:	44 27       	eor	r20, r20
    1728:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    172c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1730:	a0 e0       	ldi	r26, 0x00	; 0
    1732:	b0 e0       	ldi	r27, 0x00	; 0
    1734:	84 2b       	or	r24, r20
    1736:	95 2b       	or	r25, r21
    1738:	a6 2b       	or	r26, r22
    173a:	b7 2b       	or	r27, r23
    173c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1740:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1744:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1748:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    174c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    1750:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    1754:	30 97       	sbiw	r30, 0x00	; 0
    1756:	39 f0       	breq	.+14     	; 0x1766 <__vector_18+0xb4>
    1758:	6d e0       	ldi	r22, 0x0D	; 13
    175a:	70 e0       	ldi	r23, 0x00	; 0
    175c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    1760:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    1764:	09 95       	icall
    1766:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    176a:	ff 91       	pop	r31
    176c:	ef 91       	pop	r30
    176e:	bf 91       	pop	r27
    1770:	af 91       	pop	r26
    1772:	9f 91       	pop	r25
    1774:	8f 91       	pop	r24
    1776:	7f 91       	pop	r23
    1778:	6f 91       	pop	r22
    177a:	5f 91       	pop	r21
    177c:	4f 91       	pop	r20
    177e:	3f 91       	pop	r19
    1780:	2f 91       	pop	r18
    1782:	1f 91       	pop	r17
    1784:	0f 91       	pop	r16
    1786:	0f 90       	pop	r0
    1788:	0f be       	out	0x3f, r0	; 63
    178a:	0f 90       	pop	r0
    178c:	1f 90       	pop	r1
    178e:	18 95       	reti

00001790 <__vector_19>:
    1790:	1f 92       	push	r1
    1792:	0f 92       	push	r0
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	0f 92       	push	r0
    1798:	11 24       	eor	r1, r1
    179a:	0f 93       	push	r16
    179c:	1f 93       	push	r17
    179e:	2f 93       	push	r18
    17a0:	3f 93       	push	r19
    17a2:	4f 93       	push	r20
    17a4:	5f 93       	push	r21
    17a6:	6f 93       	push	r22
    17a8:	7f 93       	push	r23
    17aa:	8f 93       	push	r24
    17ac:	9f 93       	push	r25
    17ae:	af 93       	push	r26
    17b0:	bf 93       	push	r27
    17b2:	ef 93       	push	r30
    17b4:	ff 93       	push	r31
    17b6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    17ba:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    17be:	ac 01       	movw	r20, r24
    17c0:	09 2e       	mov	r0, r25
    17c2:	00 0c       	add	r0, r0
    17c4:	66 0b       	sbc	r22, r22
    17c6:	77 0b       	sbc	r23, r23
    17c8:	9a 01       	movw	r18, r20
    17ca:	11 27       	eor	r17, r17
    17cc:	00 27       	eor	r16, r16
    17ce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17d2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17d6:	60 e0       	ldi	r22, 0x00	; 0
    17d8:	70 e0       	ldi	r23, 0x00	; 0
    17da:	40 2b       	or	r20, r16
    17dc:	51 2b       	or	r21, r17
    17de:	62 2b       	or	r22, r18
    17e0:	73 2b       	or	r23, r19
    17e2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    17e6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    17ea:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    17ee:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    17f2:	b0 9b       	sbis	0x16, 0	; 22
    17f4:	1a c0       	rjmp	.+52     	; 0x182a <__vector_19+0x9a>
    17f6:	01 96       	adiw	r24, 0x01	; 1
    17f8:	09 2e       	mov	r0, r25
    17fa:	00 0c       	add	r0, r0
    17fc:	aa 0b       	sbc	r26, r26
    17fe:	bb 0b       	sbc	r27, r27
    1800:	bc 01       	movw	r22, r24
    1802:	55 27       	eor	r21, r21
    1804:	44 27       	eor	r20, r20
    1806:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    180a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    180e:	a0 e0       	ldi	r26, 0x00	; 0
    1810:	b0 e0       	ldi	r27, 0x00	; 0
    1812:	84 2b       	or	r24, r20
    1814:	95 2b       	or	r25, r21
    1816:	a6 2b       	or	r26, r22
    1818:	b7 2b       	or	r27, r23
    181a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    181e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1822:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1826:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    182a:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    182e:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    1832:	30 97       	sbiw	r30, 0x00	; 0
    1834:	39 f0       	breq	.+14     	; 0x1844 <__vector_19+0xb4>
    1836:	6e e0       	ldi	r22, 0x0E	; 14
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    183e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    1842:	09 95       	icall
    1844:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1848:	ff 91       	pop	r31
    184a:	ef 91       	pop	r30
    184c:	bf 91       	pop	r27
    184e:	af 91       	pop	r26
    1850:	9f 91       	pop	r25
    1852:	8f 91       	pop	r24
    1854:	7f 91       	pop	r23
    1856:	6f 91       	pop	r22
    1858:	5f 91       	pop	r21
    185a:	4f 91       	pop	r20
    185c:	3f 91       	pop	r19
    185e:	2f 91       	pop	r18
    1860:	1f 91       	pop	r17
    1862:	0f 91       	pop	r16
    1864:	0f 90       	pop	r0
    1866:	0f be       	out	0x3f, r0	; 63
    1868:	0f 90       	pop	r0
    186a:	1f 90       	pop	r1
    186c:	18 95       	reti

0000186e <__vector_20>:
    186e:	1f 92       	push	r1
    1870:	0f 92       	push	r0
    1872:	0f b6       	in	r0, 0x3f	; 63
    1874:	0f 92       	push	r0
    1876:	11 24       	eor	r1, r1
    1878:	0f 93       	push	r16
    187a:	1f 93       	push	r17
    187c:	2f 93       	push	r18
    187e:	3f 93       	push	r19
    1880:	4f 93       	push	r20
    1882:	5f 93       	push	r21
    1884:	6f 93       	push	r22
    1886:	7f 93       	push	r23
    1888:	8f 93       	push	r24
    188a:	9f 93       	push	r25
    188c:	af 93       	push	r26
    188e:	bf 93       	push	r27
    1890:	ef 93       	push	r30
    1892:	ff 93       	push	r31
    1894:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1898:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    189c:	ac 01       	movw	r20, r24
    189e:	09 2e       	mov	r0, r25
    18a0:	00 0c       	add	r0, r0
    18a2:	66 0b       	sbc	r22, r22
    18a4:	77 0b       	sbc	r23, r23
    18a6:	9a 01       	movw	r18, r20
    18a8:	11 27       	eor	r17, r17
    18aa:	00 27       	eor	r16, r16
    18ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18b4:	60 e0       	ldi	r22, 0x00	; 0
    18b6:	70 e0       	ldi	r23, 0x00	; 0
    18b8:	40 2b       	or	r20, r16
    18ba:	51 2b       	or	r21, r17
    18bc:	62 2b       	or	r22, r18
    18be:	73 2b       	or	r23, r19
    18c0:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    18c4:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    18c8:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    18cc:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    18d0:	b0 9b       	sbis	0x16, 0	; 22
    18d2:	1a c0       	rjmp	.+52     	; 0x1908 <__vector_20+0x9a>
    18d4:	01 96       	adiw	r24, 0x01	; 1
    18d6:	09 2e       	mov	r0, r25
    18d8:	00 0c       	add	r0, r0
    18da:	aa 0b       	sbc	r26, r26
    18dc:	bb 0b       	sbc	r27, r27
    18de:	bc 01       	movw	r22, r24
    18e0:	55 27       	eor	r21, r21
    18e2:	44 27       	eor	r20, r20
    18e4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18e8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18ec:	a0 e0       	ldi	r26, 0x00	; 0
    18ee:	b0 e0       	ldi	r27, 0x00	; 0
    18f0:	84 2b       	or	r24, r20
    18f2:	95 2b       	or	r25, r21
    18f4:	a6 2b       	or	r26, r22
    18f6:	b7 2b       	or	r27, r23
    18f8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    18fc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1900:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1904:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1908:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    190c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    1910:	30 97       	sbiw	r30, 0x00	; 0
    1912:	39 f0       	breq	.+14     	; 0x1922 <__vector_20+0xb4>
    1914:	6f e0       	ldi	r22, 0x0F	; 15
    1916:	70 e0       	ldi	r23, 0x00	; 0
    1918:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    191c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    1920:	09 95       	icall
    1922:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1926:	ff 91       	pop	r31
    1928:	ef 91       	pop	r30
    192a:	bf 91       	pop	r27
    192c:	af 91       	pop	r26
    192e:	9f 91       	pop	r25
    1930:	8f 91       	pop	r24
    1932:	7f 91       	pop	r23
    1934:	6f 91       	pop	r22
    1936:	5f 91       	pop	r21
    1938:	4f 91       	pop	r20
    193a:	3f 91       	pop	r19
    193c:	2f 91       	pop	r18
    193e:	1f 91       	pop	r17
    1940:	0f 91       	pop	r16
    1942:	0f 90       	pop	r0
    1944:	0f be       	out	0x3f, r0	; 63
    1946:	0f 90       	pop	r0
    1948:	1f 90       	pop	r1
    194a:	18 95       	reti

0000194c <__vector_21>:
    194c:	1f 92       	push	r1
    194e:	0f 92       	push	r0
    1950:	0f b6       	in	r0, 0x3f	; 63
    1952:	0f 92       	push	r0
    1954:	11 24       	eor	r1, r1
    1956:	0f 93       	push	r16
    1958:	1f 93       	push	r17
    195a:	2f 93       	push	r18
    195c:	3f 93       	push	r19
    195e:	4f 93       	push	r20
    1960:	5f 93       	push	r21
    1962:	6f 93       	push	r22
    1964:	7f 93       	push	r23
    1966:	8f 93       	push	r24
    1968:	9f 93       	push	r25
    196a:	af 93       	push	r26
    196c:	bf 93       	push	r27
    196e:	ef 93       	push	r30
    1970:	ff 93       	push	r31
    1972:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1976:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    197a:	ac 01       	movw	r20, r24
    197c:	09 2e       	mov	r0, r25
    197e:	00 0c       	add	r0, r0
    1980:	66 0b       	sbc	r22, r22
    1982:	77 0b       	sbc	r23, r23
    1984:	9a 01       	movw	r18, r20
    1986:	11 27       	eor	r17, r17
    1988:	00 27       	eor	r16, r16
    198a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    198e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1992:	60 e0       	ldi	r22, 0x00	; 0
    1994:	70 e0       	ldi	r23, 0x00	; 0
    1996:	40 2b       	or	r20, r16
    1998:	51 2b       	or	r21, r17
    199a:	62 2b       	or	r22, r18
    199c:	73 2b       	or	r23, r19
    199e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    19a2:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    19a6:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    19aa:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    19ae:	b0 9b       	sbis	0x16, 0	; 22
    19b0:	1a c0       	rjmp	.+52     	; 0x19e6 <__vector_21+0x9a>
    19b2:	01 96       	adiw	r24, 0x01	; 1
    19b4:	09 2e       	mov	r0, r25
    19b6:	00 0c       	add	r0, r0
    19b8:	aa 0b       	sbc	r26, r26
    19ba:	bb 0b       	sbc	r27, r27
    19bc:	bc 01       	movw	r22, r24
    19be:	55 27       	eor	r21, r21
    19c0:	44 27       	eor	r20, r20
    19c2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19c6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ca:	a0 e0       	ldi	r26, 0x00	; 0
    19cc:	b0 e0       	ldi	r27, 0x00	; 0
    19ce:	84 2b       	or	r24, r20
    19d0:	95 2b       	or	r25, r21
    19d2:	a6 2b       	or	r26, r22
    19d4:	b7 2b       	or	r27, r23
    19d6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    19da:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    19de:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    19e2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    19e6:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    19ea:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    19ee:	30 97       	sbiw	r30, 0x00	; 0
    19f0:	39 f0       	breq	.+14     	; 0x1a00 <__vector_21+0xb4>
    19f2:	60 e1       	ldi	r22, 0x10	; 16
    19f4:	70 e0       	ldi	r23, 0x00	; 0
    19f6:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    19fa:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    19fe:	09 95       	icall
    1a00:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1a04:	ff 91       	pop	r31
    1a06:	ef 91       	pop	r30
    1a08:	bf 91       	pop	r27
    1a0a:	af 91       	pop	r26
    1a0c:	9f 91       	pop	r25
    1a0e:	8f 91       	pop	r24
    1a10:	7f 91       	pop	r23
    1a12:	6f 91       	pop	r22
    1a14:	5f 91       	pop	r21
    1a16:	4f 91       	pop	r20
    1a18:	3f 91       	pop	r19
    1a1a:	2f 91       	pop	r18
    1a1c:	1f 91       	pop	r17
    1a1e:	0f 91       	pop	r16
    1a20:	0f 90       	pop	r0
    1a22:	0f be       	out	0x3f, r0	; 63
    1a24:	0f 90       	pop	r0
    1a26:	1f 90       	pop	r1
    1a28:	18 95       	reti

00001a2a <__vector_22>:
    1a2a:	1f 92       	push	r1
    1a2c:	0f 92       	push	r0
    1a2e:	0f b6       	in	r0, 0x3f	; 63
    1a30:	0f 92       	push	r0
    1a32:	11 24       	eor	r1, r1
    1a34:	0f 93       	push	r16
    1a36:	1f 93       	push	r17
    1a38:	2f 93       	push	r18
    1a3a:	3f 93       	push	r19
    1a3c:	4f 93       	push	r20
    1a3e:	5f 93       	push	r21
    1a40:	6f 93       	push	r22
    1a42:	7f 93       	push	r23
    1a44:	8f 93       	push	r24
    1a46:	9f 93       	push	r25
    1a48:	af 93       	push	r26
    1a4a:	bf 93       	push	r27
    1a4c:	ef 93       	push	r30
    1a4e:	ff 93       	push	r31
    1a50:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1a54:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1a58:	ac 01       	movw	r20, r24
    1a5a:	09 2e       	mov	r0, r25
    1a5c:	00 0c       	add	r0, r0
    1a5e:	66 0b       	sbc	r22, r22
    1a60:	77 0b       	sbc	r23, r23
    1a62:	9a 01       	movw	r18, r20
    1a64:	11 27       	eor	r17, r17
    1a66:	00 27       	eor	r16, r16
    1a68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a70:	60 e0       	ldi	r22, 0x00	; 0
    1a72:	70 e0       	ldi	r23, 0x00	; 0
    1a74:	40 2b       	or	r20, r16
    1a76:	51 2b       	or	r21, r17
    1a78:	62 2b       	or	r22, r18
    1a7a:	73 2b       	or	r23, r19
    1a7c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1a80:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1a84:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1a88:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1a8c:	b0 9b       	sbis	0x16, 0	; 22
    1a8e:	1a c0       	rjmp	.+52     	; 0x1ac4 <__vector_22+0x9a>
    1a90:	01 96       	adiw	r24, 0x01	; 1
    1a92:	09 2e       	mov	r0, r25
    1a94:	00 0c       	add	r0, r0
    1a96:	aa 0b       	sbc	r26, r26
    1a98:	bb 0b       	sbc	r27, r27
    1a9a:	bc 01       	movw	r22, r24
    1a9c:	55 27       	eor	r21, r21
    1a9e:	44 27       	eor	r20, r20
    1aa0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aa4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aa8:	a0 e0       	ldi	r26, 0x00	; 0
    1aaa:	b0 e0       	ldi	r27, 0x00	; 0
    1aac:	84 2b       	or	r24, r20
    1aae:	95 2b       	or	r25, r21
    1ab0:	a6 2b       	or	r26, r22
    1ab2:	b7 2b       	or	r27, r23
    1ab4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1ab8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1abc:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1ac0:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1ac4:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    1ac8:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    1acc:	30 97       	sbiw	r30, 0x00	; 0
    1ace:	39 f0       	breq	.+14     	; 0x1ade <__vector_22+0xb4>
    1ad0:	61 e1       	ldi	r22, 0x11	; 17
    1ad2:	70 e0       	ldi	r23, 0x00	; 0
    1ad4:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    1ad8:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    1adc:	09 95       	icall
    1ade:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1ae2:	ff 91       	pop	r31
    1ae4:	ef 91       	pop	r30
    1ae6:	bf 91       	pop	r27
    1ae8:	af 91       	pop	r26
    1aea:	9f 91       	pop	r25
    1aec:	8f 91       	pop	r24
    1aee:	7f 91       	pop	r23
    1af0:	6f 91       	pop	r22
    1af2:	5f 91       	pop	r21
    1af4:	4f 91       	pop	r20
    1af6:	3f 91       	pop	r19
    1af8:	2f 91       	pop	r18
    1afa:	1f 91       	pop	r17
    1afc:	0f 91       	pop	r16
    1afe:	0f 90       	pop	r0
    1b00:	0f be       	out	0x3f, r0	; 63
    1b02:	0f 90       	pop	r0
    1b04:	1f 90       	pop	r1
    1b06:	18 95       	reti

00001b08 <idle>:
    1b08:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1b0c:	78 94       	sei
    1b0e:	81 e0       	ldi	r24, 0x01	; 1
    1b10:	83 bf       	out	0x33, r24	; 51
    1b12:	88 95       	sleep
    1b14:	fc cf       	rjmp	.-8      	; 0x1b0e <idle+0x6>

00001b16 <__vector_9>:
    1b16:	1f 92       	push	r1
    1b18:	0f 92       	push	r0
    1b1a:	0f b6       	in	r0, 0x3f	; 63
    1b1c:	0f 92       	push	r0
    1b1e:	11 24       	eor	r1, r1
    1b20:	2f 93       	push	r18
    1b22:	3f 93       	push	r19
    1b24:	4f 93       	push	r20
    1b26:	5f 93       	push	r21
    1b28:	6f 93       	push	r22
    1b2a:	7f 93       	push	r23
    1b2c:	8f 93       	push	r24
    1b2e:	9f 93       	push	r25
    1b30:	ef 93       	push	r30
    1b32:	ff 93       	push	r31
    1b34:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1b38:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1b3c:	01 96       	adiw	r24, 0x01	; 1
    1b3e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    1b42:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    1b46:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1b4a:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1b4e:	30 97       	sbiw	r30, 0x00	; 0
    1b50:	01 f1       	breq	.+64     	; 0x1b92 <__vector_9+0x7c>
    1b52:	42 81       	ldd	r20, Z+2	; 0x02
    1b54:	53 81       	ldd	r21, Z+3	; 0x03
    1b56:	64 81       	ldd	r22, Z+4	; 0x04
    1b58:	75 81       	ldd	r23, Z+5	; 0x05
    1b5a:	86 17       	cp	r24, r22
    1b5c:	97 07       	cpc	r25, r23
    1b5e:	c9 f4       	brne	.+50     	; 0x1b92 <__vector_9+0x7c>
    1b60:	ca 01       	movw	r24, r20
    1b62:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b66:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b6a:	42 1b       	sub	r20, r18
    1b6c:	53 0b       	sbc	r21, r19
    1b6e:	41 30       	cpi	r20, 0x01	; 1
    1b70:	51 05       	cpc	r21, r1
    1b72:	29 f4       	brne	.+10     	; 0x1b7e <__vector_9+0x68>
    1b74:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b78:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b7c:	01 96       	adiw	r24, 0x01	; 1
    1b7e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b82:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b86:	ef e6       	ldi	r30, 0x6F	; 111
    1b88:	f0 e0       	ldi	r31, 0x00	; 0
    1b8a:	80 81       	ld	r24, Z
    1b8c:	82 60       	ori	r24, 0x02	; 2
    1b8e:	80 83       	st	Z, r24
    1b90:	05 c0       	rjmp	.+10     	; 0x1b9c <__vector_9+0x86>
    1b92:	ef e6       	ldi	r30, 0x6F	; 111
    1b94:	f0 e0       	ldi	r31, 0x00	; 0
    1b96:	80 81       	ld	r24, Z
    1b98:	8d 7f       	andi	r24, 0xFD	; 253
    1b9a:	80 83       	st	Z, r24
    1b9c:	ff 91       	pop	r31
    1b9e:	ef 91       	pop	r30
    1ba0:	9f 91       	pop	r25
    1ba2:	8f 91       	pop	r24
    1ba4:	7f 91       	pop	r23
    1ba6:	6f 91       	pop	r22
    1ba8:	5f 91       	pop	r21
    1baa:	4f 91       	pop	r20
    1bac:	3f 91       	pop	r19
    1bae:	2f 91       	pop	r18
    1bb0:	0f 90       	pop	r0
    1bb2:	0f be       	out	0x3f, r0	; 63
    1bb4:	0f 90       	pop	r0
    1bb6:	1f 90       	pop	r1
    1bb8:	18 95       	reti

00001bba <__vector_7>:
    1bba:	1f 92       	push	r1
    1bbc:	0f 92       	push	r0
    1bbe:	0f b6       	in	r0, 0x3f	; 63
    1bc0:	0f 92       	push	r0
    1bc2:	11 24       	eor	r1, r1
    1bc4:	cf 92       	push	r12
    1bc6:	df 92       	push	r13
    1bc8:	ef 92       	push	r14
    1bca:	ff 92       	push	r15
    1bcc:	2f 93       	push	r18
    1bce:	3f 93       	push	r19
    1bd0:	4f 93       	push	r20
    1bd2:	5f 93       	push	r21
    1bd4:	6f 93       	push	r22
    1bd6:	7f 93       	push	r23
    1bd8:	8f 93       	push	r24
    1bda:	9f 93       	push	r25
    1bdc:	af 93       	push	r26
    1bde:	bf 93       	push	r27
    1be0:	ef 93       	push	r30
    1be2:	ff 93       	push	r31
    1be4:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1be8:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1bec:	6c 01       	movw	r12, r24
    1bee:	09 2e       	mov	r0, r25
    1bf0:	00 0c       	add	r0, r0
    1bf2:	ee 08       	sbc	r14, r14
    1bf4:	ff 08       	sbc	r15, r15
    1bf6:	76 01       	movw	r14, r12
    1bf8:	dd 24       	eor	r13, r13
    1bfa:	cc 24       	eor	r12, r12
    1bfc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c04:	60 e0       	ldi	r22, 0x00	; 0
    1c06:	70 e0       	ldi	r23, 0x00	; 0
    1c08:	c4 2a       	or	r12, r20
    1c0a:	d5 2a       	or	r13, r21
    1c0c:	e6 2a       	or	r14, r22
    1c0e:	f7 2a       	or	r15, r23
    1c10:	b0 9b       	sbis	0x16, 0	; 22
    1c12:	1e c0       	rjmp	.+60     	; 0x1c50 <__vector_7+0x96>
    1c14:	6c 01       	movw	r12, r24
    1c16:	2f ef       	ldi	r18, 0xFF	; 255
    1c18:	c2 1a       	sub	r12, r18
    1c1a:	d2 0a       	sbc	r13, r18
    1c1c:	0d 2c       	mov	r0, r13
    1c1e:	00 0c       	add	r0, r0
    1c20:	ee 08       	sbc	r14, r14
    1c22:	ff 08       	sbc	r15, r15
    1c24:	d6 01       	movw	r26, r12
    1c26:	99 27       	eor	r25, r25
    1c28:	88 27       	eor	r24, r24
    1c2a:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c2e:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c32:	e1 2c       	mov	r14, r1
    1c34:	f1 2c       	mov	r15, r1
    1c36:	c8 2a       	or	r12, r24
    1c38:	d9 2a       	or	r13, r25
    1c3a:	ea 2a       	or	r14, r26
    1c3c:	fb 2a       	or	r15, r27
    1c3e:	08 c0       	rjmp	.+16     	; 0x1c50 <__vector_7+0x96>
    1c40:	84 e2       	ldi	r24, 0x24	; 36
    1c42:	91 e0       	ldi	r25, 0x01	; 1
    1c44:	0e 94 4d 05 	call	0xa9a	; 0xa9a <dequeue>
    1c48:	66 e2       	ldi	r22, 0x26	; 38
    1c4a:	71 e0       	ldi	r23, 0x01	; 1
    1c4c:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <enqueueByDeadline>
    1c50:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1c54:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1c58:	30 97       	sbiw	r30, 0x00	; 0
    1c5a:	69 f0       	breq	.+26     	; 0x1c76 <__vector_7+0xbc>
    1c5c:	82 81       	ldd	r24, Z+2	; 0x02
    1c5e:	93 81       	ldd	r25, Z+3	; 0x03
    1c60:	a4 81       	ldd	r26, Z+4	; 0x04
    1c62:	b5 81       	ldd	r27, Z+5	; 0x05
    1c64:	8c 19       	sub	r24, r12
    1c66:	9d 09       	sbc	r25, r13
    1c68:	ae 09       	sbc	r26, r14
    1c6a:	bf 09       	sbc	r27, r15
    1c6c:	18 16       	cp	r1, r24
    1c6e:	19 06       	cpc	r1, r25
    1c70:	1a 06       	cpc	r1, r26
    1c72:	1b 06       	cpc	r1, r27
    1c74:	2c f7       	brge	.-54     	; 0x1c40 <__vector_7+0x86>
    1c76:	30 97       	sbiw	r30, 0x00	; 0
    1c78:	21 f1       	breq	.+72     	; 0x1cc2 <__vector_7+0x108>
    1c7a:	82 81       	ldd	r24, Z+2	; 0x02
    1c7c:	93 81       	ldd	r25, Z+3	; 0x03
    1c7e:	a4 81       	ldd	r26, Z+4	; 0x04
    1c80:	b5 81       	ldd	r27, Z+5	; 0x05
    1c82:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1c86:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1c8a:	2a 17       	cp	r18, r26
    1c8c:	3b 07       	cpc	r19, r27
    1c8e:	c9 f4       	brne	.+50     	; 0x1cc2 <__vector_7+0x108>
    1c90:	9c 01       	movw	r18, r24
    1c92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c9a:	84 1b       	sub	r24, r20
    1c9c:	95 0b       	sbc	r25, r21
    1c9e:	01 97       	sbiw	r24, 0x01	; 1
    1ca0:	31 f4       	brne	.+12     	; 0x1cae <__vector_7+0xf4>
    1ca2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ca6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1caa:	2f 5f       	subi	r18, 0xFF	; 255
    1cac:	3f 4f       	sbci	r19, 0xFF	; 255
    1cae:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1cb2:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1cb6:	ef e6       	ldi	r30, 0x6F	; 111
    1cb8:	f0 e0       	ldi	r31, 0x00	; 0
    1cba:	80 81       	ld	r24, Z
    1cbc:	82 60       	ori	r24, 0x02	; 2
    1cbe:	80 83       	st	Z, r24
    1cc0:	05 c0       	rjmp	.+10     	; 0x1ccc <__vector_7+0x112>
    1cc2:	ef e6       	ldi	r30, 0x6F	; 111
    1cc4:	f0 e0       	ldi	r31, 0x00	; 0
    1cc6:	80 81       	ld	r24, Z
    1cc8:	8d 7f       	andi	r24, 0xFD	; 253
    1cca:	80 83       	st	Z, r24
    1ccc:	0e 94 82 05 	call	0xb04	; 0xb04 <schedule>
    1cd0:	ff 91       	pop	r31
    1cd2:	ef 91       	pop	r30
    1cd4:	bf 91       	pop	r27
    1cd6:	af 91       	pop	r26
    1cd8:	9f 91       	pop	r25
    1cda:	8f 91       	pop	r24
    1cdc:	7f 91       	pop	r23
    1cde:	6f 91       	pop	r22
    1ce0:	5f 91       	pop	r21
    1ce2:	4f 91       	pop	r20
    1ce4:	3f 91       	pop	r19
    1ce6:	2f 91       	pop	r18
    1ce8:	ff 90       	pop	r15
    1cea:	ef 90       	pop	r14
    1cec:	df 90       	pop	r13
    1cee:	cf 90       	pop	r12
    1cf0:	0f 90       	pop	r0
    1cf2:	0f be       	out	0x3f, r0	; 63
    1cf4:	0f 90       	pop	r0
    1cf6:	1f 90       	pop	r1
    1cf8:	18 95       	reti

00001cfa <async>:
    1cfa:	3f 92       	push	r3
    1cfc:	4f 92       	push	r4
    1cfe:	5f 92       	push	r5
    1d00:	6f 92       	push	r6
    1d02:	7f 92       	push	r7
    1d04:	8f 92       	push	r8
    1d06:	9f 92       	push	r9
    1d08:	af 92       	push	r10
    1d0a:	bf 92       	push	r11
    1d0c:	cf 92       	push	r12
    1d0e:	df 92       	push	r13
    1d10:	ef 92       	push	r14
    1d12:	ff 92       	push	r15
    1d14:	0f 93       	push	r16
    1d16:	1f 93       	push	r17
    1d18:	cf 93       	push	r28
    1d1a:	df 93       	push	r29
    1d1c:	2b 01       	movw	r4, r22
    1d1e:	3c 01       	movw	r6, r24
    1d20:	49 01       	movw	r8, r18
    1d22:	5a 01       	movw	r10, r20
    1d24:	8f b7       	in	r24, 0x3f	; 63
    1d26:	80 78       	andi	r24, 0x80	; 128
    1d28:	38 2e       	mov	r3, r24
    1d2a:	f8 94       	cli
    1d2c:	86 e0       	ldi	r24, 0x06	; 6
    1d2e:	91 e0       	ldi	r25, 0x01	; 1
    1d30:	0e 94 4d 05 	call	0xa9a	; 0xa9a <dequeue>
    1d34:	ec 01       	movw	r28, r24
    1d36:	1b 87       	std	Y+11, r17	; 0x0b
    1d38:	0a 87       	std	Y+10, r16	; 0x0a
    1d3a:	fd 86       	std	Y+13, r15	; 0x0d
    1d3c:	ec 86       	std	Y+12, r14	; 0x0c
    1d3e:	df 86       	std	Y+15, r13	; 0x0f
    1d40:	ce 86       	std	Y+14, r12	; 0x0e
    1d42:	33 20       	and	r3, r3
    1d44:	61 f0       	breq	.+24     	; 0x1d5e <async+0x64>
    1d46:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d4a:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d4e:	02 80       	ldd	r0, Z+2	; 0x02
    1d50:	f3 81       	ldd	r31, Z+3	; 0x03
    1d52:	e0 2d       	mov	r30, r0
    1d54:	82 81       	ldd	r24, Z+2	; 0x02
    1d56:	93 81       	ldd	r25, Z+3	; 0x03
    1d58:	a4 81       	ldd	r26, Z+4	; 0x04
    1d5a:	b5 81       	ldd	r27, Z+5	; 0x05
    1d5c:	08 c0       	rjmp	.+16     	; 0x1d6e <async+0x74>
    1d5e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    1d62:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    1d66:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    1d6a:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    1d6e:	48 0e       	add	r4, r24
    1d70:	59 1e       	adc	r5, r25
    1d72:	6a 1e       	adc	r6, r26
    1d74:	7b 1e       	adc	r7, r27
    1d76:	4a 82       	std	Y+2, r4	; 0x02
    1d78:	5b 82       	std	Y+3, r5	; 0x03
    1d7a:	6c 82       	std	Y+4, r6	; 0x04
    1d7c:	7d 82       	std	Y+5, r7	; 0x05
    1d7e:	18 14       	cp	r1, r8
    1d80:	19 04       	cpc	r1, r9
    1d82:	1a 04       	cpc	r1, r10
    1d84:	1b 04       	cpc	r1, r11
    1d86:	44 f0       	brlt	.+16     	; 0x1d98 <async+0x9e>
    1d88:	0f 2e       	mov	r0, r31
    1d8a:	88 24       	eor	r8, r8
    1d8c:	8a 94       	dec	r8
    1d8e:	98 2c       	mov	r9, r8
    1d90:	a8 2c       	mov	r10, r8
    1d92:	ff e7       	ldi	r31, 0x7F	; 127
    1d94:	bf 2e       	mov	r11, r31
    1d96:	f0 2d       	mov	r31, r0
    1d98:	84 0c       	add	r8, r4
    1d9a:	95 1c       	adc	r9, r5
    1d9c:	a6 1c       	adc	r10, r6
    1d9e:	b7 1c       	adc	r11, r7
    1da0:	8e 82       	std	Y+6, r8	; 0x06
    1da2:	9f 82       	std	Y+7, r9	; 0x07
    1da4:	a8 86       	std	Y+8, r10	; 0x08
    1da6:	b9 86       	std	Y+9, r11	; 0x09
    1da8:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1dac:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1db0:	c9 01       	movw	r24, r18
    1db2:	03 2e       	mov	r0, r19
    1db4:	00 0c       	add	r0, r0
    1db6:	aa 0b       	sbc	r26, r26
    1db8:	bb 0b       	sbc	r27, r27
    1dba:	dc 01       	movw	r26, r24
    1dbc:	99 27       	eor	r25, r25
    1dbe:	88 27       	eor	r24, r24
    1dc0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dc4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dc8:	60 e0       	ldi	r22, 0x00	; 0
    1dca:	70 e0       	ldi	r23, 0x00	; 0
    1dcc:	84 2b       	or	r24, r20
    1dce:	95 2b       	or	r25, r21
    1dd0:	a6 2b       	or	r26, r22
    1dd2:	b7 2b       	or	r27, r23
    1dd4:	b0 9b       	sbis	0x16, 0	; 22
    1dd6:	13 c0       	rjmp	.+38     	; 0x1dfe <async+0x104>
    1dd8:	c9 01       	movw	r24, r18
    1dda:	01 96       	adiw	r24, 0x01	; 1
    1ddc:	09 2e       	mov	r0, r25
    1dde:	00 0c       	add	r0, r0
    1de0:	aa 0b       	sbc	r26, r26
    1de2:	bb 0b       	sbc	r27, r27
    1de4:	dc 01       	movw	r26, r24
    1de6:	99 27       	eor	r25, r25
    1de8:	88 27       	eor	r24, r24
    1dea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1dee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1df2:	60 e0       	ldi	r22, 0x00	; 0
    1df4:	70 e0       	ldi	r23, 0x00	; 0
    1df6:	84 2b       	or	r24, r20
    1df8:	95 2b       	or	r25, r21
    1dfa:	a6 2b       	or	r26, r22
    1dfc:	b7 2b       	or	r27, r23
    1dfe:	48 1a       	sub	r4, r24
    1e00:	59 0a       	sbc	r5, r25
    1e02:	6a 0a       	sbc	r6, r26
    1e04:	7b 0a       	sbc	r7, r27
    1e06:	14 14       	cp	r1, r4
    1e08:	15 04       	cpc	r1, r5
    1e0a:	16 04       	cpc	r1, r6
    1e0c:	17 04       	cpc	r1, r7
    1e0e:	ac f5       	brge	.+106    	; 0x1e7a <async+0x180>
    1e10:	64 e2       	ldi	r22, 0x24	; 36
    1e12:	71 e0       	ldi	r23, 0x01	; 1
    1e14:	ce 01       	movw	r24, r28
    1e16:	0e 94 1c 05 	call	0xa38	; 0xa38 <enqueueByBaseline>
    1e1a:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1e1e:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1e22:	30 97       	sbiw	r30, 0x00	; 0
    1e24:	21 f1       	breq	.+72     	; 0x1e6e <async+0x174>
    1e26:	82 81       	ldd	r24, Z+2	; 0x02
    1e28:	93 81       	ldd	r25, Z+3	; 0x03
    1e2a:	a4 81       	ldd	r26, Z+4	; 0x04
    1e2c:	b5 81       	ldd	r27, Z+5	; 0x05
    1e2e:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1e32:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1e36:	2a 17       	cp	r18, r26
    1e38:	3b 07       	cpc	r19, r27
    1e3a:	c9 f4       	brne	.+50     	; 0x1e6e <async+0x174>
    1e3c:	9c 01       	movw	r18, r24
    1e3e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e42:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e46:	84 1b       	sub	r24, r20
    1e48:	95 0b       	sbc	r25, r21
    1e4a:	01 97       	sbiw	r24, 0x01	; 1
    1e4c:	31 f4       	brne	.+12     	; 0x1e5a <async+0x160>
    1e4e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e52:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e56:	2f 5f       	subi	r18, 0xFF	; 255
    1e58:	3f 4f       	sbci	r19, 0xFF	; 255
    1e5a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1e5e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1e62:	ef e6       	ldi	r30, 0x6F	; 111
    1e64:	f0 e0       	ldi	r31, 0x00	; 0
    1e66:	80 81       	ld	r24, Z
    1e68:	82 60       	ori	r24, 0x02	; 2
    1e6a:	80 83       	st	Z, r24
    1e6c:	39 c0       	rjmp	.+114    	; 0x1ee0 <async+0x1e6>
    1e6e:	ef e6       	ldi	r30, 0x6F	; 111
    1e70:	f0 e0       	ldi	r31, 0x00	; 0
    1e72:	80 81       	ld	r24, Z
    1e74:	8d 7f       	andi	r24, 0xFD	; 253
    1e76:	80 83       	st	Z, r24
    1e78:	33 c0       	rjmp	.+102    	; 0x1ee0 <async+0x1e6>
    1e7a:	66 e2       	ldi	r22, 0x26	; 38
    1e7c:	71 e0       	ldi	r23, 0x01	; 1
    1e7e:	ce 01       	movw	r24, r28
    1e80:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <enqueueByDeadline>
    1e84:	33 20       	and	r3, r3
    1e86:	61 f1       	breq	.+88     	; 0x1ee0 <async+0x1e6>
    1e88:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e8c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e90:	89 2b       	or	r24, r25
    1e92:	31 f1       	breq	.+76     	; 0x1ee0 <async+0x1e6>
    1e94:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1e98:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1e9c:	86 81       	ldd	r24, Z+6	; 0x06
    1e9e:	97 81       	ldd	r25, Z+7	; 0x07
    1ea0:	a0 85       	ldd	r26, Z+8	; 0x08
    1ea2:	b1 85       	ldd	r27, Z+9	; 0x09
    1ea4:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1ea8:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1eac:	02 80       	ldd	r0, Z+2	; 0x02
    1eae:	f3 81       	ldd	r31, Z+3	; 0x03
    1eb0:	e0 2d       	mov	r30, r0
    1eb2:	46 81       	ldd	r20, Z+6	; 0x06
    1eb4:	57 81       	ldd	r21, Z+7	; 0x07
    1eb6:	60 85       	ldd	r22, Z+8	; 0x08
    1eb8:	71 85       	ldd	r23, Z+9	; 0x09
    1eba:	84 1b       	sub	r24, r20
    1ebc:	95 0b       	sbc	r25, r21
    1ebe:	a6 0b       	sbc	r26, r22
    1ec0:	b7 0b       	sbc	r27, r23
    1ec2:	72 f4       	brpl	.+28     	; 0x1ee0 <async+0x1e6>
    1ec4:	84 e0       	ldi	r24, 0x04	; 4
    1ec6:	91 e0       	ldi	r25, 0x01	; 1
    1ec8:	0e 94 78 05 	call	0xaf0	; 0xaf0 <pop>
    1ecc:	62 e0       	ldi	r22, 0x02	; 2
    1ece:	71 e0       	ldi	r23, 0x01	; 1
    1ed0:	0e 94 6e 05 	call	0xadc	; 0xadc <push>
    1ed4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1ed8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1edc:	0e 94 cb 04 	call	0x996	; 0x996 <dispatch>
    1ee0:	33 20       	and	r3, r3
    1ee2:	09 f0       	breq	.+2      	; 0x1ee6 <async+0x1ec>
    1ee4:	78 94       	sei
    1ee6:	ce 01       	movw	r24, r28
    1ee8:	df 91       	pop	r29
    1eea:	cf 91       	pop	r28
    1eec:	1f 91       	pop	r17
    1eee:	0f 91       	pop	r16
    1ef0:	ff 90       	pop	r15
    1ef2:	ef 90       	pop	r14
    1ef4:	df 90       	pop	r13
    1ef6:	cf 90       	pop	r12
    1ef8:	bf 90       	pop	r11
    1efa:	af 90       	pop	r10
    1efc:	9f 90       	pop	r9
    1efe:	8f 90       	pop	r8
    1f00:	7f 90       	pop	r7
    1f02:	6f 90       	pop	r6
    1f04:	5f 90       	pop	r5
    1f06:	4f 90       	pop	r4
    1f08:	3f 90       	pop	r3
    1f0a:	08 95       	ret

00001f0c <sync>:
    1f0c:	cf 92       	push	r12
    1f0e:	df 92       	push	r13
    1f10:	ef 92       	push	r14
    1f12:	ff 92       	push	r15
    1f14:	0f 93       	push	r16
    1f16:	1f 93       	push	r17
    1f18:	cf 93       	push	r28
    1f1a:	df 93       	push	r29
    1f1c:	ec 01       	movw	r28, r24
    1f1e:	7b 01       	movw	r14, r22
    1f20:	6a 01       	movw	r12, r20
    1f22:	1f b7       	in	r17, 0x3f	; 63
    1f24:	10 78       	andi	r17, 0x80	; 128
    1f26:	f8 94       	cli
    1f28:	a8 81       	ld	r26, Y
    1f2a:	b9 81       	ldd	r27, Y+1	; 0x01
    1f2c:	10 97       	sbiw	r26, 0x00	; 0
    1f2e:	19 f4       	brne	.+6      	; 0x1f36 <sync+0x2a>
    1f30:	35 c0       	rjmp	.+106    	; 0x1f9c <sync+0x90>
    1f32:	a0 81       	ld	r26, Z
    1f34:	b1 81       	ldd	r27, Z+1	; 0x01
    1f36:	14 96       	adiw	r26, 0x04	; 4
    1f38:	ed 91       	ld	r30, X+
    1f3a:	fc 91       	ld	r31, X
    1f3c:	15 97       	sbiw	r26, 0x05	; 5
    1f3e:	30 97       	sbiw	r30, 0x00	; 0
    1f40:	c1 f7       	brne	.-16     	; 0x1f32 <sync+0x26>
    1f42:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f46:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f4a:	a2 17       	cp	r26, r18
    1f4c:	b3 07       	cpc	r27, r19
    1f4e:	11 f0       	breq	.+4      	; 0x1f54 <sync+0x48>
    1f50:	11 11       	cpse	r17, r1
    1f52:	07 c0       	rjmp	.+14     	; 0x1f62 <sync+0x56>
    1f54:	11 23       	and	r17, r17
    1f56:	09 f4       	brne	.+2      	; 0x1f5a <sync+0x4e>
    1f58:	4a c0       	rjmp	.+148    	; 0x1fee <sync+0xe2>
    1f5a:	78 94       	sei
    1f5c:	8f ef       	ldi	r24, 0xFF	; 255
    1f5e:	9f ef       	ldi	r25, 0xFF	; 255
    1f60:	4e c0       	rjmp	.+156    	; 0x1ffe <sync+0xf2>
    1f62:	8a 81       	ldd	r24, Y+2	; 0x02
    1f64:	9b 81       	ldd	r25, Y+3	; 0x03
    1f66:	00 97       	sbiw	r24, 0x00	; 0
    1f68:	19 f0       	breq	.+6      	; 0x1f70 <sync+0x64>
    1f6a:	fc 01       	movw	r30, r24
    1f6c:	15 82       	std	Z+5, r1	; 0x05
    1f6e:	14 82       	std	Z+4, r1	; 0x04
    1f70:	3b 83       	std	Y+3, r19	; 0x03
    1f72:	2a 83       	std	Y+2, r18	; 0x02
    1f74:	f9 01       	movw	r30, r18
    1f76:	d5 83       	std	Z+5, r29	; 0x05
    1f78:	c4 83       	std	Z+4, r28	; 0x04
    1f7a:	cd 01       	movw	r24, r26
    1f7c:	0e 94 cb 04 	call	0x996	; 0x996 <dispatch>
    1f80:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f84:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f88:	82 81       	ldd	r24, Z+2	; 0x02
    1f8a:	93 81       	ldd	r25, Z+3	; 0x03
    1f8c:	89 2b       	or	r24, r25
    1f8e:	31 f4       	brne	.+12     	; 0x1f9c <sync+0x90>
    1f90:	11 23       	and	r17, r17
    1f92:	81 f1       	breq	.+96     	; 0x1ff4 <sync+0xe8>
    1f94:	78 94       	sei
    1f96:	80 e0       	ldi	r24, 0x00	; 0
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	31 c0       	rjmp	.+98     	; 0x1ffe <sync+0xf2>
    1f9c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fa0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fa4:	99 83       	std	Y+1, r25	; 0x01
    1fa6:	88 83       	st	Y, r24
    1fa8:	11 23       	and	r17, r17
    1faa:	29 f0       	breq	.+10     	; 0x1fb6 <sync+0xaa>
    1fac:	8a 81       	ldd	r24, Y+2	; 0x02
    1fae:	9b 81       	ldd	r25, Y+3	; 0x03
    1fb0:	01 97       	sbiw	r24, 0x01	; 1
    1fb2:	09 f0       	breq	.+2      	; 0x1fb6 <sync+0xaa>
    1fb4:	78 94       	sei
    1fb6:	b6 01       	movw	r22, r12
    1fb8:	ce 01       	movw	r24, r28
    1fba:	f7 01       	movw	r30, r14
    1fbc:	09 95       	icall
    1fbe:	f8 2e       	mov	r15, r24
    1fc0:	09 2f       	mov	r16, r25
    1fc2:	8f b7       	in	r24, 0x3f	; 63
    1fc4:	f8 94       	cli
    1fc6:	19 82       	std	Y+1, r1	; 0x01
    1fc8:	18 82       	st	Y, r1
    1fca:	8a 81       	ldd	r24, Y+2	; 0x02
    1fcc:	9b 81       	ldd	r25, Y+3	; 0x03
    1fce:	82 30       	cpi	r24, 0x02	; 2
    1fd0:	91 05       	cpc	r25, r1
    1fd2:	38 f0       	brcs	.+14     	; 0x1fe2 <sync+0xd6>
    1fd4:	1b 82       	std	Y+3, r1	; 0x03
    1fd6:	1a 82       	std	Y+2, r1	; 0x02
    1fd8:	fc 01       	movw	r30, r24
    1fda:	15 82       	std	Z+5, r1	; 0x05
    1fdc:	14 82       	std	Z+4, r1	; 0x04
    1fde:	0e 94 cb 04 	call	0x996	; 0x996 <dispatch>
    1fe2:	11 23       	and	r17, r17
    1fe4:	51 f0       	breq	.+20     	; 0x1ffa <sync+0xee>
    1fe6:	78 94       	sei
    1fe8:	8f 2d       	mov	r24, r15
    1fea:	90 2f       	mov	r25, r16
    1fec:	08 c0       	rjmp	.+16     	; 0x1ffe <sync+0xf2>
    1fee:	8f ef       	ldi	r24, 0xFF	; 255
    1ff0:	9f ef       	ldi	r25, 0xFF	; 255
    1ff2:	05 c0       	rjmp	.+10     	; 0x1ffe <sync+0xf2>
    1ff4:	80 e0       	ldi	r24, 0x00	; 0
    1ff6:	90 e0       	ldi	r25, 0x00	; 0
    1ff8:	02 c0       	rjmp	.+4      	; 0x1ffe <sync+0xf2>
    1ffa:	8f 2d       	mov	r24, r15
    1ffc:	90 2f       	mov	r25, r16
    1ffe:	df 91       	pop	r29
    2000:	cf 91       	pop	r28
    2002:	1f 91       	pop	r17
    2004:	0f 91       	pop	r16
    2006:	ff 90       	pop	r15
    2008:	ef 90       	pop	r14
    200a:	df 90       	pop	r13
    200c:	cf 90       	pop	r12
    200e:	08 95       	ret

00002010 <run>:
    2010:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2014:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2018:	86 e2       	ldi	r24, 0x26	; 38
    201a:	91 e0       	ldi	r25, 0x01	; 1
    201c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <dequeue>
    2020:	ec 01       	movw	r28, r24
    2022:	f8 01       	movw	r30, r16
    2024:	93 83       	std	Z+3, r25	; 0x03
    2026:	82 83       	std	Z+2, r24	; 0x02
    2028:	78 94       	sei
    202a:	6c 85       	ldd	r22, Y+12	; 0x0c
    202c:	7d 85       	ldd	r23, Y+13	; 0x0d
    202e:	4e 85       	ldd	r20, Y+14	; 0x0e
    2030:	5f 85       	ldd	r21, Y+15	; 0x0f
    2032:	8a 85       	ldd	r24, Y+10	; 0x0a
    2034:	9b 85       	ldd	r25, Y+11	; 0x0b
    2036:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <sync>
    203a:	8f b7       	in	r24, 0x3f	; 63
    203c:	f8 94       	cli
    203e:	66 e0       	ldi	r22, 0x06	; 6
    2040:	71 e0       	ldi	r23, 0x01	; 1
    2042:	ce 01       	movw	r24, r28
    2044:	0e 94 64 05 	call	0xac8	; 0xac8 <insert>
    2048:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    204c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    2050:	01 90       	ld	r0, Z+
    2052:	f0 81       	ld	r31, Z
    2054:	e0 2d       	mov	r30, r0
    2056:	c2 81       	ldd	r28, Z+2	; 0x02
    2058:	d3 81       	ldd	r29, Z+3	; 0x03
    205a:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    205e:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    2062:	30 97       	sbiw	r30, 0x00	; 0
    2064:	a1 f0       	breq	.+40     	; 0x208e <run+0x7e>
    2066:	20 97       	sbiw	r28, 0x00	; 0
    2068:	99 f2       	breq	.-90     	; 0x2010 <run>
    206a:	86 81       	ldd	r24, Z+6	; 0x06
    206c:	97 81       	ldd	r25, Z+7	; 0x07
    206e:	a0 85       	ldd	r26, Z+8	; 0x08
    2070:	b1 85       	ldd	r27, Z+9	; 0x09
    2072:	4e 81       	ldd	r20, Y+6	; 0x06
    2074:	5f 81       	ldd	r21, Y+7	; 0x07
    2076:	68 85       	ldd	r22, Y+8	; 0x08
    2078:	79 85       	ldd	r23, Y+9	; 0x09
    207a:	84 1b       	sub	r24, r20
    207c:	95 0b       	sbc	r25, r21
    207e:	a6 0b       	sbc	r26, r22
    2080:	b7 0b       	sbc	r27, r23
    2082:	18 16       	cp	r1, r24
    2084:	19 06       	cpc	r1, r25
    2086:	1a 06       	cpc	r1, r26
    2088:	1b 06       	cpc	r1, r27
    208a:	0c f0       	brlt	.+2      	; 0x208e <run+0x7e>
    208c:	c1 cf       	rjmp	.-126    	; 0x2010 <run>
    208e:	82 e0       	ldi	r24, 0x02	; 2
    2090:	91 e0       	ldi	r25, 0x01	; 1
    2092:	0e 94 78 05 	call	0xaf0	; 0xaf0 <pop>
    2096:	64 e0       	ldi	r22, 0x04	; 4
    2098:	71 e0       	ldi	r23, 0x01	; 1
    209a:	0e 94 6e 05 	call	0xadc	; 0xadc <push>
    209e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    20a2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    20a6:	02 c0       	rjmp	.+4      	; 0x20ac <run+0x9c>
    20a8:	a0 81       	ld	r26, Z
    20aa:	b1 81       	ldd	r27, Z+1	; 0x01
    20ac:	14 96       	adiw	r26, 0x04	; 4
    20ae:	ed 91       	ld	r30, X+
    20b0:	fc 91       	ld	r31, X
    20b2:	15 97       	sbiw	r26, 0x05	; 5
    20b4:	30 97       	sbiw	r30, 0x00	; 0
    20b6:	c1 f7       	brne	.-16     	; 0x20a8 <run+0x98>
    20b8:	cd 01       	movw	r24, r26
    20ba:	0e 94 cb 04 	call	0x996	; 0x996 <dispatch>
    20be:	a8 cf       	rjmp	.-176    	; 0x2010 <run>

000020c0 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    20c0:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    20c2:	42 31       	cpi	r20, 0x12	; 18
    20c4:	b8 f4       	brcc	.+46     	; 0x20f4 <install+0x34>
        char status;
        DISABLE(status);
    20c6:	9f b7       	in	r25, 0x3f	; 63
    20c8:	90 78       	andi	r25, 0x80	; 128
    20ca:	f8 94       	cli
        otable[i] = obj;
    20cc:	50 e0       	ldi	r21, 0x00	; 0
    20ce:	44 0f       	add	r20, r20
    20d0:	55 1f       	adc	r21, r21
    20d2:	da 01       	movw	r26, r20
    20d4:	a8 5d       	subi	r26, 0xD8	; 216
    20d6:	be 4f       	sbci	r27, 0xFE	; 254
    20d8:	ed 93       	st	X+, r30
    20da:	fc 93       	st	X, r31
        mtable[i] = m;
    20dc:	da 01       	movw	r26, r20
    20de:	a0 54       	subi	r26, 0x40	; 64
    20e0:	be 4f       	sbci	r27, 0xFE	; 254
    20e2:	6d 93       	st	X+, r22
    20e4:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    20e6:	21 e0       	ldi	r18, 0x01	; 1
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	33 83       	std	Z+3, r19	; 0x03
    20ec:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    20ee:	99 23       	and	r25, r25
    20f0:	09 f0       	breq	.+2      	; 0x20f4 <install+0x34>
    20f2:	78 94       	sei
    20f4:	08 95       	ret

000020f6 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20f6:	8c 01       	movw	r16, r24
    20f8:	7b 01       	movw	r14, r22
    20fa:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20fc:	8f b7       	in	r24, 0x3f	; 63
    20fe:	f8 94       	cli
    initialize();
    2100:	0e 94 2c 04 	call	0x858	; 0x858 <initialize>
    ENABLE(1);
    2104:	78 94       	sei
    if (m != NULL)
    2106:	e1 14       	cp	r14, r1
    2108:	f1 04       	cpc	r15, r1
    210a:	41 f0       	breq	.+16     	; 0x211c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    210c:	20 e0       	ldi	r18, 0x00	; 0
    210e:	30 e0       	ldi	r19, 0x00	; 0
    2110:	a9 01       	movw	r20, r18
    2112:	60 e0       	ldi	r22, 0x00	; 0
    2114:	70 e0       	ldi	r23, 0x00	; 0
    2116:	cb 01       	movw	r24, r22
    2118:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <async>
    DISABLE(status);
    211c:	8f b7       	in	r24, 0x3f	; 63
    211e:	f8 94       	cli
    idle();
    2120:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <idle>

00002124 <__divmodhi4>:
    2124:	97 fb       	bst	r25, 7
    2126:	07 2e       	mov	r0, r23
    2128:	16 f4       	brtc	.+4      	; 0x212e <__divmodhi4+0xa>
    212a:	00 94       	com	r0
    212c:	07 d0       	rcall	.+14     	; 0x213c <__divmodhi4_neg1>
    212e:	77 fd       	sbrc	r23, 7
    2130:	09 d0       	rcall	.+18     	; 0x2144 <__divmodhi4_neg2>
    2132:	0e 94 a6 10 	call	0x214c	; 0x214c <__udivmodhi4>
    2136:	07 fc       	sbrc	r0, 7
    2138:	05 d0       	rcall	.+10     	; 0x2144 <__divmodhi4_neg2>
    213a:	3e f4       	brtc	.+14     	; 0x214a <__divmodhi4_exit>

0000213c <__divmodhi4_neg1>:
    213c:	90 95       	com	r25
    213e:	81 95       	neg	r24
    2140:	9f 4f       	sbci	r25, 0xFF	; 255
    2142:	08 95       	ret

00002144 <__divmodhi4_neg2>:
    2144:	70 95       	com	r23
    2146:	61 95       	neg	r22
    2148:	7f 4f       	sbci	r23, 0xFF	; 255

0000214a <__divmodhi4_exit>:
    214a:	08 95       	ret

0000214c <__udivmodhi4>:
    214c:	aa 1b       	sub	r26, r26
    214e:	bb 1b       	sub	r27, r27
    2150:	51 e1       	ldi	r21, 0x11	; 17
    2152:	07 c0       	rjmp	.+14     	; 0x2162 <__udivmodhi4_ep>

00002154 <__udivmodhi4_loop>:
    2154:	aa 1f       	adc	r26, r26
    2156:	bb 1f       	adc	r27, r27
    2158:	a6 17       	cp	r26, r22
    215a:	b7 07       	cpc	r27, r23
    215c:	10 f0       	brcs	.+4      	; 0x2162 <__udivmodhi4_ep>
    215e:	a6 1b       	sub	r26, r22
    2160:	b7 0b       	sbc	r27, r23

00002162 <__udivmodhi4_ep>:
    2162:	88 1f       	adc	r24, r24
    2164:	99 1f       	adc	r25, r25
    2166:	5a 95       	dec	r21
    2168:	a9 f7       	brne	.-22     	; 0x2154 <__udivmodhi4_loop>
    216a:	80 95       	com	r24
    216c:	90 95       	com	r25
    216e:	bc 01       	movw	r22, r24
    2170:	cd 01       	movw	r24, r26
    2172:	08 95       	ret

00002174 <setjmp>:
    2174:	dc 01       	movw	r26, r24
    2176:	2d 92       	st	X+, r2
    2178:	3d 92       	st	X+, r3
    217a:	4d 92       	st	X+, r4
    217c:	5d 92       	st	X+, r5
    217e:	6d 92       	st	X+, r6
    2180:	7d 92       	st	X+, r7
    2182:	8d 92       	st	X+, r8
    2184:	9d 92       	st	X+, r9
    2186:	ad 92       	st	X+, r10
    2188:	bd 92       	st	X+, r11
    218a:	cd 92       	st	X+, r12
    218c:	dd 92       	st	X+, r13
    218e:	ed 92       	st	X+, r14
    2190:	fd 92       	st	X+, r15
    2192:	0d 93       	st	X+, r16
    2194:	1d 93       	st	X+, r17
    2196:	cd 93       	st	X+, r28
    2198:	dd 93       	st	X+, r29
    219a:	ff 91       	pop	r31
    219c:	ef 91       	pop	r30
    219e:	8d b7       	in	r24, 0x3d	; 61
    21a0:	8d 93       	st	X+, r24
    21a2:	8e b7       	in	r24, 0x3e	; 62
    21a4:	8d 93       	st	X+, r24
    21a6:	8f b7       	in	r24, 0x3f	; 63
    21a8:	8d 93       	st	X+, r24
    21aa:	ed 93       	st	X+, r30
    21ac:	fd 93       	st	X+, r31
    21ae:	88 27       	eor	r24, r24
    21b0:	99 27       	eor	r25, r25
    21b2:	09 94       	ijmp

000021b4 <longjmp>:
    21b4:	dc 01       	movw	r26, r24
    21b6:	cb 01       	movw	r24, r22
    21b8:	81 30       	cpi	r24, 0x01	; 1
    21ba:	91 05       	cpc	r25, r1
    21bc:	81 1d       	adc	r24, r1
    21be:	2d 90       	ld	r2, X+
    21c0:	3d 90       	ld	r3, X+
    21c2:	4d 90       	ld	r4, X+
    21c4:	5d 90       	ld	r5, X+
    21c6:	6d 90       	ld	r6, X+
    21c8:	7d 90       	ld	r7, X+
    21ca:	8d 90       	ld	r8, X+
    21cc:	9d 90       	ld	r9, X+
    21ce:	ad 90       	ld	r10, X+
    21d0:	bd 90       	ld	r11, X+
    21d2:	cd 90       	ld	r12, X+
    21d4:	dd 90       	ld	r13, X+
    21d6:	ed 90       	ld	r14, X+
    21d8:	fd 90       	ld	r15, X+
    21da:	0d 91       	ld	r16, X+
    21dc:	1d 91       	ld	r17, X+
    21de:	cd 91       	ld	r28, X+
    21e0:	dd 91       	ld	r29, X+
    21e2:	ed 91       	ld	r30, X+
    21e4:	fd 91       	ld	r31, X+
    21e6:	0d 90       	ld	r0, X+
    21e8:	f8 94       	cli
    21ea:	fe bf       	out	0x3e, r31	; 62
    21ec:	0f be       	out	0x3f, r0	; 63
    21ee:	ed bf       	out	0x3d, r30	; 61
    21f0:	ed 91       	ld	r30, X+
    21f2:	fd 91       	ld	r31, X+
    21f4:	09 94       	ijmp

000021f6 <_exit>:
    21f6:	f8 94       	cli

000021f8 <__stop_program>:
    21f8:	ff cf       	rjmp	.-2      	; 0x21f8 <__stop_program>
