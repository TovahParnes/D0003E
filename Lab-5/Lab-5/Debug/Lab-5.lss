
Lab-5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000021ec  00002280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  0000229e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000229e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00002310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d94  00000000  00000000  00002578  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001067  00000000  00000000  0000530c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001638  00000000  00000000  00006373  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d24  00000000  00000000  000079ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009a7  00000000  00000000  000086d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002ac0  00000000  00000000  00009077  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000bb37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <__vector_1>
       8:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__vector_2>
       c:	0c 94 8d 06 	jmp	0xd1a	; 0xd1a <__vector_3>
      10:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__vector_4>
      14:	0c 94 6b 07 	jmp	0xed6	; 0xed6 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__vector_9>
      28:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__vector_10>
      2c:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__vector_11>
      30:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__vector_12>
      34:	0c 94 27 09 	jmp	0x124e	; 0x124e <__vector_13>
      38:	0c 94 96 09 	jmp	0x132c	; 0x132c <__vector_14>
      3c:	0c 94 05 0a 	jmp	0x140a	; 0x140a <__vector_15>
      40:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__vector_16>
      44:	0c 94 e3 0a 	jmp	0x15c6	; 0x15c6 <__vector_17>
      48:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__vector_18>
      4c:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__vector_19>
      50:	0c 94 30 0c 	jmp	0x1860	; 0x1860 <__vector_20>
      54:	0c 94 9f 0c 	jmp	0x193e	; 0x193e <__vector_21>
      58:	0c 94 0e 0d 	jmp	0x1a1c	; 0x1a1c <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ec ee       	ldi	r30, 0xEC	; 236
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 c0 03 	call	0x780	; 0x780 <main>
      92:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <decBridge>:
		ASYNC(self->gui,uppdateQueue,temp);
	}
	
}

void decBridge (Controller *self){
      9a:	af 92       	push	r10
      9c:	bf 92       	push	r11
      9e:	cf 92       	push	r12
      a0:	df 92       	push	r13
      a2:	ef 92       	push	r14
      a4:	ff 92       	push	r15
      a6:	0f 93       	push	r16
      a8:	1f 93       	push	r17
      aa:	cf 93       	push	r28
      ac:	df 93       	push	r29
      ae:	00 d0       	rcall	.+0      	; 0xb0 <decBridge+0x16>
      b0:	00 d0       	rcall	.+0      	; 0xb2 <decBridge+0x18>
      b2:	cd b7       	in	r28, 0x3d	; 61
      b4:	de b7       	in	r29, 0x3e	; 62
      b6:	5c 01       	movw	r10, r24
	self->bridgeQueue--;
      b8:	fc 01       	movw	r30, r24
      ba:	82 85       	ldd	r24, Z+10	; 0x0a
      bc:	93 85       	ldd	r25, Z+11	; 0x0b
      be:	01 97       	sbiw	r24, 0x01	; 1
      c0:	93 87       	std	Z+11, r25	; 0x0b
      c2:	82 87       	std	Z+10, r24	; 0x0a
	if (self->bridgeQueue == 0){
      c4:	89 2b       	or	r24, r25
      c6:	89 f4       	brne	.+34     	; 0xea <decBridge+0x50>
		ASYNC(self,lightsBridgeEmpty,NULL);
      c8:	c1 2c       	mov	r12, r1
      ca:	d1 2c       	mov	r13, r1
      cc:	0f 2e       	mov	r0, r31
      ce:	fc e2       	ldi	r31, 0x2C	; 44
      d0:	ef 2e       	mov	r14, r31
      d2:	f2 e0       	ldi	r31, 0x02	; 2
      d4:	ff 2e       	mov	r15, r31
      d6:	f0 2d       	mov	r31, r0
      d8:	85 01       	movw	r16, r10
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	a9 01       	movw	r20, r18
      e0:	60 e0       	ldi	r22, 0x00	; 0
      e2:	70 e0       	ldi	r23, 0x00	; 0
      e4:	cb 01       	movw	r24, r22
      e6:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	}
	int temp[2] = {self->bridgeQueue,0}; 
      ea:	f5 01       	movw	r30, r10
      ec:	82 85       	ldd	r24, Z+10	; 0x0a
      ee:	93 85       	ldd	r25, Z+11	; 0x0b
      f0:	9a 83       	std	Y+2, r25	; 0x02
      f2:	89 83       	std	Y+1, r24	; 0x01
      f4:	1c 82       	std	Y+4, r1	; 0x04
      f6:	1b 82       	std	Y+3, r1	; 0x03
	ASYNC(self->gui,uppdateQueue,temp);
      f8:	02 89       	ldd	r16, Z+18	; 0x12
      fa:	13 89       	ldd	r17, Z+19	; 0x13
      fc:	ce 01       	movw	r24, r28
      fe:	01 96       	adiw	r24, 0x01	; 1
     100:	6c 01       	movw	r12, r24
     102:	0f 2e       	mov	r0, r31
     104:	fb e3       	ldi	r31, 0x3B	; 59
     106:	ef 2e       	mov	r14, r31
     108:	f3 e0       	ldi	r31, 0x03	; 3
     10a:	ff 2e       	mov	r15, r31
     10c:	f0 2d       	mov	r31, r0
     10e:	20 e0       	ldi	r18, 0x00	; 0
     110:	30 e0       	ldi	r19, 0x00	; 0
     112:	a9 01       	movw	r20, r18
     114:	60 e0       	ldi	r22, 0x00	; 0
     116:	70 e0       	ldi	r23, 0x00	; 0
     118:	cb 01       	movw	r24, r22
     11a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
}
     11e:	0f 90       	pop	r0
     120:	0f 90       	pop	r0
     122:	0f 90       	pop	r0
     124:	0f 90       	pop	r0
     126:	df 91       	pop	r29
     128:	cf 91       	pop	r28
     12a:	1f 91       	pop	r17
     12c:	0f 91       	pop	r16
     12e:	ff 90       	pop	r15
     130:	ef 90       	pop	r14
     132:	df 90       	pop	r13
     134:	cf 90       	pop	r12
     136:	bf 90       	pop	r11
     138:	af 90       	pop	r10
     13a:	08 95       	ret

0000013c <lightsRed>:
	}
}



void lightsRed(Controller *self){
     13c:	cf 92       	push	r12
     13e:	df 92       	push	r13
     140:	ef 92       	push	r14
     142:	ff 92       	push	r15
     144:	0f 93       	push	r16
     146:	1f 93       	push	r17
	self->lights = 0;
     148:	fc 01       	movw	r30, r24
     14a:	15 86       	std	Z+13, r1	; 0x0d
     14c:	14 86       	std	Z+12, r1	; 0x0c
	ASYNC(self->OpH, outputLights, self->lights );
     14e:	00 89       	ldd	r16, Z+16	; 0x10
     150:	11 89       	ldd	r17, Z+17	; 0x11
     152:	c1 2c       	mov	r12, r1
     154:	d1 2c       	mov	r13, r1
     156:	0f 2e       	mov	r0, r31
     158:	f2 e1       	ldi	r31, 0x12	; 18
     15a:	ef 2e       	mov	r14, r31
     15c:	f4 e0       	ldi	r31, 0x04	; 4
     15e:	ff 2e       	mov	r15, r31
     160:	f0 2d       	mov	r31, r0
     162:	20 e0       	ldi	r18, 0x00	; 0
     164:	30 e0       	ldi	r19, 0x00	; 0
     166:	a9 01       	movw	r20, r18
     168:	60 e0       	ldi	r22, 0x00	; 0
     16a:	70 e0       	ldi	r23, 0x00	; 0
     16c:	cb 01       	movw	r24, r22
     16e:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
}
     172:	1f 91       	pop	r17
     174:	0f 91       	pop	r16
     176:	ff 90       	pop	r15
     178:	ef 90       	pop	r14
     17a:	df 90       	pop	r13
     17c:	cf 90       	pop	r12
     17e:	08 95       	ret

00000180 <addQueue>:
 * Created: 2021-03-04 11:17:02
 *  Author: Adam Hedberg
 */ 
#include "Controller.h"

void addQueue (Controller *self, int dir){
     180:	cf 92       	push	r12
     182:	df 92       	push	r13
     184:	ef 92       	push	r14
     186:	ff 92       	push	r15
     188:	0f 93       	push	r16
     18a:	1f 93       	push	r17
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
     190:	00 d0       	rcall	.+0      	; 0x192 <addQueue+0x12>
     192:	00 d0       	rcall	.+0      	; 0x194 <addQueue+0x14>
     194:	cd b7       	in	r28, 0x3d	; 61
     196:	de b7       	in	r29, 0x3e	; 62
	if (dir == 1){
     198:	61 30       	cpi	r22, 0x01	; 1
     19a:	71 05       	cpc	r23, r1
     19c:	f9 f4       	brne	.+62     	; 0x1dc <addQueue+0x5c>
		self->northQueue++;
     19e:	fc 01       	movw	r30, r24
     1a0:	26 81       	ldd	r18, Z+6	; 0x06
     1a2:	37 81       	ldd	r19, Z+7	; 0x07
     1a4:	2f 5f       	subi	r18, 0xFF	; 255
     1a6:	3f 4f       	sbci	r19, 0xFF	; 255
     1a8:	37 83       	std	Z+7, r19	; 0x07
     1aa:	26 83       	std	Z+6, r18	; 0x06
		int temp[2] = {self->northQueue,0};
     1ac:	3a 83       	std	Y+2, r19	; 0x02
     1ae:	29 83       	std	Y+1, r18	; 0x01
     1b0:	1c 82       	std	Y+4, r1	; 0x04
     1b2:	1b 82       	std	Y+3, r1	; 0x03
		ASYNC(self->gui,uppdateQueue,temp);
     1b4:	02 89       	ldd	r16, Z+18	; 0x12
     1b6:	13 89       	ldd	r17, Z+19	; 0x13
     1b8:	ce 01       	movw	r24, r28
     1ba:	01 96       	adiw	r24, 0x01	; 1
     1bc:	6c 01       	movw	r12, r24
     1be:	0f 2e       	mov	r0, r31
     1c0:	fb e3       	ldi	r31, 0x3B	; 59
     1c2:	ef 2e       	mov	r14, r31
     1c4:	f3 e0       	ldi	r31, 0x03	; 3
     1c6:	ff 2e       	mov	r15, r31
     1c8:	f0 2d       	mov	r31, r0
     1ca:	20 e0       	ldi	r18, 0x00	; 0
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	a9 01       	movw	r20, r18
     1d0:	60 e0       	ldi	r22, 0x00	; 0
     1d2:	70 e0       	ldi	r23, 0x00	; 0
     1d4:	cb 01       	movw	r24, r22
     1d6:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
     1da:	21 c0       	rjmp	.+66     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
	}
	else if(dir == 2){
     1dc:	62 30       	cpi	r22, 0x02	; 2
     1de:	71 05       	cpc	r23, r1
     1e0:	f1 f4       	brne	.+60     	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
		self->southQueue++;
     1e2:	fc 01       	movw	r30, r24
     1e4:	20 85       	ldd	r18, Z+8	; 0x08
     1e6:	31 85       	ldd	r19, Z+9	; 0x09
     1e8:	2f 5f       	subi	r18, 0xFF	; 255
     1ea:	3f 4f       	sbci	r19, 0xFF	; 255
     1ec:	31 87       	std	Z+9, r19	; 0x09
     1ee:	20 87       	std	Z+8, r18	; 0x08
		int temp[2] = {self->southQueue,0};
     1f0:	3a 83       	std	Y+2, r19	; 0x02
     1f2:	29 83       	std	Y+1, r18	; 0x01
     1f4:	1c 82       	std	Y+4, r1	; 0x04
     1f6:	1b 82       	std	Y+3, r1	; 0x03
		ASYNC(self->gui,uppdateQueue,temp);
     1f8:	02 89       	ldd	r16, Z+18	; 0x12
     1fa:	13 89       	ldd	r17, Z+19	; 0x13
     1fc:	ce 01       	movw	r24, r28
     1fe:	01 96       	adiw	r24, 0x01	; 1
     200:	6c 01       	movw	r12, r24
     202:	0f 2e       	mov	r0, r31
     204:	fb e3       	ldi	r31, 0x3B	; 59
     206:	ef 2e       	mov	r14, r31
     208:	f3 e0       	ldi	r31, 0x03	; 3
     20a:	ff 2e       	mov	r15, r31
     20c:	f0 2d       	mov	r31, r0
     20e:	20 e0       	ldi	r18, 0x00	; 0
     210:	30 e0       	ldi	r19, 0x00	; 0
     212:	a9 01       	movw	r20, r18
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	cb 01       	movw	r24, r22
     21a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	}
}
     21e:	0f 90       	pop	r0
     220:	0f 90       	pop	r0
     222:	0f 90       	pop	r0
     224:	0f 90       	pop	r0
     226:	df 91       	pop	r29
     228:	cf 91       	pop	r28
     22a:	1f 91       	pop	r17
     22c:	0f 91       	pop	r16
     22e:	ff 90       	pop	r15
     230:	ef 90       	pop	r14
     232:	df 90       	pop	r13
     234:	cf 90       	pop	r12
     236:	08 95       	ret

00000238 <decQueue>:
	ASYNC(self->gui,uppdateQueue,temp);
	AFTER(SEC(5),self, decBridge, NULL);

}

void decQueue (Controller *self, int dir){
     238:	cf 92       	push	r12
     23a:	df 92       	push	r13
     23c:	ef 92       	push	r14
     23e:	ff 92       	push	r15
     240:	0f 93       	push	r16
     242:	1f 93       	push	r17
     244:	cf 93       	push	r28
     246:	df 93       	push	r29
     248:	00 d0       	rcall	.+0      	; 0x24a <decQueue+0x12>
     24a:	00 d0       	rcall	.+0      	; 0x24c <decQueue+0x14>
     24c:	cd b7       	in	r28, 0x3d	; 61
     24e:	de b7       	in	r29, 0x3e	; 62
	if (dir == 1){
     250:	61 30       	cpi	r22, 0x01	; 1
     252:	71 05       	cpc	r23, r1
     254:	f9 f4       	brne	.+62     	; 0x294 <decQueue+0x5c>
		self->northQueue--;
     256:	fc 01       	movw	r30, r24
     258:	26 81       	ldd	r18, Z+6	; 0x06
     25a:	37 81       	ldd	r19, Z+7	; 0x07
     25c:	21 50       	subi	r18, 0x01	; 1
     25e:	31 09       	sbc	r19, r1
     260:	37 83       	std	Z+7, r19	; 0x07
     262:	26 83       	std	Z+6, r18	; 0x06
		int temp[2] = {self->northQueue,0}; 
     264:	3a 83       	std	Y+2, r19	; 0x02
     266:	29 83       	std	Y+1, r18	; 0x01
     268:	1c 82       	std	Y+4, r1	; 0x04
     26a:	1b 82       	std	Y+3, r1	; 0x03
		ASYNC(self->gui,uppdateQueue,temp);
     26c:	02 89       	ldd	r16, Z+18	; 0x12
     26e:	13 89       	ldd	r17, Z+19	; 0x13
     270:	ce 01       	movw	r24, r28
     272:	01 96       	adiw	r24, 0x01	; 1
     274:	6c 01       	movw	r12, r24
     276:	0f 2e       	mov	r0, r31
     278:	fb e3       	ldi	r31, 0x3B	; 59
     27a:	ef 2e       	mov	r14, r31
     27c:	f3 e0       	ldi	r31, 0x03	; 3
     27e:	ff 2e       	mov	r15, r31
     280:	f0 2d       	mov	r31, r0
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	a9 01       	movw	r20, r18
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	70 e0       	ldi	r23, 0x00	; 0
     28c:	cb 01       	movw	r24, r22
     28e:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
     292:	21 c0       	rjmp	.+66     	; 0x2d6 <decQueue+0x9e>
	}
	else if(dir == 2){
     294:	62 30       	cpi	r22, 0x02	; 2
     296:	71 05       	cpc	r23, r1
     298:	f1 f4       	brne	.+60     	; 0x2d6 <decQueue+0x9e>
		self->southQueue--;
     29a:	fc 01       	movw	r30, r24
     29c:	20 85       	ldd	r18, Z+8	; 0x08
     29e:	31 85       	ldd	r19, Z+9	; 0x09
     2a0:	21 50       	subi	r18, 0x01	; 1
     2a2:	31 09       	sbc	r19, r1
     2a4:	31 87       	std	Z+9, r19	; 0x09
     2a6:	20 87       	std	Z+8, r18	; 0x08
		int temp[2] = {self->southQueue,0}; 
     2a8:	3a 83       	std	Y+2, r19	; 0x02
     2aa:	29 83       	std	Y+1, r18	; 0x01
     2ac:	1c 82       	std	Y+4, r1	; 0x04
     2ae:	1b 82       	std	Y+3, r1	; 0x03
		ASYNC(self->gui,uppdateQueue,temp);
     2b0:	02 89       	ldd	r16, Z+18	; 0x12
     2b2:	13 89       	ldd	r17, Z+19	; 0x13
     2b4:	ce 01       	movw	r24, r28
     2b6:	01 96       	adiw	r24, 0x01	; 1
     2b8:	6c 01       	movw	r12, r24
     2ba:	0f 2e       	mov	r0, r31
     2bc:	fb e3       	ldi	r31, 0x3B	; 59
     2be:	ef 2e       	mov	r14, r31
     2c0:	f3 e0       	ldi	r31, 0x03	; 3
     2c2:	ff 2e       	mov	r15, r31
     2c4:	f0 2d       	mov	r31, r0
     2c6:	20 e0       	ldi	r18, 0x00	; 0
     2c8:	30 e0       	ldi	r19, 0x00	; 0
     2ca:	a9 01       	movw	r20, r18
     2cc:	60 e0       	ldi	r22, 0x00	; 0
     2ce:	70 e0       	ldi	r23, 0x00	; 0
     2d0:	cb 01       	movw	r24, r22
     2d2:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	}
	
}
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	0f 90       	pop	r0
     2dc:	0f 90       	pop	r0
     2de:	df 91       	pop	r29
     2e0:	cf 91       	pop	r28
     2e2:	1f 91       	pop	r17
     2e4:	0f 91       	pop	r16
     2e6:	ff 90       	pop	r15
     2e8:	ef 90       	pop	r14
     2ea:	df 90       	pop	r13
     2ec:	cf 90       	pop	r12
     2ee:	08 95       	ret

000002f0 <addBridge>:
		int temp[2] = {self->southQueue,0};
		ASYNC(self->gui,uppdateQueue,temp);
	}
}

void addBridge (Controller *self, int dir){
     2f0:	af 92       	push	r10
     2f2:	bf 92       	push	r11
     2f4:	cf 92       	push	r12
     2f6:	df 92       	push	r13
     2f8:	ef 92       	push	r14
     2fa:	ff 92       	push	r15
     2fc:	0f 93       	push	r16
     2fe:	1f 93       	push	r17
     300:	cf 93       	push	r28
     302:	df 93       	push	r29
     304:	00 d0       	rcall	.+0      	; 0x306 <addBridge+0x16>
     306:	00 d0       	rcall	.+0      	; 0x308 <addBridge+0x18>
     308:	cd b7       	in	r28, 0x3d	; 61
     30a:	de b7       	in	r29, 0x3e	; 62
     30c:	5c 01       	movw	r10, r24
     30e:	6b 01       	movw	r12, r22
	decQueue(self,dir);
     310:	0e 94 1c 01 	call	0x238	; 0x238 <decQueue>
	self->bridgeDirection = dir; 
     314:	f5 01       	movw	r30, r10
     316:	d5 82       	std	Z+5, r13	; 0x05
     318:	c4 82       	std	Z+4, r12	; 0x04
	self->bridgeQueue++;
     31a:	82 85       	ldd	r24, Z+10	; 0x0a
     31c:	93 85       	ldd	r25, Z+11	; 0x0b
     31e:	01 96       	adiw	r24, 0x01	; 1
     320:	93 87       	std	Z+11, r25	; 0x0b
     322:	82 87       	std	Z+10, r24	; 0x0a
	int temp[2] = {self->bridgeQueue,0}; 
     324:	9a 83       	std	Y+2, r25	; 0x02
     326:	89 83       	std	Y+1, r24	; 0x01
     328:	1c 82       	std	Y+4, r1	; 0x04
     32a:	1b 82       	std	Y+3, r1	; 0x03
	ASYNC(self,lightsAddBridge, dir);
     32c:	0f 2e       	mov	r0, r31
     32e:	f8 ee       	ldi	r31, 0xE8	; 232
     330:	ef 2e       	mov	r14, r31
     332:	f1 e0       	ldi	r31, 0x01	; 1
     334:	ff 2e       	mov	r15, r31
     336:	f0 2d       	mov	r31, r0
     338:	85 01       	movw	r16, r10
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	a9 01       	movw	r20, r18
     340:	60 e0       	ldi	r22, 0x00	; 0
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	cb 01       	movw	r24, r22
     346:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	ASYNC(self->gui,uppdateQueue,temp);
     34a:	f5 01       	movw	r30, r10
     34c:	02 89       	ldd	r16, Z+18	; 0x12
     34e:	13 89       	ldd	r17, Z+19	; 0x13
     350:	ce 01       	movw	r24, r28
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	6c 01       	movw	r12, r24
     356:	0f 2e       	mov	r0, r31
     358:	fb e3       	ldi	r31, 0x3B	; 59
     35a:	ef 2e       	mov	r14, r31
     35c:	f3 e0       	ldi	r31, 0x03	; 3
     35e:	ff 2e       	mov	r15, r31
     360:	f0 2d       	mov	r31, r0
     362:	20 e0       	ldi	r18, 0x00	; 0
     364:	30 e0       	ldi	r19, 0x00	; 0
     366:	a9 01       	movw	r20, r18
     368:	60 e0       	ldi	r22, 0x00	; 0
     36a:	70 e0       	ldi	r23, 0x00	; 0
     36c:	cb 01       	movw	r24, r22
     36e:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	AFTER(SEC(5),self, decBridge, NULL);
     372:	c1 2c       	mov	r12, r1
     374:	d1 2c       	mov	r13, r1
     376:	0f 2e       	mov	r0, r31
     378:	fd e4       	ldi	r31, 0x4D	; 77
     37a:	ef 2e       	mov	r14, r31
     37c:	f0 e0       	ldi	r31, 0x00	; 0
     37e:	ff 2e       	mov	r15, r31
     380:	f0 2d       	mov	r31, r0
     382:	85 01       	movw	r16, r10
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	a9 01       	movw	r20, r18
     38a:	6a e5       	ldi	r22, 0x5A	; 90
     38c:	72 e6       	ldi	r23, 0x62	; 98
     38e:	82 e0       	ldi	r24, 0x02	; 2
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>

}
     396:	0f 90       	pop	r0
     398:	0f 90       	pop	r0
     39a:	0f 90       	pop	r0
     39c:	0f 90       	pop	r0
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	1f 91       	pop	r17
     3a4:	0f 91       	pop	r16
     3a6:	ff 90       	pop	r15
     3a8:	ef 90       	pop	r14
     3aa:	df 90       	pop	r13
     3ac:	cf 90       	pop	r12
     3ae:	bf 90       	pop	r11
     3b0:	af 90       	pop	r10
     3b2:	08 95       	ret

000003b4 <longestQueue>:
	ASYNC(self->gui,uppdateQueue,temp);
}


int longestQueue (Controller *self){
	if (self->northQueue >= self->southQueue){
     3b4:	fc 01       	movw	r30, r24
     3b6:	26 81       	ldd	r18, Z+6	; 0x06
     3b8:	37 81       	ldd	r19, Z+7	; 0x07
     3ba:	80 85       	ldd	r24, Z+8	; 0x08
     3bc:	91 85       	ldd	r25, Z+9	; 0x09
     3be:	28 17       	cp	r18, r24
     3c0:	39 07       	cpc	r19, r25
     3c2:	1c f0       	brlt	.+6      	; 0x3ca <longestQueue+0x16>
		return 1;
     3c4:	81 e0       	ldi	r24, 0x01	; 1
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	08 95       	ret
	}
	else {
		return 2;
     3ca:	82 e0       	ldi	r24, 0x02	; 2
     3cc:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     3ce:	08 95       	ret

000003d0 <lightsAddBridge>:
	self->lights = dir;
	ASYNC(self->OpH, outputLights, self->lights );
}


void lightsAddBridge(Controller *self){
     3d0:	0f 93       	push	r16
     3d2:	1f 93       	push	r17
     3d4:	cf 93       	push	r28
     3d6:	df 93       	push	r29
     3d8:	ec 01       	movw	r28, r24
	self->carsPassed++;
     3da:	0e 85       	ldd	r16, Y+14	; 0x0e
     3dc:	1f 85       	ldd	r17, Y+15	; 0x0f
     3de:	0f 5f       	subi	r16, 0xFF	; 255
     3e0:	1f 4f       	sbci	r17, 0xFF	; 255
     3e2:	1f 87       	std	Y+15, r17	; 0x0f
     3e4:	0e 87       	std	Y+14, r16	; 0x0e
	int longest = longestQueue(self);
     3e6:	0e 94 da 01 	call	0x3b4	; 0x3b4 <longestQueue>
	if (longest == self->bridgeDirection){
     3ea:	2c 81       	ldd	r18, Y+4	; 0x04
     3ec:	3d 81       	ldd	r19, Y+5	; 0x05
     3ee:	82 17       	cp	r24, r18
     3f0:	93 07       	cpc	r25, r19
     3f2:	39 f4       	brne	.+14     	; 0x402 <__DATA_REGION_LENGTH__+0x2>
		if (self->carsPassed >= maxCarsBeforeSwap){
     3f4:	0a 30       	cpi	r16, 0x0A	; 10
     3f6:	11 05       	cpc	r17, r1
     3f8:	3c f0       	brlt	.+14     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
			lightsRed(self);
     3fa:	ce 01       	movw	r24, r28
     3fc:	0e 94 9e 00 	call	0x13c	; 0x13c <lightsRed>
     400:	03 c0       	rjmp	.+6      	; 0x408 <__DATA_REGION_LENGTH__+0x8>
		}
	}
	else {
		lightsRed(self);
     402:	ce 01       	movw	r24, r28
     404:	0e 94 9e 00 	call	0x13c	; 0x13c <lightsRed>
	}

	
}
     408:	df 91       	pop	r29
     40a:	cf 91       	pop	r28
     40c:	1f 91       	pop	r17
     40e:	0f 91       	pop	r16
     410:	08 95       	ret

00000412 <lightGreen>:
void lightsRed(Controller *self){
	self->lights = 0;
	ASYNC(self->OpH, outputLights, self->lights );
}

void lightGreen(Controller *self, int dir){
     412:	cf 92       	push	r12
     414:	df 92       	push	r13
     416:	ef 92       	push	r14
     418:	ff 92       	push	r15
     41a:	0f 93       	push	r16
     41c:	1f 93       	push	r17
     41e:	fc 01       	movw	r30, r24
	self->carsPassed =0;
     420:	17 86       	std	Z+15, r1	; 0x0f
     422:	16 86       	std	Z+14, r1	; 0x0e
	self->lights = dir;
     424:	75 87       	std	Z+13, r23	; 0x0d
     426:	64 87       	std	Z+12, r22	; 0x0c
	ASYNC(self->OpH, outputLights, self->lights );
     428:	00 89       	ldd	r16, Z+16	; 0x10
     42a:	11 89       	ldd	r17, Z+17	; 0x11
     42c:	6b 01       	movw	r12, r22
     42e:	0f 2e       	mov	r0, r31
     430:	f2 e1       	ldi	r31, 0x12	; 18
     432:	ef 2e       	mov	r14, r31
     434:	f4 e0       	ldi	r31, 0x04	; 4
     436:	ff 2e       	mov	r15, r31
     438:	f0 2d       	mov	r31, r0
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	a9 01       	movw	r20, r18
     440:	60 e0       	ldi	r22, 0x00	; 0
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	cb 01       	movw	r24, r22
     446:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
}
     44a:	1f 91       	pop	r17
     44c:	0f 91       	pop	r16
     44e:	ff 90       	pop	r15
     450:	ef 90       	pop	r14
     452:	df 90       	pop	r13
     454:	cf 90       	pop	r12
     456:	08 95       	ret

00000458 <lightsBridgeEmpty>:

	
}

void lightsBridgeEmpty(Controller *self){
	if (self->bridgeDirection == 1){
     458:	fc 01       	movw	r30, r24
     45a:	24 81       	ldd	r18, Z+4	; 0x04
     45c:	35 81       	ldd	r19, Z+5	; 0x05
     45e:	21 30       	cpi	r18, 0x01	; 1
     460:	31 05       	cpc	r19, r1
     462:	71 f4       	brne	.+28     	; 0x480 <lightsBridgeEmpty+0x28>
		if (self->southQueue != 0){
     464:	20 85       	ldd	r18, Z+8	; 0x08
     466:	31 85       	ldd	r19, Z+9	; 0x09
     468:	23 2b       	or	r18, r19
     46a:	29 f0       	breq	.+10     	; 0x476 <lightsBridgeEmpty+0x1e>
			lightGreen(self,2);
     46c:	62 e0       	ldi	r22, 0x02	; 2
     46e:	70 e0       	ldi	r23, 0x00	; 0
     470:	0e 94 09 02 	call	0x412	; 0x412 <lightGreen>
     474:	08 95       	ret
		}
		else {
			lightGreen(self, 1);
     476:	61 e0       	ldi	r22, 0x01	; 1
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	0e 94 09 02 	call	0x412	; 0x412 <lightGreen>
     47e:	08 95       	ret
		}
	}
	else {
		if (self->northQueue != 0){
     480:	fc 01       	movw	r30, r24
     482:	26 81       	ldd	r18, Z+6	; 0x06
     484:	37 81       	ldd	r19, Z+7	; 0x07
     486:	23 2b       	or	r18, r19
     488:	29 f0       	breq	.+10     	; 0x494 <lightsBridgeEmpty+0x3c>
			lightGreen(self,1);
     48a:	61 e0       	ldi	r22, 0x01	; 1
     48c:	70 e0       	ldi	r23, 0x00	; 0
     48e:	0e 94 09 02 	call	0x412	; 0x412 <lightGreen>
     492:	08 95       	ret
		}	
		else {
			lightGreen(self, 2);
     494:	62 e0       	ldi	r22, 0x02	; 2
     496:	70 e0       	ldi	r23, 0x00	; 0
     498:	0e 94 09 02 	call	0x412	; 0x412 <lightGreen>
     49c:	08 95       	ret

0000049e <initialize>:
		}
	}
}

void initialize(Controller *self){
     49e:	cf 92       	push	r12
     4a0:	df 92       	push	r13
     4a2:	ef 92       	push	r14
     4a4:	ff 92       	push	r15
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	ec 01       	movw	r28, r24
	ASYNC(self->gui, init, NULL);
     4b0:	0a 89       	ldd	r16, Y+18	; 0x12
     4b2:	1b 89       	ldd	r17, Y+19	; 0x13
     4b4:	c1 2c       	mov	r12, r1
     4b6:	d1 2c       	mov	r13, r1
     4b8:	0f 2e       	mov	r0, r31
     4ba:	f6 e3       	ldi	r31, 0x36	; 54
     4bc:	ef 2e       	mov	r14, r31
     4be:	f3 e0       	ldi	r31, 0x03	; 3
     4c0:	ff 2e       	mov	r15, r31
     4c2:	f0 2d       	mov	r31, r0
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	a9 01       	movw	r20, r18
     4ca:	60 e0       	ldi	r22, 0x00	; 0
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	cb 01       	movw	r24, r22
     4d0:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	ASYNC(self, lightsRed, NULL); 
     4d4:	0f 2e       	mov	r0, r31
     4d6:	fe e9       	ldi	r31, 0x9E	; 158
     4d8:	ef 2e       	mov	r14, r31
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	ff 2e       	mov	r15, r31
     4de:	f0 2d       	mov	r31, r0
     4e0:	8e 01       	movw	r16, r28
     4e2:	20 e0       	ldi	r18, 0x00	; 0
     4e4:	30 e0       	ldi	r19, 0x00	; 0
     4e6:	a9 01       	movw	r20, r18
     4e8:	60 e0       	ldi	r22, 0x00	; 0
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	cb 01       	movw	r24, r22
     4ee:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	1f 91       	pop	r17
     4f8:	0f 91       	pop	r16
     4fa:	ff 90       	pop	r15
     4fc:	ef 90       	pop	r14
     4fe:	df 90       	pop	r13
     500:	cf 90       	pop	r12
     502:	08 95       	ret

00000504 <writeChar>:
	
	// Enable receiver and transmitter receive complete interrupt. 
	UCSR0B = (1 << 4 ) | (1 << 3)| (1 << 7) ; // Rxen = 4 and txen = 3 RXCIE = 7  
	
	// Set frame format: 8datam 1stop bit , No parity 
	UCSR0C = (1 << 2 )| (1 << 1); // UCSZ1 = 2  UCSZ0 = 1 
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	cd b7       	in	r28, 0x3d	; 61
     50a:	de b7       	in	r29, 0x3e	; 62
     50c:	66 97       	sbiw	r28, 0x16	; 22
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	f8 94       	cli
     512:	de bf       	out	0x3e, r29	; 62
     514:	0f be       	out	0x3f, r0	; 63
     516:	cd bf       	out	0x3d, r28	; 61
     518:	66 30       	cpi	r22, 0x06	; 6
     51a:	71 05       	cpc	r23, r1
     51c:	08 f0       	brcs	.+2      	; 0x520 <writeChar+0x1c>
     51e:	43 c0       	rjmp	.+134    	; 0x5a6 <writeChar+0xa2>
     520:	96 e1       	ldi	r25, 0x16	; 22
     522:	e8 e0       	ldi	r30, 0x08	; 8
     524:	f1 e0       	ldi	r31, 0x01	; 1
     526:	de 01       	movw	r26, r28
     528:	11 96       	adiw	r26, 0x01	; 1
     52a:	01 90       	ld	r0, Z+
     52c:	0d 92       	st	X+, r0
     52e:	9a 95       	dec	r25
     530:	e1 f7       	brne	.-8      	; 0x52a <writeChar+0x26>
     532:	90 ed       	ldi	r25, 0xD0	; 208
     534:	98 0f       	add	r25, r24
     536:	9a 30       	cpi	r25, 0x0A	; 10
     538:	70 f4       	brcc	.+28     	; 0x556 <writeChar+0x52>
     53a:	e8 2f       	mov	r30, r24
     53c:	f0 e0       	ldi	r31, 0x00	; 0
     53e:	f0 97       	sbiw	r30, 0x30	; 48
     540:	ee 0f       	add	r30, r30
     542:	ff 1f       	adc	r31, r31
     544:	81 e0       	ldi	r24, 0x01	; 1
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	8c 0f       	add	r24, r28
     54a:	9d 1f       	adc	r25, r29
     54c:	e8 0f       	add	r30, r24
     54e:	f9 1f       	adc	r31, r25
     550:	40 81       	ld	r20, Z
     552:	51 81       	ldd	r21, Z+1	; 0x01
     554:	02 c0       	rjmp	.+4      	; 0x55a <writeChar+0x56>
     556:	48 e2       	ldi	r20, 0x28	; 40
     558:	50 ec       	ldi	r21, 0xC0	; 192
     55a:	fb 01       	movw	r30, r22
     55c:	f5 95       	asr	r31
     55e:	e7 95       	ror	r30
     560:	e4 51       	subi	r30, 0x14	; 20
     562:	ff 4f       	sbci	r31, 0xFF	; 255
     564:	db 01       	movw	r26, r22
     566:	a1 70       	andi	r26, 0x01	; 1
     568:	bb 27       	eor	r27, r27
     56a:	60 fd       	sbrc	r22, 0
     56c:	02 c0       	rjmp	.+4      	; 0x572 <writeChar+0x6e>
     56e:	60 ef       	ldi	r22, 0xF0	; 240
     570:	01 c0       	rjmp	.+2      	; 0x574 <writeChar+0x70>
     572:	6f e0       	ldi	r22, 0x0F	; 15
     574:	20 e0       	ldi	r18, 0x00	; 0
     576:	30 e0       	ldi	r19, 0x00	; 0
     578:	13 c0       	rjmp	.+38     	; 0x5a0 <writeChar+0x9c>
     57a:	84 2f       	mov	r24, r20
     57c:	8f 70       	andi	r24, 0x0F	; 15
     57e:	52 95       	swap	r21
     580:	42 95       	swap	r20
     582:	4f 70       	andi	r20, 0x0F	; 15
     584:	45 27       	eor	r20, r21
     586:	5f 70       	andi	r21, 0x0F	; 15
     588:	45 27       	eor	r20, r21
     58a:	10 97       	sbiw	r26, 0x00	; 0
     58c:	11 f0       	breq	.+4      	; 0x592 <writeChar+0x8e>
     58e:	82 95       	swap	r24
     590:	80 7f       	andi	r24, 0xF0	; 240
     592:	90 81       	ld	r25, Z
     594:	96 23       	and	r25, r22
     596:	89 2b       	or	r24, r25
     598:	80 83       	st	Z, r24
     59a:	35 96       	adiw	r30, 0x05	; 5
     59c:	2f 5f       	subi	r18, 0xFF	; 255
     59e:	3f 4f       	sbci	r19, 0xFF	; 255
     5a0:	24 30       	cpi	r18, 0x04	; 4
     5a2:	31 05       	cpc	r19, r1
     5a4:	54 f3       	brlt	.-44     	; 0x57a <writeChar+0x76>
     5a6:	66 96       	adiw	r28, 0x16	; 22
     5a8:	0f b6       	in	r0, 0x3f	; 63
     5aa:	f8 94       	cli
     5ac:	de bf       	out	0x3e, r29	; 62
     5ae:	0f be       	out	0x3f, r0	; 63
     5b0:	cd bf       	out	0x3d, r28	; 61
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	08 95       	ret

000005b8 <printAt>:
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	ec 01       	movw	r28, r24
     5c6:	7b 01       	movw	r14, r22
     5c8:	cb 01       	movw	r24, r22
     5ca:	64 e6       	ldi	r22, 0x64	; 100
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	0e 94 8b 10 	call	0x2116	; 0x2116 <__divmodhi4>
     5d2:	0a e0       	ldi	r16, 0x0A	; 10
     5d4:	10 e0       	ldi	r17, 0x00	; 0
     5d6:	b8 01       	movw	r22, r16
     5d8:	0e 94 8b 10 	call	0x2116	; 0x2116 <__divmodhi4>
     5dc:	86 2f       	mov	r24, r22
     5de:	be 01       	movw	r22, r28
     5e0:	80 5d       	subi	r24, 0xD0	; 208
     5e2:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     5e6:	21 96       	adiw	r28, 0x01	; 1
     5e8:	c7 01       	movw	r24, r14
     5ea:	b8 01       	movw	r22, r16
     5ec:	0e 94 8b 10 	call	0x2116	; 0x2116 <__divmodhi4>
     5f0:	be 01       	movw	r22, r28
     5f2:	80 5d       	subi	r24, 0xD0	; 208
     5f4:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	1f 91       	pop	r17
     5fe:	0f 91       	pop	r16
     600:	ff 90       	pop	r15
     602:	ef 90       	pop	r14
     604:	08 95       	ret

00000606 <initLCD>:
     606:	e1 e6       	ldi	r30, 0x61	; 97
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	80 e8       	ldi	r24, 0x80	; 128
     60c:	80 83       	st	Z, r24
     60e:	10 82       	st	Z, r1
     610:	8f e0       	ldi	r24, 0x0F	; 15
     612:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     616:	87 eb       	ldi	r24, 0xB7	; 183
     618:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     61c:	87 e0       	ldi	r24, 0x07	; 7
     61e:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     622:	80 ec       	ldi	r24, 0xC0	; 192
     624:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
     62e:	60 e0       	ldi	r22, 0x00	; 0
     630:	70 e0       	ldi	r23, 0x00	; 0
     632:	80 e3       	ldi	r24, 0x30	; 48
     634:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     638:	61 e0       	ldi	r22, 0x01	; 1
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	80 e3       	ldi	r24, 0x30	; 48
     63e:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     642:	62 e0       	ldi	r22, 0x02	; 2
     644:	70 e0       	ldi	r23, 0x00	; 0
     646:	80 e3       	ldi	r24, 0x30	; 48
     648:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     64c:	63 e0       	ldi	r22, 0x03	; 3
     64e:	70 e0       	ldi	r23, 0x00	; 0
     650:	80 e3       	ldi	r24, 0x30	; 48
     652:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     656:	64 e0       	ldi	r22, 0x04	; 4
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	80 e3       	ldi	r24, 0x30	; 48
     65c:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     660:	65 e0       	ldi	r22, 0x05	; 5
     662:	70 e0       	ldi	r23, 0x00	; 0
     664:	80 e3       	ldi	r24, 0x30	; 48
     666:	0e 94 82 02 	call	0x504	; 0x504 <writeChar>
     66a:	08 95       	ret

0000066c <init>:
     66c:	80 e5       	ldi	r24, 0x50	; 80
     66e:	8d b9       	out	0x0d, r24	; 13
     670:	0e 94 03 03 	call	0x606	; 0x606 <initLCD>
     674:	08 95       	ret

00000676 <uppdateQueue>:
 }
 
void uppdateQueue (GUI *self,int arg[2]){
     676:	fb 01       	movw	r30, r22
	int pos = 2; 
	if (arg[1]==1){
     678:	82 81       	ldd	r24, Z+2	; 0x02
     67a:	93 81       	ldd	r25, Z+3	; 0x03
     67c:	81 30       	cpi	r24, 0x01	; 1
     67e:	91 05       	cpc	r25, r1
     680:	29 f0       	breq	.+10     	; 0x68c <uppdateQueue+0x16>
		pos = 0;
	}
	else if (arg[1]== 2){
     682:	02 97       	sbiw	r24, 0x02	; 2
     684:	31 f0       	breq	.+12     	; 0x692 <uppdateQueue+0x1c>
	// Set frame format: 8datam 1stop bit , No parity 
	UCSR0C = (1 << 2 )| (1 << 1); // UCSZ1 = 2  UCSZ0 = 1 
 }
 
void uppdateQueue (GUI *self,int arg[2]){
	int pos = 2; 
     686:	62 e0       	ldi	r22, 0x02	; 2
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	05 c0       	rjmp	.+10     	; 0x696 <uppdateQueue+0x20>
	if (arg[1]==1){
		pos = 0;
     68c:	60 e0       	ldi	r22, 0x00	; 0
     68e:	70 e0       	ldi	r23, 0x00	; 0
     690:	02 c0       	rjmp	.+4      	; 0x696 <uppdateQueue+0x20>
	}
	else if (arg[1]== 2){
		pos = 4; 
     692:	64 e0       	ldi	r22, 0x04	; 4
     694:	70 e0       	ldi	r23, 0x00	; 0
		}
	
	printAt(arg[0],pos);
     696:	80 81       	ld	r24, Z
     698:	91 81       	ldd	r25, Z+1	; 0x01
     69a:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <printAt>
     69e:	08 95       	ret

000006a0 <sensorInterupt>:


#include "InputHandler.h"
#include <avr/io.h>

void sensorInterupt (InputHandler *self){
     6a0:	cf 92       	push	r12
     6a2:	df 92       	push	r13
     6a4:	ef 92       	push	r14
     6a6:	ff 92       	push	r15
     6a8:	0f 93       	push	r16
     6aa:	1f 93       	push	r17
     6ac:	cf 93       	push	r28
     6ae:	df 93       	push	r29
     6b0:	ec 01       	movw	r28, r24
	
	if ( UDR0 & northCar ){
     6b2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     6b6:	80 ff       	sbrs	r24, 0
     6b8:	13 c0       	rjmp	.+38     	; 0x6e0 <sensorInterupt+0x40>
		// add to Nqueue
		ASYNC(self->controller, addQueue, 1);
     6ba:	0c 81       	ldd	r16, Y+4	; 0x04
     6bc:	1d 81       	ldd	r17, Y+5	; 0x05
     6be:	cc 24       	eor	r12, r12
     6c0:	c3 94       	inc	r12
     6c2:	d1 2c       	mov	r13, r1
     6c4:	0f 2e       	mov	r0, r31
     6c6:	f0 ec       	ldi	r31, 0xC0	; 192
     6c8:	ef 2e       	mov	r14, r31
     6ca:	f0 e0       	ldi	r31, 0x00	; 0
     6cc:	ff 2e       	mov	r15, r31
     6ce:	f0 2d       	mov	r31, r0
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	a9 01       	movw	r20, r18
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	cb 01       	movw	r24, r22
     6dc:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
		
	}
	
	if ( UDR0 & northBridge ){
     6e0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     6e4:	81 ff       	sbrs	r24, 1
     6e6:	13 c0       	rjmp	.+38     	; 0x70e <sensorInterupt+0x6e>
		// North car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 1);
     6e8:	0c 81       	ldd	r16, Y+4	; 0x04
     6ea:	1d 81       	ldd	r17, Y+5	; 0x05
     6ec:	cc 24       	eor	r12, r12
     6ee:	c3 94       	inc	r12
     6f0:	d1 2c       	mov	r13, r1
     6f2:	0f 2e       	mov	r0, r31
     6f4:	f8 e7       	ldi	r31, 0x78	; 120
     6f6:	ef 2e       	mov	r14, r31
     6f8:	f1 e0       	ldi	r31, 0x01	; 1
     6fa:	ff 2e       	mov	r15, r31
     6fc:	f0 2d       	mov	r31, r0
     6fe:	20 e0       	ldi	r18, 0x00	; 0
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	a9 01       	movw	r20, r18
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	cb 01       	movw	r24, r22
     70a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
		
		
	}
	
	if ( UDR0 & southCar ){
     70e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     712:	82 ff       	sbrs	r24, 2
     714:	14 c0       	rjmp	.+40     	; 0x73e <sensorInterupt+0x9e>
		// add to Squeue
		ASYNC(self->controller, addQueue, 2);
     716:	0c 81       	ldd	r16, Y+4	; 0x04
     718:	1d 81       	ldd	r17, Y+5	; 0x05
     71a:	68 94       	set
     71c:	cc 24       	eor	r12, r12
     71e:	c1 f8       	bld	r12, 1
     720:	d1 2c       	mov	r13, r1
     722:	0f 2e       	mov	r0, r31
     724:	f0 ec       	ldi	r31, 0xC0	; 192
     726:	ef 2e       	mov	r14, r31
     728:	f0 e0       	ldi	r31, 0x00	; 0
     72a:	ff 2e       	mov	r15, r31
     72c:	f0 2d       	mov	r31, r0
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 e0       	ldi	r19, 0x00	; 0
     732:	a9 01       	movw	r20, r18
     734:	60 e0       	ldi	r22, 0x00	; 0
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	cb 01       	movw	r24, r22
     73a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	}
	
	if ( UDR0 & southBridge ){
     73e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     742:	83 ff       	sbrs	r24, 3
     744:	14 c0       	rjmp	.+40     	; 0x76e <sensorInterupt+0xce>
		// South car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 2);
     746:	0c 81       	ldd	r16, Y+4	; 0x04
     748:	1d 81       	ldd	r17, Y+5	; 0x05
     74a:	68 94       	set
     74c:	cc 24       	eor	r12, r12
     74e:	c1 f8       	bld	r12, 1
     750:	d1 2c       	mov	r13, r1
     752:	0f 2e       	mov	r0, r31
     754:	f8 e7       	ldi	r31, 0x78	; 120
     756:	ef 2e       	mov	r14, r31
     758:	f1 e0       	ldi	r31, 0x01	; 1
     75a:	ff 2e       	mov	r15, r31
     75c:	f0 2d       	mov	r31, r0
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	a9 01       	movw	r20, r18
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	70 e0       	ldi	r23, 0x00	; 0
     768:	cb 01       	movw	r24, r22
     76a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
	}
}
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	ff 90       	pop	r15
     778:	ef 90       	pop	r14
     77a:	df 90       	pop	r13
     77c:	cf 90       	pop	r12
     77e:	08 95       	ret

00000780 <main>:
#include "OutputHandler.h"
#include "InputHandler.h"
#include "TinyTimber.h"

int main(void)
{
     780:	0f 93       	push	r16
     782:	1f 93       	push	r17
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	cd b7       	in	r28, 0x3d	; 61
     78a:	de b7       	in	r29, 0x3e	; 62
     78c:	a6 97       	sbiw	r28, 0x26	; 38
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	f8 94       	cli
     792:	de bf       	out	0x3e, r29	; 62
     794:	0f be       	out	0x3f, r0	; 63
     796:	cd bf       	out	0x3d, r28	; 61
 
  GUI gui = initGUI();
     798:	1a 82       	std	Y+2, r1	; 0x02
     79a:	19 82       	std	Y+1, r1	; 0x01
     79c:	1c 82       	std	Y+4, r1	; 0x04
     79e:	1b 82       	std	Y+3, r1	; 0x03
     7a0:	1e 82       	std	Y+6, r1	; 0x06
     7a2:	1d 82       	std	Y+5, r1	; 0x05
  
  OutputHandler opH = initOutputHandler();
     7a4:	18 86       	std	Y+8, r1	; 0x08
     7a6:	1f 82       	std	Y+7, r1	; 0x07
     7a8:	1a 86       	std	Y+10, r1	; 0x0a
     7aa:	19 86       	std	Y+9, r1	; 0x09
  
  Controller controller = initController(&opH, &gui);
     7ac:	1c 86       	std	Y+12, r1	; 0x0c
     7ae:	1b 86       	std	Y+11, r1	; 0x0b
     7b0:	1e 86       	std	Y+14, r1	; 0x0e
     7b2:	1d 86       	std	Y+13, r1	; 0x0d
     7b4:	18 8a       	std	Y+16, r1	; 0x10
     7b6:	1f 86       	std	Y+15, r1	; 0x0f
     7b8:	84 e1       	ldi	r24, 0x14	; 20
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	9a 8b       	std	Y+18, r25	; 0x12
     7be:	89 8b       	std	Y+17, r24	; 0x11
     7c0:	1c 8a       	std	Y+20, r1	; 0x14
     7c2:	1b 8a       	std	Y+19, r1	; 0x13
     7c4:	1e 8a       	std	Y+22, r1	; 0x16
     7c6:	1d 8a       	std	Y+21, r1	; 0x15
     7c8:	18 8e       	std	Y+24, r1	; 0x18
     7ca:	1f 8a       	std	Y+23, r1	; 0x17
     7cc:	1a 8e       	std	Y+26, r1	; 0x1a
     7ce:	19 8e       	std	Y+25, r1	; 0x19
     7d0:	ce 01       	movw	r24, r28
     7d2:	07 96       	adiw	r24, 0x07	; 7
     7d4:	9c 8f       	std	Y+28, r25	; 0x1c
     7d6:	8b 8f       	std	Y+27, r24	; 0x1b
     7d8:	06 97       	sbiw	r24, 0x06	; 6
     7da:	9e 8f       	std	Y+30, r25	; 0x1e
     7dc:	8d 8f       	std	Y+29, r24	; 0x1d

  InputHandler inputHandler = initInputHandler(&controller, &gui);
     7de:	18 a2       	std	Y+32, r1	; 0x20
     7e0:	1f 8e       	std	Y+31, r1	; 0x1f
     7e2:	1a a2       	std	Y+34, r1	; 0x22
     7e4:	19 a2       	std	Y+33, r1	; 0x21
     7e6:	8e 01       	movw	r16, r28
     7e8:	05 5f       	subi	r16, 0xF5	; 245
     7ea:	1f 4f       	sbci	r17, 0xFF	; 255
     7ec:	1c a3       	std	Y+36, r17	; 0x24
     7ee:	0b a3       	std	Y+35, r16	; 0x23
     7f0:	9e a3       	std	Y+38, r25	; 0x26
     7f2:	8d a3       	std	Y+37, r24	; 0x25
  
  INSTALL (&inputHandler, sensorInterupt, IRQ_USART0_RX);
     7f4:	48 e0       	ldi	r20, 0x08	; 8
     7f6:	60 e5       	ldi	r22, 0x50	; 80
     7f8:	73 e0       	ldi	r23, 0x03	; 3
     7fa:	4e 96       	adiw	r24, 0x1e	; 30
     7fc:	0e 94 59 10 	call	0x20b2	; 0x20b2 <install>
  
  return TINYTIMBER(&controller, initialize, NULL);
     800:	40 e0       	ldi	r20, 0x00	; 0
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	6f e4       	ldi	r22, 0x4F	; 79
     806:	72 e0       	ldi	r23, 0x02	; 2
     808:	c8 01       	movw	r24, r16
     80a:	0e 94 74 10 	call	0x20e8	; 0x20e8 <tinytimber>

	
}
     80e:	a6 96       	adiw	r28, 0x26	; 38
     810:	0f b6       	in	r0, 0x3f	; 63
     812:	f8 94       	cli
     814:	de bf       	out	0x3e, r29	; 62
     816:	0f be       	out	0x3f, r0	; 63
     818:	cd bf       	out	0x3d, r28	; 61
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	1f 91       	pop	r17
     820:	0f 91       	pop	r16
     822:	08 95       	ret

00000824 <outputLights>:
 */ 
#include "OutputHandler.h"

void outputLights(OutputHandler *self, int lights){
	
	if (lights == 0){ // North and south is Red 
     824:	61 15       	cp	r22, r1
     826:	71 05       	cpc	r23, r1
     828:	19 f4       	brne	.+6      	; 0x830 <outputLights+0xc>
		UDR0 = 0B1010;
     82a:	8a e0       	ldi	r24, 0x0A	; 10
     82c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	}
	if (lights == 1){ // North is Green south is Red
     830:	61 30       	cpi	r22, 0x01	; 1
     832:	71 05       	cpc	r23, r1
     834:	19 f4       	brne	.+6      	; 0x83c <outputLights+0x18>
		UDR0 = 0B1001;
     836:	89 e0       	ldi	r24, 0x09	; 9
     838:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	}
	if (lights == 2){ // North is Red south is Green
     83c:	62 30       	cpi	r22, 0x02	; 2
     83e:	71 05       	cpc	r23, r1
     840:	19 f4       	brne	.+6      	; 0x848 <outputLights+0x24>
		UDR0 = 0B0110;	
     842:	86 e0       	ldi	r24, 0x06	; 6
     844:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     848:	08 95       	ret

0000084a <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     84a:	cf 93       	push	r28
     84c:	df 93       	push	r29
     84e:	00 d0       	rcall	.+0      	; 0x850 <initialize+0x6>
     850:	00 d0       	rcall	.+0      	; 0x852 <initialize+0x8>
     852:	cd b7       	in	r28, 0x3d	; 61
     854:	de b7       	in	r29, 0x3e	; 62
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	18 c0       	rjmp	.+48     	; 0x88c <initialize+0x42>
     85c:	ac 01       	movw	r20, r24
     85e:	4f 5f       	subi	r20, 0xFF	; 255
     860:	5f 4f       	sbci	r21, 0xFF	; 255
     862:	9a 01       	movw	r18, r20
     864:	22 95       	swap	r18
     866:	32 95       	swap	r19
     868:	30 7f       	andi	r19, 0xF0	; 240
     86a:	32 27       	eor	r19, r18
     86c:	20 7f       	andi	r18, 0xF0	; 240
     86e:	32 27       	eor	r19, r18
     870:	2f 5f       	subi	r18, 0xFF	; 255
     872:	3d 4f       	sbci	r19, 0xFD	; 253
     874:	82 95       	swap	r24
     876:	92 95       	swap	r25
     878:	90 7f       	andi	r25, 0xF0	; 240
     87a:	98 27       	eor	r25, r24
     87c:	80 7f       	andi	r24, 0xF0	; 240
     87e:	98 27       	eor	r25, r24
     880:	fc 01       	movw	r30, r24
     882:	ef 5f       	subi	r30, 0xFF	; 255
     884:	fd 4f       	sbci	r31, 0xFD	; 253
     886:	31 83       	std	Z+1, r19	; 0x01
     888:	20 83       	st	Z, r18
     88a:	ca 01       	movw	r24, r20
     88c:	8e 30       	cpi	r24, 0x0E	; 14
     88e:	91 05       	cpc	r25, r1
     890:	2c f3       	brlt	.-54     	; 0x85c <initialize+0x12>
     892:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     896:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	15 c0       	rjmp	.+42     	; 0x8ca <initialize+0x80>
     8a0:	ac 01       	movw	r20, r24
     8a2:	4f 5f       	subi	r20, 0xFF	; 255
     8a4:	5f 4f       	sbci	r21, 0xFF	; 255
     8a6:	6d e1       	ldi	r22, 0x1D	; 29
     8a8:	64 9f       	mul	r22, r20
     8aa:	90 01       	movw	r18, r0
     8ac:	65 9f       	mul	r22, r21
     8ae:	30 0d       	add	r19, r0
     8b0:	11 24       	eor	r1, r1
     8b2:	24 5b       	subi	r18, 0xB4	; 180
     8b4:	3e 4f       	sbci	r19, 0xFE	; 254
     8b6:	68 9f       	mul	r22, r24
     8b8:	f0 01       	movw	r30, r0
     8ba:	69 9f       	mul	r22, r25
     8bc:	f0 0d       	add	r31, r0
     8be:	11 24       	eor	r1, r1
     8c0:	e4 5b       	subi	r30, 0xB4	; 180
     8c2:	fe 4f       	sbci	r31, 0xFE	; 254
     8c4:	31 83       	std	Z+1, r19	; 0x01
     8c6:	20 83       	st	Z, r18
     8c8:	ca 01       	movw	r24, r20
     8ca:	83 30       	cpi	r24, 0x03	; 3
     8cc:	91 05       	cpc	r25, r1
     8ce:	44 f3       	brlt	.-48     	; 0x8a0 <initialize+0x56>
     8d0:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <threads+0x58>
     8d4:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <threads+0x57>
     8d8:	1a 82       	std	Y+2, r1	; 0x02
     8da:	19 82       	std	Y+1, r1	; 0x01
     8dc:	32 c0       	rjmp	.+100    	; 0x942 <initialize+0xf8>
     8de:	2d e1       	ldi	r18, 0x1D	; 29
     8e0:	49 81       	ldd	r20, Y+1	; 0x01
     8e2:	5a 81       	ldd	r21, Y+2	; 0x02
     8e4:	24 9f       	mul	r18, r20
     8e6:	c0 01       	movw	r24, r0
     8e8:	25 9f       	mul	r18, r21
     8ea:	90 0d       	add	r25, r0
     8ec:	11 24       	eor	r1, r1
     8ee:	fc 01       	movw	r30, r24
     8f0:	ee 5a       	subi	r30, 0xAE	; 174
     8f2:	fe 4f       	sbci	r31, 0xFE	; 254
     8f4:	fc 83       	std	Y+4, r31	; 0x04
     8f6:	eb 83       	std	Y+3, r30	; 0x03
     8f8:	cf 01       	movw	r24, r30
     8fa:	0e 94 b3 10 	call	0x2166	; 0x2166 <setjmp>
     8fe:	20 e6       	ldi	r18, 0x60	; 96
     900:	49 81       	ldd	r20, Y+1	; 0x01
     902:	5a 81       	ldd	r21, Y+2	; 0x02
     904:	24 9f       	mul	r18, r20
     906:	c0 01       	movw	r24, r0
     908:	25 9f       	mul	r18, r21
     90a:	90 0d       	add	r25, r0
     90c:	11 24       	eor	r1, r1
     90e:	83 5b       	subi	r24, 0xB3	; 179
     910:	9c 4f       	sbci	r25, 0xFC	; 252
     912:	eb 81       	ldd	r30, Y+3	; 0x03
     914:	fc 81       	ldd	r31, Y+4	; 0x04
     916:	91 8b       	std	Z+17, r25	; 0x11
     918:	80 8b       	std	Z+16, r24	; 0x10
     91a:	93 8b       	std	Z+19, r25	; 0x13
     91c:	82 8b       	std	Z+18, r24	; 0x12
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	90 e1       	ldi	r25, 0x10	; 16
     922:	96 8b       	std	Z+22, r25	; 0x16
     924:	85 8b       	std	Z+21, r24	; 0x15
     926:	8d e1       	ldi	r24, 0x1D	; 29
     928:	84 9f       	mul	r24, r20
     92a:	f0 01       	movw	r30, r0
     92c:	85 9f       	mul	r24, r21
     92e:	f0 0d       	add	r31, r0
     930:	11 24       	eor	r1, r1
     932:	e4 5b       	subi	r30, 0xB4	; 180
     934:	fe 4f       	sbci	r31, 0xFE	; 254
     936:	15 82       	std	Z+5, r1	; 0x05
     938:	14 82       	std	Z+4, r1	; 0x04
     93a:	4f 5f       	subi	r20, 0xFF	; 255
     93c:	5f 4f       	sbci	r21, 0xFF	; 255
     93e:	5a 83       	std	Y+2, r21	; 0x02
     940:	49 83       	std	Y+1, r20	; 0x01
     942:	29 81       	ldd	r18, Y+1	; 0x01
     944:	3a 81       	ldd	r19, Y+2	; 0x02
     946:	24 30       	cpi	r18, 0x04	; 4
     948:	31 05       	cpc	r19, r1
     94a:	4c f2       	brlt	.-110    	; 0x8de <initialize+0x94>
     94c:	e4 ee       	ldi	r30, 0xE4	; 228
     94e:	f1 e0       	ldi	r31, 0x01	; 1
     950:	11 82       	std	Z+1, r1	; 0x01
     952:	10 82       	st	Z, r1
     954:	15 82       	std	Z+5, r1	; 0x05
     956:	14 82       	std	Z+4, r1	; 0x04
     958:	13 82       	std	Z+3, r1	; 0x03
     95a:	12 82       	std	Z+2, r1	; 0x02
     95c:	e1 e6       	ldi	r30, 0x61	; 97
     95e:	f0 e0       	ldi	r31, 0x00	; 0
     960:	80 e8       	ldi	r24, 0x80	; 128
     962:	80 83       	st	Z, r24
     964:	10 82       	st	Z, r1
     966:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     96a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     96e:	84 e0       	ldi	r24, 0x04	; 4
     970:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     974:	81 e0       	ldi	r24, 0x01	; 1
     976:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     97a:	0f 90       	pop	r0
     97c:	0f 90       	pop	r0
     97e:	0f 90       	pop	r0
     980:	0f 90       	pop	r0
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	08 95       	ret

00000988 <dispatch>:
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	00 d0       	rcall	.+0      	; 0x98e <dispatch+0x6>
     98e:	cd b7       	in	r28, 0x3d	; 61
     990:	de b7       	in	r29, 0x3e	; 62
     992:	9a 83       	std	Y+2, r25	; 0x02
     994:	89 83       	std	Y+1, r24	; 0x01
     996:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     99a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     99e:	06 96       	adiw	r24, 0x06	; 6
     9a0:	0e 94 b3 10 	call	0x2166	; 0x2166 <setjmp>
     9a4:	89 2b       	or	r24, r25
     9a6:	59 f4       	brne	.+22     	; 0x9be <dispatch+0x36>
     9a8:	89 81       	ldd	r24, Y+1	; 0x01
     9aa:	9a 81       	ldd	r25, Y+2	; 0x02
     9ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     9b4:	61 e0       	ldi	r22, 0x01	; 1
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	06 96       	adiw	r24, 0x06	; 6
     9ba:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <longjmp>
     9be:	0f 90       	pop	r0
     9c0:	0f 90       	pop	r0
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	08 95       	ret

000009c8 <enqueueByDeadline>:
     9c8:	0f 93       	push	r16
     9ca:	1f 93       	push	r17
     9cc:	cf 93       	push	r28
     9ce:	df 93       	push	r29
     9d0:	dc 01       	movw	r26, r24
     9d2:	cb 01       	movw	r24, r22
     9d4:	eb 01       	movw	r28, r22
     9d6:	e8 81       	ld	r30, Y
     9d8:	f9 81       	ldd	r31, Y+1	; 0x01
     9da:	c0 e0       	ldi	r28, 0x00	; 0
     9dc:	d0 e0       	ldi	r29, 0x00	; 0
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <enqueueByDeadline+0x20>
     9e0:	ef 01       	movw	r28, r30
     9e2:	01 90       	ld	r0, Z+
     9e4:	f0 81       	ld	r31, Z
     9e6:	e0 2d       	mov	r30, r0
     9e8:	30 97       	sbiw	r30, 0x00	; 0
     9ea:	79 f0       	breq	.+30     	; 0xa0a <enqueueByDeadline+0x42>
     9ec:	06 81       	ldd	r16, Z+6	; 0x06
     9ee:	17 81       	ldd	r17, Z+7	; 0x07
     9f0:	20 85       	ldd	r18, Z+8	; 0x08
     9f2:	31 85       	ldd	r19, Z+9	; 0x09
     9f4:	16 96       	adiw	r26, 0x06	; 6
     9f6:	4d 91       	ld	r20, X+
     9f8:	5d 91       	ld	r21, X+
     9fa:	6d 91       	ld	r22, X+
     9fc:	7c 91       	ld	r23, X
     9fe:	19 97       	sbiw	r26, 0x09	; 9
     a00:	40 17       	cp	r20, r16
     a02:	51 07       	cpc	r21, r17
     a04:	62 07       	cpc	r22, r18
     a06:	73 07       	cpc	r23, r19
     a08:	5c f7       	brge	.-42     	; 0x9e0 <enqueueByDeadline+0x18>
     a0a:	11 96       	adiw	r26, 0x01	; 1
     a0c:	fc 93       	st	X, r31
     a0e:	ee 93       	st	-X, r30
     a10:	20 97       	sbiw	r28, 0x00	; 0
     a12:	21 f4       	brne	.+8      	; 0xa1c <enqueueByDeadline+0x54>
     a14:	fc 01       	movw	r30, r24
     a16:	b1 83       	std	Z+1, r27	; 0x01
     a18:	a0 83       	st	Z, r26
     a1a:	02 c0       	rjmp	.+4      	; 0xa20 <enqueueByDeadline+0x58>
     a1c:	b9 83       	std	Y+1, r27	; 0x01
     a1e:	a8 83       	st	Y, r26
     a20:	df 91       	pop	r29
     a22:	cf 91       	pop	r28
     a24:	1f 91       	pop	r17
     a26:	0f 91       	pop	r16
     a28:	08 95       	ret

00000a2a <enqueueByBaseline>:
     a2a:	0f 93       	push	r16
     a2c:	1f 93       	push	r17
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
     a32:	dc 01       	movw	r26, r24
     a34:	cb 01       	movw	r24, r22
     a36:	eb 01       	movw	r28, r22
     a38:	e8 81       	ld	r30, Y
     a3a:	f9 81       	ldd	r31, Y+1	; 0x01
     a3c:	c0 e0       	ldi	r28, 0x00	; 0
     a3e:	d0 e0       	ldi	r29, 0x00	; 0
     a40:	04 c0       	rjmp	.+8      	; 0xa4a <enqueueByBaseline+0x20>
     a42:	ef 01       	movw	r28, r30
     a44:	01 90       	ld	r0, Z+
     a46:	f0 81       	ld	r31, Z
     a48:	e0 2d       	mov	r30, r0
     a4a:	30 97       	sbiw	r30, 0x00	; 0
     a4c:	79 f0       	breq	.+30     	; 0xa6c <enqueueByBaseline+0x42>
     a4e:	02 81       	ldd	r16, Z+2	; 0x02
     a50:	13 81       	ldd	r17, Z+3	; 0x03
     a52:	24 81       	ldd	r18, Z+4	; 0x04
     a54:	35 81       	ldd	r19, Z+5	; 0x05
     a56:	12 96       	adiw	r26, 0x02	; 2
     a58:	4d 91       	ld	r20, X+
     a5a:	5d 91       	ld	r21, X+
     a5c:	6d 91       	ld	r22, X+
     a5e:	7c 91       	ld	r23, X
     a60:	15 97       	sbiw	r26, 0x05	; 5
     a62:	40 17       	cp	r20, r16
     a64:	51 07       	cpc	r21, r17
     a66:	62 07       	cpc	r22, r18
     a68:	73 07       	cpc	r23, r19
     a6a:	5c f7       	brge	.-42     	; 0xa42 <enqueueByBaseline+0x18>
     a6c:	11 96       	adiw	r26, 0x01	; 1
     a6e:	fc 93       	st	X, r31
     a70:	ee 93       	st	-X, r30
     a72:	20 97       	sbiw	r28, 0x00	; 0
     a74:	21 f4       	brne	.+8      	; 0xa7e <enqueueByBaseline+0x54>
     a76:	fc 01       	movw	r30, r24
     a78:	b1 83       	std	Z+1, r27	; 0x01
     a7a:	a0 83       	st	Z, r26
     a7c:	02 c0       	rjmp	.+4      	; 0xa82 <enqueueByBaseline+0x58>
     a7e:	b9 83       	std	Y+1, r27	; 0x01
     a80:	a8 83       	st	Y, r26
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	1f 91       	pop	r17
     a88:	0f 91       	pop	r16
     a8a:	08 95       	ret

00000a8c <dequeue>:
     a8c:	dc 01       	movw	r26, r24
     a8e:	ed 91       	ld	r30, X+
     a90:	fc 91       	ld	r31, X
     a92:	11 97       	sbiw	r26, 0x01	; 1
     a94:	30 97       	sbiw	r30, 0x00	; 0
     a96:	59 f4       	brne	.+22     	; 0xaae <dequeue+0x22>
     a98:	8f ef       	ldi	r24, 0xFF	; 255
     a9a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     a9e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     aa2:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     aa6:	81 e0       	ldi	r24, 0x01	; 1
     aa8:	83 bf       	out	0x33, r24	; 51
     aaa:	88 95       	sleep
     aac:	fc cf       	rjmp	.-8      	; 0xaa6 <dequeue+0x1a>
     aae:	20 81       	ld	r18, Z
     ab0:	31 81       	ldd	r19, Z+1	; 0x01
     ab2:	2d 93       	st	X+, r18
     ab4:	3c 93       	st	X, r19
     ab6:	cf 01       	movw	r24, r30
     ab8:	08 95       	ret

00000aba <insert>:
     aba:	fb 01       	movw	r30, r22
     abc:	20 81       	ld	r18, Z
     abe:	31 81       	ldd	r19, Z+1	; 0x01
     ac0:	fc 01       	movw	r30, r24
     ac2:	31 83       	std	Z+1, r19	; 0x01
     ac4:	20 83       	st	Z, r18
     ac6:	fb 01       	movw	r30, r22
     ac8:	91 83       	std	Z+1, r25	; 0x01
     aca:	80 83       	st	Z, r24
     acc:	08 95       	ret

00000ace <push>:
     ace:	fb 01       	movw	r30, r22
     ad0:	20 81       	ld	r18, Z
     ad2:	31 81       	ldd	r19, Z+1	; 0x01
     ad4:	fc 01       	movw	r30, r24
     ad6:	31 83       	std	Z+1, r19	; 0x01
     ad8:	20 83       	st	Z, r18
     ada:	fb 01       	movw	r30, r22
     adc:	91 83       	std	Z+1, r25	; 0x01
     ade:	80 83       	st	Z, r24
     ae0:	08 95       	ret

00000ae2 <pop>:
     ae2:	dc 01       	movw	r26, r24
     ae4:	ed 91       	ld	r30, X+
     ae6:	fc 91       	ld	r31, X
     ae8:	11 97       	sbiw	r26, 0x01	; 1
     aea:	20 81       	ld	r18, Z
     aec:	31 81       	ldd	r19, Z+1	; 0x01
     aee:	2d 93       	st	X+, r18
     af0:	3c 93       	st	X, r19
     af2:	cf 01       	movw	r24, r30
     af4:	08 95       	ret

00000af6 <schedule>:
     af6:	cf 93       	push	r28
     af8:	df 93       	push	r29
     afa:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     afe:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     b02:	c2 81       	ldd	r28, Z+2	; 0x02
     b04:	d3 81       	ldd	r29, Z+3	; 0x03
     b06:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     b0a:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     b0e:	30 97       	sbiw	r30, 0x00	; 0
     b10:	19 f1       	breq	.+70     	; 0xb58 <schedule+0x62>
     b12:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     b16:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     b1a:	89 2b       	or	r24, r25
     b1c:	e9 f0       	breq	.+58     	; 0xb58 <schedule+0x62>
     b1e:	20 97       	sbiw	r28, 0x00	; 0
     b20:	69 f0       	breq	.+26     	; 0xb3c <schedule+0x46>
     b22:	86 81       	ldd	r24, Z+6	; 0x06
     b24:	97 81       	ldd	r25, Z+7	; 0x07
     b26:	a0 85       	ldd	r26, Z+8	; 0x08
     b28:	b1 85       	ldd	r27, Z+9	; 0x09
     b2a:	4e 81       	ldd	r20, Y+6	; 0x06
     b2c:	5f 81       	ldd	r21, Y+7	; 0x07
     b2e:	68 85       	ldd	r22, Y+8	; 0x08
     b30:	79 85       	ldd	r23, Y+9	; 0x09
     b32:	84 1b       	sub	r24, r20
     b34:	95 0b       	sbc	r25, r21
     b36:	a6 0b       	sbc	r26, r22
     b38:	b7 0b       	sbc	r27, r23
     b3a:	72 f4       	brpl	.+28     	; 0xb58 <schedule+0x62>
     b3c:	84 e0       	ldi	r24, 0x04	; 4
     b3e:	91 e0       	ldi	r25, 0x01	; 1
     b40:	0e 94 71 05 	call	0xae2	; 0xae2 <pop>
     b44:	62 e0       	ldi	r22, 0x02	; 2
     b46:	71 e0       	ldi	r23, 0x01	; 1
     b48:	0e 94 67 05 	call	0xace	; 0xace <push>
     b4c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     b50:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     b54:	0e 94 c4 04 	call	0x988	; 0x988 <dispatch>
     b58:	df 91       	pop	r29
     b5a:	cf 91       	pop	r28
     b5c:	08 95       	ret

00000b5e <__vector_1>:
     b5e:	1f 92       	push	r1
     b60:	0f 92       	push	r0
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	0f 92       	push	r0
     b66:	11 24       	eor	r1, r1
     b68:	0f 93       	push	r16
     b6a:	1f 93       	push	r17
     b6c:	2f 93       	push	r18
     b6e:	3f 93       	push	r19
     b70:	4f 93       	push	r20
     b72:	5f 93       	push	r21
     b74:	6f 93       	push	r22
     b76:	7f 93       	push	r23
     b78:	8f 93       	push	r24
     b7a:	9f 93       	push	r25
     b7c:	af 93       	push	r26
     b7e:	bf 93       	push	r27
     b80:	ef 93       	push	r30
     b82:	ff 93       	push	r31
     b84:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     b88:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     b8c:	ac 01       	movw	r20, r24
     b8e:	09 2e       	mov	r0, r25
     b90:	00 0c       	add	r0, r0
     b92:	66 0b       	sbc	r22, r22
     b94:	77 0b       	sbc	r23, r23
     b96:	9a 01       	movw	r18, r20
     b98:	11 27       	eor	r17, r17
     b9a:	00 27       	eor	r16, r16
     b9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ba0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	40 2b       	or	r20, r16
     baa:	51 2b       	or	r21, r17
     bac:	62 2b       	or	r22, r18
     bae:	73 2b       	or	r23, r19
     bb0:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     bb4:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     bb8:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     bbc:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     bc0:	b0 9b       	sbis	0x16, 0	; 22
     bc2:	1a c0       	rjmp	.+52     	; 0xbf8 <__vector_1+0x9a>
     bc4:	01 96       	adiw	r24, 0x01	; 1
     bc6:	09 2e       	mov	r0, r25
     bc8:	00 0c       	add	r0, r0
     bca:	aa 0b       	sbc	r26, r26
     bcc:	bb 0b       	sbc	r27, r27
     bce:	bc 01       	movw	r22, r24
     bd0:	55 27       	eor	r21, r21
     bd2:	44 27       	eor	r20, r20
     bd4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bd8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bdc:	a0 e0       	ldi	r26, 0x00	; 0
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	84 2b       	or	r24, r20
     be2:	95 2b       	or	r25, r21
     be4:	a6 2b       	or	r26, r22
     be6:	b7 2b       	or	r27, r23
     be8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     bec:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     bf0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     bf4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     bf8:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     bfc:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     c00:	30 97       	sbiw	r30, 0x00	; 0
     c02:	39 f0       	breq	.+14     	; 0xc12 <__vector_1+0xb4>
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     c0c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     c10:	09 95       	icall
     c12:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
     c16:	ff 91       	pop	r31
     c18:	ef 91       	pop	r30
     c1a:	bf 91       	pop	r27
     c1c:	af 91       	pop	r26
     c1e:	9f 91       	pop	r25
     c20:	8f 91       	pop	r24
     c22:	7f 91       	pop	r23
     c24:	6f 91       	pop	r22
     c26:	5f 91       	pop	r21
     c28:	4f 91       	pop	r20
     c2a:	3f 91       	pop	r19
     c2c:	2f 91       	pop	r18
     c2e:	1f 91       	pop	r17
     c30:	0f 91       	pop	r16
     c32:	0f 90       	pop	r0
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	0f 90       	pop	r0
     c38:	1f 90       	pop	r1
     c3a:	18 95       	reti

00000c3c <__vector_2>:
     c3c:	1f 92       	push	r1
     c3e:	0f 92       	push	r0
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	0f 92       	push	r0
     c44:	11 24       	eor	r1, r1
     c46:	0f 93       	push	r16
     c48:	1f 93       	push	r17
     c4a:	2f 93       	push	r18
     c4c:	3f 93       	push	r19
     c4e:	4f 93       	push	r20
     c50:	5f 93       	push	r21
     c52:	6f 93       	push	r22
     c54:	7f 93       	push	r23
     c56:	8f 93       	push	r24
     c58:	9f 93       	push	r25
     c5a:	af 93       	push	r26
     c5c:	bf 93       	push	r27
     c5e:	ef 93       	push	r30
     c60:	ff 93       	push	r31
     c62:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     c66:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     c6a:	ac 01       	movw	r20, r24
     c6c:	09 2e       	mov	r0, r25
     c6e:	00 0c       	add	r0, r0
     c70:	66 0b       	sbc	r22, r22
     c72:	77 0b       	sbc	r23, r23
     c74:	9a 01       	movw	r18, r20
     c76:	11 27       	eor	r17, r17
     c78:	00 27       	eor	r16, r16
     c7a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c7e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c82:	60 e0       	ldi	r22, 0x00	; 0
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	40 2b       	or	r20, r16
     c88:	51 2b       	or	r21, r17
     c8a:	62 2b       	or	r22, r18
     c8c:	73 2b       	or	r23, r19
     c8e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     c92:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     c96:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     c9a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     c9e:	b0 9b       	sbis	0x16, 0	; 22
     ca0:	1a c0       	rjmp	.+52     	; 0xcd6 <__vector_2+0x9a>
     ca2:	01 96       	adiw	r24, 0x01	; 1
     ca4:	09 2e       	mov	r0, r25
     ca6:	00 0c       	add	r0, r0
     ca8:	aa 0b       	sbc	r26, r26
     caa:	bb 0b       	sbc	r27, r27
     cac:	bc 01       	movw	r22, r24
     cae:	55 27       	eor	r21, r21
     cb0:	44 27       	eor	r20, r20
     cb2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cb6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cba:	a0 e0       	ldi	r26, 0x00	; 0
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	84 2b       	or	r24, r20
     cc0:	95 2b       	or	r25, r21
     cc2:	a6 2b       	or	r26, r22
     cc4:	b7 2b       	or	r27, r23
     cc6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     cca:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     cce:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     cd2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     cd6:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     cda:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     cde:	30 97       	sbiw	r30, 0x00	; 0
     ce0:	39 f0       	breq	.+14     	; 0xcf0 <__vector_2+0xb4>
     ce2:	61 e0       	ldi	r22, 0x01	; 1
     ce4:	70 e0       	ldi	r23, 0x00	; 0
     ce6:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     cea:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     cee:	09 95       	icall
     cf0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
     cf4:	ff 91       	pop	r31
     cf6:	ef 91       	pop	r30
     cf8:	bf 91       	pop	r27
     cfa:	af 91       	pop	r26
     cfc:	9f 91       	pop	r25
     cfe:	8f 91       	pop	r24
     d00:	7f 91       	pop	r23
     d02:	6f 91       	pop	r22
     d04:	5f 91       	pop	r21
     d06:	4f 91       	pop	r20
     d08:	3f 91       	pop	r19
     d0a:	2f 91       	pop	r18
     d0c:	1f 91       	pop	r17
     d0e:	0f 91       	pop	r16
     d10:	0f 90       	pop	r0
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	0f 90       	pop	r0
     d16:	1f 90       	pop	r1
     d18:	18 95       	reti

00000d1a <__vector_3>:
     d1a:	1f 92       	push	r1
     d1c:	0f 92       	push	r0
     d1e:	0f b6       	in	r0, 0x3f	; 63
     d20:	0f 92       	push	r0
     d22:	11 24       	eor	r1, r1
     d24:	0f 93       	push	r16
     d26:	1f 93       	push	r17
     d28:	2f 93       	push	r18
     d2a:	3f 93       	push	r19
     d2c:	4f 93       	push	r20
     d2e:	5f 93       	push	r21
     d30:	6f 93       	push	r22
     d32:	7f 93       	push	r23
     d34:	8f 93       	push	r24
     d36:	9f 93       	push	r25
     d38:	af 93       	push	r26
     d3a:	bf 93       	push	r27
     d3c:	ef 93       	push	r30
     d3e:	ff 93       	push	r31
     d40:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     d44:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     d48:	ac 01       	movw	r20, r24
     d4a:	09 2e       	mov	r0, r25
     d4c:	00 0c       	add	r0, r0
     d4e:	66 0b       	sbc	r22, r22
     d50:	77 0b       	sbc	r23, r23
     d52:	9a 01       	movw	r18, r20
     d54:	11 27       	eor	r17, r17
     d56:	00 27       	eor	r16, r16
     d58:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d5c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	40 2b       	or	r20, r16
     d66:	51 2b       	or	r21, r17
     d68:	62 2b       	or	r22, r18
     d6a:	73 2b       	or	r23, r19
     d6c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     d70:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     d74:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     d78:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     d7c:	b0 9b       	sbis	0x16, 0	; 22
     d7e:	1a c0       	rjmp	.+52     	; 0xdb4 <__vector_3+0x9a>
     d80:	01 96       	adiw	r24, 0x01	; 1
     d82:	09 2e       	mov	r0, r25
     d84:	00 0c       	add	r0, r0
     d86:	aa 0b       	sbc	r26, r26
     d88:	bb 0b       	sbc	r27, r27
     d8a:	bc 01       	movw	r22, r24
     d8c:	55 27       	eor	r21, r21
     d8e:	44 27       	eor	r20, r20
     d90:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d94:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d98:	a0 e0       	ldi	r26, 0x00	; 0
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	84 2b       	or	r24, r20
     d9e:	95 2b       	or	r25, r21
     da0:	a6 2b       	or	r26, r22
     da2:	b7 2b       	or	r27, r23
     da4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     da8:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     dac:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     db0:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     db4:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     db8:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     dbc:	30 97       	sbiw	r30, 0x00	; 0
     dbe:	39 f0       	breq	.+14     	; 0xdce <__vector_3+0xb4>
     dc0:	62 e0       	ldi	r22, 0x02	; 2
     dc2:	70 e0       	ldi	r23, 0x00	; 0
     dc4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     dc8:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     dcc:	09 95       	icall
     dce:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
     dd2:	ff 91       	pop	r31
     dd4:	ef 91       	pop	r30
     dd6:	bf 91       	pop	r27
     dd8:	af 91       	pop	r26
     dda:	9f 91       	pop	r25
     ddc:	8f 91       	pop	r24
     dde:	7f 91       	pop	r23
     de0:	6f 91       	pop	r22
     de2:	5f 91       	pop	r21
     de4:	4f 91       	pop	r20
     de6:	3f 91       	pop	r19
     de8:	2f 91       	pop	r18
     dea:	1f 91       	pop	r17
     dec:	0f 91       	pop	r16
     dee:	0f 90       	pop	r0
     df0:	0f be       	out	0x3f, r0	; 63
     df2:	0f 90       	pop	r0
     df4:	1f 90       	pop	r1
     df6:	18 95       	reti

00000df8 <__vector_4>:
     df8:	1f 92       	push	r1
     dfa:	0f 92       	push	r0
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	0f 92       	push	r0
     e00:	11 24       	eor	r1, r1
     e02:	0f 93       	push	r16
     e04:	1f 93       	push	r17
     e06:	2f 93       	push	r18
     e08:	3f 93       	push	r19
     e0a:	4f 93       	push	r20
     e0c:	5f 93       	push	r21
     e0e:	6f 93       	push	r22
     e10:	7f 93       	push	r23
     e12:	8f 93       	push	r24
     e14:	9f 93       	push	r25
     e16:	af 93       	push	r26
     e18:	bf 93       	push	r27
     e1a:	ef 93       	push	r30
     e1c:	ff 93       	push	r31
     e1e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     e22:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     e26:	ac 01       	movw	r20, r24
     e28:	09 2e       	mov	r0, r25
     e2a:	00 0c       	add	r0, r0
     e2c:	66 0b       	sbc	r22, r22
     e2e:	77 0b       	sbc	r23, r23
     e30:	9a 01       	movw	r18, r20
     e32:	11 27       	eor	r17, r17
     e34:	00 27       	eor	r16, r16
     e36:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e3a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	40 2b       	or	r20, r16
     e44:	51 2b       	or	r21, r17
     e46:	62 2b       	or	r22, r18
     e48:	73 2b       	or	r23, r19
     e4a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     e4e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     e52:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     e56:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     e5a:	b0 9b       	sbis	0x16, 0	; 22
     e5c:	1a c0       	rjmp	.+52     	; 0xe92 <__vector_4+0x9a>
     e5e:	01 96       	adiw	r24, 0x01	; 1
     e60:	09 2e       	mov	r0, r25
     e62:	00 0c       	add	r0, r0
     e64:	aa 0b       	sbc	r26, r26
     e66:	bb 0b       	sbc	r27, r27
     e68:	bc 01       	movw	r22, r24
     e6a:	55 27       	eor	r21, r21
     e6c:	44 27       	eor	r20, r20
     e6e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e72:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e76:	a0 e0       	ldi	r26, 0x00	; 0
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	84 2b       	or	r24, r20
     e7c:	95 2b       	or	r25, r21
     e7e:	a6 2b       	or	r26, r22
     e80:	b7 2b       	or	r27, r23
     e82:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e86:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e8a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e8e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     e92:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     e96:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     e9a:	30 97       	sbiw	r30, 0x00	; 0
     e9c:	39 f0       	breq	.+14     	; 0xeac <__vector_4+0xb4>
     e9e:	63 e0       	ldi	r22, 0x03	; 3
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     ea6:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     eaa:	09 95       	icall
     eac:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
     eb0:	ff 91       	pop	r31
     eb2:	ef 91       	pop	r30
     eb4:	bf 91       	pop	r27
     eb6:	af 91       	pop	r26
     eb8:	9f 91       	pop	r25
     eba:	8f 91       	pop	r24
     ebc:	7f 91       	pop	r23
     ebe:	6f 91       	pop	r22
     ec0:	5f 91       	pop	r21
     ec2:	4f 91       	pop	r20
     ec4:	3f 91       	pop	r19
     ec6:	2f 91       	pop	r18
     ec8:	1f 91       	pop	r17
     eca:	0f 91       	pop	r16
     ecc:	0f 90       	pop	r0
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	0f 90       	pop	r0
     ed2:	1f 90       	pop	r1
     ed4:	18 95       	reti

00000ed6 <__vector_5>:
     ed6:	1f 92       	push	r1
     ed8:	0f 92       	push	r0
     eda:	0f b6       	in	r0, 0x3f	; 63
     edc:	0f 92       	push	r0
     ede:	11 24       	eor	r1, r1
     ee0:	0f 93       	push	r16
     ee2:	1f 93       	push	r17
     ee4:	2f 93       	push	r18
     ee6:	3f 93       	push	r19
     ee8:	4f 93       	push	r20
     eea:	5f 93       	push	r21
     eec:	6f 93       	push	r22
     eee:	7f 93       	push	r23
     ef0:	8f 93       	push	r24
     ef2:	9f 93       	push	r25
     ef4:	af 93       	push	r26
     ef6:	bf 93       	push	r27
     ef8:	ef 93       	push	r30
     efa:	ff 93       	push	r31
     efc:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     f00:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     f04:	ac 01       	movw	r20, r24
     f06:	09 2e       	mov	r0, r25
     f08:	00 0c       	add	r0, r0
     f0a:	66 0b       	sbc	r22, r22
     f0c:	77 0b       	sbc	r23, r23
     f0e:	9a 01       	movw	r18, r20
     f10:	11 27       	eor	r17, r17
     f12:	00 27       	eor	r16, r16
     f14:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f18:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f1c:	60 e0       	ldi	r22, 0x00	; 0
     f1e:	70 e0       	ldi	r23, 0x00	; 0
     f20:	40 2b       	or	r20, r16
     f22:	51 2b       	or	r21, r17
     f24:	62 2b       	or	r22, r18
     f26:	73 2b       	or	r23, r19
     f28:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     f2c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     f30:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     f34:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     f38:	b0 9b       	sbis	0x16, 0	; 22
     f3a:	1a c0       	rjmp	.+52     	; 0xf70 <__vector_5+0x9a>
     f3c:	01 96       	adiw	r24, 0x01	; 1
     f3e:	09 2e       	mov	r0, r25
     f40:	00 0c       	add	r0, r0
     f42:	aa 0b       	sbc	r26, r26
     f44:	bb 0b       	sbc	r27, r27
     f46:	bc 01       	movw	r22, r24
     f48:	55 27       	eor	r21, r21
     f4a:	44 27       	eor	r20, r20
     f4c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f50:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f54:	a0 e0       	ldi	r26, 0x00	; 0
     f56:	b0 e0       	ldi	r27, 0x00	; 0
     f58:	84 2b       	or	r24, r20
     f5a:	95 2b       	or	r25, r21
     f5c:	a6 2b       	or	r26, r22
     f5e:	b7 2b       	or	r27, r23
     f60:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     f64:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     f68:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     f6c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f70:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     f74:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     f78:	30 97       	sbiw	r30, 0x00	; 0
     f7a:	39 f0       	breq	.+14     	; 0xf8a <__vector_5+0xb4>
     f7c:	64 e0       	ldi	r22, 0x04	; 4
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     f84:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     f88:	09 95       	icall
     f8a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
     f8e:	ff 91       	pop	r31
     f90:	ef 91       	pop	r30
     f92:	bf 91       	pop	r27
     f94:	af 91       	pop	r26
     f96:	9f 91       	pop	r25
     f98:	8f 91       	pop	r24
     f9a:	7f 91       	pop	r23
     f9c:	6f 91       	pop	r22
     f9e:	5f 91       	pop	r21
     fa0:	4f 91       	pop	r20
     fa2:	3f 91       	pop	r19
     fa4:	2f 91       	pop	r18
     fa6:	1f 91       	pop	r17
     fa8:	0f 91       	pop	r16
     faa:	0f 90       	pop	r0
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	0f 90       	pop	r0
     fb0:	1f 90       	pop	r1
     fb2:	18 95       	reti

00000fb4 <__vector_10>:
     fb4:	1f 92       	push	r1
     fb6:	0f 92       	push	r0
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	0f 92       	push	r0
     fbc:	11 24       	eor	r1, r1
     fbe:	0f 93       	push	r16
     fc0:	1f 93       	push	r17
     fc2:	2f 93       	push	r18
     fc4:	3f 93       	push	r19
     fc6:	4f 93       	push	r20
     fc8:	5f 93       	push	r21
     fca:	6f 93       	push	r22
     fcc:	7f 93       	push	r23
     fce:	8f 93       	push	r24
     fd0:	9f 93       	push	r25
     fd2:	af 93       	push	r26
     fd4:	bf 93       	push	r27
     fd6:	ef 93       	push	r30
     fd8:	ff 93       	push	r31
     fda:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     fde:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     fe2:	ac 01       	movw	r20, r24
     fe4:	09 2e       	mov	r0, r25
     fe6:	00 0c       	add	r0, r0
     fe8:	66 0b       	sbc	r22, r22
     fea:	77 0b       	sbc	r23, r23
     fec:	9a 01       	movw	r18, r20
     fee:	11 27       	eor	r17, r17
     ff0:	00 27       	eor	r16, r16
     ff2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ff6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ffa:	60 e0       	ldi	r22, 0x00	; 0
     ffc:	70 e0       	ldi	r23, 0x00	; 0
     ffe:	40 2b       	or	r20, r16
    1000:	51 2b       	or	r21, r17
    1002:	62 2b       	or	r22, r18
    1004:	73 2b       	or	r23, r19
    1006:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    100a:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    100e:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1012:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1016:	b0 9b       	sbis	0x16, 0	; 22
    1018:	1a c0       	rjmp	.+52     	; 0x104e <__vector_10+0x9a>
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	09 2e       	mov	r0, r25
    101e:	00 0c       	add	r0, r0
    1020:	aa 0b       	sbc	r26, r26
    1022:	bb 0b       	sbc	r27, r27
    1024:	bc 01       	movw	r22, r24
    1026:	55 27       	eor	r21, r21
    1028:	44 27       	eor	r20, r20
    102a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    102e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1032:	a0 e0       	ldi	r26, 0x00	; 0
    1034:	b0 e0       	ldi	r27, 0x00	; 0
    1036:	84 2b       	or	r24, r20
    1038:	95 2b       	or	r25, r21
    103a:	a6 2b       	or	r26, r22
    103c:	b7 2b       	or	r27, r23
    103e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1042:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1046:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    104a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    104e:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
    1052:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
    1056:	30 97       	sbiw	r30, 0x00	; 0
    1058:	39 f0       	breq	.+14     	; 0x1068 <__vector_10+0xb4>
    105a:	65 e0       	ldi	r22, 0x05	; 5
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
    1062:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
    1066:	09 95       	icall
    1068:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    106c:	ff 91       	pop	r31
    106e:	ef 91       	pop	r30
    1070:	bf 91       	pop	r27
    1072:	af 91       	pop	r26
    1074:	9f 91       	pop	r25
    1076:	8f 91       	pop	r24
    1078:	7f 91       	pop	r23
    107a:	6f 91       	pop	r22
    107c:	5f 91       	pop	r21
    107e:	4f 91       	pop	r20
    1080:	3f 91       	pop	r19
    1082:	2f 91       	pop	r18
    1084:	1f 91       	pop	r17
    1086:	0f 91       	pop	r16
    1088:	0f 90       	pop	r0
    108a:	0f be       	out	0x3f, r0	; 63
    108c:	0f 90       	pop	r0
    108e:	1f 90       	pop	r1
    1090:	18 95       	reti

00001092 <__vector_11>:
    1092:	1f 92       	push	r1
    1094:	0f 92       	push	r0
    1096:	0f b6       	in	r0, 0x3f	; 63
    1098:	0f 92       	push	r0
    109a:	11 24       	eor	r1, r1
    109c:	0f 93       	push	r16
    109e:	1f 93       	push	r17
    10a0:	2f 93       	push	r18
    10a2:	3f 93       	push	r19
    10a4:	4f 93       	push	r20
    10a6:	5f 93       	push	r21
    10a8:	6f 93       	push	r22
    10aa:	7f 93       	push	r23
    10ac:	8f 93       	push	r24
    10ae:	9f 93       	push	r25
    10b0:	af 93       	push	r26
    10b2:	bf 93       	push	r27
    10b4:	ef 93       	push	r30
    10b6:	ff 93       	push	r31
    10b8:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    10bc:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    10c0:	ac 01       	movw	r20, r24
    10c2:	09 2e       	mov	r0, r25
    10c4:	00 0c       	add	r0, r0
    10c6:	66 0b       	sbc	r22, r22
    10c8:	77 0b       	sbc	r23, r23
    10ca:	9a 01       	movw	r18, r20
    10cc:	11 27       	eor	r17, r17
    10ce:	00 27       	eor	r16, r16
    10d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	40 2b       	or	r20, r16
    10de:	51 2b       	or	r21, r17
    10e0:	62 2b       	or	r22, r18
    10e2:	73 2b       	or	r23, r19
    10e4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    10e8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    10ec:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    10f0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    10f4:	b0 9b       	sbis	0x16, 0	; 22
    10f6:	1a c0       	rjmp	.+52     	; 0x112c <__vector_11+0x9a>
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	09 2e       	mov	r0, r25
    10fc:	00 0c       	add	r0, r0
    10fe:	aa 0b       	sbc	r26, r26
    1100:	bb 0b       	sbc	r27, r27
    1102:	bc 01       	movw	r22, r24
    1104:	55 27       	eor	r21, r21
    1106:	44 27       	eor	r20, r20
    1108:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    110c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1110:	a0 e0       	ldi	r26, 0x00	; 0
    1112:	b0 e0       	ldi	r27, 0x00	; 0
    1114:	84 2b       	or	r24, r20
    1116:	95 2b       	or	r25, r21
    1118:	a6 2b       	or	r26, r22
    111a:	b7 2b       	or	r27, r23
    111c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1120:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1124:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1128:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    112c:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
    1130:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
    1134:	30 97       	sbiw	r30, 0x00	; 0
    1136:	39 f0       	breq	.+14     	; 0x1146 <__vector_11+0xb4>
    1138:	66 e0       	ldi	r22, 0x06	; 6
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
    1140:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
    1144:	09 95       	icall
    1146:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    114a:	ff 91       	pop	r31
    114c:	ef 91       	pop	r30
    114e:	bf 91       	pop	r27
    1150:	af 91       	pop	r26
    1152:	9f 91       	pop	r25
    1154:	8f 91       	pop	r24
    1156:	7f 91       	pop	r23
    1158:	6f 91       	pop	r22
    115a:	5f 91       	pop	r21
    115c:	4f 91       	pop	r20
    115e:	3f 91       	pop	r19
    1160:	2f 91       	pop	r18
    1162:	1f 91       	pop	r17
    1164:	0f 91       	pop	r16
    1166:	0f 90       	pop	r0
    1168:	0f be       	out	0x3f, r0	; 63
    116a:	0f 90       	pop	r0
    116c:	1f 90       	pop	r1
    116e:	18 95       	reti

00001170 <__vector_12>:
    1170:	1f 92       	push	r1
    1172:	0f 92       	push	r0
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	0f 92       	push	r0
    1178:	11 24       	eor	r1, r1
    117a:	0f 93       	push	r16
    117c:	1f 93       	push	r17
    117e:	2f 93       	push	r18
    1180:	3f 93       	push	r19
    1182:	4f 93       	push	r20
    1184:	5f 93       	push	r21
    1186:	6f 93       	push	r22
    1188:	7f 93       	push	r23
    118a:	8f 93       	push	r24
    118c:	9f 93       	push	r25
    118e:	af 93       	push	r26
    1190:	bf 93       	push	r27
    1192:	ef 93       	push	r30
    1194:	ff 93       	push	r31
    1196:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    119a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    119e:	ac 01       	movw	r20, r24
    11a0:	09 2e       	mov	r0, r25
    11a2:	00 0c       	add	r0, r0
    11a4:	66 0b       	sbc	r22, r22
    11a6:	77 0b       	sbc	r23, r23
    11a8:	9a 01       	movw	r18, r20
    11aa:	11 27       	eor	r17, r17
    11ac:	00 27       	eor	r16, r16
    11ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	40 2b       	or	r20, r16
    11bc:	51 2b       	or	r21, r17
    11be:	62 2b       	or	r22, r18
    11c0:	73 2b       	or	r23, r19
    11c2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    11c6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    11ca:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    11ce:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    11d2:	b0 9b       	sbis	0x16, 0	; 22
    11d4:	1a c0       	rjmp	.+52     	; 0x120a <__vector_12+0x9a>
    11d6:	01 96       	adiw	r24, 0x01	; 1
    11d8:	09 2e       	mov	r0, r25
    11da:	00 0c       	add	r0, r0
    11dc:	aa 0b       	sbc	r26, r26
    11de:	bb 0b       	sbc	r27, r27
    11e0:	bc 01       	movw	r22, r24
    11e2:	55 27       	eor	r21, r21
    11e4:	44 27       	eor	r20, r20
    11e6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11ea:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ee:	a0 e0       	ldi	r26, 0x00	; 0
    11f0:	b0 e0       	ldi	r27, 0x00	; 0
    11f2:	84 2b       	or	r24, r20
    11f4:	95 2b       	or	r25, r21
    11f6:	a6 2b       	or	r26, r22
    11f8:	b7 2b       	or	r27, r23
    11fa:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    11fe:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1202:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1206:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    120a:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
    120e:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
    1212:	30 97       	sbiw	r30, 0x00	; 0
    1214:	39 f0       	breq	.+14     	; 0x1224 <__vector_12+0xb4>
    1216:	67 e0       	ldi	r22, 0x07	; 7
    1218:	70 e0       	ldi	r23, 0x00	; 0
    121a:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
    121e:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
    1222:	09 95       	icall
    1224:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    1228:	ff 91       	pop	r31
    122a:	ef 91       	pop	r30
    122c:	bf 91       	pop	r27
    122e:	af 91       	pop	r26
    1230:	9f 91       	pop	r25
    1232:	8f 91       	pop	r24
    1234:	7f 91       	pop	r23
    1236:	6f 91       	pop	r22
    1238:	5f 91       	pop	r21
    123a:	4f 91       	pop	r20
    123c:	3f 91       	pop	r19
    123e:	2f 91       	pop	r18
    1240:	1f 91       	pop	r17
    1242:	0f 91       	pop	r16
    1244:	0f 90       	pop	r0
    1246:	0f be       	out	0x3f, r0	; 63
    1248:	0f 90       	pop	r0
    124a:	1f 90       	pop	r1
    124c:	18 95       	reti

0000124e <__vector_13>:
    124e:	1f 92       	push	r1
    1250:	0f 92       	push	r0
    1252:	0f b6       	in	r0, 0x3f	; 63
    1254:	0f 92       	push	r0
    1256:	11 24       	eor	r1, r1
    1258:	0f 93       	push	r16
    125a:	1f 93       	push	r17
    125c:	2f 93       	push	r18
    125e:	3f 93       	push	r19
    1260:	4f 93       	push	r20
    1262:	5f 93       	push	r21
    1264:	6f 93       	push	r22
    1266:	7f 93       	push	r23
    1268:	8f 93       	push	r24
    126a:	9f 93       	push	r25
    126c:	af 93       	push	r26
    126e:	bf 93       	push	r27
    1270:	ef 93       	push	r30
    1272:	ff 93       	push	r31
    1274:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1278:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    127c:	ac 01       	movw	r20, r24
    127e:	09 2e       	mov	r0, r25
    1280:	00 0c       	add	r0, r0
    1282:	66 0b       	sbc	r22, r22
    1284:	77 0b       	sbc	r23, r23
    1286:	9a 01       	movw	r18, r20
    1288:	11 27       	eor	r17, r17
    128a:	00 27       	eor	r16, r16
    128c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1290:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1294:	60 e0       	ldi	r22, 0x00	; 0
    1296:	70 e0       	ldi	r23, 0x00	; 0
    1298:	40 2b       	or	r20, r16
    129a:	51 2b       	or	r21, r17
    129c:	62 2b       	or	r22, r18
    129e:	73 2b       	or	r23, r19
    12a0:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    12a4:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    12a8:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    12ac:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    12b0:	b0 9b       	sbis	0x16, 0	; 22
    12b2:	1a c0       	rjmp	.+52     	; 0x12e8 <__vector_13+0x9a>
    12b4:	01 96       	adiw	r24, 0x01	; 1
    12b6:	09 2e       	mov	r0, r25
    12b8:	00 0c       	add	r0, r0
    12ba:	aa 0b       	sbc	r26, r26
    12bc:	bb 0b       	sbc	r27, r27
    12be:	bc 01       	movw	r22, r24
    12c0:	55 27       	eor	r21, r21
    12c2:	44 27       	eor	r20, r20
    12c4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12c8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12cc:	a0 e0       	ldi	r26, 0x00	; 0
    12ce:	b0 e0       	ldi	r27, 0x00	; 0
    12d0:	84 2b       	or	r24, r20
    12d2:	95 2b       	or	r25, r21
    12d4:	a6 2b       	or	r26, r22
    12d6:	b7 2b       	or	r27, r23
    12d8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    12dc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    12e0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    12e4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    12e8:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
    12ec:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
    12f0:	30 97       	sbiw	r30, 0x00	; 0
    12f2:	39 f0       	breq	.+14     	; 0x1302 <__vector_13+0xb4>
    12f4:	68 e0       	ldi	r22, 0x08	; 8
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
    12fc:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
    1300:	09 95       	icall
    1302:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    1306:	ff 91       	pop	r31
    1308:	ef 91       	pop	r30
    130a:	bf 91       	pop	r27
    130c:	af 91       	pop	r26
    130e:	9f 91       	pop	r25
    1310:	8f 91       	pop	r24
    1312:	7f 91       	pop	r23
    1314:	6f 91       	pop	r22
    1316:	5f 91       	pop	r21
    1318:	4f 91       	pop	r20
    131a:	3f 91       	pop	r19
    131c:	2f 91       	pop	r18
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	0f 90       	pop	r0
    1324:	0f be       	out	0x3f, r0	; 63
    1326:	0f 90       	pop	r0
    1328:	1f 90       	pop	r1
    132a:	18 95       	reti

0000132c <__vector_14>:
    132c:	1f 92       	push	r1
    132e:	0f 92       	push	r0
    1330:	0f b6       	in	r0, 0x3f	; 63
    1332:	0f 92       	push	r0
    1334:	11 24       	eor	r1, r1
    1336:	0f 93       	push	r16
    1338:	1f 93       	push	r17
    133a:	2f 93       	push	r18
    133c:	3f 93       	push	r19
    133e:	4f 93       	push	r20
    1340:	5f 93       	push	r21
    1342:	6f 93       	push	r22
    1344:	7f 93       	push	r23
    1346:	8f 93       	push	r24
    1348:	9f 93       	push	r25
    134a:	af 93       	push	r26
    134c:	bf 93       	push	r27
    134e:	ef 93       	push	r30
    1350:	ff 93       	push	r31
    1352:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1356:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    135a:	ac 01       	movw	r20, r24
    135c:	09 2e       	mov	r0, r25
    135e:	00 0c       	add	r0, r0
    1360:	66 0b       	sbc	r22, r22
    1362:	77 0b       	sbc	r23, r23
    1364:	9a 01       	movw	r18, r20
    1366:	11 27       	eor	r17, r17
    1368:	00 27       	eor	r16, r16
    136a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    136e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1372:	60 e0       	ldi	r22, 0x00	; 0
    1374:	70 e0       	ldi	r23, 0x00	; 0
    1376:	40 2b       	or	r20, r16
    1378:	51 2b       	or	r21, r17
    137a:	62 2b       	or	r22, r18
    137c:	73 2b       	or	r23, r19
    137e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1382:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1386:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    138a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    138e:	b0 9b       	sbis	0x16, 0	; 22
    1390:	1a c0       	rjmp	.+52     	; 0x13c6 <__vector_14+0x9a>
    1392:	01 96       	adiw	r24, 0x01	; 1
    1394:	09 2e       	mov	r0, r25
    1396:	00 0c       	add	r0, r0
    1398:	aa 0b       	sbc	r26, r26
    139a:	bb 0b       	sbc	r27, r27
    139c:	bc 01       	movw	r22, r24
    139e:	55 27       	eor	r21, r21
    13a0:	44 27       	eor	r20, r20
    13a2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13a6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13aa:	a0 e0       	ldi	r26, 0x00	; 0
    13ac:	b0 e0       	ldi	r27, 0x00	; 0
    13ae:	84 2b       	or	r24, r20
    13b0:	95 2b       	or	r25, r21
    13b2:	a6 2b       	or	r26, r22
    13b4:	b7 2b       	or	r27, r23
    13b6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    13ba:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    13be:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    13c2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    13c6:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    13ca:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    13ce:	30 97       	sbiw	r30, 0x00	; 0
    13d0:	39 f0       	breq	.+14     	; 0x13e0 <__vector_14+0xb4>
    13d2:	69 e0       	ldi	r22, 0x09	; 9
    13d4:	70 e0       	ldi	r23, 0x00	; 0
    13d6:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    13da:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    13de:	09 95       	icall
    13e0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    13e4:	ff 91       	pop	r31
    13e6:	ef 91       	pop	r30
    13e8:	bf 91       	pop	r27
    13ea:	af 91       	pop	r26
    13ec:	9f 91       	pop	r25
    13ee:	8f 91       	pop	r24
    13f0:	7f 91       	pop	r23
    13f2:	6f 91       	pop	r22
    13f4:	5f 91       	pop	r21
    13f6:	4f 91       	pop	r20
    13f8:	3f 91       	pop	r19
    13fa:	2f 91       	pop	r18
    13fc:	1f 91       	pop	r17
    13fe:	0f 91       	pop	r16
    1400:	0f 90       	pop	r0
    1402:	0f be       	out	0x3f, r0	; 63
    1404:	0f 90       	pop	r0
    1406:	1f 90       	pop	r1
    1408:	18 95       	reti

0000140a <__vector_15>:
    140a:	1f 92       	push	r1
    140c:	0f 92       	push	r0
    140e:	0f b6       	in	r0, 0x3f	; 63
    1410:	0f 92       	push	r0
    1412:	11 24       	eor	r1, r1
    1414:	0f 93       	push	r16
    1416:	1f 93       	push	r17
    1418:	2f 93       	push	r18
    141a:	3f 93       	push	r19
    141c:	4f 93       	push	r20
    141e:	5f 93       	push	r21
    1420:	6f 93       	push	r22
    1422:	7f 93       	push	r23
    1424:	8f 93       	push	r24
    1426:	9f 93       	push	r25
    1428:	af 93       	push	r26
    142a:	bf 93       	push	r27
    142c:	ef 93       	push	r30
    142e:	ff 93       	push	r31
    1430:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1434:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1438:	ac 01       	movw	r20, r24
    143a:	09 2e       	mov	r0, r25
    143c:	00 0c       	add	r0, r0
    143e:	66 0b       	sbc	r22, r22
    1440:	77 0b       	sbc	r23, r23
    1442:	9a 01       	movw	r18, r20
    1444:	11 27       	eor	r17, r17
    1446:	00 27       	eor	r16, r16
    1448:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    144c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1450:	60 e0       	ldi	r22, 0x00	; 0
    1452:	70 e0       	ldi	r23, 0x00	; 0
    1454:	40 2b       	or	r20, r16
    1456:	51 2b       	or	r21, r17
    1458:	62 2b       	or	r22, r18
    145a:	73 2b       	or	r23, r19
    145c:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1460:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1464:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1468:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    146c:	b0 9b       	sbis	0x16, 0	; 22
    146e:	1a c0       	rjmp	.+52     	; 0x14a4 <__vector_15+0x9a>
    1470:	01 96       	adiw	r24, 0x01	; 1
    1472:	09 2e       	mov	r0, r25
    1474:	00 0c       	add	r0, r0
    1476:	aa 0b       	sbc	r26, r26
    1478:	bb 0b       	sbc	r27, r27
    147a:	bc 01       	movw	r22, r24
    147c:	55 27       	eor	r21, r21
    147e:	44 27       	eor	r20, r20
    1480:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1484:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1488:	a0 e0       	ldi	r26, 0x00	; 0
    148a:	b0 e0       	ldi	r27, 0x00	; 0
    148c:	84 2b       	or	r24, r20
    148e:	95 2b       	or	r25, r21
    1490:	a6 2b       	or	r26, r22
    1492:	b7 2b       	or	r27, r23
    1494:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1498:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    149c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    14a0:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    14a4:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    14a8:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    14ac:	30 97       	sbiw	r30, 0x00	; 0
    14ae:	39 f0       	breq	.+14     	; 0x14be <__vector_15+0xb4>
    14b0:	6a e0       	ldi	r22, 0x0A	; 10
    14b2:	70 e0       	ldi	r23, 0x00	; 0
    14b4:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    14b8:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    14bc:	09 95       	icall
    14be:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    14c2:	ff 91       	pop	r31
    14c4:	ef 91       	pop	r30
    14c6:	bf 91       	pop	r27
    14c8:	af 91       	pop	r26
    14ca:	9f 91       	pop	r25
    14cc:	8f 91       	pop	r24
    14ce:	7f 91       	pop	r23
    14d0:	6f 91       	pop	r22
    14d2:	5f 91       	pop	r21
    14d4:	4f 91       	pop	r20
    14d6:	3f 91       	pop	r19
    14d8:	2f 91       	pop	r18
    14da:	1f 91       	pop	r17
    14dc:	0f 91       	pop	r16
    14de:	0f 90       	pop	r0
    14e0:	0f be       	out	0x3f, r0	; 63
    14e2:	0f 90       	pop	r0
    14e4:	1f 90       	pop	r1
    14e6:	18 95       	reti

000014e8 <__vector_16>:
    14e8:	1f 92       	push	r1
    14ea:	0f 92       	push	r0
    14ec:	0f b6       	in	r0, 0x3f	; 63
    14ee:	0f 92       	push	r0
    14f0:	11 24       	eor	r1, r1
    14f2:	0f 93       	push	r16
    14f4:	1f 93       	push	r17
    14f6:	2f 93       	push	r18
    14f8:	3f 93       	push	r19
    14fa:	4f 93       	push	r20
    14fc:	5f 93       	push	r21
    14fe:	6f 93       	push	r22
    1500:	7f 93       	push	r23
    1502:	8f 93       	push	r24
    1504:	9f 93       	push	r25
    1506:	af 93       	push	r26
    1508:	bf 93       	push	r27
    150a:	ef 93       	push	r30
    150c:	ff 93       	push	r31
    150e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1512:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1516:	ac 01       	movw	r20, r24
    1518:	09 2e       	mov	r0, r25
    151a:	00 0c       	add	r0, r0
    151c:	66 0b       	sbc	r22, r22
    151e:	77 0b       	sbc	r23, r23
    1520:	9a 01       	movw	r18, r20
    1522:	11 27       	eor	r17, r17
    1524:	00 27       	eor	r16, r16
    1526:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    152a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    152e:	60 e0       	ldi	r22, 0x00	; 0
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	40 2b       	or	r20, r16
    1534:	51 2b       	or	r21, r17
    1536:	62 2b       	or	r22, r18
    1538:	73 2b       	or	r23, r19
    153a:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    153e:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1542:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1546:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    154a:	b0 9b       	sbis	0x16, 0	; 22
    154c:	1a c0       	rjmp	.+52     	; 0x1582 <__vector_16+0x9a>
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	09 2e       	mov	r0, r25
    1552:	00 0c       	add	r0, r0
    1554:	aa 0b       	sbc	r26, r26
    1556:	bb 0b       	sbc	r27, r27
    1558:	bc 01       	movw	r22, r24
    155a:	55 27       	eor	r21, r21
    155c:	44 27       	eor	r20, r20
    155e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1562:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1566:	a0 e0       	ldi	r26, 0x00	; 0
    1568:	b0 e0       	ldi	r27, 0x00	; 0
    156a:	84 2b       	or	r24, r20
    156c:	95 2b       	or	r25, r21
    156e:	a6 2b       	or	r26, r22
    1570:	b7 2b       	or	r27, r23
    1572:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1576:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    157a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    157e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1582:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    1586:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    158a:	30 97       	sbiw	r30, 0x00	; 0
    158c:	39 f0       	breq	.+14     	; 0x159c <__vector_16+0xb4>
    158e:	6b e0       	ldi	r22, 0x0B	; 11
    1590:	70 e0       	ldi	r23, 0x00	; 0
    1592:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    1596:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    159a:	09 95       	icall
    159c:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    15a0:	ff 91       	pop	r31
    15a2:	ef 91       	pop	r30
    15a4:	bf 91       	pop	r27
    15a6:	af 91       	pop	r26
    15a8:	9f 91       	pop	r25
    15aa:	8f 91       	pop	r24
    15ac:	7f 91       	pop	r23
    15ae:	6f 91       	pop	r22
    15b0:	5f 91       	pop	r21
    15b2:	4f 91       	pop	r20
    15b4:	3f 91       	pop	r19
    15b6:	2f 91       	pop	r18
    15b8:	1f 91       	pop	r17
    15ba:	0f 91       	pop	r16
    15bc:	0f 90       	pop	r0
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	0f 90       	pop	r0
    15c2:	1f 90       	pop	r1
    15c4:	18 95       	reti

000015c6 <__vector_17>:
    15c6:	1f 92       	push	r1
    15c8:	0f 92       	push	r0
    15ca:	0f b6       	in	r0, 0x3f	; 63
    15cc:	0f 92       	push	r0
    15ce:	11 24       	eor	r1, r1
    15d0:	0f 93       	push	r16
    15d2:	1f 93       	push	r17
    15d4:	2f 93       	push	r18
    15d6:	3f 93       	push	r19
    15d8:	4f 93       	push	r20
    15da:	5f 93       	push	r21
    15dc:	6f 93       	push	r22
    15de:	7f 93       	push	r23
    15e0:	8f 93       	push	r24
    15e2:	9f 93       	push	r25
    15e4:	af 93       	push	r26
    15e6:	bf 93       	push	r27
    15e8:	ef 93       	push	r30
    15ea:	ff 93       	push	r31
    15ec:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    15f0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    15f4:	ac 01       	movw	r20, r24
    15f6:	09 2e       	mov	r0, r25
    15f8:	00 0c       	add	r0, r0
    15fa:	66 0b       	sbc	r22, r22
    15fc:	77 0b       	sbc	r23, r23
    15fe:	9a 01       	movw	r18, r20
    1600:	11 27       	eor	r17, r17
    1602:	00 27       	eor	r16, r16
    1604:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1608:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    160c:	60 e0       	ldi	r22, 0x00	; 0
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	40 2b       	or	r20, r16
    1612:	51 2b       	or	r21, r17
    1614:	62 2b       	or	r22, r18
    1616:	73 2b       	or	r23, r19
    1618:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    161c:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1620:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1624:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1628:	b0 9b       	sbis	0x16, 0	; 22
    162a:	1a c0       	rjmp	.+52     	; 0x1660 <__vector_17+0x9a>
    162c:	01 96       	adiw	r24, 0x01	; 1
    162e:	09 2e       	mov	r0, r25
    1630:	00 0c       	add	r0, r0
    1632:	aa 0b       	sbc	r26, r26
    1634:	bb 0b       	sbc	r27, r27
    1636:	bc 01       	movw	r22, r24
    1638:	55 27       	eor	r21, r21
    163a:	44 27       	eor	r20, r20
    163c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1640:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1644:	a0 e0       	ldi	r26, 0x00	; 0
    1646:	b0 e0       	ldi	r27, 0x00	; 0
    1648:	84 2b       	or	r24, r20
    164a:	95 2b       	or	r25, r21
    164c:	a6 2b       	or	r26, r22
    164e:	b7 2b       	or	r27, r23
    1650:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1654:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1658:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    165c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1660:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    1664:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    1668:	30 97       	sbiw	r30, 0x00	; 0
    166a:	39 f0       	breq	.+14     	; 0x167a <__vector_17+0xb4>
    166c:	6c e0       	ldi	r22, 0x0C	; 12
    166e:	70 e0       	ldi	r23, 0x00	; 0
    1670:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    1674:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    1678:	09 95       	icall
    167a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    167e:	ff 91       	pop	r31
    1680:	ef 91       	pop	r30
    1682:	bf 91       	pop	r27
    1684:	af 91       	pop	r26
    1686:	9f 91       	pop	r25
    1688:	8f 91       	pop	r24
    168a:	7f 91       	pop	r23
    168c:	6f 91       	pop	r22
    168e:	5f 91       	pop	r21
    1690:	4f 91       	pop	r20
    1692:	3f 91       	pop	r19
    1694:	2f 91       	pop	r18
    1696:	1f 91       	pop	r17
    1698:	0f 91       	pop	r16
    169a:	0f 90       	pop	r0
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	0f 90       	pop	r0
    16a0:	1f 90       	pop	r1
    16a2:	18 95       	reti

000016a4 <__vector_18>:
    16a4:	1f 92       	push	r1
    16a6:	0f 92       	push	r0
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	0f 92       	push	r0
    16ac:	11 24       	eor	r1, r1
    16ae:	0f 93       	push	r16
    16b0:	1f 93       	push	r17
    16b2:	2f 93       	push	r18
    16b4:	3f 93       	push	r19
    16b6:	4f 93       	push	r20
    16b8:	5f 93       	push	r21
    16ba:	6f 93       	push	r22
    16bc:	7f 93       	push	r23
    16be:	8f 93       	push	r24
    16c0:	9f 93       	push	r25
    16c2:	af 93       	push	r26
    16c4:	bf 93       	push	r27
    16c6:	ef 93       	push	r30
    16c8:	ff 93       	push	r31
    16ca:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    16ce:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    16d2:	ac 01       	movw	r20, r24
    16d4:	09 2e       	mov	r0, r25
    16d6:	00 0c       	add	r0, r0
    16d8:	66 0b       	sbc	r22, r22
    16da:	77 0b       	sbc	r23, r23
    16dc:	9a 01       	movw	r18, r20
    16de:	11 27       	eor	r17, r17
    16e0:	00 27       	eor	r16, r16
    16e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ea:	60 e0       	ldi	r22, 0x00	; 0
    16ec:	70 e0       	ldi	r23, 0x00	; 0
    16ee:	40 2b       	or	r20, r16
    16f0:	51 2b       	or	r21, r17
    16f2:	62 2b       	or	r22, r18
    16f4:	73 2b       	or	r23, r19
    16f6:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    16fa:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    16fe:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1702:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1706:	b0 9b       	sbis	0x16, 0	; 22
    1708:	1a c0       	rjmp	.+52     	; 0x173e <__vector_18+0x9a>
    170a:	01 96       	adiw	r24, 0x01	; 1
    170c:	09 2e       	mov	r0, r25
    170e:	00 0c       	add	r0, r0
    1710:	aa 0b       	sbc	r26, r26
    1712:	bb 0b       	sbc	r27, r27
    1714:	bc 01       	movw	r22, r24
    1716:	55 27       	eor	r21, r21
    1718:	44 27       	eor	r20, r20
    171a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    171e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1722:	a0 e0       	ldi	r26, 0x00	; 0
    1724:	b0 e0       	ldi	r27, 0x00	; 0
    1726:	84 2b       	or	r24, r20
    1728:	95 2b       	or	r25, r21
    172a:	a6 2b       	or	r26, r22
    172c:	b7 2b       	or	r27, r23
    172e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1732:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1736:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    173a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    173e:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    1742:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    1746:	30 97       	sbiw	r30, 0x00	; 0
    1748:	39 f0       	breq	.+14     	; 0x1758 <__vector_18+0xb4>
    174a:	6d e0       	ldi	r22, 0x0D	; 13
    174c:	70 e0       	ldi	r23, 0x00	; 0
    174e:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    1752:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    1756:	09 95       	icall
    1758:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    175c:	ff 91       	pop	r31
    175e:	ef 91       	pop	r30
    1760:	bf 91       	pop	r27
    1762:	af 91       	pop	r26
    1764:	9f 91       	pop	r25
    1766:	8f 91       	pop	r24
    1768:	7f 91       	pop	r23
    176a:	6f 91       	pop	r22
    176c:	5f 91       	pop	r21
    176e:	4f 91       	pop	r20
    1770:	3f 91       	pop	r19
    1772:	2f 91       	pop	r18
    1774:	1f 91       	pop	r17
    1776:	0f 91       	pop	r16
    1778:	0f 90       	pop	r0
    177a:	0f be       	out	0x3f, r0	; 63
    177c:	0f 90       	pop	r0
    177e:	1f 90       	pop	r1
    1780:	18 95       	reti

00001782 <__vector_19>:
    1782:	1f 92       	push	r1
    1784:	0f 92       	push	r0
    1786:	0f b6       	in	r0, 0x3f	; 63
    1788:	0f 92       	push	r0
    178a:	11 24       	eor	r1, r1
    178c:	0f 93       	push	r16
    178e:	1f 93       	push	r17
    1790:	2f 93       	push	r18
    1792:	3f 93       	push	r19
    1794:	4f 93       	push	r20
    1796:	5f 93       	push	r21
    1798:	6f 93       	push	r22
    179a:	7f 93       	push	r23
    179c:	8f 93       	push	r24
    179e:	9f 93       	push	r25
    17a0:	af 93       	push	r26
    17a2:	bf 93       	push	r27
    17a4:	ef 93       	push	r30
    17a6:	ff 93       	push	r31
    17a8:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    17ac:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    17b0:	ac 01       	movw	r20, r24
    17b2:	09 2e       	mov	r0, r25
    17b4:	00 0c       	add	r0, r0
    17b6:	66 0b       	sbc	r22, r22
    17b8:	77 0b       	sbc	r23, r23
    17ba:	9a 01       	movw	r18, r20
    17bc:	11 27       	eor	r17, r17
    17be:	00 27       	eor	r16, r16
    17c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c8:	60 e0       	ldi	r22, 0x00	; 0
    17ca:	70 e0       	ldi	r23, 0x00	; 0
    17cc:	40 2b       	or	r20, r16
    17ce:	51 2b       	or	r21, r17
    17d0:	62 2b       	or	r22, r18
    17d2:	73 2b       	or	r23, r19
    17d4:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    17d8:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    17dc:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    17e0:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    17e4:	b0 9b       	sbis	0x16, 0	; 22
    17e6:	1a c0       	rjmp	.+52     	; 0x181c <__vector_19+0x9a>
    17e8:	01 96       	adiw	r24, 0x01	; 1
    17ea:	09 2e       	mov	r0, r25
    17ec:	00 0c       	add	r0, r0
    17ee:	aa 0b       	sbc	r26, r26
    17f0:	bb 0b       	sbc	r27, r27
    17f2:	bc 01       	movw	r22, r24
    17f4:	55 27       	eor	r21, r21
    17f6:	44 27       	eor	r20, r20
    17f8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17fc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1800:	a0 e0       	ldi	r26, 0x00	; 0
    1802:	b0 e0       	ldi	r27, 0x00	; 0
    1804:	84 2b       	or	r24, r20
    1806:	95 2b       	or	r25, r21
    1808:	a6 2b       	or	r26, r22
    180a:	b7 2b       	or	r27, r23
    180c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1810:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1814:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1818:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    181c:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    1820:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    1824:	30 97       	sbiw	r30, 0x00	; 0
    1826:	39 f0       	breq	.+14     	; 0x1836 <__vector_19+0xb4>
    1828:	6e e0       	ldi	r22, 0x0E	; 14
    182a:	70 e0       	ldi	r23, 0x00	; 0
    182c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    1830:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    1834:	09 95       	icall
    1836:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    183a:	ff 91       	pop	r31
    183c:	ef 91       	pop	r30
    183e:	bf 91       	pop	r27
    1840:	af 91       	pop	r26
    1842:	9f 91       	pop	r25
    1844:	8f 91       	pop	r24
    1846:	7f 91       	pop	r23
    1848:	6f 91       	pop	r22
    184a:	5f 91       	pop	r21
    184c:	4f 91       	pop	r20
    184e:	3f 91       	pop	r19
    1850:	2f 91       	pop	r18
    1852:	1f 91       	pop	r17
    1854:	0f 91       	pop	r16
    1856:	0f 90       	pop	r0
    1858:	0f be       	out	0x3f, r0	; 63
    185a:	0f 90       	pop	r0
    185c:	1f 90       	pop	r1
    185e:	18 95       	reti

00001860 <__vector_20>:
    1860:	1f 92       	push	r1
    1862:	0f 92       	push	r0
    1864:	0f b6       	in	r0, 0x3f	; 63
    1866:	0f 92       	push	r0
    1868:	11 24       	eor	r1, r1
    186a:	0f 93       	push	r16
    186c:	1f 93       	push	r17
    186e:	2f 93       	push	r18
    1870:	3f 93       	push	r19
    1872:	4f 93       	push	r20
    1874:	5f 93       	push	r21
    1876:	6f 93       	push	r22
    1878:	7f 93       	push	r23
    187a:	8f 93       	push	r24
    187c:	9f 93       	push	r25
    187e:	af 93       	push	r26
    1880:	bf 93       	push	r27
    1882:	ef 93       	push	r30
    1884:	ff 93       	push	r31
    1886:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    188a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    188e:	ac 01       	movw	r20, r24
    1890:	09 2e       	mov	r0, r25
    1892:	00 0c       	add	r0, r0
    1894:	66 0b       	sbc	r22, r22
    1896:	77 0b       	sbc	r23, r23
    1898:	9a 01       	movw	r18, r20
    189a:	11 27       	eor	r17, r17
    189c:	00 27       	eor	r16, r16
    189e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18a6:	60 e0       	ldi	r22, 0x00	; 0
    18a8:	70 e0       	ldi	r23, 0x00	; 0
    18aa:	40 2b       	or	r20, r16
    18ac:	51 2b       	or	r21, r17
    18ae:	62 2b       	or	r22, r18
    18b0:	73 2b       	or	r23, r19
    18b2:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    18b6:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    18ba:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    18be:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    18c2:	b0 9b       	sbis	0x16, 0	; 22
    18c4:	1a c0       	rjmp	.+52     	; 0x18fa <__vector_20+0x9a>
    18c6:	01 96       	adiw	r24, 0x01	; 1
    18c8:	09 2e       	mov	r0, r25
    18ca:	00 0c       	add	r0, r0
    18cc:	aa 0b       	sbc	r26, r26
    18ce:	bb 0b       	sbc	r27, r27
    18d0:	bc 01       	movw	r22, r24
    18d2:	55 27       	eor	r21, r21
    18d4:	44 27       	eor	r20, r20
    18d6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18da:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18de:	a0 e0       	ldi	r26, 0x00	; 0
    18e0:	b0 e0       	ldi	r27, 0x00	; 0
    18e2:	84 2b       	or	r24, r20
    18e4:	95 2b       	or	r25, r21
    18e6:	a6 2b       	or	r26, r22
    18e8:	b7 2b       	or	r27, r23
    18ea:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    18ee:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    18f2:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    18f6:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    18fa:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    18fe:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    1902:	30 97       	sbiw	r30, 0x00	; 0
    1904:	39 f0       	breq	.+14     	; 0x1914 <__vector_20+0xb4>
    1906:	6f e0       	ldi	r22, 0x0F	; 15
    1908:	70 e0       	ldi	r23, 0x00	; 0
    190a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    190e:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    1912:	09 95       	icall
    1914:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    1918:	ff 91       	pop	r31
    191a:	ef 91       	pop	r30
    191c:	bf 91       	pop	r27
    191e:	af 91       	pop	r26
    1920:	9f 91       	pop	r25
    1922:	8f 91       	pop	r24
    1924:	7f 91       	pop	r23
    1926:	6f 91       	pop	r22
    1928:	5f 91       	pop	r21
    192a:	4f 91       	pop	r20
    192c:	3f 91       	pop	r19
    192e:	2f 91       	pop	r18
    1930:	1f 91       	pop	r17
    1932:	0f 91       	pop	r16
    1934:	0f 90       	pop	r0
    1936:	0f be       	out	0x3f, r0	; 63
    1938:	0f 90       	pop	r0
    193a:	1f 90       	pop	r1
    193c:	18 95       	reti

0000193e <__vector_21>:
    193e:	1f 92       	push	r1
    1940:	0f 92       	push	r0
    1942:	0f b6       	in	r0, 0x3f	; 63
    1944:	0f 92       	push	r0
    1946:	11 24       	eor	r1, r1
    1948:	0f 93       	push	r16
    194a:	1f 93       	push	r17
    194c:	2f 93       	push	r18
    194e:	3f 93       	push	r19
    1950:	4f 93       	push	r20
    1952:	5f 93       	push	r21
    1954:	6f 93       	push	r22
    1956:	7f 93       	push	r23
    1958:	8f 93       	push	r24
    195a:	9f 93       	push	r25
    195c:	af 93       	push	r26
    195e:	bf 93       	push	r27
    1960:	ef 93       	push	r30
    1962:	ff 93       	push	r31
    1964:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1968:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    196c:	ac 01       	movw	r20, r24
    196e:	09 2e       	mov	r0, r25
    1970:	00 0c       	add	r0, r0
    1972:	66 0b       	sbc	r22, r22
    1974:	77 0b       	sbc	r23, r23
    1976:	9a 01       	movw	r18, r20
    1978:	11 27       	eor	r17, r17
    197a:	00 27       	eor	r16, r16
    197c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1980:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1984:	60 e0       	ldi	r22, 0x00	; 0
    1986:	70 e0       	ldi	r23, 0x00	; 0
    1988:	40 2b       	or	r20, r16
    198a:	51 2b       	or	r21, r17
    198c:	62 2b       	or	r22, r18
    198e:	73 2b       	or	r23, r19
    1990:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1994:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1998:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    199c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    19a0:	b0 9b       	sbis	0x16, 0	; 22
    19a2:	1a c0       	rjmp	.+52     	; 0x19d8 <__vector_21+0x9a>
    19a4:	01 96       	adiw	r24, 0x01	; 1
    19a6:	09 2e       	mov	r0, r25
    19a8:	00 0c       	add	r0, r0
    19aa:	aa 0b       	sbc	r26, r26
    19ac:	bb 0b       	sbc	r27, r27
    19ae:	bc 01       	movw	r22, r24
    19b0:	55 27       	eor	r21, r21
    19b2:	44 27       	eor	r20, r20
    19b4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19b8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19bc:	a0 e0       	ldi	r26, 0x00	; 0
    19be:	b0 e0       	ldi	r27, 0x00	; 0
    19c0:	84 2b       	or	r24, r20
    19c2:	95 2b       	or	r25, r21
    19c4:	a6 2b       	or	r26, r22
    19c6:	b7 2b       	or	r27, r23
    19c8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    19cc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    19d0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    19d4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    19d8:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    19dc:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    19e0:	30 97       	sbiw	r30, 0x00	; 0
    19e2:	39 f0       	breq	.+14     	; 0x19f2 <__vector_21+0xb4>
    19e4:	60 e1       	ldi	r22, 0x10	; 16
    19e6:	70 e0       	ldi	r23, 0x00	; 0
    19e8:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    19ec:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    19f0:	09 95       	icall
    19f2:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    19f6:	ff 91       	pop	r31
    19f8:	ef 91       	pop	r30
    19fa:	bf 91       	pop	r27
    19fc:	af 91       	pop	r26
    19fe:	9f 91       	pop	r25
    1a00:	8f 91       	pop	r24
    1a02:	7f 91       	pop	r23
    1a04:	6f 91       	pop	r22
    1a06:	5f 91       	pop	r21
    1a08:	4f 91       	pop	r20
    1a0a:	3f 91       	pop	r19
    1a0c:	2f 91       	pop	r18
    1a0e:	1f 91       	pop	r17
    1a10:	0f 91       	pop	r16
    1a12:	0f 90       	pop	r0
    1a14:	0f be       	out	0x3f, r0	; 63
    1a16:	0f 90       	pop	r0
    1a18:	1f 90       	pop	r1
    1a1a:	18 95       	reti

00001a1c <__vector_22>:
    1a1c:	1f 92       	push	r1
    1a1e:	0f 92       	push	r0
    1a20:	0f b6       	in	r0, 0x3f	; 63
    1a22:	0f 92       	push	r0
    1a24:	11 24       	eor	r1, r1
    1a26:	0f 93       	push	r16
    1a28:	1f 93       	push	r17
    1a2a:	2f 93       	push	r18
    1a2c:	3f 93       	push	r19
    1a2e:	4f 93       	push	r20
    1a30:	5f 93       	push	r21
    1a32:	6f 93       	push	r22
    1a34:	7f 93       	push	r23
    1a36:	8f 93       	push	r24
    1a38:	9f 93       	push	r25
    1a3a:	af 93       	push	r26
    1a3c:	bf 93       	push	r27
    1a3e:	ef 93       	push	r30
    1a40:	ff 93       	push	r31
    1a42:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1a46:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1a4a:	ac 01       	movw	r20, r24
    1a4c:	09 2e       	mov	r0, r25
    1a4e:	00 0c       	add	r0, r0
    1a50:	66 0b       	sbc	r22, r22
    1a52:	77 0b       	sbc	r23, r23
    1a54:	9a 01       	movw	r18, r20
    1a56:	11 27       	eor	r17, r17
    1a58:	00 27       	eor	r16, r16
    1a5a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a5e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a62:	60 e0       	ldi	r22, 0x00	; 0
    1a64:	70 e0       	ldi	r23, 0x00	; 0
    1a66:	40 2b       	or	r20, r16
    1a68:	51 2b       	or	r21, r17
    1a6a:	62 2b       	or	r22, r18
    1a6c:	73 2b       	or	r23, r19
    1a6e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1a72:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1a76:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1a7a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1a7e:	b0 9b       	sbis	0x16, 0	; 22
    1a80:	1a c0       	rjmp	.+52     	; 0x1ab6 <__vector_22+0x9a>
    1a82:	01 96       	adiw	r24, 0x01	; 1
    1a84:	09 2e       	mov	r0, r25
    1a86:	00 0c       	add	r0, r0
    1a88:	aa 0b       	sbc	r26, r26
    1a8a:	bb 0b       	sbc	r27, r27
    1a8c:	bc 01       	movw	r22, r24
    1a8e:	55 27       	eor	r21, r21
    1a90:	44 27       	eor	r20, r20
    1a92:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a96:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a9a:	a0 e0       	ldi	r26, 0x00	; 0
    1a9c:	b0 e0       	ldi	r27, 0x00	; 0
    1a9e:	84 2b       	or	r24, r20
    1aa0:	95 2b       	or	r25, r21
    1aa2:	a6 2b       	or	r26, r22
    1aa4:	b7 2b       	or	r27, r23
    1aa6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1aaa:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1aae:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1ab2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1ab6:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    1aba:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    1abe:	30 97       	sbiw	r30, 0x00	; 0
    1ac0:	39 f0       	breq	.+14     	; 0x1ad0 <__vector_22+0xb4>
    1ac2:	61 e1       	ldi	r22, 0x11	; 17
    1ac4:	70 e0       	ldi	r23, 0x00	; 0
    1ac6:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    1aca:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    1ace:	09 95       	icall
    1ad0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    1ad4:	ff 91       	pop	r31
    1ad6:	ef 91       	pop	r30
    1ad8:	bf 91       	pop	r27
    1ada:	af 91       	pop	r26
    1adc:	9f 91       	pop	r25
    1ade:	8f 91       	pop	r24
    1ae0:	7f 91       	pop	r23
    1ae2:	6f 91       	pop	r22
    1ae4:	5f 91       	pop	r21
    1ae6:	4f 91       	pop	r20
    1ae8:	3f 91       	pop	r19
    1aea:	2f 91       	pop	r18
    1aec:	1f 91       	pop	r17
    1aee:	0f 91       	pop	r16
    1af0:	0f 90       	pop	r0
    1af2:	0f be       	out	0x3f, r0	; 63
    1af4:	0f 90       	pop	r0
    1af6:	1f 90       	pop	r1
    1af8:	18 95       	reti

00001afa <idle>:
    1afa:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    1afe:	78 94       	sei
    1b00:	81 e0       	ldi	r24, 0x01	; 1
    1b02:	83 bf       	out	0x33, r24	; 51
    1b04:	88 95       	sleep
    1b06:	fc cf       	rjmp	.-8      	; 0x1b00 <idle+0x6>

00001b08 <__vector_9>:
    1b08:	1f 92       	push	r1
    1b0a:	0f 92       	push	r0
    1b0c:	0f b6       	in	r0, 0x3f	; 63
    1b0e:	0f 92       	push	r0
    1b10:	11 24       	eor	r1, r1
    1b12:	2f 93       	push	r18
    1b14:	3f 93       	push	r19
    1b16:	4f 93       	push	r20
    1b18:	5f 93       	push	r21
    1b1a:	6f 93       	push	r22
    1b1c:	7f 93       	push	r23
    1b1e:	8f 93       	push	r24
    1b20:	9f 93       	push	r25
    1b22:	ef 93       	push	r30
    1b24:	ff 93       	push	r31
    1b26:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1b2a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1b2e:	01 96       	adiw	r24, 0x01	; 1
    1b30:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    1b34:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    1b38:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1b3c:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1b40:	30 97       	sbiw	r30, 0x00	; 0
    1b42:	01 f1       	breq	.+64     	; 0x1b84 <__vector_9+0x7c>
    1b44:	42 81       	ldd	r20, Z+2	; 0x02
    1b46:	53 81       	ldd	r21, Z+3	; 0x03
    1b48:	64 81       	ldd	r22, Z+4	; 0x04
    1b4a:	75 81       	ldd	r23, Z+5	; 0x05
    1b4c:	86 17       	cp	r24, r22
    1b4e:	97 07       	cpc	r25, r23
    1b50:	c9 f4       	brne	.+50     	; 0x1b84 <__vector_9+0x7c>
    1b52:	ca 01       	movw	r24, r20
    1b54:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b58:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b5c:	42 1b       	sub	r20, r18
    1b5e:	53 0b       	sbc	r21, r19
    1b60:	41 30       	cpi	r20, 0x01	; 1
    1b62:	51 05       	cpc	r21, r1
    1b64:	29 f4       	brne	.+10     	; 0x1b70 <__vector_9+0x68>
    1b66:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b6a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b6e:	01 96       	adiw	r24, 0x01	; 1
    1b70:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b74:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b78:	ef e6       	ldi	r30, 0x6F	; 111
    1b7a:	f0 e0       	ldi	r31, 0x00	; 0
    1b7c:	80 81       	ld	r24, Z
    1b7e:	82 60       	ori	r24, 0x02	; 2
    1b80:	80 83       	st	Z, r24
    1b82:	05 c0       	rjmp	.+10     	; 0x1b8e <__vector_9+0x86>
    1b84:	ef e6       	ldi	r30, 0x6F	; 111
    1b86:	f0 e0       	ldi	r31, 0x00	; 0
    1b88:	80 81       	ld	r24, Z
    1b8a:	8d 7f       	andi	r24, 0xFD	; 253
    1b8c:	80 83       	st	Z, r24
    1b8e:	ff 91       	pop	r31
    1b90:	ef 91       	pop	r30
    1b92:	9f 91       	pop	r25
    1b94:	8f 91       	pop	r24
    1b96:	7f 91       	pop	r23
    1b98:	6f 91       	pop	r22
    1b9a:	5f 91       	pop	r21
    1b9c:	4f 91       	pop	r20
    1b9e:	3f 91       	pop	r19
    1ba0:	2f 91       	pop	r18
    1ba2:	0f 90       	pop	r0
    1ba4:	0f be       	out	0x3f, r0	; 63
    1ba6:	0f 90       	pop	r0
    1ba8:	1f 90       	pop	r1
    1baa:	18 95       	reti

00001bac <__vector_7>:
    1bac:	1f 92       	push	r1
    1bae:	0f 92       	push	r0
    1bb0:	0f b6       	in	r0, 0x3f	; 63
    1bb2:	0f 92       	push	r0
    1bb4:	11 24       	eor	r1, r1
    1bb6:	cf 92       	push	r12
    1bb8:	df 92       	push	r13
    1bba:	ef 92       	push	r14
    1bbc:	ff 92       	push	r15
    1bbe:	2f 93       	push	r18
    1bc0:	3f 93       	push	r19
    1bc2:	4f 93       	push	r20
    1bc4:	5f 93       	push	r21
    1bc6:	6f 93       	push	r22
    1bc8:	7f 93       	push	r23
    1bca:	8f 93       	push	r24
    1bcc:	9f 93       	push	r25
    1bce:	af 93       	push	r26
    1bd0:	bf 93       	push	r27
    1bd2:	ef 93       	push	r30
    1bd4:	ff 93       	push	r31
    1bd6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1bda:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1bde:	6c 01       	movw	r12, r24
    1be0:	09 2e       	mov	r0, r25
    1be2:	00 0c       	add	r0, r0
    1be4:	ee 08       	sbc	r14, r14
    1be6:	ff 08       	sbc	r15, r15
    1be8:	76 01       	movw	r14, r12
    1bea:	dd 24       	eor	r13, r13
    1bec:	cc 24       	eor	r12, r12
    1bee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bf6:	60 e0       	ldi	r22, 0x00	; 0
    1bf8:	70 e0       	ldi	r23, 0x00	; 0
    1bfa:	c4 2a       	or	r12, r20
    1bfc:	d5 2a       	or	r13, r21
    1bfe:	e6 2a       	or	r14, r22
    1c00:	f7 2a       	or	r15, r23
    1c02:	b0 9b       	sbis	0x16, 0	; 22
    1c04:	1e c0       	rjmp	.+60     	; 0x1c42 <__vector_7+0x96>
    1c06:	6c 01       	movw	r12, r24
    1c08:	2f ef       	ldi	r18, 0xFF	; 255
    1c0a:	c2 1a       	sub	r12, r18
    1c0c:	d2 0a       	sbc	r13, r18
    1c0e:	0d 2c       	mov	r0, r13
    1c10:	00 0c       	add	r0, r0
    1c12:	ee 08       	sbc	r14, r14
    1c14:	ff 08       	sbc	r15, r15
    1c16:	d6 01       	movw	r26, r12
    1c18:	99 27       	eor	r25, r25
    1c1a:	88 27       	eor	r24, r24
    1c1c:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c20:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c24:	e1 2c       	mov	r14, r1
    1c26:	f1 2c       	mov	r15, r1
    1c28:	c8 2a       	or	r12, r24
    1c2a:	d9 2a       	or	r13, r25
    1c2c:	ea 2a       	or	r14, r26
    1c2e:	fb 2a       	or	r15, r27
    1c30:	08 c0       	rjmp	.+16     	; 0x1c42 <__vector_7+0x96>
    1c32:	84 e2       	ldi	r24, 0x24	; 36
    1c34:	91 e0       	ldi	r25, 0x01	; 1
    1c36:	0e 94 46 05 	call	0xa8c	; 0xa8c <dequeue>
    1c3a:	66 e2       	ldi	r22, 0x26	; 38
    1c3c:	71 e0       	ldi	r23, 0x01	; 1
    1c3e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <enqueueByDeadline>
    1c42:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1c46:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1c4a:	30 97       	sbiw	r30, 0x00	; 0
    1c4c:	69 f0       	breq	.+26     	; 0x1c68 <__vector_7+0xbc>
    1c4e:	82 81       	ldd	r24, Z+2	; 0x02
    1c50:	93 81       	ldd	r25, Z+3	; 0x03
    1c52:	a4 81       	ldd	r26, Z+4	; 0x04
    1c54:	b5 81       	ldd	r27, Z+5	; 0x05
    1c56:	8c 19       	sub	r24, r12
    1c58:	9d 09       	sbc	r25, r13
    1c5a:	ae 09       	sbc	r26, r14
    1c5c:	bf 09       	sbc	r27, r15
    1c5e:	18 16       	cp	r1, r24
    1c60:	19 06       	cpc	r1, r25
    1c62:	1a 06       	cpc	r1, r26
    1c64:	1b 06       	cpc	r1, r27
    1c66:	2c f7       	brge	.-54     	; 0x1c32 <__vector_7+0x86>
    1c68:	30 97       	sbiw	r30, 0x00	; 0
    1c6a:	21 f1       	breq	.+72     	; 0x1cb4 <__vector_7+0x108>
    1c6c:	82 81       	ldd	r24, Z+2	; 0x02
    1c6e:	93 81       	ldd	r25, Z+3	; 0x03
    1c70:	a4 81       	ldd	r26, Z+4	; 0x04
    1c72:	b5 81       	ldd	r27, Z+5	; 0x05
    1c74:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1c78:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1c7c:	2a 17       	cp	r18, r26
    1c7e:	3b 07       	cpc	r19, r27
    1c80:	c9 f4       	brne	.+50     	; 0x1cb4 <__vector_7+0x108>
    1c82:	9c 01       	movw	r18, r24
    1c84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c8c:	84 1b       	sub	r24, r20
    1c8e:	95 0b       	sbc	r25, r21
    1c90:	01 97       	sbiw	r24, 0x01	; 1
    1c92:	31 f4       	brne	.+12     	; 0x1ca0 <__vector_7+0xf4>
    1c94:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c98:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c9c:	2f 5f       	subi	r18, 0xFF	; 255
    1c9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1ca4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ca8:	ef e6       	ldi	r30, 0x6F	; 111
    1caa:	f0 e0       	ldi	r31, 0x00	; 0
    1cac:	80 81       	ld	r24, Z
    1cae:	82 60       	ori	r24, 0x02	; 2
    1cb0:	80 83       	st	Z, r24
    1cb2:	05 c0       	rjmp	.+10     	; 0x1cbe <__vector_7+0x112>
    1cb4:	ef e6       	ldi	r30, 0x6F	; 111
    1cb6:	f0 e0       	ldi	r31, 0x00	; 0
    1cb8:	80 81       	ld	r24, Z
    1cba:	8d 7f       	andi	r24, 0xFD	; 253
    1cbc:	80 83       	st	Z, r24
    1cbe:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <schedule>
    1cc2:	ff 91       	pop	r31
    1cc4:	ef 91       	pop	r30
    1cc6:	bf 91       	pop	r27
    1cc8:	af 91       	pop	r26
    1cca:	9f 91       	pop	r25
    1ccc:	8f 91       	pop	r24
    1cce:	7f 91       	pop	r23
    1cd0:	6f 91       	pop	r22
    1cd2:	5f 91       	pop	r21
    1cd4:	4f 91       	pop	r20
    1cd6:	3f 91       	pop	r19
    1cd8:	2f 91       	pop	r18
    1cda:	ff 90       	pop	r15
    1cdc:	ef 90       	pop	r14
    1cde:	df 90       	pop	r13
    1ce0:	cf 90       	pop	r12
    1ce2:	0f 90       	pop	r0
    1ce4:	0f be       	out	0x3f, r0	; 63
    1ce6:	0f 90       	pop	r0
    1ce8:	1f 90       	pop	r1
    1cea:	18 95       	reti

00001cec <async>:
    1cec:	3f 92       	push	r3
    1cee:	4f 92       	push	r4
    1cf0:	5f 92       	push	r5
    1cf2:	6f 92       	push	r6
    1cf4:	7f 92       	push	r7
    1cf6:	8f 92       	push	r8
    1cf8:	9f 92       	push	r9
    1cfa:	af 92       	push	r10
    1cfc:	bf 92       	push	r11
    1cfe:	cf 92       	push	r12
    1d00:	df 92       	push	r13
    1d02:	ef 92       	push	r14
    1d04:	ff 92       	push	r15
    1d06:	0f 93       	push	r16
    1d08:	1f 93       	push	r17
    1d0a:	cf 93       	push	r28
    1d0c:	df 93       	push	r29
    1d0e:	2b 01       	movw	r4, r22
    1d10:	3c 01       	movw	r6, r24
    1d12:	49 01       	movw	r8, r18
    1d14:	5a 01       	movw	r10, r20
    1d16:	8f b7       	in	r24, 0x3f	; 63
    1d18:	80 78       	andi	r24, 0x80	; 128
    1d1a:	38 2e       	mov	r3, r24
    1d1c:	f8 94       	cli
    1d1e:	86 e0       	ldi	r24, 0x06	; 6
    1d20:	91 e0       	ldi	r25, 0x01	; 1
    1d22:	0e 94 46 05 	call	0xa8c	; 0xa8c <dequeue>
    1d26:	ec 01       	movw	r28, r24
    1d28:	1b 87       	std	Y+11, r17	; 0x0b
    1d2a:	0a 87       	std	Y+10, r16	; 0x0a
    1d2c:	fd 86       	std	Y+13, r15	; 0x0d
    1d2e:	ec 86       	std	Y+12, r14	; 0x0c
    1d30:	df 86       	std	Y+15, r13	; 0x0f
    1d32:	ce 86       	std	Y+14, r12	; 0x0e
    1d34:	33 20       	and	r3, r3
    1d36:	61 f0       	breq	.+24     	; 0x1d50 <async+0x64>
    1d38:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d3c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d40:	02 80       	ldd	r0, Z+2	; 0x02
    1d42:	f3 81       	ldd	r31, Z+3	; 0x03
    1d44:	e0 2d       	mov	r30, r0
    1d46:	82 81       	ldd	r24, Z+2	; 0x02
    1d48:	93 81       	ldd	r25, Z+3	; 0x03
    1d4a:	a4 81       	ldd	r26, Z+4	; 0x04
    1d4c:	b5 81       	ldd	r27, Z+5	; 0x05
    1d4e:	08 c0       	rjmp	.+16     	; 0x1d60 <async+0x74>
    1d50:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    1d54:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    1d58:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    1d5c:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    1d60:	48 0e       	add	r4, r24
    1d62:	59 1e       	adc	r5, r25
    1d64:	6a 1e       	adc	r6, r26
    1d66:	7b 1e       	adc	r7, r27
    1d68:	4a 82       	std	Y+2, r4	; 0x02
    1d6a:	5b 82       	std	Y+3, r5	; 0x03
    1d6c:	6c 82       	std	Y+4, r6	; 0x04
    1d6e:	7d 82       	std	Y+5, r7	; 0x05
    1d70:	18 14       	cp	r1, r8
    1d72:	19 04       	cpc	r1, r9
    1d74:	1a 04       	cpc	r1, r10
    1d76:	1b 04       	cpc	r1, r11
    1d78:	44 f0       	brlt	.+16     	; 0x1d8a <async+0x9e>
    1d7a:	0f 2e       	mov	r0, r31
    1d7c:	88 24       	eor	r8, r8
    1d7e:	8a 94       	dec	r8
    1d80:	98 2c       	mov	r9, r8
    1d82:	a8 2c       	mov	r10, r8
    1d84:	ff e7       	ldi	r31, 0x7F	; 127
    1d86:	bf 2e       	mov	r11, r31
    1d88:	f0 2d       	mov	r31, r0
    1d8a:	84 0c       	add	r8, r4
    1d8c:	95 1c       	adc	r9, r5
    1d8e:	a6 1c       	adc	r10, r6
    1d90:	b7 1c       	adc	r11, r7
    1d92:	8e 82       	std	Y+6, r8	; 0x06
    1d94:	9f 82       	std	Y+7, r9	; 0x07
    1d96:	a8 86       	std	Y+8, r10	; 0x08
    1d98:	b9 86       	std	Y+9, r11	; 0x09
    1d9a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1d9e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1da2:	c9 01       	movw	r24, r18
    1da4:	03 2e       	mov	r0, r19
    1da6:	00 0c       	add	r0, r0
    1da8:	aa 0b       	sbc	r26, r26
    1daa:	bb 0b       	sbc	r27, r27
    1dac:	dc 01       	movw	r26, r24
    1dae:	99 27       	eor	r25, r25
    1db0:	88 27       	eor	r24, r24
    1db2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1db6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1dba:	60 e0       	ldi	r22, 0x00	; 0
    1dbc:	70 e0       	ldi	r23, 0x00	; 0
    1dbe:	84 2b       	or	r24, r20
    1dc0:	95 2b       	or	r25, r21
    1dc2:	a6 2b       	or	r26, r22
    1dc4:	b7 2b       	or	r27, r23
    1dc6:	b0 9b       	sbis	0x16, 0	; 22
    1dc8:	13 c0       	rjmp	.+38     	; 0x1df0 <async+0x104>
    1dca:	c9 01       	movw	r24, r18
    1dcc:	01 96       	adiw	r24, 0x01	; 1
    1dce:	09 2e       	mov	r0, r25
    1dd0:	00 0c       	add	r0, r0
    1dd2:	aa 0b       	sbc	r26, r26
    1dd4:	bb 0b       	sbc	r27, r27
    1dd6:	dc 01       	movw	r26, r24
    1dd8:	99 27       	eor	r25, r25
    1dda:	88 27       	eor	r24, r24
    1ddc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1de0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1de4:	60 e0       	ldi	r22, 0x00	; 0
    1de6:	70 e0       	ldi	r23, 0x00	; 0
    1de8:	84 2b       	or	r24, r20
    1dea:	95 2b       	or	r25, r21
    1dec:	a6 2b       	or	r26, r22
    1dee:	b7 2b       	or	r27, r23
    1df0:	48 1a       	sub	r4, r24
    1df2:	59 0a       	sbc	r5, r25
    1df4:	6a 0a       	sbc	r6, r26
    1df6:	7b 0a       	sbc	r7, r27
    1df8:	14 14       	cp	r1, r4
    1dfa:	15 04       	cpc	r1, r5
    1dfc:	16 04       	cpc	r1, r6
    1dfe:	17 04       	cpc	r1, r7
    1e00:	ac f5       	brge	.+106    	; 0x1e6c <async+0x180>
    1e02:	64 e2       	ldi	r22, 0x24	; 36
    1e04:	71 e0       	ldi	r23, 0x01	; 1
    1e06:	ce 01       	movw	r24, r28
    1e08:	0e 94 15 05 	call	0xa2a	; 0xa2a <enqueueByBaseline>
    1e0c:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1e10:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1e14:	30 97       	sbiw	r30, 0x00	; 0
    1e16:	21 f1       	breq	.+72     	; 0x1e60 <async+0x174>
    1e18:	82 81       	ldd	r24, Z+2	; 0x02
    1e1a:	93 81       	ldd	r25, Z+3	; 0x03
    1e1c:	a4 81       	ldd	r26, Z+4	; 0x04
    1e1e:	b5 81       	ldd	r27, Z+5	; 0x05
    1e20:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1e24:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1e28:	2a 17       	cp	r18, r26
    1e2a:	3b 07       	cpc	r19, r27
    1e2c:	c9 f4       	brne	.+50     	; 0x1e60 <async+0x174>
    1e2e:	9c 01       	movw	r18, r24
    1e30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e38:	84 1b       	sub	r24, r20
    1e3a:	95 0b       	sbc	r25, r21
    1e3c:	01 97       	sbiw	r24, 0x01	; 1
    1e3e:	31 f4       	brne	.+12     	; 0x1e4c <async+0x160>
    1e40:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e44:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e48:	2f 5f       	subi	r18, 0xFF	; 255
    1e4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e4c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1e50:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1e54:	ef e6       	ldi	r30, 0x6F	; 111
    1e56:	f0 e0       	ldi	r31, 0x00	; 0
    1e58:	80 81       	ld	r24, Z
    1e5a:	82 60       	ori	r24, 0x02	; 2
    1e5c:	80 83       	st	Z, r24
    1e5e:	39 c0       	rjmp	.+114    	; 0x1ed2 <async+0x1e6>
    1e60:	ef e6       	ldi	r30, 0x6F	; 111
    1e62:	f0 e0       	ldi	r31, 0x00	; 0
    1e64:	80 81       	ld	r24, Z
    1e66:	8d 7f       	andi	r24, 0xFD	; 253
    1e68:	80 83       	st	Z, r24
    1e6a:	33 c0       	rjmp	.+102    	; 0x1ed2 <async+0x1e6>
    1e6c:	66 e2       	ldi	r22, 0x26	; 38
    1e6e:	71 e0       	ldi	r23, 0x01	; 1
    1e70:	ce 01       	movw	r24, r28
    1e72:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <enqueueByDeadline>
    1e76:	33 20       	and	r3, r3
    1e78:	61 f1       	breq	.+88     	; 0x1ed2 <async+0x1e6>
    1e7a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e7e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e82:	89 2b       	or	r24, r25
    1e84:	31 f1       	breq	.+76     	; 0x1ed2 <async+0x1e6>
    1e86:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1e8a:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1e8e:	86 81       	ldd	r24, Z+6	; 0x06
    1e90:	97 81       	ldd	r25, Z+7	; 0x07
    1e92:	a0 85       	ldd	r26, Z+8	; 0x08
    1e94:	b1 85       	ldd	r27, Z+9	; 0x09
    1e96:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1e9a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1e9e:	02 80       	ldd	r0, Z+2	; 0x02
    1ea0:	f3 81       	ldd	r31, Z+3	; 0x03
    1ea2:	e0 2d       	mov	r30, r0
    1ea4:	46 81       	ldd	r20, Z+6	; 0x06
    1ea6:	57 81       	ldd	r21, Z+7	; 0x07
    1ea8:	60 85       	ldd	r22, Z+8	; 0x08
    1eaa:	71 85       	ldd	r23, Z+9	; 0x09
    1eac:	84 1b       	sub	r24, r20
    1eae:	95 0b       	sbc	r25, r21
    1eb0:	a6 0b       	sbc	r26, r22
    1eb2:	b7 0b       	sbc	r27, r23
    1eb4:	72 f4       	brpl	.+28     	; 0x1ed2 <async+0x1e6>
    1eb6:	84 e0       	ldi	r24, 0x04	; 4
    1eb8:	91 e0       	ldi	r25, 0x01	; 1
    1eba:	0e 94 71 05 	call	0xae2	; 0xae2 <pop>
    1ebe:	62 e0       	ldi	r22, 0x02	; 2
    1ec0:	71 e0       	ldi	r23, 0x01	; 1
    1ec2:	0e 94 67 05 	call	0xace	; 0xace <push>
    1ec6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1eca:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1ece:	0e 94 c4 04 	call	0x988	; 0x988 <dispatch>
    1ed2:	33 20       	and	r3, r3
    1ed4:	09 f0       	breq	.+2      	; 0x1ed8 <async+0x1ec>
    1ed6:	78 94       	sei
    1ed8:	ce 01       	movw	r24, r28
    1eda:	df 91       	pop	r29
    1edc:	cf 91       	pop	r28
    1ede:	1f 91       	pop	r17
    1ee0:	0f 91       	pop	r16
    1ee2:	ff 90       	pop	r15
    1ee4:	ef 90       	pop	r14
    1ee6:	df 90       	pop	r13
    1ee8:	cf 90       	pop	r12
    1eea:	bf 90       	pop	r11
    1eec:	af 90       	pop	r10
    1eee:	9f 90       	pop	r9
    1ef0:	8f 90       	pop	r8
    1ef2:	7f 90       	pop	r7
    1ef4:	6f 90       	pop	r6
    1ef6:	5f 90       	pop	r5
    1ef8:	4f 90       	pop	r4
    1efa:	3f 90       	pop	r3
    1efc:	08 95       	ret

00001efe <sync>:
    1efe:	cf 92       	push	r12
    1f00:	df 92       	push	r13
    1f02:	ef 92       	push	r14
    1f04:	ff 92       	push	r15
    1f06:	0f 93       	push	r16
    1f08:	1f 93       	push	r17
    1f0a:	cf 93       	push	r28
    1f0c:	df 93       	push	r29
    1f0e:	ec 01       	movw	r28, r24
    1f10:	7b 01       	movw	r14, r22
    1f12:	6a 01       	movw	r12, r20
    1f14:	1f b7       	in	r17, 0x3f	; 63
    1f16:	10 78       	andi	r17, 0x80	; 128
    1f18:	f8 94       	cli
    1f1a:	a8 81       	ld	r26, Y
    1f1c:	b9 81       	ldd	r27, Y+1	; 0x01
    1f1e:	10 97       	sbiw	r26, 0x00	; 0
    1f20:	19 f4       	brne	.+6      	; 0x1f28 <sync+0x2a>
    1f22:	35 c0       	rjmp	.+106    	; 0x1f8e <sync+0x90>
    1f24:	a0 81       	ld	r26, Z
    1f26:	b1 81       	ldd	r27, Z+1	; 0x01
    1f28:	14 96       	adiw	r26, 0x04	; 4
    1f2a:	ed 91       	ld	r30, X+
    1f2c:	fc 91       	ld	r31, X
    1f2e:	15 97       	sbiw	r26, 0x05	; 5
    1f30:	30 97       	sbiw	r30, 0x00	; 0
    1f32:	c1 f7       	brne	.-16     	; 0x1f24 <sync+0x26>
    1f34:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f38:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f3c:	a2 17       	cp	r26, r18
    1f3e:	b3 07       	cpc	r27, r19
    1f40:	11 f0       	breq	.+4      	; 0x1f46 <sync+0x48>
    1f42:	11 11       	cpse	r17, r1
    1f44:	07 c0       	rjmp	.+14     	; 0x1f54 <sync+0x56>
    1f46:	11 23       	and	r17, r17
    1f48:	09 f4       	brne	.+2      	; 0x1f4c <sync+0x4e>
    1f4a:	4a c0       	rjmp	.+148    	; 0x1fe0 <sync+0xe2>
    1f4c:	78 94       	sei
    1f4e:	8f ef       	ldi	r24, 0xFF	; 255
    1f50:	9f ef       	ldi	r25, 0xFF	; 255
    1f52:	4e c0       	rjmp	.+156    	; 0x1ff0 <sync+0xf2>
    1f54:	8a 81       	ldd	r24, Y+2	; 0x02
    1f56:	9b 81       	ldd	r25, Y+3	; 0x03
    1f58:	00 97       	sbiw	r24, 0x00	; 0
    1f5a:	19 f0       	breq	.+6      	; 0x1f62 <sync+0x64>
    1f5c:	fc 01       	movw	r30, r24
    1f5e:	15 82       	std	Z+5, r1	; 0x05
    1f60:	14 82       	std	Z+4, r1	; 0x04
    1f62:	3b 83       	std	Y+3, r19	; 0x03
    1f64:	2a 83       	std	Y+2, r18	; 0x02
    1f66:	f9 01       	movw	r30, r18
    1f68:	d5 83       	std	Z+5, r29	; 0x05
    1f6a:	c4 83       	std	Z+4, r28	; 0x04
    1f6c:	cd 01       	movw	r24, r26
    1f6e:	0e 94 c4 04 	call	0x988	; 0x988 <dispatch>
    1f72:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f76:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f7a:	82 81       	ldd	r24, Z+2	; 0x02
    1f7c:	93 81       	ldd	r25, Z+3	; 0x03
    1f7e:	89 2b       	or	r24, r25
    1f80:	31 f4       	brne	.+12     	; 0x1f8e <sync+0x90>
    1f82:	11 23       	and	r17, r17
    1f84:	81 f1       	breq	.+96     	; 0x1fe6 <sync+0xe8>
    1f86:	78 94       	sei
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	31 c0       	rjmp	.+98     	; 0x1ff0 <sync+0xf2>
    1f8e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f92:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f96:	99 83       	std	Y+1, r25	; 0x01
    1f98:	88 83       	st	Y, r24
    1f9a:	11 23       	and	r17, r17
    1f9c:	29 f0       	breq	.+10     	; 0x1fa8 <sync+0xaa>
    1f9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa2:	01 97       	sbiw	r24, 0x01	; 1
    1fa4:	09 f0       	breq	.+2      	; 0x1fa8 <sync+0xaa>
    1fa6:	78 94       	sei
    1fa8:	b6 01       	movw	r22, r12
    1faa:	ce 01       	movw	r24, r28
    1fac:	f7 01       	movw	r30, r14
    1fae:	09 95       	icall
    1fb0:	f8 2e       	mov	r15, r24
    1fb2:	09 2f       	mov	r16, r25
    1fb4:	8f b7       	in	r24, 0x3f	; 63
    1fb6:	f8 94       	cli
    1fb8:	19 82       	std	Y+1, r1	; 0x01
    1fba:	18 82       	st	Y, r1
    1fbc:	8a 81       	ldd	r24, Y+2	; 0x02
    1fbe:	9b 81       	ldd	r25, Y+3	; 0x03
    1fc0:	82 30       	cpi	r24, 0x02	; 2
    1fc2:	91 05       	cpc	r25, r1
    1fc4:	38 f0       	brcs	.+14     	; 0x1fd4 <sync+0xd6>
    1fc6:	1b 82       	std	Y+3, r1	; 0x03
    1fc8:	1a 82       	std	Y+2, r1	; 0x02
    1fca:	fc 01       	movw	r30, r24
    1fcc:	15 82       	std	Z+5, r1	; 0x05
    1fce:	14 82       	std	Z+4, r1	; 0x04
    1fd0:	0e 94 c4 04 	call	0x988	; 0x988 <dispatch>
    1fd4:	11 23       	and	r17, r17
    1fd6:	51 f0       	breq	.+20     	; 0x1fec <sync+0xee>
    1fd8:	78 94       	sei
    1fda:	8f 2d       	mov	r24, r15
    1fdc:	90 2f       	mov	r25, r16
    1fde:	08 c0       	rjmp	.+16     	; 0x1ff0 <sync+0xf2>
    1fe0:	8f ef       	ldi	r24, 0xFF	; 255
    1fe2:	9f ef       	ldi	r25, 0xFF	; 255
    1fe4:	05 c0       	rjmp	.+10     	; 0x1ff0 <sync+0xf2>
    1fe6:	80 e0       	ldi	r24, 0x00	; 0
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	02 c0       	rjmp	.+4      	; 0x1ff0 <sync+0xf2>
    1fec:	8f 2d       	mov	r24, r15
    1fee:	90 2f       	mov	r25, r16
    1ff0:	df 91       	pop	r29
    1ff2:	cf 91       	pop	r28
    1ff4:	1f 91       	pop	r17
    1ff6:	0f 91       	pop	r16
    1ff8:	ff 90       	pop	r15
    1ffa:	ef 90       	pop	r14
    1ffc:	df 90       	pop	r13
    1ffe:	cf 90       	pop	r12
    2000:	08 95       	ret

00002002 <run>:
    2002:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2006:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    200a:	86 e2       	ldi	r24, 0x26	; 38
    200c:	91 e0       	ldi	r25, 0x01	; 1
    200e:	0e 94 46 05 	call	0xa8c	; 0xa8c <dequeue>
    2012:	ec 01       	movw	r28, r24
    2014:	f8 01       	movw	r30, r16
    2016:	93 83       	std	Z+3, r25	; 0x03
    2018:	82 83       	std	Z+2, r24	; 0x02
    201a:	78 94       	sei
    201c:	6c 85       	ldd	r22, Y+12	; 0x0c
    201e:	7d 85       	ldd	r23, Y+13	; 0x0d
    2020:	4e 85       	ldd	r20, Y+14	; 0x0e
    2022:	5f 85       	ldd	r21, Y+15	; 0x0f
    2024:	8a 85       	ldd	r24, Y+10	; 0x0a
    2026:	9b 85       	ldd	r25, Y+11	; 0x0b
    2028:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <sync>
    202c:	8f b7       	in	r24, 0x3f	; 63
    202e:	f8 94       	cli
    2030:	66 e0       	ldi	r22, 0x06	; 6
    2032:	71 e0       	ldi	r23, 0x01	; 1
    2034:	ce 01       	movw	r24, r28
    2036:	0e 94 5d 05 	call	0xaba	; 0xaba <insert>
    203a:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    203e:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    2042:	01 90       	ld	r0, Z+
    2044:	f0 81       	ld	r31, Z
    2046:	e0 2d       	mov	r30, r0
    2048:	c2 81       	ldd	r28, Z+2	; 0x02
    204a:	d3 81       	ldd	r29, Z+3	; 0x03
    204c:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    2050:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    2054:	30 97       	sbiw	r30, 0x00	; 0
    2056:	a1 f0       	breq	.+40     	; 0x2080 <run+0x7e>
    2058:	20 97       	sbiw	r28, 0x00	; 0
    205a:	99 f2       	breq	.-90     	; 0x2002 <run>
    205c:	86 81       	ldd	r24, Z+6	; 0x06
    205e:	97 81       	ldd	r25, Z+7	; 0x07
    2060:	a0 85       	ldd	r26, Z+8	; 0x08
    2062:	b1 85       	ldd	r27, Z+9	; 0x09
    2064:	4e 81       	ldd	r20, Y+6	; 0x06
    2066:	5f 81       	ldd	r21, Y+7	; 0x07
    2068:	68 85       	ldd	r22, Y+8	; 0x08
    206a:	79 85       	ldd	r23, Y+9	; 0x09
    206c:	84 1b       	sub	r24, r20
    206e:	95 0b       	sbc	r25, r21
    2070:	a6 0b       	sbc	r26, r22
    2072:	b7 0b       	sbc	r27, r23
    2074:	18 16       	cp	r1, r24
    2076:	19 06       	cpc	r1, r25
    2078:	1a 06       	cpc	r1, r26
    207a:	1b 06       	cpc	r1, r27
    207c:	0c f0       	brlt	.+2      	; 0x2080 <run+0x7e>
    207e:	c1 cf       	rjmp	.-126    	; 0x2002 <run>
    2080:	82 e0       	ldi	r24, 0x02	; 2
    2082:	91 e0       	ldi	r25, 0x01	; 1
    2084:	0e 94 71 05 	call	0xae2	; 0xae2 <pop>
    2088:	64 e0       	ldi	r22, 0x04	; 4
    208a:	71 e0       	ldi	r23, 0x01	; 1
    208c:	0e 94 67 05 	call	0xace	; 0xace <push>
    2090:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2094:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    2098:	02 c0       	rjmp	.+4      	; 0x209e <run+0x9c>
    209a:	a0 81       	ld	r26, Z
    209c:	b1 81       	ldd	r27, Z+1	; 0x01
    209e:	14 96       	adiw	r26, 0x04	; 4
    20a0:	ed 91       	ld	r30, X+
    20a2:	fc 91       	ld	r31, X
    20a4:	15 97       	sbiw	r26, 0x05	; 5
    20a6:	30 97       	sbiw	r30, 0x00	; 0
    20a8:	c1 f7       	brne	.-16     	; 0x209a <run+0x98>
    20aa:	cd 01       	movw	r24, r26
    20ac:	0e 94 c4 04 	call	0x988	; 0x988 <dispatch>
    20b0:	a8 cf       	rjmp	.-176    	; 0x2002 <run>

000020b2 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    20b2:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    20b4:	42 31       	cpi	r20, 0x12	; 18
    20b6:	b8 f4       	brcc	.+46     	; 0x20e6 <install+0x34>
        char status;
        DISABLE(status);
    20b8:	9f b7       	in	r25, 0x3f	; 63
    20ba:	90 78       	andi	r25, 0x80	; 128
    20bc:	f8 94       	cli
        otable[i] = obj;
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	44 0f       	add	r20, r20
    20c2:	55 1f       	adc	r21, r21
    20c4:	da 01       	movw	r26, r20
    20c6:	a8 5d       	subi	r26, 0xD8	; 216
    20c8:	be 4f       	sbci	r27, 0xFE	; 254
    20ca:	ed 93       	st	X+, r30
    20cc:	fc 93       	st	X, r31
        mtable[i] = m;
    20ce:	da 01       	movw	r26, r20
    20d0:	a0 54       	subi	r26, 0x40	; 64
    20d2:	be 4f       	sbci	r27, 0xFE	; 254
    20d4:	6d 93       	st	X+, r22
    20d6:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    20d8:	21 e0       	ldi	r18, 0x01	; 1
    20da:	30 e0       	ldi	r19, 0x00	; 0
    20dc:	33 83       	std	Z+3, r19	; 0x03
    20de:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    20e0:	99 23       	and	r25, r25
    20e2:	09 f0       	breq	.+2      	; 0x20e6 <install+0x34>
    20e4:	78 94       	sei
    20e6:	08 95       	ret

000020e8 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    20e8:	8c 01       	movw	r16, r24
    20ea:	7b 01       	movw	r14, r22
    20ec:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    20ee:	8f b7       	in	r24, 0x3f	; 63
    20f0:	f8 94       	cli
    initialize();
    20f2:	0e 94 25 04 	call	0x84a	; 0x84a <initialize>
    ENABLE(1);
    20f6:	78 94       	sei
    if (m != NULL)
    20f8:	e1 14       	cp	r14, r1
    20fa:	f1 04       	cpc	r15, r1
    20fc:	41 f0       	breq	.+16     	; 0x210e <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    20fe:	20 e0       	ldi	r18, 0x00	; 0
    2100:	30 e0       	ldi	r19, 0x00	; 0
    2102:	a9 01       	movw	r20, r18
    2104:	60 e0       	ldi	r22, 0x00	; 0
    2106:	70 e0       	ldi	r23, 0x00	; 0
    2108:	cb 01       	movw	r24, r22
    210a:	0e 94 76 0e 	call	0x1cec	; 0x1cec <async>
    DISABLE(status);
    210e:	8f b7       	in	r24, 0x3f	; 63
    2110:	f8 94       	cli
    idle();
    2112:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <idle>

00002116 <__divmodhi4>:
    2116:	97 fb       	bst	r25, 7
    2118:	07 2e       	mov	r0, r23
    211a:	16 f4       	brtc	.+4      	; 0x2120 <__divmodhi4+0xa>
    211c:	00 94       	com	r0
    211e:	07 d0       	rcall	.+14     	; 0x212e <__divmodhi4_neg1>
    2120:	77 fd       	sbrc	r23, 7
    2122:	09 d0       	rcall	.+18     	; 0x2136 <__divmodhi4_neg2>
    2124:	0e 94 9f 10 	call	0x213e	; 0x213e <__udivmodhi4>
    2128:	07 fc       	sbrc	r0, 7
    212a:	05 d0       	rcall	.+10     	; 0x2136 <__divmodhi4_neg2>
    212c:	3e f4       	brtc	.+14     	; 0x213c <__divmodhi4_exit>

0000212e <__divmodhi4_neg1>:
    212e:	90 95       	com	r25
    2130:	81 95       	neg	r24
    2132:	9f 4f       	sbci	r25, 0xFF	; 255
    2134:	08 95       	ret

00002136 <__divmodhi4_neg2>:
    2136:	70 95       	com	r23
    2138:	61 95       	neg	r22
    213a:	7f 4f       	sbci	r23, 0xFF	; 255

0000213c <__divmodhi4_exit>:
    213c:	08 95       	ret

0000213e <__udivmodhi4>:
    213e:	aa 1b       	sub	r26, r26
    2140:	bb 1b       	sub	r27, r27
    2142:	51 e1       	ldi	r21, 0x11	; 17
    2144:	07 c0       	rjmp	.+14     	; 0x2154 <__udivmodhi4_ep>

00002146 <__udivmodhi4_loop>:
    2146:	aa 1f       	adc	r26, r26
    2148:	bb 1f       	adc	r27, r27
    214a:	a6 17       	cp	r26, r22
    214c:	b7 07       	cpc	r27, r23
    214e:	10 f0       	brcs	.+4      	; 0x2154 <__udivmodhi4_ep>
    2150:	a6 1b       	sub	r26, r22
    2152:	b7 0b       	sbc	r27, r23

00002154 <__udivmodhi4_ep>:
    2154:	88 1f       	adc	r24, r24
    2156:	99 1f       	adc	r25, r25
    2158:	5a 95       	dec	r21
    215a:	a9 f7       	brne	.-22     	; 0x2146 <__udivmodhi4_loop>
    215c:	80 95       	com	r24
    215e:	90 95       	com	r25
    2160:	bc 01       	movw	r22, r24
    2162:	cd 01       	movw	r24, r26
    2164:	08 95       	ret

00002166 <setjmp>:
    2166:	dc 01       	movw	r26, r24
    2168:	2d 92       	st	X+, r2
    216a:	3d 92       	st	X+, r3
    216c:	4d 92       	st	X+, r4
    216e:	5d 92       	st	X+, r5
    2170:	6d 92       	st	X+, r6
    2172:	7d 92       	st	X+, r7
    2174:	8d 92       	st	X+, r8
    2176:	9d 92       	st	X+, r9
    2178:	ad 92       	st	X+, r10
    217a:	bd 92       	st	X+, r11
    217c:	cd 92       	st	X+, r12
    217e:	dd 92       	st	X+, r13
    2180:	ed 92       	st	X+, r14
    2182:	fd 92       	st	X+, r15
    2184:	0d 93       	st	X+, r16
    2186:	1d 93       	st	X+, r17
    2188:	cd 93       	st	X+, r28
    218a:	dd 93       	st	X+, r29
    218c:	ff 91       	pop	r31
    218e:	ef 91       	pop	r30
    2190:	8d b7       	in	r24, 0x3d	; 61
    2192:	8d 93       	st	X+, r24
    2194:	8e b7       	in	r24, 0x3e	; 62
    2196:	8d 93       	st	X+, r24
    2198:	8f b7       	in	r24, 0x3f	; 63
    219a:	8d 93       	st	X+, r24
    219c:	ed 93       	st	X+, r30
    219e:	fd 93       	st	X+, r31
    21a0:	88 27       	eor	r24, r24
    21a2:	99 27       	eor	r25, r25
    21a4:	09 94       	ijmp

000021a6 <longjmp>:
    21a6:	dc 01       	movw	r26, r24
    21a8:	cb 01       	movw	r24, r22
    21aa:	81 30       	cpi	r24, 0x01	; 1
    21ac:	91 05       	cpc	r25, r1
    21ae:	81 1d       	adc	r24, r1
    21b0:	2d 90       	ld	r2, X+
    21b2:	3d 90       	ld	r3, X+
    21b4:	4d 90       	ld	r4, X+
    21b6:	5d 90       	ld	r5, X+
    21b8:	6d 90       	ld	r6, X+
    21ba:	7d 90       	ld	r7, X+
    21bc:	8d 90       	ld	r8, X+
    21be:	9d 90       	ld	r9, X+
    21c0:	ad 90       	ld	r10, X+
    21c2:	bd 90       	ld	r11, X+
    21c4:	cd 90       	ld	r12, X+
    21c6:	dd 90       	ld	r13, X+
    21c8:	ed 90       	ld	r14, X+
    21ca:	fd 90       	ld	r15, X+
    21cc:	0d 91       	ld	r16, X+
    21ce:	1d 91       	ld	r17, X+
    21d0:	cd 91       	ld	r28, X+
    21d2:	dd 91       	ld	r29, X+
    21d4:	ed 91       	ld	r30, X+
    21d6:	fd 91       	ld	r31, X+
    21d8:	0d 90       	ld	r0, X+
    21da:	f8 94       	cli
    21dc:	fe bf       	out	0x3e, r31	; 62
    21de:	0f be       	out	0x3f, r0	; 63
    21e0:	ed bf       	out	0x3d, r30	; 61
    21e2:	ed 91       	ld	r30, X+
    21e4:	fd 91       	ld	r31, X+
    21e6:	09 94       	ijmp

000021e8 <_exit>:
    21e8:	f8 94       	cli

000021ea <__stop_program>:
    21ea:	ff cf       	rjmp	.-2      	; 0x21ea <__stop_program>
