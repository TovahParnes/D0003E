
Lab-5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  0000225a  000022ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000225a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  0000230c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000230c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000233c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  0000237c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000030b6  00000000  00000000  000025fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000106d  00000000  00000000  000056b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016a6  00000000  00000000  0000671f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d30  00000000  00000000  00007dc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009c5  00000000  00000000  00008af8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b0a  00000000  00000000  000094bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000bfc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <__vector_1>
       8:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__vector_2>
       c:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__vector_3>
      10:	0c 94 33 07 	jmp	0xe66	; 0xe66 <__vector_4>
      14:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 0d 0e 	jmp	0x1c1a	; 0x1c1a <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 bb 0d 	jmp	0x1b76	; 0x1b76 <__vector_9>
      28:	0c 94 11 08 	jmp	0x1022	; 0x1022 <__vector_10>
      2c:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__vector_11>
      30:	0c 94 ef 08 	jmp	0x11de	; 0x11de <__vector_12>
      34:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__vector_13>
      38:	0c 94 cd 09 	jmp	0x139a	; 0x139a <__vector_14>
      3c:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <__vector_15>
      40:	0c 94 ab 0a 	jmp	0x1556	; 0x1556 <__vector_16>
      44:	0c 94 1a 0b 	jmp	0x1634	; 0x1634 <__vector_17>
      48:	0c 94 89 0b 	jmp	0x1712	; 0x1712 <__vector_18>
      4c:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <__vector_19>
      50:	0c 94 67 0c 	jmp	0x18ce	; 0x18ce <__vector_20>
      54:	0c 94 d6 0c 	jmp	0x19ac	; 0x19ac <__vector_21>
      58:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ea e5       	ldi	r30, 0x5A	; 90
      70:	f2 e2       	ldi	r31, 0x22	; 34
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <main>
      92:	0c 94 2b 11 	jmp	0x2256	; 0x2256 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <addQueue>:
 * Created: 2021-03-04 11:17:02
 *  Author: Adam Hedberg
 */ 
#include "Controller.h"

void addQueue (Controller *self, int dir){
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
	if (dir == NORTH){
      a6:	61 30       	cpi	r22, 0x01	; 1
      a8:	71 05       	cpc	r23, r1
      aa:	d1 f4       	brne	.+52     	; 0xe0 <addQueue+0x46>
		self->queue[NORTH]++;
      ac:	fc 01       	movw	r30, r24
      ae:	c6 80       	ldd	r12, Z+6	; 0x06
      b0:	d7 80       	ldd	r13, Z+7	; 0x07
      b2:	ff ef       	ldi	r31, 0xFF	; 255
      b4:	cf 1a       	sub	r12, r31
      b6:	df 0a       	sbc	r13, r31
      b8:	fc 01       	movw	r30, r24
      ba:	d7 82       	std	Z+7, r13	; 0x07
      bc:	c6 82       	std	Z+6, r12	; 0x06
		ASYNC(self->gui, displayNorthQueue, self->queue[NORTH]);
      be:	02 89       	ldd	r16, Z+18	; 0x12
      c0:	13 89       	ldd	r17, Z+19	; 0x13
      c2:	0f 2e       	mov	r0, r31
      c4:	f6 e7       	ldi	r31, 0x76	; 118
      c6:	ef 2e       	mov	r14, r31
      c8:	f3 e0       	ldi	r31, 0x03	; 3
      ca:	ff 2e       	mov	r15, r31
      cc:	f0 2d       	mov	r31, r0
      ce:	20 e0       	ldi	r18, 0x00	; 0
      d0:	30 e0       	ldi	r19, 0x00	; 0
      d2:	a9 01       	movw	r20, r18
      d4:	60 e0       	ldi	r22, 0x00	; 0
      d6:	70 e0       	ldi	r23, 0x00	; 0
      d8:	cb 01       	movw	r24, r22
      da:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
      de:	1c c0       	rjmp	.+56     	; 0x118 <addQueue+0x7e>
	}
	else if(dir == SOUTH){
      e0:	62 30       	cpi	r22, 0x02	; 2
      e2:	71 05       	cpc	r23, r1
      e4:	c9 f4       	brne	.+50     	; 0x118 <addQueue+0x7e>
		self->queue[SOUTH]++;
      e6:	fc 01       	movw	r30, r24
      e8:	c0 84       	ldd	r12, Z+8	; 0x08
      ea:	d1 84       	ldd	r13, Z+9	; 0x09
      ec:	ff ef       	ldi	r31, 0xFF	; 255
      ee:	cf 1a       	sub	r12, r31
      f0:	df 0a       	sbc	r13, r31
      f2:	fc 01       	movw	r30, r24
      f4:	d1 86       	std	Z+9, r13	; 0x09
      f6:	c0 86       	std	Z+8, r12	; 0x08
		ASYNC(self->gui, displaySouthQueue, self->queue[SOUTH]);
      f8:	02 89       	ldd	r16, Z+18	; 0x12
      fa:	13 89       	ldd	r17, Z+19	; 0x13
      fc:	0f 2e       	mov	r0, r31
      fe:	fb e7       	ldi	r31, 0x7B	; 123
     100:	ef 2e       	mov	r14, r31
     102:	f3 e0       	ldi	r31, 0x03	; 3
     104:	ff 2e       	mov	r15, r31
     106:	f0 2d       	mov	r31, r0
     108:	20 e0       	ldi	r18, 0x00	; 0
     10a:	30 e0       	ldi	r19, 0x00	; 0
     10c:	a9 01       	movw	r20, r18
     10e:	60 e0       	ldi	r22, 0x00	; 0
     110:	70 e0       	ldi	r23, 0x00	; 0
     112:	cb 01       	movw	r24, r22
     114:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	}
}
     118:	1f 91       	pop	r17
     11a:	0f 91       	pop	r16
     11c:	ff 90       	pop	r15
     11e:	ef 90       	pop	r14
     120:	df 90       	pop	r13
     122:	cf 90       	pop	r12
     124:	08 95       	ret

00000126 <decBridge>:
		self->queue[SOUTH]--;
		ASYNC(self->gui, displaySouthQueue, self->queue[SOUTH]);
	}
}

void decBridge (Controller *self){
     126:	cf 92       	push	r12
     128:	df 92       	push	r13
     12a:	ef 92       	push	r14
     12c:	ff 92       	push	r15
     12e:	0f 93       	push	r16
     130:	1f 93       	push	r17
     132:	fc 01       	movw	r30, r24
	self->queue[BRIDGE]--;
     134:	c4 80       	ldd	r12, Z+4	; 0x04
     136:	d5 80       	ldd	r13, Z+5	; 0x05
     138:	81 e0       	ldi	r24, 0x01	; 1
     13a:	c8 1a       	sub	r12, r24
     13c:	d1 08       	sbc	r13, r1
     13e:	d5 82       	std	Z+5, r13	; 0x05
     140:	c4 82       	std	Z+4, r12	; 0x04
	if (self->queue[BRIDGE] == 0){
	}
	ASYNC(self->gui, displayBridgeQueue, self->queue[BRIDGE]);
     142:	02 89       	ldd	r16, Z+18	; 0x12
     144:	13 89       	ldd	r17, Z+19	; 0x13
     146:	0f 2e       	mov	r0, r31
     148:	f0 e8       	ldi	r31, 0x80	; 128
     14a:	ef 2e       	mov	r14, r31
     14c:	f3 e0       	ldi	r31, 0x03	; 3
     14e:	ff 2e       	mov	r15, r31
     150:	f0 2d       	mov	r31, r0
     152:	20 e0       	ldi	r18, 0x00	; 0
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	a9 01       	movw	r20, r18
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	cb 01       	movw	r24, r22
     15e:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
}
     162:	1f 91       	pop	r17
     164:	0f 91       	pop	r16
     166:	ff 90       	pop	r15
     168:	ef 90       	pop	r14
     16a:	df 90       	pop	r13
     16c:	cf 90       	pop	r12
     16e:	08 95       	ret

00000170 <lightsRed>:
	}
}



void lightsRed(Controller *self){
     170:	cf 92       	push	r12
     172:	df 92       	push	r13
     174:	ef 92       	push	r14
     176:	ff 92       	push	r15
     178:	0f 93       	push	r16
     17a:	1f 93       	push	r17
	self->lights = RED;
     17c:	fc 01       	movw	r30, r24
     17e:	15 86       	std	Z+13, r1	; 0x0d
     180:	14 86       	std	Z+12, r1	; 0x0c
	ASYNC(self->OpH, outputLights, self->lights );
     182:	00 89       	ldd	r16, Z+16	; 0x10
     184:	11 89       	ldd	r17, Z+17	; 0x11
     186:	c1 2c       	mov	r12, r1
     188:	d1 2c       	mov	r13, r1
     18a:	0f 2e       	mov	r0, r31
     18c:	f9 e4       	ldi	r31, 0x49	; 73
     18e:	ef 2e       	mov	r14, r31
     190:	f4 e0       	ldi	r31, 0x04	; 4
     192:	ff 2e       	mov	r15, r31
     194:	f0 2d       	mov	r31, r0
     196:	20 e0       	ldi	r18, 0x00	; 0
     198:	30 e0       	ldi	r19, 0x00	; 0
     19a:	a9 01       	movw	r20, r18
     19c:	60 e0       	ldi	r22, 0x00	; 0
     19e:	70 e0       	ldi	r23, 0x00	; 0
     1a0:	cb 01       	movw	r24, r22
     1a2:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
}
     1a6:	1f 91       	pop	r17
     1a8:	0f 91       	pop	r16
     1aa:	ff 90       	pop	r15
     1ac:	ef 90       	pop	r14
     1ae:	df 90       	pop	r13
     1b0:	cf 90       	pop	r12
     1b2:	08 95       	ret

000001b4 <lightGreen>:

void lightGreen(Controller *self, int dir){
     1b4:	cf 92       	push	r12
     1b6:	df 92       	push	r13
     1b8:	ef 92       	push	r14
     1ba:	ff 92       	push	r15
     1bc:	0f 93       	push	r16
     1be:	1f 93       	push	r17
     1c0:	fc 01       	movw	r30, r24
	self->carsPassed = 0;
     1c2:	17 86       	std	Z+15, r1	; 0x0f
     1c4:	16 86       	std	Z+14, r1	; 0x0e
	self->lights = dir;
     1c6:	75 87       	std	Z+13, r23	; 0x0d
     1c8:	64 87       	std	Z+12, r22	; 0x0c
	ASYNC(self->OpH, outputLights, self->lights );
     1ca:	00 89       	ldd	r16, Z+16	; 0x10
     1cc:	11 89       	ldd	r17, Z+17	; 0x11
     1ce:	6b 01       	movw	r12, r22
     1d0:	0f 2e       	mov	r0, r31
     1d2:	f9 e4       	ldi	r31, 0x49	; 73
     1d4:	ef 2e       	mov	r14, r31
     1d6:	f4 e0       	ldi	r31, 0x04	; 4
     1d8:	ff 2e       	mov	r15, r31
     1da:	f0 2d       	mov	r31, r0
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	a9 01       	movw	r20, r18
     1e2:	60 e0       	ldi	r22, 0x00	; 0
     1e4:	70 e0       	ldi	r23, 0x00	; 0
     1e6:	cb 01       	movw	r24, r22
     1e8:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
}
     1ec:	1f 91       	pop	r17
     1ee:	0f 91       	pop	r16
     1f0:	ff 90       	pop	r15
     1f2:	ef 90       	pop	r14
     1f4:	df 90       	pop	r13
     1f6:	cf 90       	pop	r12
     1f8:	08 95       	ret

000001fa <decQueue>:
	ASYNC(self->gui, displayBridgeQueue, self->queue[BRIDGE]);
	AFTER(SEC(5),self, decBridge, NULL);

}

void decQueue (Controller *self, int dir){
     1fa:	cf 92       	push	r12
     1fc:	df 92       	push	r13
     1fe:	ef 92       	push	r14
     200:	ff 92       	push	r15
     202:	0f 93       	push	r16
     204:	1f 93       	push	r17
	if (dir == NORTH){
     206:	61 30       	cpi	r22, 0x01	; 1
     208:	71 05       	cpc	r23, r1
     20a:	d1 f4       	brne	.+52     	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
		self->queue[NORTH]--;
     20c:	fc 01       	movw	r30, r24
     20e:	c6 80       	ldd	r12, Z+6	; 0x06
     210:	d7 80       	ldd	r13, Z+7	; 0x07
     212:	f1 e0       	ldi	r31, 0x01	; 1
     214:	cf 1a       	sub	r12, r31
     216:	d1 08       	sbc	r13, r1
     218:	fc 01       	movw	r30, r24
     21a:	d7 82       	std	Z+7, r13	; 0x07
     21c:	c6 82       	std	Z+6, r12	; 0x06
		ASYNC(self->gui, displayNorthQueue, self->queue[NORTH]);
     21e:	02 89       	ldd	r16, Z+18	; 0x12
     220:	13 89       	ldd	r17, Z+19	; 0x13
     222:	0f 2e       	mov	r0, r31
     224:	f6 e7       	ldi	r31, 0x76	; 118
     226:	ef 2e       	mov	r14, r31
     228:	f3 e0       	ldi	r31, 0x03	; 3
     22a:	ff 2e       	mov	r15, r31
     22c:	f0 2d       	mov	r31, r0
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	a9 01       	movw	r20, r18
     234:	60 e0       	ldi	r22, 0x00	; 0
     236:	70 e0       	ldi	r23, 0x00	; 0
     238:	cb 01       	movw	r24, r22
     23a:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
     23e:	1c c0       	rjmp	.+56     	; 0x278 <__EEPROM_REGION_LENGTH__+0x78>
	}
	else if(dir == SOUTH){
     240:	62 30       	cpi	r22, 0x02	; 2
     242:	71 05       	cpc	r23, r1
     244:	c9 f4       	brne	.+50     	; 0x278 <__EEPROM_REGION_LENGTH__+0x78>
		self->queue[SOUTH]--;
     246:	fc 01       	movw	r30, r24
     248:	c0 84       	ldd	r12, Z+8	; 0x08
     24a:	d1 84       	ldd	r13, Z+9	; 0x09
     24c:	f1 e0       	ldi	r31, 0x01	; 1
     24e:	cf 1a       	sub	r12, r31
     250:	d1 08       	sbc	r13, r1
     252:	fc 01       	movw	r30, r24
     254:	d1 86       	std	Z+9, r13	; 0x09
     256:	c0 86       	std	Z+8, r12	; 0x08
		ASYNC(self->gui, displaySouthQueue, self->queue[SOUTH]);
     258:	02 89       	ldd	r16, Z+18	; 0x12
     25a:	13 89       	ldd	r17, Z+19	; 0x13
     25c:	0f 2e       	mov	r0, r31
     25e:	fb e7       	ldi	r31, 0x7B	; 123
     260:	ef 2e       	mov	r14, r31
     262:	f3 e0       	ldi	r31, 0x03	; 3
     264:	ff 2e       	mov	r15, r31
     266:	f0 2d       	mov	r31, r0
     268:	20 e0       	ldi	r18, 0x00	; 0
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	a9 01       	movw	r20, r18
     26e:	60 e0       	ldi	r22, 0x00	; 0
     270:	70 e0       	ldi	r23, 0x00	; 0
     272:	cb 01       	movw	r24, r22
     274:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	}
}
     278:	1f 91       	pop	r17
     27a:	0f 91       	pop	r16
     27c:	ff 90       	pop	r15
     27e:	ef 90       	pop	r14
     280:	df 90       	pop	r13
     282:	cf 90       	pop	r12
     284:	08 95       	ret

00000286 <addBridge>:
		self->queue[SOUTH]++;
		ASYNC(self->gui, displaySouthQueue, self->queue[SOUTH]);
	}
}

void addBridge (Controller *self, int dir){
     286:	cf 92       	push	r12
     288:	df 92       	push	r13
     28a:	ef 92       	push	r14
     28c:	ff 92       	push	r15
     28e:	0f 93       	push	r16
     290:	1f 93       	push	r17
     292:	cf 93       	push	r28
     294:	df 93       	push	r29
     296:	ec 01       	movw	r28, r24
     298:	6b 01       	movw	r12, r22
	decQueue(self,dir);
     29a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <decQueue>
	self->bridgeDirection = dir; 
     29e:	db 86       	std	Y+11, r13	; 0x0b
     2a0:	ca 86       	std	Y+10, r12	; 0x0a
	self->carsPassed++;
     2a2:	8e 85       	ldd	r24, Y+14	; 0x0e
     2a4:	9f 85       	ldd	r25, Y+15	; 0x0f
     2a6:	01 96       	adiw	r24, 0x01	; 1
     2a8:	9f 87       	std	Y+15, r25	; 0x0f
     2aa:	8e 87       	std	Y+14, r24	; 0x0e
	self->queue[BRIDGE]++;
     2ac:	cc 80       	ldd	r12, Y+4	; 0x04
     2ae:	dd 80       	ldd	r13, Y+5	; 0x05
     2b0:	8f ef       	ldi	r24, 0xFF	; 255
     2b2:	c8 1a       	sub	r12, r24
     2b4:	d8 0a       	sbc	r13, r24
     2b6:	dd 82       	std	Y+5, r13	; 0x05
     2b8:	cc 82       	std	Y+4, r12	; 0x04
	ASYNC(self->gui, displayBridgeQueue, self->queue[BRIDGE]);
     2ba:	0a 89       	ldd	r16, Y+18	; 0x12
     2bc:	1b 89       	ldd	r17, Y+19	; 0x13
     2be:	0f 2e       	mov	r0, r31
     2c0:	f0 e8       	ldi	r31, 0x80	; 128
     2c2:	ef 2e       	mov	r14, r31
     2c4:	f3 e0       	ldi	r31, 0x03	; 3
     2c6:	ff 2e       	mov	r15, r31
     2c8:	f0 2d       	mov	r31, r0
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	a9 01       	movw	r20, r18
     2d0:	60 e0       	ldi	r22, 0x00	; 0
     2d2:	70 e0       	ldi	r23, 0x00	; 0
     2d4:	cb 01       	movw	r24, r22
     2d6:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	AFTER(SEC(5),self, decBridge, NULL);
     2da:	c1 2c       	mov	r12, r1
     2dc:	d1 2c       	mov	r13, r1
     2de:	0f 2e       	mov	r0, r31
     2e0:	f3 e9       	ldi	r31, 0x93	; 147
     2e2:	ef 2e       	mov	r14, r31
     2e4:	f0 e0       	ldi	r31, 0x00	; 0
     2e6:	ff 2e       	mov	r15, r31
     2e8:	f0 2d       	mov	r31, r0
     2ea:	8e 01       	movw	r16, r28
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	a9 01       	movw	r20, r18
     2f2:	6a e5       	ldi	r22, 0x5A	; 90
     2f4:	72 e6       	ldi	r23, 0x62	; 98
     2f6:	82 e0       	ldi	r24, 0x02	; 2
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>

}
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	1f 91       	pop	r17
     304:	0f 91       	pop	r16
     306:	ff 90       	pop	r15
     308:	ef 90       	pop	r14
     30a:	df 90       	pop	r13
     30c:	cf 90       	pop	r12
     30e:	08 95       	ret

00000310 <longestQueue>:
	ASYNC(self->gui, displayBridgeQueue, self->queue[BRIDGE]);
}


int longestQueue (Controller *self){
	if (self->queue[NORTH] >= self->queue[SOUTH]){
     310:	fc 01       	movw	r30, r24
     312:	26 81       	ldd	r18, Z+6	; 0x06
     314:	37 81       	ldd	r19, Z+7	; 0x07
     316:	80 85       	ldd	r24, Z+8	; 0x08
     318:	91 85       	ldd	r25, Z+9	; 0x09
     31a:	28 17       	cp	r18, r24
     31c:	39 07       	cpc	r19, r25
     31e:	1c f0       	brlt	.+6      	; 0x326 <longestQueue+0x16>
		return NORTH;
     320:	81 e0       	ldi	r24, 0x01	; 1
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	08 95       	ret
	}
	else {
		return SOUTH;
     326:	82 e0       	ldi	r24, 0x02	; 2
     328:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     32a:	08 95       	ret

0000032c <shortestQueue>:

int shortestQueue (Controller *self){
	if (self->queue[NORTH] >= self->queue[SOUTH]){
     32c:	fc 01       	movw	r30, r24
     32e:	26 81       	ldd	r18, Z+6	; 0x06
     330:	37 81       	ldd	r19, Z+7	; 0x07
     332:	80 85       	ldd	r24, Z+8	; 0x08
     334:	91 85       	ldd	r25, Z+9	; 0x09
     336:	28 17       	cp	r18, r24
     338:	39 07       	cpc	r19, r25
     33a:	1c f0       	brlt	.+6      	; 0x342 <shortestQueue+0x16>
		return SOUTH;
     33c:	82 e0       	ldi	r24, 0x02	; 2
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	08 95       	ret
	}
	else {
		return NORTH;
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     346:	08 95       	ret

00000348 <lightsBridge>:
	self->lights = dir;
	ASYNC(self->OpH, outputLights, self->lights );
}


void lightsBridge(Controller *self){
     348:	cf 92       	push	r12
     34a:	df 92       	push	r13
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	ec 01       	movw	r28, r24
	int longest = longestQueue(self);
     35a:	0e 94 88 01 	call	0x310	; 0x310 <longestQueue>
     35e:	8c 01       	movw	r16, r24
	int shortest = shortestQueue(self);
     360:	ce 01       	movw	r24, r28
     362:	0e 94 96 01 	call	0x32c	; 0x32c <shortestQueue>
     366:	6c 01       	movw	r12, r24
	if (self->queue[BRIDGE] == 0){
     368:	8c 81       	ldd	r24, Y+4	; 0x04
     36a:	9d 81       	ldd	r25, Y+5	; 0x05
     36c:	89 2b       	or	r24, r25
     36e:	b9 f4       	brne	.+46     	; 0x39e <lightsBridge+0x56>
		lightGreen(self, longest);
     370:	b8 01       	movw	r22, r16
     372:	ce 01       	movw	r24, r28
     374:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lightGreen>
		AFTER(SEC(1), self, lightsBridge, NULL);
     378:	c1 2c       	mov	r12, r1
     37a:	d1 2c       	mov	r13, r1
     37c:	0f 2e       	mov	r0, r31
     37e:	f4 ea       	ldi	r31, 0xA4	; 164
     380:	ef 2e       	mov	r14, r31
     382:	f1 e0       	ldi	r31, 0x01	; 1
     384:	ff 2e       	mov	r15, r31
     386:	f0 2d       	mov	r31, r0
     388:	8e 01       	movw	r16, r28
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	a9 01       	movw	r20, r18
     390:	62 e1       	ldi	r22, 0x12	; 18
     392:	7a e7       	ldi	r23, 0x7A	; 122
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
     39c:	85 c0       	rjmp	.+266    	; 0x4a8 <__DATA_REGION_LENGTH__+0xa8>
	}
	else {
		if (longest == self->bridgeDirection){
     39e:	8a 85       	ldd	r24, Y+10	; 0x0a
     3a0:	9b 85       	ldd	r25, Y+11	; 0x0b
     3a2:	08 17       	cp	r16, r24
     3a4:	19 07       	cpc	r17, r25
     3a6:	09 f0       	breq	.+2      	; 0x3aa <lightsBridge+0x62>
     3a8:	5b c0       	rjmp	.+182    	; 0x460 <__DATA_REGION_LENGTH__+0x60>
			if (self->carsPassed >= maxCarsBeforeSwap){
     3aa:	8e 85       	ldd	r24, Y+14	; 0x0e
     3ac:	9f 85       	ldd	r25, Y+15	; 0x0f
     3ae:	0a 97       	sbiw	r24, 0x0a	; 10
     3b0:	0c f4       	brge	.+2      	; 0x3b4 <lightsBridge+0x6c>
     3b2:	3f c0       	rjmp	.+126    	; 0x432 <__DATA_REGION_LENGTH__+0x32>
				if (shortest != 0){
     3b4:	c1 14       	cp	r12, r1
     3b6:	d1 04       	cpc	r13, r1
     3b8:	29 f1       	breq	.+74     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
					self->carsPassed == 0;
					lightsRed(self);
     3ba:	ce 01       	movw	r24, r28
     3bc:	0e 94 b8 00 	call	0x170	; 0x170 <lightsRed>
					AFTER(SEC(5), self, lightGreen, shortest);
     3c0:	0f 2e       	mov	r0, r31
     3c2:	fa ed       	ldi	r31, 0xDA	; 218
     3c4:	ef 2e       	mov	r14, r31
     3c6:	f0 e0       	ldi	r31, 0x00	; 0
     3c8:	ff 2e       	mov	r15, r31
     3ca:	f0 2d       	mov	r31, r0
     3cc:	8e 01       	movw	r16, r28
     3ce:	20 e0       	ldi	r18, 0x00	; 0
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	a9 01       	movw	r20, r18
     3d4:	6a e5       	ldi	r22, 0x5A	; 90
     3d6:	72 e6       	ldi	r23, 0x62	; 98
     3d8:	82 e0       	ldi	r24, 0x02	; 2
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
					AFTER(SEC(6), self, lightsBridge, NULL);
     3e0:	c1 2c       	mov	r12, r1
     3e2:	d1 2c       	mov	r13, r1
     3e4:	0f 2e       	mov	r0, r31
     3e6:	f4 ea       	ldi	r31, 0xA4	; 164
     3e8:	ef 2e       	mov	r14, r31
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	ff 2e       	mov	r15, r31
     3ee:	f0 2d       	mov	r31, r0
     3f0:	20 e0       	ldi	r18, 0x00	; 0
     3f2:	30 e0       	ldi	r19, 0x00	; 0
     3f4:	a9 01       	movw	r20, r18
     3f6:	6c e6       	ldi	r22, 0x6C	; 108
     3f8:	7c ed       	ldi	r23, 0xDC	; 220
     3fa:	82 e0       	ldi	r24, 0x02	; 2
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
     402:	52 c0       	rjmp	.+164    	; 0x4a8 <__DATA_REGION_LENGTH__+0xa8>
				}
				else {
					lightGreen(self, longest);
     404:	b8 01       	movw	r22, r16
     406:	ce 01       	movw	r24, r28
     408:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lightGreen>
					AFTER(SEC(1), self, lightsBridge, NULL);
     40c:	c1 2c       	mov	r12, r1
     40e:	d1 2c       	mov	r13, r1
     410:	0f 2e       	mov	r0, r31
     412:	f4 ea       	ldi	r31, 0xA4	; 164
     414:	ef 2e       	mov	r14, r31
     416:	f1 e0       	ldi	r31, 0x01	; 1
     418:	ff 2e       	mov	r15, r31
     41a:	f0 2d       	mov	r31, r0
     41c:	8e 01       	movw	r16, r28
     41e:	20 e0       	ldi	r18, 0x00	; 0
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	a9 01       	movw	r20, r18
     424:	62 e1       	ldi	r22, 0x12	; 18
     426:	7a e7       	ldi	r23, 0x7A	; 122
     428:	80 e0       	ldi	r24, 0x00	; 0
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
     430:	3b c0       	rjmp	.+118    	; 0x4a8 <__DATA_REGION_LENGTH__+0xa8>
				}	
			} 
			else {
				lightGreen(self, longest);
     432:	b8 01       	movw	r22, r16
     434:	ce 01       	movw	r24, r28
     436:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lightGreen>
				AFTER(SEC(1), self, lightsBridge, NULL);
     43a:	c1 2c       	mov	r12, r1
     43c:	d1 2c       	mov	r13, r1
     43e:	0f 2e       	mov	r0, r31
     440:	f4 ea       	ldi	r31, 0xA4	; 164
     442:	ef 2e       	mov	r14, r31
     444:	f1 e0       	ldi	r31, 0x01	; 1
     446:	ff 2e       	mov	r15, r31
     448:	f0 2d       	mov	r31, r0
     44a:	8e 01       	movw	r16, r28
     44c:	20 e0       	ldi	r18, 0x00	; 0
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	a9 01       	movw	r20, r18
     452:	62 e1       	ldi	r22, 0x12	; 18
     454:	7a e7       	ldi	r23, 0x7A	; 122
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
     45e:	24 c0       	rjmp	.+72     	; 0x4a8 <__DATA_REGION_LENGTH__+0xa8>
			}
		}
		else {
			self->carsPassed == 0;
			lightsRed(self);
     460:	ce 01       	movw	r24, r28
     462:	0e 94 b8 00 	call	0x170	; 0x170 <lightsRed>
			AFTER(SEC(5), self, lightGreen, shortest);
     466:	0f 2e       	mov	r0, r31
     468:	fa ed       	ldi	r31, 0xDA	; 218
     46a:	ef 2e       	mov	r14, r31
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	ff 2e       	mov	r15, r31
     470:	f0 2d       	mov	r31, r0
     472:	8e 01       	movw	r16, r28
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	a9 01       	movw	r20, r18
     47a:	6a e5       	ldi	r22, 0x5A	; 90
     47c:	72 e6       	ldi	r23, 0x62	; 98
     47e:	82 e0       	ldi	r24, 0x02	; 2
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
			AFTER(SEC(6), self, lightsBridge, NULL);
     486:	c1 2c       	mov	r12, r1
     488:	d1 2c       	mov	r13, r1
     48a:	0f 2e       	mov	r0, r31
     48c:	f4 ea       	ldi	r31, 0xA4	; 164
     48e:	ef 2e       	mov	r14, r31
     490:	f1 e0       	ldi	r31, 0x01	; 1
     492:	ff 2e       	mov	r15, r31
     494:	f0 2d       	mov	r31, r0
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	a9 01       	movw	r20, r18
     49c:	6c e6       	ldi	r22, 0x6C	; 108
     49e:	7c ed       	ldi	r23, 0xDC	; 220
     4a0:	82 e0       	ldi	r24, 0x02	; 2
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
		}
	}
}
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	1f 91       	pop	r17
     4ae:	0f 91       	pop	r16
     4b0:	ff 90       	pop	r15
     4b2:	ef 90       	pop	r14
     4b4:	df 90       	pop	r13
     4b6:	cf 90       	pop	r12
     4b8:	08 95       	ret

000004ba <initialize>:

void initialize(Controller *self){
     4ba:	cf 92       	push	r12
     4bc:	df 92       	push	r13
     4be:	ef 92       	push	r14
     4c0:	ff 92       	push	r15
     4c2:	0f 93       	push	r16
     4c4:	1f 93       	push	r17
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	ec 01       	movw	r28, r24
	ASYNC(self->gui, init, NULL);
     4cc:	0a 89       	ldd	r16, Y+18	; 0x12
     4ce:	1b 89       	ldd	r17, Y+19	; 0x13
     4d0:	c1 2c       	mov	r12, r1
     4d2:	d1 2c       	mov	r13, r1
     4d4:	0f 2e       	mov	r0, r31
     4d6:	f1 e7       	ldi	r31, 0x71	; 113
     4d8:	ef 2e       	mov	r14, r31
     4da:	f3 e0       	ldi	r31, 0x03	; 3
     4dc:	ff 2e       	mov	r15, r31
     4de:	f0 2d       	mov	r31, r0
     4e0:	20 e0       	ldi	r18, 0x00	; 0
     4e2:	30 e0       	ldi	r19, 0x00	; 0
     4e4:	a9 01       	movw	r20, r18
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	cb 01       	movw	r24, r22
     4ec:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	ASYNC(self, lightsRed, NULL); 
     4f0:	0f 2e       	mov	r0, r31
     4f2:	f8 eb       	ldi	r31, 0xB8	; 184
     4f4:	ef 2e       	mov	r14, r31
     4f6:	f0 e0       	ldi	r31, 0x00	; 0
     4f8:	ff 2e       	mov	r15, r31
     4fa:	f0 2d       	mov	r31, r0
     4fc:	8e 01       	movw	r16, r28
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	a9 01       	movw	r20, r18
     504:	60 e0       	ldi	r22, 0x00	; 0
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	cb 01       	movw	r24, r22
     50a:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	ASYNC(self, addQueue, 1);
     50e:	cc 24       	eor	r12, r12
     510:	c3 94       	inc	r12
     512:	d1 2c       	mov	r13, r1
     514:	0f 2e       	mov	r0, r31
     516:	fd e4       	ldi	r31, 0x4D	; 77
     518:	ef 2e       	mov	r14, r31
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	ff 2e       	mov	r15, r31
     51e:	f0 2d       	mov	r31, r0
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	a9 01       	movw	r20, r18
     526:	60 e0       	ldi	r22, 0x00	; 0
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	cb 01       	movw	r24, r22
     52c:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	ASYNC(self, addQueue, 2);
     530:	68 94       	set
     532:	cc 24       	eor	r12, r12
     534:	c1 f8       	bld	r12, 1
     536:	d1 2c       	mov	r13, r1
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	a9 01       	movw	r20, r18
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	cb 01       	movw	r24, r22
     544:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	//ASYNC(self, addBridge, 1);
	//ASYNC(self,addBridge , 1);'
	ASYNC(self, lightsBridge, NULL);
     548:	c1 2c       	mov	r12, r1
     54a:	d1 2c       	mov	r13, r1
     54c:	0f 2e       	mov	r0, r31
     54e:	f4 ea       	ldi	r31, 0xA4	; 164
     550:	ef 2e       	mov	r14, r31
     552:	f1 e0       	ldi	r31, 0x01	; 1
     554:	ff 2e       	mov	r15, r31
     556:	f0 2d       	mov	r31, r0
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	a9 01       	movw	r20, r18
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	cb 01       	movw	r24, r22
     564:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
     568:	df 91       	pop	r29
     56a:	cf 91       	pop	r28
     56c:	1f 91       	pop	r17
     56e:	0f 91       	pop	r16
     570:	ff 90       	pop	r15
     572:	ef 90       	pop	r14
     574:	df 90       	pop	r13
     576:	cf 90       	pop	r12
     578:	08 95       	ret

0000057a <writeChar>:
	else {
		pos = 2;
	}
	
	printAt(pos,arg[1]);
}
     57a:	cf 93       	push	r28
     57c:	df 93       	push	r29
     57e:	cd b7       	in	r28, 0x3d	; 61
     580:	de b7       	in	r29, 0x3e	; 62
     582:	66 97       	sbiw	r28, 0x16	; 22
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	f8 94       	cli
     588:	de bf       	out	0x3e, r29	; 62
     58a:	0f be       	out	0x3f, r0	; 63
     58c:	cd bf       	out	0x3d, r28	; 61
     58e:	66 30       	cpi	r22, 0x06	; 6
     590:	71 05       	cpc	r23, r1
     592:	08 f0       	brcs	.+2      	; 0x596 <writeChar+0x1c>
     594:	43 c0       	rjmp	.+134    	; 0x61c <writeChar+0xa2>
     596:	96 e1       	ldi	r25, 0x16	; 22
     598:	e8 e0       	ldi	r30, 0x08	; 8
     59a:	f1 e0       	ldi	r31, 0x01	; 1
     59c:	de 01       	movw	r26, r28
     59e:	11 96       	adiw	r26, 0x01	; 1
     5a0:	01 90       	ld	r0, Z+
     5a2:	0d 92       	st	X+, r0
     5a4:	9a 95       	dec	r25
     5a6:	e1 f7       	brne	.-8      	; 0x5a0 <writeChar+0x26>
     5a8:	90 ed       	ldi	r25, 0xD0	; 208
     5aa:	98 0f       	add	r25, r24
     5ac:	9a 30       	cpi	r25, 0x0A	; 10
     5ae:	70 f4       	brcc	.+28     	; 0x5cc <writeChar+0x52>
     5b0:	e8 2f       	mov	r30, r24
     5b2:	f0 e0       	ldi	r31, 0x00	; 0
     5b4:	f0 97       	sbiw	r30, 0x30	; 48
     5b6:	ee 0f       	add	r30, r30
     5b8:	ff 1f       	adc	r31, r31
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	8c 0f       	add	r24, r28
     5c0:	9d 1f       	adc	r25, r29
     5c2:	e8 0f       	add	r30, r24
     5c4:	f9 1f       	adc	r31, r25
     5c6:	40 81       	ld	r20, Z
     5c8:	51 81       	ldd	r21, Z+1	; 0x01
     5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <writeChar+0x56>
     5cc:	48 e2       	ldi	r20, 0x28	; 40
     5ce:	50 ec       	ldi	r21, 0xC0	; 192
     5d0:	fb 01       	movw	r30, r22
     5d2:	f5 95       	asr	r31
     5d4:	e7 95       	ror	r30
     5d6:	e4 51       	subi	r30, 0x14	; 20
     5d8:	ff 4f       	sbci	r31, 0xFF	; 255
     5da:	db 01       	movw	r26, r22
     5dc:	a1 70       	andi	r26, 0x01	; 1
     5de:	bb 27       	eor	r27, r27
     5e0:	60 fd       	sbrc	r22, 0
     5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <writeChar+0x6e>
     5e4:	60 ef       	ldi	r22, 0xF0	; 240
     5e6:	01 c0       	rjmp	.+2      	; 0x5ea <writeChar+0x70>
     5e8:	6f e0       	ldi	r22, 0x0F	; 15
     5ea:	20 e0       	ldi	r18, 0x00	; 0
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	13 c0       	rjmp	.+38     	; 0x616 <writeChar+0x9c>
     5f0:	84 2f       	mov	r24, r20
     5f2:	8f 70       	andi	r24, 0x0F	; 15
     5f4:	52 95       	swap	r21
     5f6:	42 95       	swap	r20
     5f8:	4f 70       	andi	r20, 0x0F	; 15
     5fa:	45 27       	eor	r20, r21
     5fc:	5f 70       	andi	r21, 0x0F	; 15
     5fe:	45 27       	eor	r20, r21
     600:	10 97       	sbiw	r26, 0x00	; 0
     602:	11 f0       	breq	.+4      	; 0x608 <writeChar+0x8e>
     604:	82 95       	swap	r24
     606:	80 7f       	andi	r24, 0xF0	; 240
     608:	90 81       	ld	r25, Z
     60a:	96 23       	and	r25, r22
     60c:	89 2b       	or	r24, r25
     60e:	80 83       	st	Z, r24
     610:	35 96       	adiw	r30, 0x05	; 5
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	24 30       	cpi	r18, 0x04	; 4
     618:	31 05       	cpc	r19, r1
     61a:	54 f3       	brlt	.-44     	; 0x5f0 <writeChar+0x76>
     61c:	66 96       	adiw	r28, 0x16	; 22
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	f8 94       	cli
     622:	de bf       	out	0x3e, r29	; 62
     624:	0f be       	out	0x3f, r0	; 63
     626:	cd bf       	out	0x3d, r28	; 61
     628:	df 91       	pop	r29
     62a:	cf 91       	pop	r28
     62c:	08 95       	ret

0000062e <printAt>:
     62e:	ef 92       	push	r14
     630:	ff 92       	push	r15
     632:	0f 93       	push	r16
     634:	1f 93       	push	r17
     636:	cf 93       	push	r28
     638:	df 93       	push	r29
     63a:	ec 01       	movw	r28, r24
     63c:	7b 01       	movw	r14, r22
     63e:	cb 01       	movw	r24, r22
     640:	64 e6       	ldi	r22, 0x64	; 100
     642:	70 e0       	ldi	r23, 0x00	; 0
     644:	0e 94 c2 10 	call	0x2184	; 0x2184 <__divmodhi4>
     648:	0a e0       	ldi	r16, 0x0A	; 10
     64a:	10 e0       	ldi	r17, 0x00	; 0
     64c:	b8 01       	movw	r22, r16
     64e:	0e 94 c2 10 	call	0x2184	; 0x2184 <__divmodhi4>
     652:	86 2f       	mov	r24, r22
     654:	be 01       	movw	r22, r28
     656:	80 5d       	subi	r24, 0xD0	; 208
     658:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     65c:	21 96       	adiw	r28, 0x01	; 1
     65e:	c7 01       	movw	r24, r14
     660:	b8 01       	movw	r22, r16
     662:	0e 94 c2 10 	call	0x2184	; 0x2184 <__divmodhi4>
     666:	be 01       	movw	r22, r28
     668:	80 5d       	subi	r24, 0xD0	; 208
     66a:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	08 95       	ret

0000067c <initLCD>:
     67c:	e1 e6       	ldi	r30, 0x61	; 97
     67e:	f0 e0       	ldi	r31, 0x00	; 0
     680:	80 e8       	ldi	r24, 0x80	; 128
     682:	80 83       	st	Z, r24
     684:	10 82       	st	Z, r1
     686:	8f e0       	ldi	r24, 0x0F	; 15
     688:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     68c:	87 eb       	ldi	r24, 0xB7	; 183
     68e:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     692:	87 e0       	ldi	r24, 0x07	; 7
     694:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
     698:	80 ec       	ldi	r24, 0xC0	; 192
     69a:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7fc0f4>
     6a4:	60 e0       	ldi	r22, 0x00	; 0
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	80 e3       	ldi	r24, 0x30	; 48
     6aa:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     6ae:	61 e0       	ldi	r22, 0x01	; 1
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	80 e3       	ldi	r24, 0x30	; 48
     6b4:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     6b8:	62 e0       	ldi	r22, 0x02	; 2
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	80 e3       	ldi	r24, 0x30	; 48
     6be:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     6c2:	63 e0       	ldi	r22, 0x03	; 3
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	80 e3       	ldi	r24, 0x30	; 48
     6c8:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     6cc:	64 e0       	ldi	r22, 0x04	; 4
     6ce:	70 e0       	ldi	r23, 0x00	; 0
     6d0:	80 e3       	ldi	r24, 0x30	; 48
     6d2:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     6d6:	65 e0       	ldi	r22, 0x05	; 5
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	80 e3       	ldi	r24, 0x30	; 48
     6dc:	0e 94 bd 02 	call	0x57a	; 0x57a <writeChar>
     6e0:	08 95       	ret

000006e2 <init>:
     6e2:	80 e5       	ldi	r24, 0x50	; 80
     6e4:	8d b9       	out	0x0d, r24	; 13
     6e6:	0e 94 3e 03 	call	0x67c	; 0x67c <initLCD>
     6ea:	08 95       	ret

000006ec <displayNorthQueue>:
void displayNorthQueue (GUI *self,int num){
		printAt(0,num);
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 17 03 	call	0x62e	; 0x62e <printAt>
     6f4:	08 95       	ret

000006f6 <displaySouthQueue>:
}

void displaySouthQueue (GUI *self,int num){
		printAt(4,num);
     6f6:	84 e0       	ldi	r24, 0x04	; 4
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 17 03 	call	0x62e	; 0x62e <printAt>
     6fe:	08 95       	ret

00000700 <displayBridgeQueue>:
}

void displayBridgeQueue (GUI *self,int num){
		printAt(2,num);
     700:	82 e0       	ldi	r24, 0x02	; 2
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	0e 94 17 03 	call	0x62e	; 0x62e <printAt>
     708:	08 95       	ret

0000070a <sensorInterupt>:


#include "InputHandler.h"
#include <avr/io.h>

void sensorInterupt (InputHandler *self){
     70a:	cf 92       	push	r12
     70c:	df 92       	push	r13
     70e:	ef 92       	push	r14
     710:	ff 92       	push	r15
     712:	0f 93       	push	r16
     714:	1f 93       	push	r17
     716:	cf 93       	push	r28
     718:	df 93       	push	r29
     71a:	ec 01       	movw	r28, r24
	
	if ( UDR0 & northCar ){
     71c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     720:	80 ff       	sbrs	r24, 0
     722:	13 c0       	rjmp	.+38     	; 0x74a <sensorInterupt+0x40>
		// add to Nqueue
		ASYNC(self->controller, addQueue, 1);
     724:	0c 81       	ldd	r16, Y+4	; 0x04
     726:	1d 81       	ldd	r17, Y+5	; 0x05
     728:	cc 24       	eor	r12, r12
     72a:	c3 94       	inc	r12
     72c:	d1 2c       	mov	r13, r1
     72e:	0f 2e       	mov	r0, r31
     730:	fd e4       	ldi	r31, 0x4D	; 77
     732:	ef 2e       	mov	r14, r31
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	ff 2e       	mov	r15, r31
     738:	f0 2d       	mov	r31, r0
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	a9 01       	movw	r20, r18
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	cb 01       	movw	r24, r22
     746:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
		
	}
	
	if ( UDR0 & northBridge ){
     74a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     74e:	81 ff       	sbrs	r24, 1
     750:	13 c0       	rjmp	.+38     	; 0x778 <sensorInterupt+0x6e>
		// North car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 1);
     752:	0c 81       	ldd	r16, Y+4	; 0x04
     754:	1d 81       	ldd	r17, Y+5	; 0x05
     756:	cc 24       	eor	r12, r12
     758:	c3 94       	inc	r12
     75a:	d1 2c       	mov	r13, r1
     75c:	0f 2e       	mov	r0, r31
     75e:	f3 e4       	ldi	r31, 0x43	; 67
     760:	ef 2e       	mov	r14, r31
     762:	f1 e0       	ldi	r31, 0x01	; 1
     764:	ff 2e       	mov	r15, r31
     766:	f0 2d       	mov	r31, r0
     768:	20 e0       	ldi	r18, 0x00	; 0
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	a9 01       	movw	r20, r18
     76e:	60 e0       	ldi	r22, 0x00	; 0
     770:	70 e0       	ldi	r23, 0x00	; 0
     772:	cb 01       	movw	r24, r22
     774:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
		
		
	}
	
	if ( UDR0 & southCar ){
     778:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     77c:	82 ff       	sbrs	r24, 2
     77e:	14 c0       	rjmp	.+40     	; 0x7a8 <sensorInterupt+0x9e>
		// add to Squeue
		ASYNC(self->controller, addQueue, 2);
     780:	0c 81       	ldd	r16, Y+4	; 0x04
     782:	1d 81       	ldd	r17, Y+5	; 0x05
     784:	68 94       	set
     786:	cc 24       	eor	r12, r12
     788:	c1 f8       	bld	r12, 1
     78a:	d1 2c       	mov	r13, r1
     78c:	0f 2e       	mov	r0, r31
     78e:	fd e4       	ldi	r31, 0x4D	; 77
     790:	ef 2e       	mov	r14, r31
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	ff 2e       	mov	r15, r31
     796:	f0 2d       	mov	r31, r0
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	a9 01       	movw	r20, r18
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	cb 01       	movw	r24, r22
     7a4:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	}
	
	if ( UDR0 & southBridge ){
     7a8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     7ac:	83 ff       	sbrs	r24, 3
     7ae:	14 c0       	rjmp	.+40     	; 0x7d8 <sensorInterupt+0xce>
		// South car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 2);
     7b0:	0c 81       	ldd	r16, Y+4	; 0x04
     7b2:	1d 81       	ldd	r17, Y+5	; 0x05
     7b4:	68 94       	set
     7b6:	cc 24       	eor	r12, r12
     7b8:	c1 f8       	bld	r12, 1
     7ba:	d1 2c       	mov	r13, r1
     7bc:	0f 2e       	mov	r0, r31
     7be:	f3 e4       	ldi	r31, 0x43	; 67
     7c0:	ef 2e       	mov	r14, r31
     7c2:	f1 e0       	ldi	r31, 0x01	; 1
     7c4:	ff 2e       	mov	r15, r31
     7c6:	f0 2d       	mov	r31, r0
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	a9 01       	movw	r20, r18
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	70 e0       	ldi	r23, 0x00	; 0
     7d2:	cb 01       	movw	r24, r22
     7d4:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
	}
}
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	1f 91       	pop	r17
     7de:	0f 91       	pop	r16
     7e0:	ff 90       	pop	r15
     7e2:	ef 90       	pop	r14
     7e4:	df 90       	pop	r13
     7e6:	cf 90       	pop	r12
     7e8:	08 95       	ret

000007ea <main>:
#include "OutputHandler.h"
#include "InputHandler.h"
#include "TinyTimber.h"

int main(void)
{
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
     7f6:	a6 97       	sbiw	r28, 0x26	; 38
     7f8:	0f b6       	in	r0, 0x3f	; 63
     7fa:	f8 94       	cli
     7fc:	de bf       	out	0x3e, r29	; 62
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	cd bf       	out	0x3d, r28	; 61
 
  GUI gui = initGUI();
     802:	1a 82       	std	Y+2, r1	; 0x02
     804:	19 82       	std	Y+1, r1	; 0x01
     806:	1c 82       	std	Y+4, r1	; 0x04
     808:	1b 82       	std	Y+3, r1	; 0x03
     80a:	1e 82       	std	Y+6, r1	; 0x06
     80c:	1d 82       	std	Y+5, r1	; 0x05
  
  OutputHandler opH = initOutputHandler();
     80e:	18 86       	std	Y+8, r1	; 0x08
     810:	1f 82       	std	Y+7, r1	; 0x07
     812:	1a 86       	std	Y+10, r1	; 0x0a
     814:	19 86       	std	Y+9, r1	; 0x09
  
  Controller controller = initController(&opH, &gui);
     816:	1c 86       	std	Y+12, r1	; 0x0c
     818:	1b 86       	std	Y+11, r1	; 0x0b
     81a:	1e 86       	std	Y+14, r1	; 0x0e
     81c:	1d 86       	std	Y+13, r1	; 0x0d
     81e:	18 8a       	std	Y+16, r1	; 0x10
     820:	1f 86       	std	Y+15, r1	; 0x0f
     822:	84 e2       	ldi	r24, 0x24	; 36
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	9a 8b       	std	Y+18, r25	; 0x12
     828:	89 8b       	std	Y+17, r24	; 0x11
     82a:	85 e0       	ldi	r24, 0x05	; 5
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	9c 8b       	std	Y+20, r25	; 0x14
     830:	8b 8b       	std	Y+19, r24	; 0x13
     832:	1e 8a       	std	Y+22, r1	; 0x16
     834:	1d 8a       	std	Y+21, r1	; 0x15
     836:	18 8e       	std	Y+24, r1	; 0x18
     838:	1f 8a       	std	Y+23, r1	; 0x17
     83a:	1a 8e       	std	Y+26, r1	; 0x1a
     83c:	19 8e       	std	Y+25, r1	; 0x19
     83e:	ce 01       	movw	r24, r28
     840:	07 96       	adiw	r24, 0x07	; 7
     842:	9c 8f       	std	Y+28, r25	; 0x1c
     844:	8b 8f       	std	Y+27, r24	; 0x1b
     846:	06 97       	sbiw	r24, 0x06	; 6
     848:	9e 8f       	std	Y+30, r25	; 0x1e
     84a:	8d 8f       	std	Y+29, r24	; 0x1d

  InputHandler inputHandler = initInputHandler(&controller, &gui);
     84c:	18 a2       	std	Y+32, r1	; 0x20
     84e:	1f 8e       	std	Y+31, r1	; 0x1f
     850:	1a a2       	std	Y+34, r1	; 0x22
     852:	19 a2       	std	Y+33, r1	; 0x21
     854:	8e 01       	movw	r16, r28
     856:	05 5f       	subi	r16, 0xF5	; 245
     858:	1f 4f       	sbci	r17, 0xFF	; 255
     85a:	1c a3       	std	Y+36, r17	; 0x24
     85c:	0b a3       	std	Y+35, r16	; 0x23
     85e:	9e a3       	std	Y+38, r25	; 0x26
     860:	8d a3       	std	Y+37, r24	; 0x25
  
  INSTALL (&inputHandler, sensorInterupt, IRQ_USART0_RX);
     862:	48 e0       	ldi	r20, 0x08	; 8
     864:	65 e8       	ldi	r22, 0x85	; 133
     866:	73 e0       	ldi	r23, 0x03	; 3
     868:	4e 96       	adiw	r24, 0x1e	; 30
     86a:	0e 94 90 10 	call	0x2120	; 0x2120 <install>
  
  return TINYTIMBER(&controller, initialize, NULL);
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	6d e5       	ldi	r22, 0x5D	; 93
     874:	72 e0       	ldi	r23, 0x02	; 2
     876:	c8 01       	movw	r24, r16
     878:	0e 94 ab 10 	call	0x2156	; 0x2156 <tinytimber>

	
}
     87c:	a6 96       	adiw	r28, 0x26	; 38
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	f8 94       	cli
     882:	de bf       	out	0x3e, r29	; 62
     884:	0f be       	out	0x3f, r0	; 63
     886:	cd bf       	out	0x3d, r28	; 61
     888:	df 91       	pop	r29
     88a:	cf 91       	pop	r28
     88c:	1f 91       	pop	r17
     88e:	0f 91       	pop	r16
     890:	08 95       	ret

00000892 <outputLights>:
 */ 
#include "OutputHandler.h"

void outputLights(OutputHandler *self, int lights){
	
	if (lights == 0){ // North and south is Red 
     892:	61 15       	cp	r22, r1
     894:	71 05       	cpc	r23, r1
     896:	19 f4       	brne	.+6      	; 0x89e <outputLights+0xc>
		UDR0 = 0B1010;
     898:	8a e0       	ldi	r24, 0x0A	; 10
     89a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	}
	if (lights == 1){ // North is Green south is Red
     89e:	61 30       	cpi	r22, 0x01	; 1
     8a0:	71 05       	cpc	r23, r1
     8a2:	19 f4       	brne	.+6      	; 0x8aa <outputLights+0x18>
		UDR0 = 0B1001;
     8a4:	89 e0       	ldi	r24, 0x09	; 9
     8a6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
	}
	if (lights == 2){ // North is Red south is Green
     8aa:	62 30       	cpi	r22, 0x02	; 2
     8ac:	71 05       	cpc	r23, r1
     8ae:	19 f4       	brne	.+6      	; 0x8b6 <outputLights+0x24>
		UDR0 = 0B0110;	
     8b0:	86 e0       	ldi	r24, 0x06	; 6
     8b2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     8b6:	08 95       	ret

000008b8 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	00 d0       	rcall	.+0      	; 0x8be <initialize+0x6>
     8be:	00 d0       	rcall	.+0      	; 0x8c0 <initialize+0x8>
     8c0:	cd b7       	in	r28, 0x3d	; 61
     8c2:	de b7       	in	r29, 0x3e	; 62
     8c4:	80 e0       	ldi	r24, 0x00	; 0
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	18 c0       	rjmp	.+48     	; 0x8fa <initialize+0x42>
     8ca:	ac 01       	movw	r20, r24
     8cc:	4f 5f       	subi	r20, 0xFF	; 255
     8ce:	5f 4f       	sbci	r21, 0xFF	; 255
     8d0:	9a 01       	movw	r18, r20
     8d2:	22 95       	swap	r18
     8d4:	32 95       	swap	r19
     8d6:	30 7f       	andi	r19, 0xF0	; 240
     8d8:	32 27       	eor	r19, r18
     8da:	20 7f       	andi	r18, 0xF0	; 240
     8dc:	32 27       	eor	r19, r18
     8de:	2f 5f       	subi	r18, 0xFF	; 255
     8e0:	3d 4f       	sbci	r19, 0xFD	; 253
     8e2:	82 95       	swap	r24
     8e4:	92 95       	swap	r25
     8e6:	90 7f       	andi	r25, 0xF0	; 240
     8e8:	98 27       	eor	r25, r24
     8ea:	80 7f       	andi	r24, 0xF0	; 240
     8ec:	98 27       	eor	r25, r24
     8ee:	fc 01       	movw	r30, r24
     8f0:	ef 5f       	subi	r30, 0xFF	; 255
     8f2:	fd 4f       	sbci	r31, 0xFD	; 253
     8f4:	31 83       	std	Z+1, r19	; 0x01
     8f6:	20 83       	st	Z, r18
     8f8:	ca 01       	movw	r24, r20
     8fa:	8e 30       	cpi	r24, 0x0E	; 14
     8fc:	91 05       	cpc	r25, r1
     8fe:	2c f3       	brlt	.-54     	; 0x8ca <initialize+0x12>
     900:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     904:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	15 c0       	rjmp	.+42     	; 0x938 <initialize+0x80>
     90e:	ac 01       	movw	r20, r24
     910:	4f 5f       	subi	r20, 0xFF	; 255
     912:	5f 4f       	sbci	r21, 0xFF	; 255
     914:	6d e1       	ldi	r22, 0x1D	; 29
     916:	64 9f       	mul	r22, r20
     918:	90 01       	movw	r18, r0
     91a:	65 9f       	mul	r22, r21
     91c:	30 0d       	add	r19, r0
     91e:	11 24       	eor	r1, r1
     920:	24 5b       	subi	r18, 0xB4	; 180
     922:	3e 4f       	sbci	r19, 0xFE	; 254
     924:	68 9f       	mul	r22, r24
     926:	f0 01       	movw	r30, r0
     928:	69 9f       	mul	r22, r25
     92a:	f0 0d       	add	r31, r0
     92c:	11 24       	eor	r1, r1
     92e:	e4 5b       	subi	r30, 0xB4	; 180
     930:	fe 4f       	sbci	r31, 0xFE	; 254
     932:	31 83       	std	Z+1, r19	; 0x01
     934:	20 83       	st	Z, r18
     936:	ca 01       	movw	r24, r20
     938:	83 30       	cpi	r24, 0x03	; 3
     93a:	91 05       	cpc	r25, r1
     93c:	44 f3       	brlt	.-48     	; 0x90e <initialize+0x56>
     93e:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <threads+0x58>
     942:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <threads+0x57>
     946:	1a 82       	std	Y+2, r1	; 0x02
     948:	19 82       	std	Y+1, r1	; 0x01
     94a:	32 c0       	rjmp	.+100    	; 0x9b0 <initialize+0xf8>
     94c:	2d e1       	ldi	r18, 0x1D	; 29
     94e:	49 81       	ldd	r20, Y+1	; 0x01
     950:	5a 81       	ldd	r21, Y+2	; 0x02
     952:	24 9f       	mul	r18, r20
     954:	c0 01       	movw	r24, r0
     956:	25 9f       	mul	r18, r21
     958:	90 0d       	add	r25, r0
     95a:	11 24       	eor	r1, r1
     95c:	fc 01       	movw	r30, r24
     95e:	ee 5a       	subi	r30, 0xAE	; 174
     960:	fe 4f       	sbci	r31, 0xFE	; 254
     962:	fc 83       	std	Y+4, r31	; 0x04
     964:	eb 83       	std	Y+3, r30	; 0x03
     966:	cf 01       	movw	r24, r30
     968:	0e 94 ea 10 	call	0x21d4	; 0x21d4 <setjmp>
     96c:	20 e6       	ldi	r18, 0x60	; 96
     96e:	49 81       	ldd	r20, Y+1	; 0x01
     970:	5a 81       	ldd	r21, Y+2	; 0x02
     972:	24 9f       	mul	r18, r20
     974:	c0 01       	movw	r24, r0
     976:	25 9f       	mul	r18, r21
     978:	90 0d       	add	r25, r0
     97a:	11 24       	eor	r1, r1
     97c:	83 5b       	subi	r24, 0xB3	; 179
     97e:	9c 4f       	sbci	r25, 0xFC	; 252
     980:	eb 81       	ldd	r30, Y+3	; 0x03
     982:	fc 81       	ldd	r31, Y+4	; 0x04
     984:	91 8b       	std	Z+17, r25	; 0x11
     986:	80 8b       	std	Z+16, r24	; 0x10
     988:	93 8b       	std	Z+19, r25	; 0x13
     98a:	82 8b       	std	Z+18, r24	; 0x12
     98c:	88 e3       	ldi	r24, 0x38	; 56
     98e:	90 e1       	ldi	r25, 0x10	; 16
     990:	96 8b       	std	Z+22, r25	; 0x16
     992:	85 8b       	std	Z+21, r24	; 0x15
     994:	8d e1       	ldi	r24, 0x1D	; 29
     996:	84 9f       	mul	r24, r20
     998:	f0 01       	movw	r30, r0
     99a:	85 9f       	mul	r24, r21
     99c:	f0 0d       	add	r31, r0
     99e:	11 24       	eor	r1, r1
     9a0:	e4 5b       	subi	r30, 0xB4	; 180
     9a2:	fe 4f       	sbci	r31, 0xFE	; 254
     9a4:	15 82       	std	Z+5, r1	; 0x05
     9a6:	14 82       	std	Z+4, r1	; 0x04
     9a8:	4f 5f       	subi	r20, 0xFF	; 255
     9aa:	5f 4f       	sbci	r21, 0xFF	; 255
     9ac:	5a 83       	std	Y+2, r21	; 0x02
     9ae:	49 83       	std	Y+1, r20	; 0x01
     9b0:	29 81       	ldd	r18, Y+1	; 0x01
     9b2:	3a 81       	ldd	r19, Y+2	; 0x02
     9b4:	24 30       	cpi	r18, 0x04	; 4
     9b6:	31 05       	cpc	r19, r1
     9b8:	4c f2       	brlt	.-110    	; 0x94c <initialize+0x94>
     9ba:	e4 ee       	ldi	r30, 0xE4	; 228
     9bc:	f1 e0       	ldi	r31, 0x01	; 1
     9be:	11 82       	std	Z+1, r1	; 0x01
     9c0:	10 82       	st	Z, r1
     9c2:	15 82       	std	Z+5, r1	; 0x05
     9c4:	14 82       	std	Z+4, r1	; 0x04
     9c6:	13 82       	std	Z+3, r1	; 0x03
     9c8:	12 82       	std	Z+2, r1	; 0x02
     9ca:	e1 e6       	ldi	r30, 0x61	; 97
     9cc:	f0 e0       	ldi	r31, 0x00	; 0
     9ce:	80 e8       	ldi	r24, 0x80	; 128
     9d0:	80 83       	st	Z, r24
     9d2:	10 82       	st	Z, r1
     9d4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9d8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9dc:	84 e0       	ldi	r24, 0x04	; 4
     9de:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     9e8:	0f 90       	pop	r0
     9ea:	0f 90       	pop	r0
     9ec:	0f 90       	pop	r0
     9ee:	0f 90       	pop	r0
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	08 95       	ret

000009f6 <dispatch>:
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	00 d0       	rcall	.+0      	; 0x9fc <dispatch+0x6>
     9fc:	cd b7       	in	r28, 0x3d	; 61
     9fe:	de b7       	in	r29, 0x3e	; 62
     a00:	9a 83       	std	Y+2, r25	; 0x02
     a02:	89 83       	std	Y+1, r24	; 0x01
     a04:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a08:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a0c:	06 96       	adiw	r24, 0x06	; 6
     a0e:	0e 94 ea 10 	call	0x21d4	; 0x21d4 <setjmp>
     a12:	89 2b       	or	r24, r25
     a14:	59 f4       	brne	.+22     	; 0xa2c <dispatch+0x36>
     a16:	89 81       	ldd	r24, Y+1	; 0x01
     a18:	9a 81       	ldd	r25, Y+2	; 0x02
     a1a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a1e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     a22:	61 e0       	ldi	r22, 0x01	; 1
     a24:	70 e0       	ldi	r23, 0x00	; 0
     a26:	06 96       	adiw	r24, 0x06	; 6
     a28:	0e 94 0a 11 	call	0x2214	; 0x2214 <longjmp>
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	df 91       	pop	r29
     a32:	cf 91       	pop	r28
     a34:	08 95       	ret

00000a36 <enqueueByDeadline>:
     a36:	0f 93       	push	r16
     a38:	1f 93       	push	r17
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	dc 01       	movw	r26, r24
     a40:	cb 01       	movw	r24, r22
     a42:	eb 01       	movw	r28, r22
     a44:	e8 81       	ld	r30, Y
     a46:	f9 81       	ldd	r31, Y+1	; 0x01
     a48:	c0 e0       	ldi	r28, 0x00	; 0
     a4a:	d0 e0       	ldi	r29, 0x00	; 0
     a4c:	04 c0       	rjmp	.+8      	; 0xa56 <enqueueByDeadline+0x20>
     a4e:	ef 01       	movw	r28, r30
     a50:	01 90       	ld	r0, Z+
     a52:	f0 81       	ld	r31, Z
     a54:	e0 2d       	mov	r30, r0
     a56:	30 97       	sbiw	r30, 0x00	; 0
     a58:	79 f0       	breq	.+30     	; 0xa78 <enqueueByDeadline+0x42>
     a5a:	06 81       	ldd	r16, Z+6	; 0x06
     a5c:	17 81       	ldd	r17, Z+7	; 0x07
     a5e:	20 85       	ldd	r18, Z+8	; 0x08
     a60:	31 85       	ldd	r19, Z+9	; 0x09
     a62:	16 96       	adiw	r26, 0x06	; 6
     a64:	4d 91       	ld	r20, X+
     a66:	5d 91       	ld	r21, X+
     a68:	6d 91       	ld	r22, X+
     a6a:	7c 91       	ld	r23, X
     a6c:	19 97       	sbiw	r26, 0x09	; 9
     a6e:	40 17       	cp	r20, r16
     a70:	51 07       	cpc	r21, r17
     a72:	62 07       	cpc	r22, r18
     a74:	73 07       	cpc	r23, r19
     a76:	5c f7       	brge	.-42     	; 0xa4e <enqueueByDeadline+0x18>
     a78:	11 96       	adiw	r26, 0x01	; 1
     a7a:	fc 93       	st	X, r31
     a7c:	ee 93       	st	-X, r30
     a7e:	20 97       	sbiw	r28, 0x00	; 0
     a80:	21 f4       	brne	.+8      	; 0xa8a <enqueueByDeadline+0x54>
     a82:	fc 01       	movw	r30, r24
     a84:	b1 83       	std	Z+1, r27	; 0x01
     a86:	a0 83       	st	Z, r26
     a88:	02 c0       	rjmp	.+4      	; 0xa8e <enqueueByDeadline+0x58>
     a8a:	b9 83       	std	Y+1, r27	; 0x01
     a8c:	a8 83       	st	Y, r26
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	1f 91       	pop	r17
     a94:	0f 91       	pop	r16
     a96:	08 95       	ret

00000a98 <enqueueByBaseline>:
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	dc 01       	movw	r26, r24
     aa2:	cb 01       	movw	r24, r22
     aa4:	eb 01       	movw	r28, r22
     aa6:	e8 81       	ld	r30, Y
     aa8:	f9 81       	ldd	r31, Y+1	; 0x01
     aaa:	c0 e0       	ldi	r28, 0x00	; 0
     aac:	d0 e0       	ldi	r29, 0x00	; 0
     aae:	04 c0       	rjmp	.+8      	; 0xab8 <enqueueByBaseline+0x20>
     ab0:	ef 01       	movw	r28, r30
     ab2:	01 90       	ld	r0, Z+
     ab4:	f0 81       	ld	r31, Z
     ab6:	e0 2d       	mov	r30, r0
     ab8:	30 97       	sbiw	r30, 0x00	; 0
     aba:	79 f0       	breq	.+30     	; 0xada <enqueueByBaseline+0x42>
     abc:	02 81       	ldd	r16, Z+2	; 0x02
     abe:	13 81       	ldd	r17, Z+3	; 0x03
     ac0:	24 81       	ldd	r18, Z+4	; 0x04
     ac2:	35 81       	ldd	r19, Z+5	; 0x05
     ac4:	12 96       	adiw	r26, 0x02	; 2
     ac6:	4d 91       	ld	r20, X+
     ac8:	5d 91       	ld	r21, X+
     aca:	6d 91       	ld	r22, X+
     acc:	7c 91       	ld	r23, X
     ace:	15 97       	sbiw	r26, 0x05	; 5
     ad0:	40 17       	cp	r20, r16
     ad2:	51 07       	cpc	r21, r17
     ad4:	62 07       	cpc	r22, r18
     ad6:	73 07       	cpc	r23, r19
     ad8:	5c f7       	brge	.-42     	; 0xab0 <enqueueByBaseline+0x18>
     ada:	11 96       	adiw	r26, 0x01	; 1
     adc:	fc 93       	st	X, r31
     ade:	ee 93       	st	-X, r30
     ae0:	20 97       	sbiw	r28, 0x00	; 0
     ae2:	21 f4       	brne	.+8      	; 0xaec <enqueueByBaseline+0x54>
     ae4:	fc 01       	movw	r30, r24
     ae6:	b1 83       	std	Z+1, r27	; 0x01
     ae8:	a0 83       	st	Z, r26
     aea:	02 c0       	rjmp	.+4      	; 0xaf0 <enqueueByBaseline+0x58>
     aec:	b9 83       	std	Y+1, r27	; 0x01
     aee:	a8 83       	st	Y, r26
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	0f 91       	pop	r16
     af8:	08 95       	ret

00000afa <dequeue>:
     afa:	dc 01       	movw	r26, r24
     afc:	ed 91       	ld	r30, X+
     afe:	fc 91       	ld	r31, X
     b00:	11 97       	sbiw	r26, 0x01	; 1
     b02:	30 97       	sbiw	r30, 0x00	; 0
     b04:	59 f4       	brne	.+22     	; 0xb1c <dequeue+0x22>
     b06:	8f ef       	ldi	r24, 0xFF	; 255
     b08:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     b0c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     b10:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	83 bf       	out	0x33, r24	; 51
     b18:	88 95       	sleep
     b1a:	fc cf       	rjmp	.-8      	; 0xb14 <dequeue+0x1a>
     b1c:	20 81       	ld	r18, Z
     b1e:	31 81       	ldd	r19, Z+1	; 0x01
     b20:	2d 93       	st	X+, r18
     b22:	3c 93       	st	X, r19
     b24:	cf 01       	movw	r24, r30
     b26:	08 95       	ret

00000b28 <insert>:
     b28:	fb 01       	movw	r30, r22
     b2a:	20 81       	ld	r18, Z
     b2c:	31 81       	ldd	r19, Z+1	; 0x01
     b2e:	fc 01       	movw	r30, r24
     b30:	31 83       	std	Z+1, r19	; 0x01
     b32:	20 83       	st	Z, r18
     b34:	fb 01       	movw	r30, r22
     b36:	91 83       	std	Z+1, r25	; 0x01
     b38:	80 83       	st	Z, r24
     b3a:	08 95       	ret

00000b3c <push>:
     b3c:	fb 01       	movw	r30, r22
     b3e:	20 81       	ld	r18, Z
     b40:	31 81       	ldd	r19, Z+1	; 0x01
     b42:	fc 01       	movw	r30, r24
     b44:	31 83       	std	Z+1, r19	; 0x01
     b46:	20 83       	st	Z, r18
     b48:	fb 01       	movw	r30, r22
     b4a:	91 83       	std	Z+1, r25	; 0x01
     b4c:	80 83       	st	Z, r24
     b4e:	08 95       	ret

00000b50 <pop>:
     b50:	dc 01       	movw	r26, r24
     b52:	ed 91       	ld	r30, X+
     b54:	fc 91       	ld	r31, X
     b56:	11 97       	sbiw	r26, 0x01	; 1
     b58:	20 81       	ld	r18, Z
     b5a:	31 81       	ldd	r19, Z+1	; 0x01
     b5c:	2d 93       	st	X+, r18
     b5e:	3c 93       	st	X, r19
     b60:	cf 01       	movw	r24, r30
     b62:	08 95       	ret

00000b64 <schedule>:
     b64:	cf 93       	push	r28
     b66:	df 93       	push	r29
     b68:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     b6c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     b70:	c2 81       	ldd	r28, Z+2	; 0x02
     b72:	d3 81       	ldd	r29, Z+3	; 0x03
     b74:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     b78:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     b7c:	30 97       	sbiw	r30, 0x00	; 0
     b7e:	19 f1       	breq	.+70     	; 0xbc6 <schedule+0x62>
     b80:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     b84:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     b88:	89 2b       	or	r24, r25
     b8a:	e9 f0       	breq	.+58     	; 0xbc6 <schedule+0x62>
     b8c:	20 97       	sbiw	r28, 0x00	; 0
     b8e:	69 f0       	breq	.+26     	; 0xbaa <schedule+0x46>
     b90:	86 81       	ldd	r24, Z+6	; 0x06
     b92:	97 81       	ldd	r25, Z+7	; 0x07
     b94:	a0 85       	ldd	r26, Z+8	; 0x08
     b96:	b1 85       	ldd	r27, Z+9	; 0x09
     b98:	4e 81       	ldd	r20, Y+6	; 0x06
     b9a:	5f 81       	ldd	r21, Y+7	; 0x07
     b9c:	68 85       	ldd	r22, Y+8	; 0x08
     b9e:	79 85       	ldd	r23, Y+9	; 0x09
     ba0:	84 1b       	sub	r24, r20
     ba2:	95 0b       	sbc	r25, r21
     ba4:	a6 0b       	sbc	r26, r22
     ba6:	b7 0b       	sbc	r27, r23
     ba8:	72 f4       	brpl	.+28     	; 0xbc6 <schedule+0x62>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	91 e0       	ldi	r25, 0x01	; 1
     bae:	0e 94 a8 05 	call	0xb50	; 0xb50 <pop>
     bb2:	62 e0       	ldi	r22, 0x02	; 2
     bb4:	71 e0       	ldi	r23, 0x01	; 1
     bb6:	0e 94 9e 05 	call	0xb3c	; 0xb3c <push>
     bba:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     bbe:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     bc2:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <dispatch>
     bc6:	df 91       	pop	r29
     bc8:	cf 91       	pop	r28
     bca:	08 95       	ret

00000bcc <__vector_1>:
     bcc:	1f 92       	push	r1
     bce:	0f 92       	push	r0
     bd0:	0f b6       	in	r0, 0x3f	; 63
     bd2:	0f 92       	push	r0
     bd4:	11 24       	eor	r1, r1
     bd6:	0f 93       	push	r16
     bd8:	1f 93       	push	r17
     bda:	2f 93       	push	r18
     bdc:	3f 93       	push	r19
     bde:	4f 93       	push	r20
     be0:	5f 93       	push	r21
     be2:	6f 93       	push	r22
     be4:	7f 93       	push	r23
     be6:	8f 93       	push	r24
     be8:	9f 93       	push	r25
     bea:	af 93       	push	r26
     bec:	bf 93       	push	r27
     bee:	ef 93       	push	r30
     bf0:	ff 93       	push	r31
     bf2:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     bf6:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     bfa:	ac 01       	movw	r20, r24
     bfc:	09 2e       	mov	r0, r25
     bfe:	00 0c       	add	r0, r0
     c00:	66 0b       	sbc	r22, r22
     c02:	77 0b       	sbc	r23, r23
     c04:	9a 01       	movw	r18, r20
     c06:	11 27       	eor	r17, r17
     c08:	00 27       	eor	r16, r16
     c0a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c0e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	70 e0       	ldi	r23, 0x00	; 0
     c16:	40 2b       	or	r20, r16
     c18:	51 2b       	or	r21, r17
     c1a:	62 2b       	or	r22, r18
     c1c:	73 2b       	or	r23, r19
     c1e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     c22:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     c26:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     c2a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     c2e:	b0 9b       	sbis	0x16, 0	; 22
     c30:	1a c0       	rjmp	.+52     	; 0xc66 <__vector_1+0x9a>
     c32:	01 96       	adiw	r24, 0x01	; 1
     c34:	09 2e       	mov	r0, r25
     c36:	00 0c       	add	r0, r0
     c38:	aa 0b       	sbc	r26, r26
     c3a:	bb 0b       	sbc	r27, r27
     c3c:	bc 01       	movw	r22, r24
     c3e:	55 27       	eor	r21, r21
     c40:	44 27       	eor	r20, r20
     c42:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c46:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c4a:	a0 e0       	ldi	r26, 0x00	; 0
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	84 2b       	or	r24, r20
     c50:	95 2b       	or	r25, r21
     c52:	a6 2b       	or	r26, r22
     c54:	b7 2b       	or	r27, r23
     c56:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     c5a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     c5e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     c62:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     c66:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     c6a:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     c6e:	30 97       	sbiw	r30, 0x00	; 0
     c70:	39 f0       	breq	.+14     	; 0xc80 <__vector_1+0xb4>
     c72:	60 e0       	ldi	r22, 0x00	; 0
     c74:	70 e0       	ldi	r23, 0x00	; 0
     c76:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     c7a:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     c7e:	09 95       	icall
     c80:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
     c84:	ff 91       	pop	r31
     c86:	ef 91       	pop	r30
     c88:	bf 91       	pop	r27
     c8a:	af 91       	pop	r26
     c8c:	9f 91       	pop	r25
     c8e:	8f 91       	pop	r24
     c90:	7f 91       	pop	r23
     c92:	6f 91       	pop	r22
     c94:	5f 91       	pop	r21
     c96:	4f 91       	pop	r20
     c98:	3f 91       	pop	r19
     c9a:	2f 91       	pop	r18
     c9c:	1f 91       	pop	r17
     c9e:	0f 91       	pop	r16
     ca0:	0f 90       	pop	r0
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	0f 90       	pop	r0
     ca6:	1f 90       	pop	r1
     ca8:	18 95       	reti

00000caa <__vector_2>:
     caa:	1f 92       	push	r1
     cac:	0f 92       	push	r0
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	0f 92       	push	r0
     cb2:	11 24       	eor	r1, r1
     cb4:	0f 93       	push	r16
     cb6:	1f 93       	push	r17
     cb8:	2f 93       	push	r18
     cba:	3f 93       	push	r19
     cbc:	4f 93       	push	r20
     cbe:	5f 93       	push	r21
     cc0:	6f 93       	push	r22
     cc2:	7f 93       	push	r23
     cc4:	8f 93       	push	r24
     cc6:	9f 93       	push	r25
     cc8:	af 93       	push	r26
     cca:	bf 93       	push	r27
     ccc:	ef 93       	push	r30
     cce:	ff 93       	push	r31
     cd0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     cd4:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     cd8:	ac 01       	movw	r20, r24
     cda:	09 2e       	mov	r0, r25
     cdc:	00 0c       	add	r0, r0
     cde:	66 0b       	sbc	r22, r22
     ce0:	77 0b       	sbc	r23, r23
     ce2:	9a 01       	movw	r18, r20
     ce4:	11 27       	eor	r17, r17
     ce6:	00 27       	eor	r16, r16
     ce8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cf0:	60 e0       	ldi	r22, 0x00	; 0
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	40 2b       	or	r20, r16
     cf6:	51 2b       	or	r21, r17
     cf8:	62 2b       	or	r22, r18
     cfa:	73 2b       	or	r23, r19
     cfc:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     d00:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     d04:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     d08:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     d0c:	b0 9b       	sbis	0x16, 0	; 22
     d0e:	1a c0       	rjmp	.+52     	; 0xd44 <__vector_2+0x9a>
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	09 2e       	mov	r0, r25
     d14:	00 0c       	add	r0, r0
     d16:	aa 0b       	sbc	r26, r26
     d18:	bb 0b       	sbc	r27, r27
     d1a:	bc 01       	movw	r22, r24
     d1c:	55 27       	eor	r21, r21
     d1e:	44 27       	eor	r20, r20
     d20:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d24:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d28:	a0 e0       	ldi	r26, 0x00	; 0
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	84 2b       	or	r24, r20
     d2e:	95 2b       	or	r25, r21
     d30:	a6 2b       	or	r26, r22
     d32:	b7 2b       	or	r27, r23
     d34:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     d38:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     d3c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     d40:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     d44:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     d48:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     d4c:	30 97       	sbiw	r30, 0x00	; 0
     d4e:	39 f0       	breq	.+14     	; 0xd5e <__vector_2+0xb4>
     d50:	61 e0       	ldi	r22, 0x01	; 1
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     d58:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     d5c:	09 95       	icall
     d5e:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
     d62:	ff 91       	pop	r31
     d64:	ef 91       	pop	r30
     d66:	bf 91       	pop	r27
     d68:	af 91       	pop	r26
     d6a:	9f 91       	pop	r25
     d6c:	8f 91       	pop	r24
     d6e:	7f 91       	pop	r23
     d70:	6f 91       	pop	r22
     d72:	5f 91       	pop	r21
     d74:	4f 91       	pop	r20
     d76:	3f 91       	pop	r19
     d78:	2f 91       	pop	r18
     d7a:	1f 91       	pop	r17
     d7c:	0f 91       	pop	r16
     d7e:	0f 90       	pop	r0
     d80:	0f be       	out	0x3f, r0	; 63
     d82:	0f 90       	pop	r0
     d84:	1f 90       	pop	r1
     d86:	18 95       	reti

00000d88 <__vector_3>:
     d88:	1f 92       	push	r1
     d8a:	0f 92       	push	r0
     d8c:	0f b6       	in	r0, 0x3f	; 63
     d8e:	0f 92       	push	r0
     d90:	11 24       	eor	r1, r1
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	2f 93       	push	r18
     d98:	3f 93       	push	r19
     d9a:	4f 93       	push	r20
     d9c:	5f 93       	push	r21
     d9e:	6f 93       	push	r22
     da0:	7f 93       	push	r23
     da2:	8f 93       	push	r24
     da4:	9f 93       	push	r25
     da6:	af 93       	push	r26
     da8:	bf 93       	push	r27
     daa:	ef 93       	push	r30
     dac:	ff 93       	push	r31
     dae:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     db2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     db6:	ac 01       	movw	r20, r24
     db8:	09 2e       	mov	r0, r25
     dba:	00 0c       	add	r0, r0
     dbc:	66 0b       	sbc	r22, r22
     dbe:	77 0b       	sbc	r23, r23
     dc0:	9a 01       	movw	r18, r20
     dc2:	11 27       	eor	r17, r17
     dc4:	00 27       	eor	r16, r16
     dc6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dce:	60 e0       	ldi	r22, 0x00	; 0
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	40 2b       	or	r20, r16
     dd4:	51 2b       	or	r21, r17
     dd6:	62 2b       	or	r22, r18
     dd8:	73 2b       	or	r23, r19
     dda:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     dde:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     de2:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     de6:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     dea:	b0 9b       	sbis	0x16, 0	; 22
     dec:	1a c0       	rjmp	.+52     	; 0xe22 <__vector_3+0x9a>
     dee:	01 96       	adiw	r24, 0x01	; 1
     df0:	09 2e       	mov	r0, r25
     df2:	00 0c       	add	r0, r0
     df4:	aa 0b       	sbc	r26, r26
     df6:	bb 0b       	sbc	r27, r27
     df8:	bc 01       	movw	r22, r24
     dfa:	55 27       	eor	r21, r21
     dfc:	44 27       	eor	r20, r20
     dfe:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e02:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e06:	a0 e0       	ldi	r26, 0x00	; 0
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	84 2b       	or	r24, r20
     e0c:	95 2b       	or	r25, r21
     e0e:	a6 2b       	or	r26, r22
     e10:	b7 2b       	or	r27, r23
     e12:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e16:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e1a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e1e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     e22:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     e26:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     e2a:	30 97       	sbiw	r30, 0x00	; 0
     e2c:	39 f0       	breq	.+14     	; 0xe3c <__vector_3+0xb4>
     e2e:	62 e0       	ldi	r22, 0x02	; 2
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     e36:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     e3a:	09 95       	icall
     e3c:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
     e40:	ff 91       	pop	r31
     e42:	ef 91       	pop	r30
     e44:	bf 91       	pop	r27
     e46:	af 91       	pop	r26
     e48:	9f 91       	pop	r25
     e4a:	8f 91       	pop	r24
     e4c:	7f 91       	pop	r23
     e4e:	6f 91       	pop	r22
     e50:	5f 91       	pop	r21
     e52:	4f 91       	pop	r20
     e54:	3f 91       	pop	r19
     e56:	2f 91       	pop	r18
     e58:	1f 91       	pop	r17
     e5a:	0f 91       	pop	r16
     e5c:	0f 90       	pop	r0
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	0f 90       	pop	r0
     e62:	1f 90       	pop	r1
     e64:	18 95       	reti

00000e66 <__vector_4>:
     e66:	1f 92       	push	r1
     e68:	0f 92       	push	r0
     e6a:	0f b6       	in	r0, 0x3f	; 63
     e6c:	0f 92       	push	r0
     e6e:	11 24       	eor	r1, r1
     e70:	0f 93       	push	r16
     e72:	1f 93       	push	r17
     e74:	2f 93       	push	r18
     e76:	3f 93       	push	r19
     e78:	4f 93       	push	r20
     e7a:	5f 93       	push	r21
     e7c:	6f 93       	push	r22
     e7e:	7f 93       	push	r23
     e80:	8f 93       	push	r24
     e82:	9f 93       	push	r25
     e84:	af 93       	push	r26
     e86:	bf 93       	push	r27
     e88:	ef 93       	push	r30
     e8a:	ff 93       	push	r31
     e8c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     e90:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     e94:	ac 01       	movw	r20, r24
     e96:	09 2e       	mov	r0, r25
     e98:	00 0c       	add	r0, r0
     e9a:	66 0b       	sbc	r22, r22
     e9c:	77 0b       	sbc	r23, r23
     e9e:	9a 01       	movw	r18, r20
     ea0:	11 27       	eor	r17, r17
     ea2:	00 27       	eor	r16, r16
     ea4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eac:	60 e0       	ldi	r22, 0x00	; 0
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	40 2b       	or	r20, r16
     eb2:	51 2b       	or	r21, r17
     eb4:	62 2b       	or	r22, r18
     eb6:	73 2b       	or	r23, r19
     eb8:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     ebc:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     ec0:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     ec4:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     ec8:	b0 9b       	sbis	0x16, 0	; 22
     eca:	1a c0       	rjmp	.+52     	; 0xf00 <__vector_4+0x9a>
     ecc:	01 96       	adiw	r24, 0x01	; 1
     ece:	09 2e       	mov	r0, r25
     ed0:	00 0c       	add	r0, r0
     ed2:	aa 0b       	sbc	r26, r26
     ed4:	bb 0b       	sbc	r27, r27
     ed6:	bc 01       	movw	r22, r24
     ed8:	55 27       	eor	r21, r21
     eda:	44 27       	eor	r20, r20
     edc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ee0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ee4:	a0 e0       	ldi	r26, 0x00	; 0
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	84 2b       	or	r24, r20
     eea:	95 2b       	or	r25, r21
     eec:	a6 2b       	or	r26, r22
     eee:	b7 2b       	or	r27, r23
     ef0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     ef4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     ef8:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     efc:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f00:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     f04:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     f08:	30 97       	sbiw	r30, 0x00	; 0
     f0a:	39 f0       	breq	.+14     	; 0xf1a <__vector_4+0xb4>
     f0c:	63 e0       	ldi	r22, 0x03	; 3
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     f14:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     f18:	09 95       	icall
     f1a:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
     f1e:	ff 91       	pop	r31
     f20:	ef 91       	pop	r30
     f22:	bf 91       	pop	r27
     f24:	af 91       	pop	r26
     f26:	9f 91       	pop	r25
     f28:	8f 91       	pop	r24
     f2a:	7f 91       	pop	r23
     f2c:	6f 91       	pop	r22
     f2e:	5f 91       	pop	r21
     f30:	4f 91       	pop	r20
     f32:	3f 91       	pop	r19
     f34:	2f 91       	pop	r18
     f36:	1f 91       	pop	r17
     f38:	0f 91       	pop	r16
     f3a:	0f 90       	pop	r0
     f3c:	0f be       	out	0x3f, r0	; 63
     f3e:	0f 90       	pop	r0
     f40:	1f 90       	pop	r1
     f42:	18 95       	reti

00000f44 <__vector_5>:
     f44:	1f 92       	push	r1
     f46:	0f 92       	push	r0
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	0f 92       	push	r0
     f4c:	11 24       	eor	r1, r1
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	2f 93       	push	r18
     f54:	3f 93       	push	r19
     f56:	4f 93       	push	r20
     f58:	5f 93       	push	r21
     f5a:	6f 93       	push	r22
     f5c:	7f 93       	push	r23
     f5e:	8f 93       	push	r24
     f60:	9f 93       	push	r25
     f62:	af 93       	push	r26
     f64:	bf 93       	push	r27
     f66:	ef 93       	push	r30
     f68:	ff 93       	push	r31
     f6a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
     f6e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
     f72:	ac 01       	movw	r20, r24
     f74:	09 2e       	mov	r0, r25
     f76:	00 0c       	add	r0, r0
     f78:	66 0b       	sbc	r22, r22
     f7a:	77 0b       	sbc	r23, r23
     f7c:	9a 01       	movw	r18, r20
     f7e:	11 27       	eor	r17, r17
     f80:	00 27       	eor	r16, r16
     f82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8a:	60 e0       	ldi	r22, 0x00	; 0
     f8c:	70 e0       	ldi	r23, 0x00	; 0
     f8e:	40 2b       	or	r20, r16
     f90:	51 2b       	or	r21, r17
     f92:	62 2b       	or	r22, r18
     f94:	73 2b       	or	r23, r19
     f96:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
     f9a:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
     f9e:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
     fa2:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
     fa6:	b0 9b       	sbis	0x16, 0	; 22
     fa8:	1a c0       	rjmp	.+52     	; 0xfde <__vector_5+0x9a>
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	09 2e       	mov	r0, r25
     fae:	00 0c       	add	r0, r0
     fb0:	aa 0b       	sbc	r26, r26
     fb2:	bb 0b       	sbc	r27, r27
     fb4:	bc 01       	movw	r22, r24
     fb6:	55 27       	eor	r21, r21
     fb8:	44 27       	eor	r20, r20
     fba:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fbe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fc2:	a0 e0       	ldi	r26, 0x00	; 0
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	84 2b       	or	r24, r20
     fc8:	95 2b       	or	r25, r21
     fca:	a6 2b       	or	r26, r22
     fcc:	b7 2b       	or	r27, r23
     fce:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     fd2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     fd6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     fda:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     fde:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     fe2:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     fe6:	30 97       	sbiw	r30, 0x00	; 0
     fe8:	39 f0       	breq	.+14     	; 0xff8 <__vector_5+0xb4>
     fea:	64 e0       	ldi	r22, 0x04	; 4
     fec:	70 e0       	ldi	r23, 0x00	; 0
     fee:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     ff2:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     ff6:	09 95       	icall
     ff8:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
     ffc:	ff 91       	pop	r31
     ffe:	ef 91       	pop	r30
    1000:	bf 91       	pop	r27
    1002:	af 91       	pop	r26
    1004:	9f 91       	pop	r25
    1006:	8f 91       	pop	r24
    1008:	7f 91       	pop	r23
    100a:	6f 91       	pop	r22
    100c:	5f 91       	pop	r21
    100e:	4f 91       	pop	r20
    1010:	3f 91       	pop	r19
    1012:	2f 91       	pop	r18
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	0f 90       	pop	r0
    101a:	0f be       	out	0x3f, r0	; 63
    101c:	0f 90       	pop	r0
    101e:	1f 90       	pop	r1
    1020:	18 95       	reti

00001022 <__vector_10>:
    1022:	1f 92       	push	r1
    1024:	0f 92       	push	r0
    1026:	0f b6       	in	r0, 0x3f	; 63
    1028:	0f 92       	push	r0
    102a:	11 24       	eor	r1, r1
    102c:	0f 93       	push	r16
    102e:	1f 93       	push	r17
    1030:	2f 93       	push	r18
    1032:	3f 93       	push	r19
    1034:	4f 93       	push	r20
    1036:	5f 93       	push	r21
    1038:	6f 93       	push	r22
    103a:	7f 93       	push	r23
    103c:	8f 93       	push	r24
    103e:	9f 93       	push	r25
    1040:	af 93       	push	r26
    1042:	bf 93       	push	r27
    1044:	ef 93       	push	r30
    1046:	ff 93       	push	r31
    1048:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    104c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1050:	ac 01       	movw	r20, r24
    1052:	09 2e       	mov	r0, r25
    1054:	00 0c       	add	r0, r0
    1056:	66 0b       	sbc	r22, r22
    1058:	77 0b       	sbc	r23, r23
    105a:	9a 01       	movw	r18, r20
    105c:	11 27       	eor	r17, r17
    105e:	00 27       	eor	r16, r16
    1060:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1064:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1068:	60 e0       	ldi	r22, 0x00	; 0
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	40 2b       	or	r20, r16
    106e:	51 2b       	or	r21, r17
    1070:	62 2b       	or	r22, r18
    1072:	73 2b       	or	r23, r19
    1074:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1078:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    107c:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1080:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1084:	b0 9b       	sbis	0x16, 0	; 22
    1086:	1a c0       	rjmp	.+52     	; 0x10bc <__vector_10+0x9a>
    1088:	01 96       	adiw	r24, 0x01	; 1
    108a:	09 2e       	mov	r0, r25
    108c:	00 0c       	add	r0, r0
    108e:	aa 0b       	sbc	r26, r26
    1090:	bb 0b       	sbc	r27, r27
    1092:	bc 01       	movw	r22, r24
    1094:	55 27       	eor	r21, r21
    1096:	44 27       	eor	r20, r20
    1098:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    109c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10a0:	a0 e0       	ldi	r26, 0x00	; 0
    10a2:	b0 e0       	ldi	r27, 0x00	; 0
    10a4:	84 2b       	or	r24, r20
    10a6:	95 2b       	or	r25, r21
    10a8:	a6 2b       	or	r26, r22
    10aa:	b7 2b       	or	r27, r23
    10ac:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    10b0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    10b4:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    10b8:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    10bc:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
    10c0:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
    10c4:	30 97       	sbiw	r30, 0x00	; 0
    10c6:	39 f0       	breq	.+14     	; 0x10d6 <__vector_10+0xb4>
    10c8:	65 e0       	ldi	r22, 0x05	; 5
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
    10d0:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
    10d4:	09 95       	icall
    10d6:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    10da:	ff 91       	pop	r31
    10dc:	ef 91       	pop	r30
    10de:	bf 91       	pop	r27
    10e0:	af 91       	pop	r26
    10e2:	9f 91       	pop	r25
    10e4:	8f 91       	pop	r24
    10e6:	7f 91       	pop	r23
    10e8:	6f 91       	pop	r22
    10ea:	5f 91       	pop	r21
    10ec:	4f 91       	pop	r20
    10ee:	3f 91       	pop	r19
    10f0:	2f 91       	pop	r18
    10f2:	1f 91       	pop	r17
    10f4:	0f 91       	pop	r16
    10f6:	0f 90       	pop	r0
    10f8:	0f be       	out	0x3f, r0	; 63
    10fa:	0f 90       	pop	r0
    10fc:	1f 90       	pop	r1
    10fe:	18 95       	reti

00001100 <__vector_11>:
    1100:	1f 92       	push	r1
    1102:	0f 92       	push	r0
    1104:	0f b6       	in	r0, 0x3f	; 63
    1106:	0f 92       	push	r0
    1108:	11 24       	eor	r1, r1
    110a:	0f 93       	push	r16
    110c:	1f 93       	push	r17
    110e:	2f 93       	push	r18
    1110:	3f 93       	push	r19
    1112:	4f 93       	push	r20
    1114:	5f 93       	push	r21
    1116:	6f 93       	push	r22
    1118:	7f 93       	push	r23
    111a:	8f 93       	push	r24
    111c:	9f 93       	push	r25
    111e:	af 93       	push	r26
    1120:	bf 93       	push	r27
    1122:	ef 93       	push	r30
    1124:	ff 93       	push	r31
    1126:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    112a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    112e:	ac 01       	movw	r20, r24
    1130:	09 2e       	mov	r0, r25
    1132:	00 0c       	add	r0, r0
    1134:	66 0b       	sbc	r22, r22
    1136:	77 0b       	sbc	r23, r23
    1138:	9a 01       	movw	r18, r20
    113a:	11 27       	eor	r17, r17
    113c:	00 27       	eor	r16, r16
    113e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1142:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1146:	60 e0       	ldi	r22, 0x00	; 0
    1148:	70 e0       	ldi	r23, 0x00	; 0
    114a:	40 2b       	or	r20, r16
    114c:	51 2b       	or	r21, r17
    114e:	62 2b       	or	r22, r18
    1150:	73 2b       	or	r23, r19
    1152:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1156:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    115a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    115e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1162:	b0 9b       	sbis	0x16, 0	; 22
    1164:	1a c0       	rjmp	.+52     	; 0x119a <__vector_11+0x9a>
    1166:	01 96       	adiw	r24, 0x01	; 1
    1168:	09 2e       	mov	r0, r25
    116a:	00 0c       	add	r0, r0
    116c:	aa 0b       	sbc	r26, r26
    116e:	bb 0b       	sbc	r27, r27
    1170:	bc 01       	movw	r22, r24
    1172:	55 27       	eor	r21, r21
    1174:	44 27       	eor	r20, r20
    1176:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    117a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    117e:	a0 e0       	ldi	r26, 0x00	; 0
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	84 2b       	or	r24, r20
    1184:	95 2b       	or	r25, r21
    1186:	a6 2b       	or	r26, r22
    1188:	b7 2b       	or	r27, r23
    118a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    118e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1192:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1196:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    119a:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
    119e:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
    11a2:	30 97       	sbiw	r30, 0x00	; 0
    11a4:	39 f0       	breq	.+14     	; 0x11b4 <__vector_11+0xb4>
    11a6:	66 e0       	ldi	r22, 0x06	; 6
    11a8:	70 e0       	ldi	r23, 0x00	; 0
    11aa:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
    11ae:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
    11b2:	09 95       	icall
    11b4:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    11b8:	ff 91       	pop	r31
    11ba:	ef 91       	pop	r30
    11bc:	bf 91       	pop	r27
    11be:	af 91       	pop	r26
    11c0:	9f 91       	pop	r25
    11c2:	8f 91       	pop	r24
    11c4:	7f 91       	pop	r23
    11c6:	6f 91       	pop	r22
    11c8:	5f 91       	pop	r21
    11ca:	4f 91       	pop	r20
    11cc:	3f 91       	pop	r19
    11ce:	2f 91       	pop	r18
    11d0:	1f 91       	pop	r17
    11d2:	0f 91       	pop	r16
    11d4:	0f 90       	pop	r0
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	0f 90       	pop	r0
    11da:	1f 90       	pop	r1
    11dc:	18 95       	reti

000011de <__vector_12>:
    11de:	1f 92       	push	r1
    11e0:	0f 92       	push	r0
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	0f 92       	push	r0
    11e6:	11 24       	eor	r1, r1
    11e8:	0f 93       	push	r16
    11ea:	1f 93       	push	r17
    11ec:	2f 93       	push	r18
    11ee:	3f 93       	push	r19
    11f0:	4f 93       	push	r20
    11f2:	5f 93       	push	r21
    11f4:	6f 93       	push	r22
    11f6:	7f 93       	push	r23
    11f8:	8f 93       	push	r24
    11fa:	9f 93       	push	r25
    11fc:	af 93       	push	r26
    11fe:	bf 93       	push	r27
    1200:	ef 93       	push	r30
    1202:	ff 93       	push	r31
    1204:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1208:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    120c:	ac 01       	movw	r20, r24
    120e:	09 2e       	mov	r0, r25
    1210:	00 0c       	add	r0, r0
    1212:	66 0b       	sbc	r22, r22
    1214:	77 0b       	sbc	r23, r23
    1216:	9a 01       	movw	r18, r20
    1218:	11 27       	eor	r17, r17
    121a:	00 27       	eor	r16, r16
    121c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1220:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	70 e0       	ldi	r23, 0x00	; 0
    1228:	40 2b       	or	r20, r16
    122a:	51 2b       	or	r21, r17
    122c:	62 2b       	or	r22, r18
    122e:	73 2b       	or	r23, r19
    1230:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1234:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1238:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    123c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1240:	b0 9b       	sbis	0x16, 0	; 22
    1242:	1a c0       	rjmp	.+52     	; 0x1278 <__vector_12+0x9a>
    1244:	01 96       	adiw	r24, 0x01	; 1
    1246:	09 2e       	mov	r0, r25
    1248:	00 0c       	add	r0, r0
    124a:	aa 0b       	sbc	r26, r26
    124c:	bb 0b       	sbc	r27, r27
    124e:	bc 01       	movw	r22, r24
    1250:	55 27       	eor	r21, r21
    1252:	44 27       	eor	r20, r20
    1254:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1258:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    125c:	a0 e0       	ldi	r26, 0x00	; 0
    125e:	b0 e0       	ldi	r27, 0x00	; 0
    1260:	84 2b       	or	r24, r20
    1262:	95 2b       	or	r25, r21
    1264:	a6 2b       	or	r26, r22
    1266:	b7 2b       	or	r27, r23
    1268:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    126c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1270:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1274:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1278:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
    127c:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
    1280:	30 97       	sbiw	r30, 0x00	; 0
    1282:	39 f0       	breq	.+14     	; 0x1292 <__vector_12+0xb4>
    1284:	67 e0       	ldi	r22, 0x07	; 7
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
    128c:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
    1290:	09 95       	icall
    1292:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1296:	ff 91       	pop	r31
    1298:	ef 91       	pop	r30
    129a:	bf 91       	pop	r27
    129c:	af 91       	pop	r26
    129e:	9f 91       	pop	r25
    12a0:	8f 91       	pop	r24
    12a2:	7f 91       	pop	r23
    12a4:	6f 91       	pop	r22
    12a6:	5f 91       	pop	r21
    12a8:	4f 91       	pop	r20
    12aa:	3f 91       	pop	r19
    12ac:	2f 91       	pop	r18
    12ae:	1f 91       	pop	r17
    12b0:	0f 91       	pop	r16
    12b2:	0f 90       	pop	r0
    12b4:	0f be       	out	0x3f, r0	; 63
    12b6:	0f 90       	pop	r0
    12b8:	1f 90       	pop	r1
    12ba:	18 95       	reti

000012bc <__vector_13>:
    12bc:	1f 92       	push	r1
    12be:	0f 92       	push	r0
    12c0:	0f b6       	in	r0, 0x3f	; 63
    12c2:	0f 92       	push	r0
    12c4:	11 24       	eor	r1, r1
    12c6:	0f 93       	push	r16
    12c8:	1f 93       	push	r17
    12ca:	2f 93       	push	r18
    12cc:	3f 93       	push	r19
    12ce:	4f 93       	push	r20
    12d0:	5f 93       	push	r21
    12d2:	6f 93       	push	r22
    12d4:	7f 93       	push	r23
    12d6:	8f 93       	push	r24
    12d8:	9f 93       	push	r25
    12da:	af 93       	push	r26
    12dc:	bf 93       	push	r27
    12de:	ef 93       	push	r30
    12e0:	ff 93       	push	r31
    12e2:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    12e6:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    12ea:	ac 01       	movw	r20, r24
    12ec:	09 2e       	mov	r0, r25
    12ee:	00 0c       	add	r0, r0
    12f0:	66 0b       	sbc	r22, r22
    12f2:	77 0b       	sbc	r23, r23
    12f4:	9a 01       	movw	r18, r20
    12f6:	11 27       	eor	r17, r17
    12f8:	00 27       	eor	r16, r16
    12fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1302:	60 e0       	ldi	r22, 0x00	; 0
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	40 2b       	or	r20, r16
    1308:	51 2b       	or	r21, r17
    130a:	62 2b       	or	r22, r18
    130c:	73 2b       	or	r23, r19
    130e:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1312:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1316:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    131a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    131e:	b0 9b       	sbis	0x16, 0	; 22
    1320:	1a c0       	rjmp	.+52     	; 0x1356 <__vector_13+0x9a>
    1322:	01 96       	adiw	r24, 0x01	; 1
    1324:	09 2e       	mov	r0, r25
    1326:	00 0c       	add	r0, r0
    1328:	aa 0b       	sbc	r26, r26
    132a:	bb 0b       	sbc	r27, r27
    132c:	bc 01       	movw	r22, r24
    132e:	55 27       	eor	r21, r21
    1330:	44 27       	eor	r20, r20
    1332:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1336:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    133a:	a0 e0       	ldi	r26, 0x00	; 0
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	84 2b       	or	r24, r20
    1340:	95 2b       	or	r25, r21
    1342:	a6 2b       	or	r26, r22
    1344:	b7 2b       	or	r27, r23
    1346:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    134a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    134e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1352:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1356:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
    135a:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
    135e:	30 97       	sbiw	r30, 0x00	; 0
    1360:	39 f0       	breq	.+14     	; 0x1370 <__vector_13+0xb4>
    1362:	68 e0       	ldi	r22, 0x08	; 8
    1364:	70 e0       	ldi	r23, 0x00	; 0
    1366:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
    136a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
    136e:	09 95       	icall
    1370:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1374:	ff 91       	pop	r31
    1376:	ef 91       	pop	r30
    1378:	bf 91       	pop	r27
    137a:	af 91       	pop	r26
    137c:	9f 91       	pop	r25
    137e:	8f 91       	pop	r24
    1380:	7f 91       	pop	r23
    1382:	6f 91       	pop	r22
    1384:	5f 91       	pop	r21
    1386:	4f 91       	pop	r20
    1388:	3f 91       	pop	r19
    138a:	2f 91       	pop	r18
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	0f 90       	pop	r0
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	0f 90       	pop	r0
    1396:	1f 90       	pop	r1
    1398:	18 95       	reti

0000139a <__vector_14>:
    139a:	1f 92       	push	r1
    139c:	0f 92       	push	r0
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	0f 92       	push	r0
    13a2:	11 24       	eor	r1, r1
    13a4:	0f 93       	push	r16
    13a6:	1f 93       	push	r17
    13a8:	2f 93       	push	r18
    13aa:	3f 93       	push	r19
    13ac:	4f 93       	push	r20
    13ae:	5f 93       	push	r21
    13b0:	6f 93       	push	r22
    13b2:	7f 93       	push	r23
    13b4:	8f 93       	push	r24
    13b6:	9f 93       	push	r25
    13b8:	af 93       	push	r26
    13ba:	bf 93       	push	r27
    13bc:	ef 93       	push	r30
    13be:	ff 93       	push	r31
    13c0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    13c4:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    13c8:	ac 01       	movw	r20, r24
    13ca:	09 2e       	mov	r0, r25
    13cc:	00 0c       	add	r0, r0
    13ce:	66 0b       	sbc	r22, r22
    13d0:	77 0b       	sbc	r23, r23
    13d2:	9a 01       	movw	r18, r20
    13d4:	11 27       	eor	r17, r17
    13d6:	00 27       	eor	r16, r16
    13d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13e0:	60 e0       	ldi	r22, 0x00	; 0
    13e2:	70 e0       	ldi	r23, 0x00	; 0
    13e4:	40 2b       	or	r20, r16
    13e6:	51 2b       	or	r21, r17
    13e8:	62 2b       	or	r22, r18
    13ea:	73 2b       	or	r23, r19
    13ec:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    13f0:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    13f4:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    13f8:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    13fc:	b0 9b       	sbis	0x16, 0	; 22
    13fe:	1a c0       	rjmp	.+52     	; 0x1434 <__vector_14+0x9a>
    1400:	01 96       	adiw	r24, 0x01	; 1
    1402:	09 2e       	mov	r0, r25
    1404:	00 0c       	add	r0, r0
    1406:	aa 0b       	sbc	r26, r26
    1408:	bb 0b       	sbc	r27, r27
    140a:	bc 01       	movw	r22, r24
    140c:	55 27       	eor	r21, r21
    140e:	44 27       	eor	r20, r20
    1410:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1414:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1418:	a0 e0       	ldi	r26, 0x00	; 0
    141a:	b0 e0       	ldi	r27, 0x00	; 0
    141c:	84 2b       	or	r24, r20
    141e:	95 2b       	or	r25, r21
    1420:	a6 2b       	or	r26, r22
    1422:	b7 2b       	or	r27, r23
    1424:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1428:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    142c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1430:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1434:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    1438:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    143c:	30 97       	sbiw	r30, 0x00	; 0
    143e:	39 f0       	breq	.+14     	; 0x144e <__vector_14+0xb4>
    1440:	69 e0       	ldi	r22, 0x09	; 9
    1442:	70 e0       	ldi	r23, 0x00	; 0
    1444:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    1448:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    144c:	09 95       	icall
    144e:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1452:	ff 91       	pop	r31
    1454:	ef 91       	pop	r30
    1456:	bf 91       	pop	r27
    1458:	af 91       	pop	r26
    145a:	9f 91       	pop	r25
    145c:	8f 91       	pop	r24
    145e:	7f 91       	pop	r23
    1460:	6f 91       	pop	r22
    1462:	5f 91       	pop	r21
    1464:	4f 91       	pop	r20
    1466:	3f 91       	pop	r19
    1468:	2f 91       	pop	r18
    146a:	1f 91       	pop	r17
    146c:	0f 91       	pop	r16
    146e:	0f 90       	pop	r0
    1470:	0f be       	out	0x3f, r0	; 63
    1472:	0f 90       	pop	r0
    1474:	1f 90       	pop	r1
    1476:	18 95       	reti

00001478 <__vector_15>:
    1478:	1f 92       	push	r1
    147a:	0f 92       	push	r0
    147c:	0f b6       	in	r0, 0x3f	; 63
    147e:	0f 92       	push	r0
    1480:	11 24       	eor	r1, r1
    1482:	0f 93       	push	r16
    1484:	1f 93       	push	r17
    1486:	2f 93       	push	r18
    1488:	3f 93       	push	r19
    148a:	4f 93       	push	r20
    148c:	5f 93       	push	r21
    148e:	6f 93       	push	r22
    1490:	7f 93       	push	r23
    1492:	8f 93       	push	r24
    1494:	9f 93       	push	r25
    1496:	af 93       	push	r26
    1498:	bf 93       	push	r27
    149a:	ef 93       	push	r30
    149c:	ff 93       	push	r31
    149e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    14a2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    14a6:	ac 01       	movw	r20, r24
    14a8:	09 2e       	mov	r0, r25
    14aa:	00 0c       	add	r0, r0
    14ac:	66 0b       	sbc	r22, r22
    14ae:	77 0b       	sbc	r23, r23
    14b0:	9a 01       	movw	r18, r20
    14b2:	11 27       	eor	r17, r17
    14b4:	00 27       	eor	r16, r16
    14b6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14be:	60 e0       	ldi	r22, 0x00	; 0
    14c0:	70 e0       	ldi	r23, 0x00	; 0
    14c2:	40 2b       	or	r20, r16
    14c4:	51 2b       	or	r21, r17
    14c6:	62 2b       	or	r22, r18
    14c8:	73 2b       	or	r23, r19
    14ca:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    14ce:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    14d2:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    14d6:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    14da:	b0 9b       	sbis	0x16, 0	; 22
    14dc:	1a c0       	rjmp	.+52     	; 0x1512 <__vector_15+0x9a>
    14de:	01 96       	adiw	r24, 0x01	; 1
    14e0:	09 2e       	mov	r0, r25
    14e2:	00 0c       	add	r0, r0
    14e4:	aa 0b       	sbc	r26, r26
    14e6:	bb 0b       	sbc	r27, r27
    14e8:	bc 01       	movw	r22, r24
    14ea:	55 27       	eor	r21, r21
    14ec:	44 27       	eor	r20, r20
    14ee:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14f2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14f6:	a0 e0       	ldi	r26, 0x00	; 0
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	84 2b       	or	r24, r20
    14fc:	95 2b       	or	r25, r21
    14fe:	a6 2b       	or	r26, r22
    1500:	b7 2b       	or	r27, r23
    1502:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1506:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    150a:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    150e:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1512:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    1516:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    151a:	30 97       	sbiw	r30, 0x00	; 0
    151c:	39 f0       	breq	.+14     	; 0x152c <__vector_15+0xb4>
    151e:	6a e0       	ldi	r22, 0x0A	; 10
    1520:	70 e0       	ldi	r23, 0x00	; 0
    1522:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    1526:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    152a:	09 95       	icall
    152c:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1530:	ff 91       	pop	r31
    1532:	ef 91       	pop	r30
    1534:	bf 91       	pop	r27
    1536:	af 91       	pop	r26
    1538:	9f 91       	pop	r25
    153a:	8f 91       	pop	r24
    153c:	7f 91       	pop	r23
    153e:	6f 91       	pop	r22
    1540:	5f 91       	pop	r21
    1542:	4f 91       	pop	r20
    1544:	3f 91       	pop	r19
    1546:	2f 91       	pop	r18
    1548:	1f 91       	pop	r17
    154a:	0f 91       	pop	r16
    154c:	0f 90       	pop	r0
    154e:	0f be       	out	0x3f, r0	; 63
    1550:	0f 90       	pop	r0
    1552:	1f 90       	pop	r1
    1554:	18 95       	reti

00001556 <__vector_16>:
    1556:	1f 92       	push	r1
    1558:	0f 92       	push	r0
    155a:	0f b6       	in	r0, 0x3f	; 63
    155c:	0f 92       	push	r0
    155e:	11 24       	eor	r1, r1
    1560:	0f 93       	push	r16
    1562:	1f 93       	push	r17
    1564:	2f 93       	push	r18
    1566:	3f 93       	push	r19
    1568:	4f 93       	push	r20
    156a:	5f 93       	push	r21
    156c:	6f 93       	push	r22
    156e:	7f 93       	push	r23
    1570:	8f 93       	push	r24
    1572:	9f 93       	push	r25
    1574:	af 93       	push	r26
    1576:	bf 93       	push	r27
    1578:	ef 93       	push	r30
    157a:	ff 93       	push	r31
    157c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1580:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1584:	ac 01       	movw	r20, r24
    1586:	09 2e       	mov	r0, r25
    1588:	00 0c       	add	r0, r0
    158a:	66 0b       	sbc	r22, r22
    158c:	77 0b       	sbc	r23, r23
    158e:	9a 01       	movw	r18, r20
    1590:	11 27       	eor	r17, r17
    1592:	00 27       	eor	r16, r16
    1594:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1598:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    159c:	60 e0       	ldi	r22, 0x00	; 0
    159e:	70 e0       	ldi	r23, 0x00	; 0
    15a0:	40 2b       	or	r20, r16
    15a2:	51 2b       	or	r21, r17
    15a4:	62 2b       	or	r22, r18
    15a6:	73 2b       	or	r23, r19
    15a8:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    15ac:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    15b0:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    15b4:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    15b8:	b0 9b       	sbis	0x16, 0	; 22
    15ba:	1a c0       	rjmp	.+52     	; 0x15f0 <__vector_16+0x9a>
    15bc:	01 96       	adiw	r24, 0x01	; 1
    15be:	09 2e       	mov	r0, r25
    15c0:	00 0c       	add	r0, r0
    15c2:	aa 0b       	sbc	r26, r26
    15c4:	bb 0b       	sbc	r27, r27
    15c6:	bc 01       	movw	r22, r24
    15c8:	55 27       	eor	r21, r21
    15ca:	44 27       	eor	r20, r20
    15cc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15d0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15d4:	a0 e0       	ldi	r26, 0x00	; 0
    15d6:	b0 e0       	ldi	r27, 0x00	; 0
    15d8:	84 2b       	or	r24, r20
    15da:	95 2b       	or	r25, r21
    15dc:	a6 2b       	or	r26, r22
    15de:	b7 2b       	or	r27, r23
    15e0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    15e4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    15e8:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    15ec:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    15f0:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    15f4:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    15f8:	30 97       	sbiw	r30, 0x00	; 0
    15fa:	39 f0       	breq	.+14     	; 0x160a <__vector_16+0xb4>
    15fc:	6b e0       	ldi	r22, 0x0B	; 11
    15fe:	70 e0       	ldi	r23, 0x00	; 0
    1600:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    1604:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    1608:	09 95       	icall
    160a:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    160e:	ff 91       	pop	r31
    1610:	ef 91       	pop	r30
    1612:	bf 91       	pop	r27
    1614:	af 91       	pop	r26
    1616:	9f 91       	pop	r25
    1618:	8f 91       	pop	r24
    161a:	7f 91       	pop	r23
    161c:	6f 91       	pop	r22
    161e:	5f 91       	pop	r21
    1620:	4f 91       	pop	r20
    1622:	3f 91       	pop	r19
    1624:	2f 91       	pop	r18
    1626:	1f 91       	pop	r17
    1628:	0f 91       	pop	r16
    162a:	0f 90       	pop	r0
    162c:	0f be       	out	0x3f, r0	; 63
    162e:	0f 90       	pop	r0
    1630:	1f 90       	pop	r1
    1632:	18 95       	reti

00001634 <__vector_17>:
    1634:	1f 92       	push	r1
    1636:	0f 92       	push	r0
    1638:	0f b6       	in	r0, 0x3f	; 63
    163a:	0f 92       	push	r0
    163c:	11 24       	eor	r1, r1
    163e:	0f 93       	push	r16
    1640:	1f 93       	push	r17
    1642:	2f 93       	push	r18
    1644:	3f 93       	push	r19
    1646:	4f 93       	push	r20
    1648:	5f 93       	push	r21
    164a:	6f 93       	push	r22
    164c:	7f 93       	push	r23
    164e:	8f 93       	push	r24
    1650:	9f 93       	push	r25
    1652:	af 93       	push	r26
    1654:	bf 93       	push	r27
    1656:	ef 93       	push	r30
    1658:	ff 93       	push	r31
    165a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    165e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1662:	ac 01       	movw	r20, r24
    1664:	09 2e       	mov	r0, r25
    1666:	00 0c       	add	r0, r0
    1668:	66 0b       	sbc	r22, r22
    166a:	77 0b       	sbc	r23, r23
    166c:	9a 01       	movw	r18, r20
    166e:	11 27       	eor	r17, r17
    1670:	00 27       	eor	r16, r16
    1672:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1676:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    167a:	60 e0       	ldi	r22, 0x00	; 0
    167c:	70 e0       	ldi	r23, 0x00	; 0
    167e:	40 2b       	or	r20, r16
    1680:	51 2b       	or	r21, r17
    1682:	62 2b       	or	r22, r18
    1684:	73 2b       	or	r23, r19
    1686:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    168a:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    168e:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1692:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1696:	b0 9b       	sbis	0x16, 0	; 22
    1698:	1a c0       	rjmp	.+52     	; 0x16ce <__vector_17+0x9a>
    169a:	01 96       	adiw	r24, 0x01	; 1
    169c:	09 2e       	mov	r0, r25
    169e:	00 0c       	add	r0, r0
    16a0:	aa 0b       	sbc	r26, r26
    16a2:	bb 0b       	sbc	r27, r27
    16a4:	bc 01       	movw	r22, r24
    16a6:	55 27       	eor	r21, r21
    16a8:	44 27       	eor	r20, r20
    16aa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16ae:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16b2:	a0 e0       	ldi	r26, 0x00	; 0
    16b4:	b0 e0       	ldi	r27, 0x00	; 0
    16b6:	84 2b       	or	r24, r20
    16b8:	95 2b       	or	r25, r21
    16ba:	a6 2b       	or	r26, r22
    16bc:	b7 2b       	or	r27, r23
    16be:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    16c2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    16c6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    16ca:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    16ce:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    16d2:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    16d6:	30 97       	sbiw	r30, 0x00	; 0
    16d8:	39 f0       	breq	.+14     	; 0x16e8 <__vector_17+0xb4>
    16da:	6c e0       	ldi	r22, 0x0C	; 12
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    16e2:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    16e6:	09 95       	icall
    16e8:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    16ec:	ff 91       	pop	r31
    16ee:	ef 91       	pop	r30
    16f0:	bf 91       	pop	r27
    16f2:	af 91       	pop	r26
    16f4:	9f 91       	pop	r25
    16f6:	8f 91       	pop	r24
    16f8:	7f 91       	pop	r23
    16fa:	6f 91       	pop	r22
    16fc:	5f 91       	pop	r21
    16fe:	4f 91       	pop	r20
    1700:	3f 91       	pop	r19
    1702:	2f 91       	pop	r18
    1704:	1f 91       	pop	r17
    1706:	0f 91       	pop	r16
    1708:	0f 90       	pop	r0
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	0f 90       	pop	r0
    170e:	1f 90       	pop	r1
    1710:	18 95       	reti

00001712 <__vector_18>:
    1712:	1f 92       	push	r1
    1714:	0f 92       	push	r0
    1716:	0f b6       	in	r0, 0x3f	; 63
    1718:	0f 92       	push	r0
    171a:	11 24       	eor	r1, r1
    171c:	0f 93       	push	r16
    171e:	1f 93       	push	r17
    1720:	2f 93       	push	r18
    1722:	3f 93       	push	r19
    1724:	4f 93       	push	r20
    1726:	5f 93       	push	r21
    1728:	6f 93       	push	r22
    172a:	7f 93       	push	r23
    172c:	8f 93       	push	r24
    172e:	9f 93       	push	r25
    1730:	af 93       	push	r26
    1732:	bf 93       	push	r27
    1734:	ef 93       	push	r30
    1736:	ff 93       	push	r31
    1738:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    173c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1740:	ac 01       	movw	r20, r24
    1742:	09 2e       	mov	r0, r25
    1744:	00 0c       	add	r0, r0
    1746:	66 0b       	sbc	r22, r22
    1748:	77 0b       	sbc	r23, r23
    174a:	9a 01       	movw	r18, r20
    174c:	11 27       	eor	r17, r17
    174e:	00 27       	eor	r16, r16
    1750:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1754:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1758:	60 e0       	ldi	r22, 0x00	; 0
    175a:	70 e0       	ldi	r23, 0x00	; 0
    175c:	40 2b       	or	r20, r16
    175e:	51 2b       	or	r21, r17
    1760:	62 2b       	or	r22, r18
    1762:	73 2b       	or	r23, r19
    1764:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1768:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    176c:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1770:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1774:	b0 9b       	sbis	0x16, 0	; 22
    1776:	1a c0       	rjmp	.+52     	; 0x17ac <__vector_18+0x9a>
    1778:	01 96       	adiw	r24, 0x01	; 1
    177a:	09 2e       	mov	r0, r25
    177c:	00 0c       	add	r0, r0
    177e:	aa 0b       	sbc	r26, r26
    1780:	bb 0b       	sbc	r27, r27
    1782:	bc 01       	movw	r22, r24
    1784:	55 27       	eor	r21, r21
    1786:	44 27       	eor	r20, r20
    1788:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    178c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1790:	a0 e0       	ldi	r26, 0x00	; 0
    1792:	b0 e0       	ldi	r27, 0x00	; 0
    1794:	84 2b       	or	r24, r20
    1796:	95 2b       	or	r25, r21
    1798:	a6 2b       	or	r26, r22
    179a:	b7 2b       	or	r27, r23
    179c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    17a0:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    17a4:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    17a8:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    17ac:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    17b0:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    17b4:	30 97       	sbiw	r30, 0x00	; 0
    17b6:	39 f0       	breq	.+14     	; 0x17c6 <__vector_18+0xb4>
    17b8:	6d e0       	ldi	r22, 0x0D	; 13
    17ba:	70 e0       	ldi	r23, 0x00	; 0
    17bc:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    17c0:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    17c4:	09 95       	icall
    17c6:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    17ca:	ff 91       	pop	r31
    17cc:	ef 91       	pop	r30
    17ce:	bf 91       	pop	r27
    17d0:	af 91       	pop	r26
    17d2:	9f 91       	pop	r25
    17d4:	8f 91       	pop	r24
    17d6:	7f 91       	pop	r23
    17d8:	6f 91       	pop	r22
    17da:	5f 91       	pop	r21
    17dc:	4f 91       	pop	r20
    17de:	3f 91       	pop	r19
    17e0:	2f 91       	pop	r18
    17e2:	1f 91       	pop	r17
    17e4:	0f 91       	pop	r16
    17e6:	0f 90       	pop	r0
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	0f 90       	pop	r0
    17ec:	1f 90       	pop	r1
    17ee:	18 95       	reti

000017f0 <__vector_19>:
    17f0:	1f 92       	push	r1
    17f2:	0f 92       	push	r0
    17f4:	0f b6       	in	r0, 0x3f	; 63
    17f6:	0f 92       	push	r0
    17f8:	11 24       	eor	r1, r1
    17fa:	0f 93       	push	r16
    17fc:	1f 93       	push	r17
    17fe:	2f 93       	push	r18
    1800:	3f 93       	push	r19
    1802:	4f 93       	push	r20
    1804:	5f 93       	push	r21
    1806:	6f 93       	push	r22
    1808:	7f 93       	push	r23
    180a:	8f 93       	push	r24
    180c:	9f 93       	push	r25
    180e:	af 93       	push	r26
    1810:	bf 93       	push	r27
    1812:	ef 93       	push	r30
    1814:	ff 93       	push	r31
    1816:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    181a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    181e:	ac 01       	movw	r20, r24
    1820:	09 2e       	mov	r0, r25
    1822:	00 0c       	add	r0, r0
    1824:	66 0b       	sbc	r22, r22
    1826:	77 0b       	sbc	r23, r23
    1828:	9a 01       	movw	r18, r20
    182a:	11 27       	eor	r17, r17
    182c:	00 27       	eor	r16, r16
    182e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1832:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1836:	60 e0       	ldi	r22, 0x00	; 0
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	40 2b       	or	r20, r16
    183c:	51 2b       	or	r21, r17
    183e:	62 2b       	or	r22, r18
    1840:	73 2b       	or	r23, r19
    1842:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1846:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    184a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    184e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1852:	b0 9b       	sbis	0x16, 0	; 22
    1854:	1a c0       	rjmp	.+52     	; 0x188a <__vector_19+0x9a>
    1856:	01 96       	adiw	r24, 0x01	; 1
    1858:	09 2e       	mov	r0, r25
    185a:	00 0c       	add	r0, r0
    185c:	aa 0b       	sbc	r26, r26
    185e:	bb 0b       	sbc	r27, r27
    1860:	bc 01       	movw	r22, r24
    1862:	55 27       	eor	r21, r21
    1864:	44 27       	eor	r20, r20
    1866:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    186a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    186e:	a0 e0       	ldi	r26, 0x00	; 0
    1870:	b0 e0       	ldi	r27, 0x00	; 0
    1872:	84 2b       	or	r24, r20
    1874:	95 2b       	or	r25, r21
    1876:	a6 2b       	or	r26, r22
    1878:	b7 2b       	or	r27, r23
    187a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    187e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1882:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1886:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    188a:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    188e:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    1892:	30 97       	sbiw	r30, 0x00	; 0
    1894:	39 f0       	breq	.+14     	; 0x18a4 <__vector_19+0xb4>
    1896:	6e e0       	ldi	r22, 0x0E	; 14
    1898:	70 e0       	ldi	r23, 0x00	; 0
    189a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    189e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    18a2:	09 95       	icall
    18a4:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    18a8:	ff 91       	pop	r31
    18aa:	ef 91       	pop	r30
    18ac:	bf 91       	pop	r27
    18ae:	af 91       	pop	r26
    18b0:	9f 91       	pop	r25
    18b2:	8f 91       	pop	r24
    18b4:	7f 91       	pop	r23
    18b6:	6f 91       	pop	r22
    18b8:	5f 91       	pop	r21
    18ba:	4f 91       	pop	r20
    18bc:	3f 91       	pop	r19
    18be:	2f 91       	pop	r18
    18c0:	1f 91       	pop	r17
    18c2:	0f 91       	pop	r16
    18c4:	0f 90       	pop	r0
    18c6:	0f be       	out	0x3f, r0	; 63
    18c8:	0f 90       	pop	r0
    18ca:	1f 90       	pop	r1
    18cc:	18 95       	reti

000018ce <__vector_20>:
    18ce:	1f 92       	push	r1
    18d0:	0f 92       	push	r0
    18d2:	0f b6       	in	r0, 0x3f	; 63
    18d4:	0f 92       	push	r0
    18d6:	11 24       	eor	r1, r1
    18d8:	0f 93       	push	r16
    18da:	1f 93       	push	r17
    18dc:	2f 93       	push	r18
    18de:	3f 93       	push	r19
    18e0:	4f 93       	push	r20
    18e2:	5f 93       	push	r21
    18e4:	6f 93       	push	r22
    18e6:	7f 93       	push	r23
    18e8:	8f 93       	push	r24
    18ea:	9f 93       	push	r25
    18ec:	af 93       	push	r26
    18ee:	bf 93       	push	r27
    18f0:	ef 93       	push	r30
    18f2:	ff 93       	push	r31
    18f4:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    18f8:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    18fc:	ac 01       	movw	r20, r24
    18fe:	09 2e       	mov	r0, r25
    1900:	00 0c       	add	r0, r0
    1902:	66 0b       	sbc	r22, r22
    1904:	77 0b       	sbc	r23, r23
    1906:	9a 01       	movw	r18, r20
    1908:	11 27       	eor	r17, r17
    190a:	00 27       	eor	r16, r16
    190c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1910:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1914:	60 e0       	ldi	r22, 0x00	; 0
    1916:	70 e0       	ldi	r23, 0x00	; 0
    1918:	40 2b       	or	r20, r16
    191a:	51 2b       	or	r21, r17
    191c:	62 2b       	or	r22, r18
    191e:	73 2b       	or	r23, r19
    1920:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1924:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1928:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    192c:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1930:	b0 9b       	sbis	0x16, 0	; 22
    1932:	1a c0       	rjmp	.+52     	; 0x1968 <__vector_20+0x9a>
    1934:	01 96       	adiw	r24, 0x01	; 1
    1936:	09 2e       	mov	r0, r25
    1938:	00 0c       	add	r0, r0
    193a:	aa 0b       	sbc	r26, r26
    193c:	bb 0b       	sbc	r27, r27
    193e:	bc 01       	movw	r22, r24
    1940:	55 27       	eor	r21, r21
    1942:	44 27       	eor	r20, r20
    1944:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1948:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    194c:	a0 e0       	ldi	r26, 0x00	; 0
    194e:	b0 e0       	ldi	r27, 0x00	; 0
    1950:	84 2b       	or	r24, r20
    1952:	95 2b       	or	r25, r21
    1954:	a6 2b       	or	r26, r22
    1956:	b7 2b       	or	r27, r23
    1958:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    195c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1960:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1964:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1968:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    196c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    1970:	30 97       	sbiw	r30, 0x00	; 0
    1972:	39 f0       	breq	.+14     	; 0x1982 <__vector_20+0xb4>
    1974:	6f e0       	ldi	r22, 0x0F	; 15
    1976:	70 e0       	ldi	r23, 0x00	; 0
    1978:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    197c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    1980:	09 95       	icall
    1982:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1986:	ff 91       	pop	r31
    1988:	ef 91       	pop	r30
    198a:	bf 91       	pop	r27
    198c:	af 91       	pop	r26
    198e:	9f 91       	pop	r25
    1990:	8f 91       	pop	r24
    1992:	7f 91       	pop	r23
    1994:	6f 91       	pop	r22
    1996:	5f 91       	pop	r21
    1998:	4f 91       	pop	r20
    199a:	3f 91       	pop	r19
    199c:	2f 91       	pop	r18
    199e:	1f 91       	pop	r17
    19a0:	0f 91       	pop	r16
    19a2:	0f 90       	pop	r0
    19a4:	0f be       	out	0x3f, r0	; 63
    19a6:	0f 90       	pop	r0
    19a8:	1f 90       	pop	r1
    19aa:	18 95       	reti

000019ac <__vector_21>:
    19ac:	1f 92       	push	r1
    19ae:	0f 92       	push	r0
    19b0:	0f b6       	in	r0, 0x3f	; 63
    19b2:	0f 92       	push	r0
    19b4:	11 24       	eor	r1, r1
    19b6:	0f 93       	push	r16
    19b8:	1f 93       	push	r17
    19ba:	2f 93       	push	r18
    19bc:	3f 93       	push	r19
    19be:	4f 93       	push	r20
    19c0:	5f 93       	push	r21
    19c2:	6f 93       	push	r22
    19c4:	7f 93       	push	r23
    19c6:	8f 93       	push	r24
    19c8:	9f 93       	push	r25
    19ca:	af 93       	push	r26
    19cc:	bf 93       	push	r27
    19ce:	ef 93       	push	r30
    19d0:	ff 93       	push	r31
    19d2:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    19d6:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    19da:	ac 01       	movw	r20, r24
    19dc:	09 2e       	mov	r0, r25
    19de:	00 0c       	add	r0, r0
    19e0:	66 0b       	sbc	r22, r22
    19e2:	77 0b       	sbc	r23, r23
    19e4:	9a 01       	movw	r18, r20
    19e6:	11 27       	eor	r17, r17
    19e8:	00 27       	eor	r16, r16
    19ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19f2:	60 e0       	ldi	r22, 0x00	; 0
    19f4:	70 e0       	ldi	r23, 0x00	; 0
    19f6:	40 2b       	or	r20, r16
    19f8:	51 2b       	or	r21, r17
    19fa:	62 2b       	or	r22, r18
    19fc:	73 2b       	or	r23, r19
    19fe:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1a02:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1a06:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1a0a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1a0e:	b0 9b       	sbis	0x16, 0	; 22
    1a10:	1a c0       	rjmp	.+52     	; 0x1a46 <__vector_21+0x9a>
    1a12:	01 96       	adiw	r24, 0x01	; 1
    1a14:	09 2e       	mov	r0, r25
    1a16:	00 0c       	add	r0, r0
    1a18:	aa 0b       	sbc	r26, r26
    1a1a:	bb 0b       	sbc	r27, r27
    1a1c:	bc 01       	movw	r22, r24
    1a1e:	55 27       	eor	r21, r21
    1a20:	44 27       	eor	r20, r20
    1a22:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a26:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a2a:	a0 e0       	ldi	r26, 0x00	; 0
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	84 2b       	or	r24, r20
    1a30:	95 2b       	or	r25, r21
    1a32:	a6 2b       	or	r26, r22
    1a34:	b7 2b       	or	r27, r23
    1a36:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1a3a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1a3e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1a42:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1a46:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    1a4a:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    1a4e:	30 97       	sbiw	r30, 0x00	; 0
    1a50:	39 f0       	breq	.+14     	; 0x1a60 <__vector_21+0xb4>
    1a52:	60 e1       	ldi	r22, 0x10	; 16
    1a54:	70 e0       	ldi	r23, 0x00	; 0
    1a56:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    1a5a:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    1a5e:	09 95       	icall
    1a60:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1a64:	ff 91       	pop	r31
    1a66:	ef 91       	pop	r30
    1a68:	bf 91       	pop	r27
    1a6a:	af 91       	pop	r26
    1a6c:	9f 91       	pop	r25
    1a6e:	8f 91       	pop	r24
    1a70:	7f 91       	pop	r23
    1a72:	6f 91       	pop	r22
    1a74:	5f 91       	pop	r21
    1a76:	4f 91       	pop	r20
    1a78:	3f 91       	pop	r19
    1a7a:	2f 91       	pop	r18
    1a7c:	1f 91       	pop	r17
    1a7e:	0f 91       	pop	r16
    1a80:	0f 90       	pop	r0
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	0f 90       	pop	r0
    1a86:	1f 90       	pop	r1
    1a88:	18 95       	reti

00001a8a <__vector_22>:
    1a8a:	1f 92       	push	r1
    1a8c:	0f 92       	push	r0
    1a8e:	0f b6       	in	r0, 0x3f	; 63
    1a90:	0f 92       	push	r0
    1a92:	11 24       	eor	r1, r1
    1a94:	0f 93       	push	r16
    1a96:	1f 93       	push	r17
    1a98:	2f 93       	push	r18
    1a9a:	3f 93       	push	r19
    1a9c:	4f 93       	push	r20
    1a9e:	5f 93       	push	r21
    1aa0:	6f 93       	push	r22
    1aa2:	7f 93       	push	r23
    1aa4:	8f 93       	push	r24
    1aa6:	9f 93       	push	r25
    1aa8:	af 93       	push	r26
    1aaa:	bf 93       	push	r27
    1aac:	ef 93       	push	r30
    1aae:	ff 93       	push	r31
    1ab0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1ab4:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1ab8:	ac 01       	movw	r20, r24
    1aba:	09 2e       	mov	r0, r25
    1abc:	00 0c       	add	r0, r0
    1abe:	66 0b       	sbc	r22, r22
    1ac0:	77 0b       	sbc	r23, r23
    1ac2:	9a 01       	movw	r18, r20
    1ac4:	11 27       	eor	r17, r17
    1ac6:	00 27       	eor	r16, r16
    1ac8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1acc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ad0:	60 e0       	ldi	r22, 0x00	; 0
    1ad2:	70 e0       	ldi	r23, 0x00	; 0
    1ad4:	40 2b       	or	r20, r16
    1ad6:	51 2b       	or	r21, r17
    1ad8:	62 2b       	or	r22, r18
    1ada:	73 2b       	or	r23, r19
    1adc:	40 93 20 01 	sts	0x0120, r20	; 0x800120 <timestamp>
    1ae0:	50 93 21 01 	sts	0x0121, r21	; 0x800121 <timestamp+0x1>
    1ae4:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <timestamp+0x2>
    1ae8:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <timestamp+0x3>
    1aec:	b0 9b       	sbis	0x16, 0	; 22
    1aee:	1a c0       	rjmp	.+52     	; 0x1b24 <__vector_22+0x9a>
    1af0:	01 96       	adiw	r24, 0x01	; 1
    1af2:	09 2e       	mov	r0, r25
    1af4:	00 0c       	add	r0, r0
    1af6:	aa 0b       	sbc	r26, r26
    1af8:	bb 0b       	sbc	r27, r27
    1afa:	bc 01       	movw	r22, r24
    1afc:	55 27       	eor	r21, r21
    1afe:	44 27       	eor	r20, r20
    1b00:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b04:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b08:	a0 e0       	ldi	r26, 0x00	; 0
    1b0a:	b0 e0       	ldi	r27, 0x00	; 0
    1b0c:	84 2b       	or	r24, r20
    1b0e:	95 2b       	or	r25, r21
    1b10:	a6 2b       	or	r26, r22
    1b12:	b7 2b       	or	r27, r23
    1b14:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1b18:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1b1c:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1b20:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1b24:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    1b28:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    1b2c:	30 97       	sbiw	r30, 0x00	; 0
    1b2e:	39 f0       	breq	.+14     	; 0x1b3e <__vector_22+0xb4>
    1b30:	61 e1       	ldi	r22, 0x11	; 17
    1b32:	70 e0       	ldi	r23, 0x00	; 0
    1b34:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    1b38:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    1b3c:	09 95       	icall
    1b3e:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1b42:	ff 91       	pop	r31
    1b44:	ef 91       	pop	r30
    1b46:	bf 91       	pop	r27
    1b48:	af 91       	pop	r26
    1b4a:	9f 91       	pop	r25
    1b4c:	8f 91       	pop	r24
    1b4e:	7f 91       	pop	r23
    1b50:	6f 91       	pop	r22
    1b52:	5f 91       	pop	r21
    1b54:	4f 91       	pop	r20
    1b56:	3f 91       	pop	r19
    1b58:	2f 91       	pop	r18
    1b5a:	1f 91       	pop	r17
    1b5c:	0f 91       	pop	r16
    1b5e:	0f 90       	pop	r0
    1b60:	0f be       	out	0x3f, r0	; 63
    1b62:	0f 90       	pop	r0
    1b64:	1f 90       	pop	r1
    1b66:	18 95       	reti

00001b68 <idle>:
    1b68:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1b6c:	78 94       	sei
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	83 bf       	out	0x33, r24	; 51
    1b72:	88 95       	sleep
    1b74:	fc cf       	rjmp	.-8      	; 0x1b6e <idle+0x6>

00001b76 <__vector_9>:
    1b76:	1f 92       	push	r1
    1b78:	0f 92       	push	r0
    1b7a:	0f b6       	in	r0, 0x3f	; 63
    1b7c:	0f 92       	push	r0
    1b7e:	11 24       	eor	r1, r1
    1b80:	2f 93       	push	r18
    1b82:	3f 93       	push	r19
    1b84:	4f 93       	push	r20
    1b86:	5f 93       	push	r21
    1b88:	6f 93       	push	r22
    1b8a:	7f 93       	push	r23
    1b8c:	8f 93       	push	r24
    1b8e:	9f 93       	push	r25
    1b90:	ef 93       	push	r30
    1b92:	ff 93       	push	r31
    1b94:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1b98:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1b9c:	01 96       	adiw	r24, 0x01	; 1
    1b9e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    1ba2:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    1ba6:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1baa:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1bae:	30 97       	sbiw	r30, 0x00	; 0
    1bb0:	01 f1       	breq	.+64     	; 0x1bf2 <__vector_9+0x7c>
    1bb2:	42 81       	ldd	r20, Z+2	; 0x02
    1bb4:	53 81       	ldd	r21, Z+3	; 0x03
    1bb6:	64 81       	ldd	r22, Z+4	; 0x04
    1bb8:	75 81       	ldd	r23, Z+5	; 0x05
    1bba:	86 17       	cp	r24, r22
    1bbc:	97 07       	cpc	r25, r23
    1bbe:	c9 f4       	brne	.+50     	; 0x1bf2 <__vector_9+0x7c>
    1bc0:	ca 01       	movw	r24, r20
    1bc2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bc6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bca:	42 1b       	sub	r20, r18
    1bcc:	53 0b       	sbc	r21, r19
    1bce:	41 30       	cpi	r20, 0x01	; 1
    1bd0:	51 05       	cpc	r21, r1
    1bd2:	29 f4       	brne	.+10     	; 0x1bde <__vector_9+0x68>
    1bd4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bd8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bdc:	01 96       	adiw	r24, 0x01	; 1
    1bde:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1be2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1be6:	ef e6       	ldi	r30, 0x6F	; 111
    1be8:	f0 e0       	ldi	r31, 0x00	; 0
    1bea:	80 81       	ld	r24, Z
    1bec:	82 60       	ori	r24, 0x02	; 2
    1bee:	80 83       	st	Z, r24
    1bf0:	05 c0       	rjmp	.+10     	; 0x1bfc <__vector_9+0x86>
    1bf2:	ef e6       	ldi	r30, 0x6F	; 111
    1bf4:	f0 e0       	ldi	r31, 0x00	; 0
    1bf6:	80 81       	ld	r24, Z
    1bf8:	8d 7f       	andi	r24, 0xFD	; 253
    1bfa:	80 83       	st	Z, r24
    1bfc:	ff 91       	pop	r31
    1bfe:	ef 91       	pop	r30
    1c00:	9f 91       	pop	r25
    1c02:	8f 91       	pop	r24
    1c04:	7f 91       	pop	r23
    1c06:	6f 91       	pop	r22
    1c08:	5f 91       	pop	r21
    1c0a:	4f 91       	pop	r20
    1c0c:	3f 91       	pop	r19
    1c0e:	2f 91       	pop	r18
    1c10:	0f 90       	pop	r0
    1c12:	0f be       	out	0x3f, r0	; 63
    1c14:	0f 90       	pop	r0
    1c16:	1f 90       	pop	r1
    1c18:	18 95       	reti

00001c1a <__vector_7>:
    1c1a:	1f 92       	push	r1
    1c1c:	0f 92       	push	r0
    1c1e:	0f b6       	in	r0, 0x3f	; 63
    1c20:	0f 92       	push	r0
    1c22:	11 24       	eor	r1, r1
    1c24:	cf 92       	push	r12
    1c26:	df 92       	push	r13
    1c28:	ef 92       	push	r14
    1c2a:	ff 92       	push	r15
    1c2c:	2f 93       	push	r18
    1c2e:	3f 93       	push	r19
    1c30:	4f 93       	push	r20
    1c32:	5f 93       	push	r21
    1c34:	6f 93       	push	r22
    1c36:	7f 93       	push	r23
    1c38:	8f 93       	push	r24
    1c3a:	9f 93       	push	r25
    1c3c:	af 93       	push	r26
    1c3e:	bf 93       	push	r27
    1c40:	ef 93       	push	r30
    1c42:	ff 93       	push	r31
    1c44:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1c48:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1c4c:	6c 01       	movw	r12, r24
    1c4e:	09 2e       	mov	r0, r25
    1c50:	00 0c       	add	r0, r0
    1c52:	ee 08       	sbc	r14, r14
    1c54:	ff 08       	sbc	r15, r15
    1c56:	76 01       	movw	r14, r12
    1c58:	dd 24       	eor	r13, r13
    1c5a:	cc 24       	eor	r12, r12
    1c5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c64:	60 e0       	ldi	r22, 0x00	; 0
    1c66:	70 e0       	ldi	r23, 0x00	; 0
    1c68:	c4 2a       	or	r12, r20
    1c6a:	d5 2a       	or	r13, r21
    1c6c:	e6 2a       	or	r14, r22
    1c6e:	f7 2a       	or	r15, r23
    1c70:	b0 9b       	sbis	0x16, 0	; 22
    1c72:	1e c0       	rjmp	.+60     	; 0x1cb0 <__vector_7+0x96>
    1c74:	6c 01       	movw	r12, r24
    1c76:	2f ef       	ldi	r18, 0xFF	; 255
    1c78:	c2 1a       	sub	r12, r18
    1c7a:	d2 0a       	sbc	r13, r18
    1c7c:	0d 2c       	mov	r0, r13
    1c7e:	00 0c       	add	r0, r0
    1c80:	ee 08       	sbc	r14, r14
    1c82:	ff 08       	sbc	r15, r15
    1c84:	d6 01       	movw	r26, r12
    1c86:	99 27       	eor	r25, r25
    1c88:	88 27       	eor	r24, r24
    1c8a:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c8e:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c92:	e1 2c       	mov	r14, r1
    1c94:	f1 2c       	mov	r15, r1
    1c96:	c8 2a       	or	r12, r24
    1c98:	d9 2a       	or	r13, r25
    1c9a:	ea 2a       	or	r14, r26
    1c9c:	fb 2a       	or	r15, r27
    1c9e:	08 c0       	rjmp	.+16     	; 0x1cb0 <__vector_7+0x96>
    1ca0:	84 e2       	ldi	r24, 0x24	; 36
    1ca2:	91 e0       	ldi	r25, 0x01	; 1
    1ca4:	0e 94 7d 05 	call	0xafa	; 0xafa <dequeue>
    1ca8:	66 e2       	ldi	r22, 0x26	; 38
    1caa:	71 e0       	ldi	r23, 0x01	; 1
    1cac:	0e 94 1b 05 	call	0xa36	; 0xa36 <enqueueByDeadline>
    1cb0:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1cb4:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1cb8:	30 97       	sbiw	r30, 0x00	; 0
    1cba:	69 f0       	breq	.+26     	; 0x1cd6 <__vector_7+0xbc>
    1cbc:	82 81       	ldd	r24, Z+2	; 0x02
    1cbe:	93 81       	ldd	r25, Z+3	; 0x03
    1cc0:	a4 81       	ldd	r26, Z+4	; 0x04
    1cc2:	b5 81       	ldd	r27, Z+5	; 0x05
    1cc4:	8c 19       	sub	r24, r12
    1cc6:	9d 09       	sbc	r25, r13
    1cc8:	ae 09       	sbc	r26, r14
    1cca:	bf 09       	sbc	r27, r15
    1ccc:	18 16       	cp	r1, r24
    1cce:	19 06       	cpc	r1, r25
    1cd0:	1a 06       	cpc	r1, r26
    1cd2:	1b 06       	cpc	r1, r27
    1cd4:	2c f7       	brge	.-54     	; 0x1ca0 <__vector_7+0x86>
    1cd6:	30 97       	sbiw	r30, 0x00	; 0
    1cd8:	21 f1       	breq	.+72     	; 0x1d22 <__vector_7+0x108>
    1cda:	82 81       	ldd	r24, Z+2	; 0x02
    1cdc:	93 81       	ldd	r25, Z+3	; 0x03
    1cde:	a4 81       	ldd	r26, Z+4	; 0x04
    1ce0:	b5 81       	ldd	r27, Z+5	; 0x05
    1ce2:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1ce6:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1cea:	2a 17       	cp	r18, r26
    1cec:	3b 07       	cpc	r19, r27
    1cee:	c9 f4       	brne	.+50     	; 0x1d22 <__vector_7+0x108>
    1cf0:	9c 01       	movw	r18, r24
    1cf2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cf6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cfa:	84 1b       	sub	r24, r20
    1cfc:	95 0b       	sbc	r25, r21
    1cfe:	01 97       	sbiw	r24, 0x01	; 1
    1d00:	31 f4       	brne	.+12     	; 0x1d0e <__vector_7+0xf4>
    1d02:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d06:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d0a:	2f 5f       	subi	r18, 0xFF	; 255
    1d0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d0e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d12:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d16:	ef e6       	ldi	r30, 0x6F	; 111
    1d18:	f0 e0       	ldi	r31, 0x00	; 0
    1d1a:	80 81       	ld	r24, Z
    1d1c:	82 60       	ori	r24, 0x02	; 2
    1d1e:	80 83       	st	Z, r24
    1d20:	05 c0       	rjmp	.+10     	; 0x1d2c <__vector_7+0x112>
    1d22:	ef e6       	ldi	r30, 0x6F	; 111
    1d24:	f0 e0       	ldi	r31, 0x00	; 0
    1d26:	80 81       	ld	r24, Z
    1d28:	8d 7f       	andi	r24, 0xFD	; 253
    1d2a:	80 83       	st	Z, r24
    1d2c:	0e 94 b2 05 	call	0xb64	; 0xb64 <schedule>
    1d30:	ff 91       	pop	r31
    1d32:	ef 91       	pop	r30
    1d34:	bf 91       	pop	r27
    1d36:	af 91       	pop	r26
    1d38:	9f 91       	pop	r25
    1d3a:	8f 91       	pop	r24
    1d3c:	7f 91       	pop	r23
    1d3e:	6f 91       	pop	r22
    1d40:	5f 91       	pop	r21
    1d42:	4f 91       	pop	r20
    1d44:	3f 91       	pop	r19
    1d46:	2f 91       	pop	r18
    1d48:	ff 90       	pop	r15
    1d4a:	ef 90       	pop	r14
    1d4c:	df 90       	pop	r13
    1d4e:	cf 90       	pop	r12
    1d50:	0f 90       	pop	r0
    1d52:	0f be       	out	0x3f, r0	; 63
    1d54:	0f 90       	pop	r0
    1d56:	1f 90       	pop	r1
    1d58:	18 95       	reti

00001d5a <async>:
    1d5a:	3f 92       	push	r3
    1d5c:	4f 92       	push	r4
    1d5e:	5f 92       	push	r5
    1d60:	6f 92       	push	r6
    1d62:	7f 92       	push	r7
    1d64:	8f 92       	push	r8
    1d66:	9f 92       	push	r9
    1d68:	af 92       	push	r10
    1d6a:	bf 92       	push	r11
    1d6c:	cf 92       	push	r12
    1d6e:	df 92       	push	r13
    1d70:	ef 92       	push	r14
    1d72:	ff 92       	push	r15
    1d74:	0f 93       	push	r16
    1d76:	1f 93       	push	r17
    1d78:	cf 93       	push	r28
    1d7a:	df 93       	push	r29
    1d7c:	2b 01       	movw	r4, r22
    1d7e:	3c 01       	movw	r6, r24
    1d80:	49 01       	movw	r8, r18
    1d82:	5a 01       	movw	r10, r20
    1d84:	8f b7       	in	r24, 0x3f	; 63
    1d86:	80 78       	andi	r24, 0x80	; 128
    1d88:	38 2e       	mov	r3, r24
    1d8a:	f8 94       	cli
    1d8c:	86 e0       	ldi	r24, 0x06	; 6
    1d8e:	91 e0       	ldi	r25, 0x01	; 1
    1d90:	0e 94 7d 05 	call	0xafa	; 0xafa <dequeue>
    1d94:	ec 01       	movw	r28, r24
    1d96:	1b 87       	std	Y+11, r17	; 0x0b
    1d98:	0a 87       	std	Y+10, r16	; 0x0a
    1d9a:	fd 86       	std	Y+13, r15	; 0x0d
    1d9c:	ec 86       	std	Y+12, r14	; 0x0c
    1d9e:	df 86       	std	Y+15, r13	; 0x0f
    1da0:	ce 86       	std	Y+14, r12	; 0x0e
    1da2:	33 20       	and	r3, r3
    1da4:	61 f0       	breq	.+24     	; 0x1dbe <async+0x64>
    1da6:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1daa:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dae:	02 80       	ldd	r0, Z+2	; 0x02
    1db0:	f3 81       	ldd	r31, Z+3	; 0x03
    1db2:	e0 2d       	mov	r30, r0
    1db4:	82 81       	ldd	r24, Z+2	; 0x02
    1db6:	93 81       	ldd	r25, Z+3	; 0x03
    1db8:	a4 81       	ldd	r26, Z+4	; 0x04
    1dba:	b5 81       	ldd	r27, Z+5	; 0x05
    1dbc:	08 c0       	rjmp	.+16     	; 0x1dce <async+0x74>
    1dbe:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    1dc2:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    1dc6:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    1dca:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    1dce:	48 0e       	add	r4, r24
    1dd0:	59 1e       	adc	r5, r25
    1dd2:	6a 1e       	adc	r6, r26
    1dd4:	7b 1e       	adc	r7, r27
    1dd6:	4a 82       	std	Y+2, r4	; 0x02
    1dd8:	5b 82       	std	Y+3, r5	; 0x03
    1dda:	6c 82       	std	Y+4, r6	; 0x04
    1ddc:	7d 82       	std	Y+5, r7	; 0x05
    1dde:	18 14       	cp	r1, r8
    1de0:	19 04       	cpc	r1, r9
    1de2:	1a 04       	cpc	r1, r10
    1de4:	1b 04       	cpc	r1, r11
    1de6:	44 f0       	brlt	.+16     	; 0x1df8 <async+0x9e>
    1de8:	0f 2e       	mov	r0, r31
    1dea:	88 24       	eor	r8, r8
    1dec:	8a 94       	dec	r8
    1dee:	98 2c       	mov	r9, r8
    1df0:	a8 2c       	mov	r10, r8
    1df2:	ff e7       	ldi	r31, 0x7F	; 127
    1df4:	bf 2e       	mov	r11, r31
    1df6:	f0 2d       	mov	r31, r0
    1df8:	84 0c       	add	r8, r4
    1dfa:	95 1c       	adc	r9, r5
    1dfc:	a6 1c       	adc	r10, r6
    1dfe:	b7 1c       	adc	r11, r7
    1e00:	8e 82       	std	Y+6, r8	; 0x06
    1e02:	9f 82       	std	Y+7, r9	; 0x07
    1e04:	a8 86       	std	Y+8, r10	; 0x08
    1e06:	b9 86       	std	Y+9, r11	; 0x09
    1e08:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1e0c:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1e10:	c9 01       	movw	r24, r18
    1e12:	03 2e       	mov	r0, r19
    1e14:	00 0c       	add	r0, r0
    1e16:	aa 0b       	sbc	r26, r26
    1e18:	bb 0b       	sbc	r27, r27
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	99 27       	eor	r25, r25
    1e1e:	88 27       	eor	r24, r24
    1e20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e28:	60 e0       	ldi	r22, 0x00	; 0
    1e2a:	70 e0       	ldi	r23, 0x00	; 0
    1e2c:	84 2b       	or	r24, r20
    1e2e:	95 2b       	or	r25, r21
    1e30:	a6 2b       	or	r26, r22
    1e32:	b7 2b       	or	r27, r23
    1e34:	b0 9b       	sbis	0x16, 0	; 22
    1e36:	13 c0       	rjmp	.+38     	; 0x1e5e <async+0x104>
    1e38:	c9 01       	movw	r24, r18
    1e3a:	01 96       	adiw	r24, 0x01	; 1
    1e3c:	09 2e       	mov	r0, r25
    1e3e:	00 0c       	add	r0, r0
    1e40:	aa 0b       	sbc	r26, r26
    1e42:	bb 0b       	sbc	r27, r27
    1e44:	dc 01       	movw	r26, r24
    1e46:	99 27       	eor	r25, r25
    1e48:	88 27       	eor	r24, r24
    1e4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e52:	60 e0       	ldi	r22, 0x00	; 0
    1e54:	70 e0       	ldi	r23, 0x00	; 0
    1e56:	84 2b       	or	r24, r20
    1e58:	95 2b       	or	r25, r21
    1e5a:	a6 2b       	or	r26, r22
    1e5c:	b7 2b       	or	r27, r23
    1e5e:	48 1a       	sub	r4, r24
    1e60:	59 0a       	sbc	r5, r25
    1e62:	6a 0a       	sbc	r6, r26
    1e64:	7b 0a       	sbc	r7, r27
    1e66:	14 14       	cp	r1, r4
    1e68:	15 04       	cpc	r1, r5
    1e6a:	16 04       	cpc	r1, r6
    1e6c:	17 04       	cpc	r1, r7
    1e6e:	ac f5       	brge	.+106    	; 0x1eda <async+0x180>
    1e70:	64 e2       	ldi	r22, 0x24	; 36
    1e72:	71 e0       	ldi	r23, 0x01	; 1
    1e74:	ce 01       	movw	r24, r28
    1e76:	0e 94 4c 05 	call	0xa98	; 0xa98 <enqueueByBaseline>
    1e7a:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1e7e:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1e82:	30 97       	sbiw	r30, 0x00	; 0
    1e84:	21 f1       	breq	.+72     	; 0x1ece <async+0x174>
    1e86:	82 81       	ldd	r24, Z+2	; 0x02
    1e88:	93 81       	ldd	r25, Z+3	; 0x03
    1e8a:	a4 81       	ldd	r26, Z+4	; 0x04
    1e8c:	b5 81       	ldd	r27, Z+5	; 0x05
    1e8e:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1e92:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1e96:	2a 17       	cp	r18, r26
    1e98:	3b 07       	cpc	r19, r27
    1e9a:	c9 f4       	brne	.+50     	; 0x1ece <async+0x174>
    1e9c:	9c 01       	movw	r18, r24
    1e9e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ea2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ea6:	84 1b       	sub	r24, r20
    1ea8:	95 0b       	sbc	r25, r21
    1eaa:	01 97       	sbiw	r24, 0x01	; 1
    1eac:	31 f4       	brne	.+12     	; 0x1eba <async+0x160>
    1eae:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1eb2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1eb6:	2f 5f       	subi	r18, 0xFF	; 255
    1eb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1eba:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1ebe:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ec2:	ef e6       	ldi	r30, 0x6F	; 111
    1ec4:	f0 e0       	ldi	r31, 0x00	; 0
    1ec6:	80 81       	ld	r24, Z
    1ec8:	82 60       	ori	r24, 0x02	; 2
    1eca:	80 83       	st	Z, r24
    1ecc:	39 c0       	rjmp	.+114    	; 0x1f40 <async+0x1e6>
    1ece:	ef e6       	ldi	r30, 0x6F	; 111
    1ed0:	f0 e0       	ldi	r31, 0x00	; 0
    1ed2:	80 81       	ld	r24, Z
    1ed4:	8d 7f       	andi	r24, 0xFD	; 253
    1ed6:	80 83       	st	Z, r24
    1ed8:	33 c0       	rjmp	.+102    	; 0x1f40 <async+0x1e6>
    1eda:	66 e2       	ldi	r22, 0x26	; 38
    1edc:	71 e0       	ldi	r23, 0x01	; 1
    1ede:	ce 01       	movw	r24, r28
    1ee0:	0e 94 1b 05 	call	0xa36	; 0xa36 <enqueueByDeadline>
    1ee4:	33 20       	and	r3, r3
    1ee6:	61 f1       	breq	.+88     	; 0x1f40 <async+0x1e6>
    1ee8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1eec:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1ef0:	89 2b       	or	r24, r25
    1ef2:	31 f1       	breq	.+76     	; 0x1f40 <async+0x1e6>
    1ef4:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    1ef8:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    1efc:	86 81       	ldd	r24, Z+6	; 0x06
    1efe:	97 81       	ldd	r25, Z+7	; 0x07
    1f00:	a0 85       	ldd	r26, Z+8	; 0x08
    1f02:	b1 85       	ldd	r27, Z+9	; 0x09
    1f04:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1f08:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1f0c:	02 80       	ldd	r0, Z+2	; 0x02
    1f0e:	f3 81       	ldd	r31, Z+3	; 0x03
    1f10:	e0 2d       	mov	r30, r0
    1f12:	46 81       	ldd	r20, Z+6	; 0x06
    1f14:	57 81       	ldd	r21, Z+7	; 0x07
    1f16:	60 85       	ldd	r22, Z+8	; 0x08
    1f18:	71 85       	ldd	r23, Z+9	; 0x09
    1f1a:	84 1b       	sub	r24, r20
    1f1c:	95 0b       	sbc	r25, r21
    1f1e:	a6 0b       	sbc	r26, r22
    1f20:	b7 0b       	sbc	r27, r23
    1f22:	72 f4       	brpl	.+28     	; 0x1f40 <async+0x1e6>
    1f24:	84 e0       	ldi	r24, 0x04	; 4
    1f26:	91 e0       	ldi	r25, 0x01	; 1
    1f28:	0e 94 a8 05 	call	0xb50	; 0xb50 <pop>
    1f2c:	62 e0       	ldi	r22, 0x02	; 2
    1f2e:	71 e0       	ldi	r23, 0x01	; 1
    1f30:	0e 94 9e 05 	call	0xb3c	; 0xb3c <push>
    1f34:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1f38:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1f3c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <dispatch>
    1f40:	33 20       	and	r3, r3
    1f42:	09 f0       	breq	.+2      	; 0x1f46 <async+0x1ec>
    1f44:	78 94       	sei
    1f46:	ce 01       	movw	r24, r28
    1f48:	df 91       	pop	r29
    1f4a:	cf 91       	pop	r28
    1f4c:	1f 91       	pop	r17
    1f4e:	0f 91       	pop	r16
    1f50:	ff 90       	pop	r15
    1f52:	ef 90       	pop	r14
    1f54:	df 90       	pop	r13
    1f56:	cf 90       	pop	r12
    1f58:	bf 90       	pop	r11
    1f5a:	af 90       	pop	r10
    1f5c:	9f 90       	pop	r9
    1f5e:	8f 90       	pop	r8
    1f60:	7f 90       	pop	r7
    1f62:	6f 90       	pop	r6
    1f64:	5f 90       	pop	r5
    1f66:	4f 90       	pop	r4
    1f68:	3f 90       	pop	r3
    1f6a:	08 95       	ret

00001f6c <sync>:
    1f6c:	cf 92       	push	r12
    1f6e:	df 92       	push	r13
    1f70:	ef 92       	push	r14
    1f72:	ff 92       	push	r15
    1f74:	0f 93       	push	r16
    1f76:	1f 93       	push	r17
    1f78:	cf 93       	push	r28
    1f7a:	df 93       	push	r29
    1f7c:	ec 01       	movw	r28, r24
    1f7e:	7b 01       	movw	r14, r22
    1f80:	6a 01       	movw	r12, r20
    1f82:	1f b7       	in	r17, 0x3f	; 63
    1f84:	10 78       	andi	r17, 0x80	; 128
    1f86:	f8 94       	cli
    1f88:	a8 81       	ld	r26, Y
    1f8a:	b9 81       	ldd	r27, Y+1	; 0x01
    1f8c:	10 97       	sbiw	r26, 0x00	; 0
    1f8e:	19 f4       	brne	.+6      	; 0x1f96 <sync+0x2a>
    1f90:	35 c0       	rjmp	.+106    	; 0x1ffc <sync+0x90>
    1f92:	a0 81       	ld	r26, Z
    1f94:	b1 81       	ldd	r27, Z+1	; 0x01
    1f96:	14 96       	adiw	r26, 0x04	; 4
    1f98:	ed 91       	ld	r30, X+
    1f9a:	fc 91       	ld	r31, X
    1f9c:	15 97       	sbiw	r26, 0x05	; 5
    1f9e:	30 97       	sbiw	r30, 0x00	; 0
    1fa0:	c1 f7       	brne	.-16     	; 0x1f92 <sync+0x26>
    1fa2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fa6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1faa:	a2 17       	cp	r26, r18
    1fac:	b3 07       	cpc	r27, r19
    1fae:	11 f0       	breq	.+4      	; 0x1fb4 <sync+0x48>
    1fb0:	11 11       	cpse	r17, r1
    1fb2:	07 c0       	rjmp	.+14     	; 0x1fc2 <sync+0x56>
    1fb4:	11 23       	and	r17, r17
    1fb6:	09 f4       	brne	.+2      	; 0x1fba <sync+0x4e>
    1fb8:	4a c0       	rjmp	.+148    	; 0x204e <sync+0xe2>
    1fba:	78 94       	sei
    1fbc:	8f ef       	ldi	r24, 0xFF	; 255
    1fbe:	9f ef       	ldi	r25, 0xFF	; 255
    1fc0:	4e c0       	rjmp	.+156    	; 0x205e <sync+0xf2>
    1fc2:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc4:	9b 81       	ldd	r25, Y+3	; 0x03
    1fc6:	00 97       	sbiw	r24, 0x00	; 0
    1fc8:	19 f0       	breq	.+6      	; 0x1fd0 <sync+0x64>
    1fca:	fc 01       	movw	r30, r24
    1fcc:	15 82       	std	Z+5, r1	; 0x05
    1fce:	14 82       	std	Z+4, r1	; 0x04
    1fd0:	3b 83       	std	Y+3, r19	; 0x03
    1fd2:	2a 83       	std	Y+2, r18	; 0x02
    1fd4:	f9 01       	movw	r30, r18
    1fd6:	d5 83       	std	Z+5, r29	; 0x05
    1fd8:	c4 83       	std	Z+4, r28	; 0x04
    1fda:	cd 01       	movw	r24, r26
    1fdc:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <dispatch>
    1fe0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fe4:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fe8:	82 81       	ldd	r24, Z+2	; 0x02
    1fea:	93 81       	ldd	r25, Z+3	; 0x03
    1fec:	89 2b       	or	r24, r25
    1fee:	31 f4       	brne	.+12     	; 0x1ffc <sync+0x90>
    1ff0:	11 23       	and	r17, r17
    1ff2:	81 f1       	breq	.+96     	; 0x2054 <sync+0xe8>
    1ff4:	78 94       	sei
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	31 c0       	rjmp	.+98     	; 0x205e <sync+0xf2>
    1ffc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2000:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2004:	99 83       	std	Y+1, r25	; 0x01
    2006:	88 83       	st	Y, r24
    2008:	11 23       	and	r17, r17
    200a:	29 f0       	breq	.+10     	; 0x2016 <sync+0xaa>
    200c:	8a 81       	ldd	r24, Y+2	; 0x02
    200e:	9b 81       	ldd	r25, Y+3	; 0x03
    2010:	01 97       	sbiw	r24, 0x01	; 1
    2012:	09 f0       	breq	.+2      	; 0x2016 <sync+0xaa>
    2014:	78 94       	sei
    2016:	b6 01       	movw	r22, r12
    2018:	ce 01       	movw	r24, r28
    201a:	f7 01       	movw	r30, r14
    201c:	09 95       	icall
    201e:	f8 2e       	mov	r15, r24
    2020:	09 2f       	mov	r16, r25
    2022:	8f b7       	in	r24, 0x3f	; 63
    2024:	f8 94       	cli
    2026:	19 82       	std	Y+1, r1	; 0x01
    2028:	18 82       	st	Y, r1
    202a:	8a 81       	ldd	r24, Y+2	; 0x02
    202c:	9b 81       	ldd	r25, Y+3	; 0x03
    202e:	82 30       	cpi	r24, 0x02	; 2
    2030:	91 05       	cpc	r25, r1
    2032:	38 f0       	brcs	.+14     	; 0x2042 <sync+0xd6>
    2034:	1b 82       	std	Y+3, r1	; 0x03
    2036:	1a 82       	std	Y+2, r1	; 0x02
    2038:	fc 01       	movw	r30, r24
    203a:	15 82       	std	Z+5, r1	; 0x05
    203c:	14 82       	std	Z+4, r1	; 0x04
    203e:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <dispatch>
    2042:	11 23       	and	r17, r17
    2044:	51 f0       	breq	.+20     	; 0x205a <sync+0xee>
    2046:	78 94       	sei
    2048:	8f 2d       	mov	r24, r15
    204a:	90 2f       	mov	r25, r16
    204c:	08 c0       	rjmp	.+16     	; 0x205e <sync+0xf2>
    204e:	8f ef       	ldi	r24, 0xFF	; 255
    2050:	9f ef       	ldi	r25, 0xFF	; 255
    2052:	05 c0       	rjmp	.+10     	; 0x205e <sync+0xf2>
    2054:	80 e0       	ldi	r24, 0x00	; 0
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	02 c0       	rjmp	.+4      	; 0x205e <sync+0xf2>
    205a:	8f 2d       	mov	r24, r15
    205c:	90 2f       	mov	r25, r16
    205e:	df 91       	pop	r29
    2060:	cf 91       	pop	r28
    2062:	1f 91       	pop	r17
    2064:	0f 91       	pop	r16
    2066:	ff 90       	pop	r15
    2068:	ef 90       	pop	r14
    206a:	df 90       	pop	r13
    206c:	cf 90       	pop	r12
    206e:	08 95       	ret

00002070 <run>:
    2070:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2074:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2078:	86 e2       	ldi	r24, 0x26	; 38
    207a:	91 e0       	ldi	r25, 0x01	; 1
    207c:	0e 94 7d 05 	call	0xafa	; 0xafa <dequeue>
    2080:	ec 01       	movw	r28, r24
    2082:	f8 01       	movw	r30, r16
    2084:	93 83       	std	Z+3, r25	; 0x03
    2086:	82 83       	std	Z+2, r24	; 0x02
    2088:	78 94       	sei
    208a:	6c 85       	ldd	r22, Y+12	; 0x0c
    208c:	7d 85       	ldd	r23, Y+13	; 0x0d
    208e:	4e 85       	ldd	r20, Y+14	; 0x0e
    2090:	5f 85       	ldd	r21, Y+15	; 0x0f
    2092:	8a 85       	ldd	r24, Y+10	; 0x0a
    2094:	9b 85       	ldd	r25, Y+11	; 0x0b
    2096:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <sync>
    209a:	8f b7       	in	r24, 0x3f	; 63
    209c:	f8 94       	cli
    209e:	66 e0       	ldi	r22, 0x06	; 6
    20a0:	71 e0       	ldi	r23, 0x01	; 1
    20a2:	ce 01       	movw	r24, r28
    20a4:	0e 94 94 05 	call	0xb28	; 0xb28 <insert>
    20a8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    20ac:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    20b0:	01 90       	ld	r0, Z+
    20b2:	f0 81       	ld	r31, Z
    20b4:	e0 2d       	mov	r30, r0
    20b6:	c2 81       	ldd	r28, Z+2	; 0x02
    20b8:	d3 81       	ldd	r29, Z+3	; 0x03
    20ba:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
    20be:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
    20c2:	30 97       	sbiw	r30, 0x00	; 0
    20c4:	a1 f0       	breq	.+40     	; 0x20ee <run+0x7e>
    20c6:	20 97       	sbiw	r28, 0x00	; 0
    20c8:	99 f2       	breq	.-90     	; 0x2070 <run>
    20ca:	86 81       	ldd	r24, Z+6	; 0x06
    20cc:	97 81       	ldd	r25, Z+7	; 0x07
    20ce:	a0 85       	ldd	r26, Z+8	; 0x08
    20d0:	b1 85       	ldd	r27, Z+9	; 0x09
    20d2:	4e 81       	ldd	r20, Y+6	; 0x06
    20d4:	5f 81       	ldd	r21, Y+7	; 0x07
    20d6:	68 85       	ldd	r22, Y+8	; 0x08
    20d8:	79 85       	ldd	r23, Y+9	; 0x09
    20da:	84 1b       	sub	r24, r20
    20dc:	95 0b       	sbc	r25, r21
    20de:	a6 0b       	sbc	r26, r22
    20e0:	b7 0b       	sbc	r27, r23
    20e2:	18 16       	cp	r1, r24
    20e4:	19 06       	cpc	r1, r25
    20e6:	1a 06       	cpc	r1, r26
    20e8:	1b 06       	cpc	r1, r27
    20ea:	0c f0       	brlt	.+2      	; 0x20ee <run+0x7e>
    20ec:	c1 cf       	rjmp	.-126    	; 0x2070 <run>
    20ee:	82 e0       	ldi	r24, 0x02	; 2
    20f0:	91 e0       	ldi	r25, 0x01	; 1
    20f2:	0e 94 a8 05 	call	0xb50	; 0xb50 <pop>
    20f6:	64 e0       	ldi	r22, 0x04	; 4
    20f8:	71 e0       	ldi	r23, 0x01	; 1
    20fa:	0e 94 9e 05 	call	0xb3c	; 0xb3c <push>
    20fe:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2102:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    2106:	02 c0       	rjmp	.+4      	; 0x210c <run+0x9c>
    2108:	a0 81       	ld	r26, Z
    210a:	b1 81       	ldd	r27, Z+1	; 0x01
    210c:	14 96       	adiw	r26, 0x04	; 4
    210e:	ed 91       	ld	r30, X+
    2110:	fc 91       	ld	r31, X
    2112:	15 97       	sbiw	r26, 0x05	; 5
    2114:	30 97       	sbiw	r30, 0x00	; 0
    2116:	c1 f7       	brne	.-16     	; 0x2108 <run+0x98>
    2118:	cd 01       	movw	r24, r26
    211a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <dispatch>
    211e:	a8 cf       	rjmp	.-176    	; 0x2070 <run>

00002120 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    2120:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    2122:	42 31       	cpi	r20, 0x12	; 18
    2124:	b8 f4       	brcc	.+46     	; 0x2154 <install+0x34>
        char status;
        DISABLE(status);
    2126:	9f b7       	in	r25, 0x3f	; 63
    2128:	90 78       	andi	r25, 0x80	; 128
    212a:	f8 94       	cli
        otable[i] = obj;
    212c:	50 e0       	ldi	r21, 0x00	; 0
    212e:	44 0f       	add	r20, r20
    2130:	55 1f       	adc	r21, r21
    2132:	da 01       	movw	r26, r20
    2134:	a8 5d       	subi	r26, 0xD8	; 216
    2136:	be 4f       	sbci	r27, 0xFE	; 254
    2138:	ed 93       	st	X+, r30
    213a:	fc 93       	st	X, r31
        mtable[i] = m;
    213c:	da 01       	movw	r26, r20
    213e:	a0 54       	subi	r26, 0x40	; 64
    2140:	be 4f       	sbci	r27, 0xFE	; 254
    2142:	6d 93       	st	X+, r22
    2144:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2146:	21 e0       	ldi	r18, 0x01	; 1
    2148:	30 e0       	ldi	r19, 0x00	; 0
    214a:	33 83       	std	Z+3, r19	; 0x03
    214c:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    214e:	99 23       	and	r25, r25
    2150:	09 f0       	breq	.+2      	; 0x2154 <install+0x34>
    2152:	78 94       	sei
    2154:	08 95       	ret

00002156 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2156:	8c 01       	movw	r16, r24
    2158:	7b 01       	movw	r14, r22
    215a:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    215c:	8f b7       	in	r24, 0x3f	; 63
    215e:	f8 94       	cli
    initialize();
    2160:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <initialize>
    ENABLE(1);
    2164:	78 94       	sei
    if (m != NULL)
    2166:	e1 14       	cp	r14, r1
    2168:	f1 04       	cpc	r15, r1
    216a:	41 f0       	breq	.+16     	; 0x217c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    216c:	20 e0       	ldi	r18, 0x00	; 0
    216e:	30 e0       	ldi	r19, 0x00	; 0
    2170:	a9 01       	movw	r20, r18
    2172:	60 e0       	ldi	r22, 0x00	; 0
    2174:	70 e0       	ldi	r23, 0x00	; 0
    2176:	cb 01       	movw	r24, r22
    2178:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <async>
    DISABLE(status);
    217c:	8f b7       	in	r24, 0x3f	; 63
    217e:	f8 94       	cli
    idle();
    2180:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <idle>

00002184 <__divmodhi4>:
    2184:	97 fb       	bst	r25, 7
    2186:	07 2e       	mov	r0, r23
    2188:	16 f4       	brtc	.+4      	; 0x218e <__divmodhi4+0xa>
    218a:	00 94       	com	r0
    218c:	07 d0       	rcall	.+14     	; 0x219c <__divmodhi4_neg1>
    218e:	77 fd       	sbrc	r23, 7
    2190:	09 d0       	rcall	.+18     	; 0x21a4 <__divmodhi4_neg2>
    2192:	0e 94 d6 10 	call	0x21ac	; 0x21ac <__udivmodhi4>
    2196:	07 fc       	sbrc	r0, 7
    2198:	05 d0       	rcall	.+10     	; 0x21a4 <__divmodhi4_neg2>
    219a:	3e f4       	brtc	.+14     	; 0x21aa <__divmodhi4_exit>

0000219c <__divmodhi4_neg1>:
    219c:	90 95       	com	r25
    219e:	81 95       	neg	r24
    21a0:	9f 4f       	sbci	r25, 0xFF	; 255
    21a2:	08 95       	ret

000021a4 <__divmodhi4_neg2>:
    21a4:	70 95       	com	r23
    21a6:	61 95       	neg	r22
    21a8:	7f 4f       	sbci	r23, 0xFF	; 255

000021aa <__divmodhi4_exit>:
    21aa:	08 95       	ret

000021ac <__udivmodhi4>:
    21ac:	aa 1b       	sub	r26, r26
    21ae:	bb 1b       	sub	r27, r27
    21b0:	51 e1       	ldi	r21, 0x11	; 17
    21b2:	07 c0       	rjmp	.+14     	; 0x21c2 <__udivmodhi4_ep>

000021b4 <__udivmodhi4_loop>:
    21b4:	aa 1f       	adc	r26, r26
    21b6:	bb 1f       	adc	r27, r27
    21b8:	a6 17       	cp	r26, r22
    21ba:	b7 07       	cpc	r27, r23
    21bc:	10 f0       	brcs	.+4      	; 0x21c2 <__udivmodhi4_ep>
    21be:	a6 1b       	sub	r26, r22
    21c0:	b7 0b       	sbc	r27, r23

000021c2 <__udivmodhi4_ep>:
    21c2:	88 1f       	adc	r24, r24
    21c4:	99 1f       	adc	r25, r25
    21c6:	5a 95       	dec	r21
    21c8:	a9 f7       	brne	.-22     	; 0x21b4 <__udivmodhi4_loop>
    21ca:	80 95       	com	r24
    21cc:	90 95       	com	r25
    21ce:	bc 01       	movw	r22, r24
    21d0:	cd 01       	movw	r24, r26
    21d2:	08 95       	ret

000021d4 <setjmp>:
    21d4:	dc 01       	movw	r26, r24
    21d6:	2d 92       	st	X+, r2
    21d8:	3d 92       	st	X+, r3
    21da:	4d 92       	st	X+, r4
    21dc:	5d 92       	st	X+, r5
    21de:	6d 92       	st	X+, r6
    21e0:	7d 92       	st	X+, r7
    21e2:	8d 92       	st	X+, r8
    21e4:	9d 92       	st	X+, r9
    21e6:	ad 92       	st	X+, r10
    21e8:	bd 92       	st	X+, r11
    21ea:	cd 92       	st	X+, r12
    21ec:	dd 92       	st	X+, r13
    21ee:	ed 92       	st	X+, r14
    21f0:	fd 92       	st	X+, r15
    21f2:	0d 93       	st	X+, r16
    21f4:	1d 93       	st	X+, r17
    21f6:	cd 93       	st	X+, r28
    21f8:	dd 93       	st	X+, r29
    21fa:	ff 91       	pop	r31
    21fc:	ef 91       	pop	r30
    21fe:	8d b7       	in	r24, 0x3d	; 61
    2200:	8d 93       	st	X+, r24
    2202:	8e b7       	in	r24, 0x3e	; 62
    2204:	8d 93       	st	X+, r24
    2206:	8f b7       	in	r24, 0x3f	; 63
    2208:	8d 93       	st	X+, r24
    220a:	ed 93       	st	X+, r30
    220c:	fd 93       	st	X+, r31
    220e:	88 27       	eor	r24, r24
    2210:	99 27       	eor	r25, r25
    2212:	09 94       	ijmp

00002214 <longjmp>:
    2214:	dc 01       	movw	r26, r24
    2216:	cb 01       	movw	r24, r22
    2218:	81 30       	cpi	r24, 0x01	; 1
    221a:	91 05       	cpc	r25, r1
    221c:	81 1d       	adc	r24, r1
    221e:	2d 90       	ld	r2, X+
    2220:	3d 90       	ld	r3, X+
    2222:	4d 90       	ld	r4, X+
    2224:	5d 90       	ld	r5, X+
    2226:	6d 90       	ld	r6, X+
    2228:	7d 90       	ld	r7, X+
    222a:	8d 90       	ld	r8, X+
    222c:	9d 90       	ld	r9, X+
    222e:	ad 90       	ld	r10, X+
    2230:	bd 90       	ld	r11, X+
    2232:	cd 90       	ld	r12, X+
    2234:	dd 90       	ld	r13, X+
    2236:	ed 90       	ld	r14, X+
    2238:	fd 90       	ld	r15, X+
    223a:	0d 91       	ld	r16, X+
    223c:	1d 91       	ld	r17, X+
    223e:	cd 91       	ld	r28, X+
    2240:	dd 91       	ld	r29, X+
    2242:	ed 91       	ld	r30, X+
    2244:	fd 91       	ld	r31, X+
    2246:	0d 90       	ld	r0, X+
    2248:	f8 94       	cli
    224a:	fe bf       	out	0x3e, r31	; 62
    224c:	0f be       	out	0x3f, r0	; 63
    224e:	ed bf       	out	0x3d, r30	; 61
    2250:	ed 91       	ld	r30, X+
    2252:	fd 91       	ld	r31, X+
    2254:	09 94       	ijmp

00002256 <_exit>:
    2256:	f8 94       	cli

00002258 <__stop_program>:
    2258:	ff cf       	rjmp	.-2      	; 0x2258 <__stop_program>
