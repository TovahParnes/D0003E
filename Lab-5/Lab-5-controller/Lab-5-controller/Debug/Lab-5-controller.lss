
Lab-5-controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00002272  00002306  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002272  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011e  0080011e  00002324  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002324  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002354  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  00002394  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000314e  00000000  00000000  0000261c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000116b  00000000  00000000  0000576a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001705  00000000  00000000  000068d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ce8  00000000  00000000  00007fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009c4  00000000  00000000  00008cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002d3d  00000000  00000000  00009688  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000228  00000000  00000000  0000c3c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 50 05 	jmp	0xaa0	; 0xaa0 <__vector_1>
       8:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__vector_2>
       c:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__vector_3>
      10:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__vector_4>
      14:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 d7 0d 	jmp	0x1bae	; 0x1bae <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 85 0d 	jmp	0x1b0a	; 0x1b0a <__vector_9>
      28:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__vector_10>
      2c:	0c 94 d8 07 	jmp	0xfb0	; 0xfb0 <__vector_11>
      30:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__vector_12>
      34:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__vector_13>
      38:	0c 94 1c 09 	jmp	0x1238	; 0x1238 <__vector_14>
      3c:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__vector_15>
      40:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__vector_16>
      44:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__vector_17>
      48:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__vector_18>
      4c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__vector_19>
      50:	0c 94 a4 0b 	jmp	0x1748	; 0x1748 <__vector_20>
      54:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <__vector_21>
      58:	0c 94 7c 0c 	jmp	0x18f8	; 0x18f8 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e2 e7       	ldi	r30, 0x72	; 114
      70:	f2 e2       	ldi	r31, 0x22	; 34
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 31       	cpi	r26, 0x1E	; 30
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e1       	ldi	r26, 0x1E	; 30
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 37       	cpi	r26, 0x71	; 113
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 25 04 	call	0x84a	; 0x84a <main>
      92:	0c 94 37 11 	jmp	0x226e	; 0x226e <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <decBridge>:
	case NORTH:
		lightsNorth(self);
		break;
		
	case SOUTH:
		lightsSouth(self);
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	fc 01       	movw	r30, r24
      a8:	c4 80       	ldd	r12, Z+4	; 0x04
      aa:	d5 80       	ldd	r13, Z+5	; 0x05
      ac:	81 e0       	ldi	r24, 0x01	; 1
      ae:	c8 1a       	sub	r12, r24
      b0:	d1 08       	sbc	r13, r1
      b2:	d5 82       	std	Z+5, r13	; 0x05
      b4:	c4 82       	std	Z+4, r12	; 0x04
      b6:	02 89       	ldd	r16, Z+18	; 0x12
      b8:	13 89       	ldd	r17, Z+19	; 0x13
      ba:	0f 2e       	mov	r0, r31
      bc:	fa ea       	ldi	r31, 0xAA	; 170
      be:	ef 2e       	mov	r14, r31
      c0:	f3 e0       	ldi	r31, 0x03	; 3
      c2:	ff 2e       	mov	r15, r31
      c4:	f0 2d       	mov	r31, r0
      c6:	20 e0       	ldi	r18, 0x00	; 0
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	a9 01       	movw	r20, r18
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	70 e0       	ldi	r23, 0x00	; 0
      d0:	cb 01       	movw	r24, r22
      d2:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
      d6:	1f 91       	pop	r17
      d8:	0f 91       	pop	r16
      da:	ff 90       	pop	r15
      dc:	ef 90       	pop	r14
      de:	df 90       	pop	r13
      e0:	cf 90       	pop	r12
      e2:	08 95       	ret

000000e4 <addQueue>:
      e4:	cf 92       	push	r12
      e6:	df 92       	push	r13
      e8:	ef 92       	push	r14
      ea:	ff 92       	push	r15
      ec:	0f 93       	push	r16
      ee:	1f 93       	push	r17
      f0:	61 30       	cpi	r22, 0x01	; 1
      f2:	71 05       	cpc	r23, r1
      f4:	d1 f4       	brne	.+52     	; 0x12a <addQueue+0x46>
      f6:	fc 01       	movw	r30, r24
      f8:	c6 80       	ldd	r12, Z+6	; 0x06
      fa:	d7 80       	ldd	r13, Z+7	; 0x07
      fc:	ff ef       	ldi	r31, 0xFF	; 255
      fe:	cf 1a       	sub	r12, r31
     100:	df 0a       	sbc	r13, r31
     102:	fc 01       	movw	r30, r24
     104:	d7 82       	std	Z+7, r13	; 0x07
     106:	c6 82       	std	Z+6, r12	; 0x06
     108:	02 89       	ldd	r16, Z+18	; 0x12
     10a:	13 89       	ldd	r17, Z+19	; 0x13
     10c:	0f 2e       	mov	r0, r31
     10e:	f0 ea       	ldi	r31, 0xA0	; 160
     110:	ef 2e       	mov	r14, r31
     112:	f3 e0       	ldi	r31, 0x03	; 3
     114:	ff 2e       	mov	r15, r31
     116:	f0 2d       	mov	r31, r0
     118:	20 e0       	ldi	r18, 0x00	; 0
     11a:	30 e0       	ldi	r19, 0x00	; 0
     11c:	a9 01       	movw	r20, r18
     11e:	60 e0       	ldi	r22, 0x00	; 0
     120:	70 e0       	ldi	r23, 0x00	; 0
     122:	cb 01       	movw	r24, r22
     124:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     128:	1c c0       	rjmp	.+56     	; 0x162 <addQueue+0x7e>
     12a:	62 30       	cpi	r22, 0x02	; 2
     12c:	71 05       	cpc	r23, r1
     12e:	c9 f4       	brne	.+50     	; 0x162 <addQueue+0x7e>
     130:	fc 01       	movw	r30, r24
     132:	c0 84       	ldd	r12, Z+8	; 0x08
     134:	d1 84       	ldd	r13, Z+9	; 0x09
     136:	ff ef       	ldi	r31, 0xFF	; 255
     138:	cf 1a       	sub	r12, r31
     13a:	df 0a       	sbc	r13, r31
     13c:	fc 01       	movw	r30, r24
     13e:	d1 86       	std	Z+9, r13	; 0x09
     140:	c0 86       	std	Z+8, r12	; 0x08
     142:	02 89       	ldd	r16, Z+18	; 0x12
     144:	13 89       	ldd	r17, Z+19	; 0x13
     146:	0f 2e       	mov	r0, r31
     148:	f5 ea       	ldi	r31, 0xA5	; 165
     14a:	ef 2e       	mov	r14, r31
     14c:	f3 e0       	ldi	r31, 0x03	; 3
     14e:	ff 2e       	mov	r15, r31
     150:	f0 2d       	mov	r31, r0
     152:	20 e0       	ldi	r18, 0x00	; 0
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	a9 01       	movw	r20, r18
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	cb 01       	movw	r24, r22
     15e:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     162:	1f 91       	pop	r17
     164:	0f 91       	pop	r16
     166:	ff 90       	pop	r15
     168:	ef 90       	pop	r14
     16a:	df 90       	pop	r13
     16c:	cf 90       	pop	r12
     16e:	08 95       	ret

00000170 <decQueue>:
     170:	cf 92       	push	r12
     172:	df 92       	push	r13
     174:	ef 92       	push	r14
     176:	ff 92       	push	r15
     178:	0f 93       	push	r16
     17a:	1f 93       	push	r17
     17c:	61 30       	cpi	r22, 0x01	; 1
     17e:	71 05       	cpc	r23, r1
     180:	d1 f4       	brne	.+52     	; 0x1b6 <decQueue+0x46>
     182:	fc 01       	movw	r30, r24
     184:	c6 80       	ldd	r12, Z+6	; 0x06
     186:	d7 80       	ldd	r13, Z+7	; 0x07
     188:	f1 e0       	ldi	r31, 0x01	; 1
     18a:	cf 1a       	sub	r12, r31
     18c:	d1 08       	sbc	r13, r1
     18e:	fc 01       	movw	r30, r24
     190:	d7 82       	std	Z+7, r13	; 0x07
     192:	c6 82       	std	Z+6, r12	; 0x06
     194:	02 89       	ldd	r16, Z+18	; 0x12
     196:	13 89       	ldd	r17, Z+19	; 0x13
     198:	0f 2e       	mov	r0, r31
     19a:	f0 ea       	ldi	r31, 0xA0	; 160
     19c:	ef 2e       	mov	r14, r31
     19e:	f3 e0       	ldi	r31, 0x03	; 3
     1a0:	ff 2e       	mov	r15, r31
     1a2:	f0 2d       	mov	r31, r0
     1a4:	20 e0       	ldi	r18, 0x00	; 0
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	a9 01       	movw	r20, r18
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	70 e0       	ldi	r23, 0x00	; 0
     1ae:	cb 01       	movw	r24, r22
     1b0:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     1b4:	1c c0       	rjmp	.+56     	; 0x1ee <decQueue+0x7e>
     1b6:	62 30       	cpi	r22, 0x02	; 2
     1b8:	71 05       	cpc	r23, r1
     1ba:	c9 f4       	brne	.+50     	; 0x1ee <decQueue+0x7e>
     1bc:	fc 01       	movw	r30, r24
     1be:	c0 84       	ldd	r12, Z+8	; 0x08
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	f1 e0       	ldi	r31, 0x01	; 1
     1c4:	cf 1a       	sub	r12, r31
     1c6:	d1 08       	sbc	r13, r1
     1c8:	fc 01       	movw	r30, r24
     1ca:	d1 86       	std	Z+9, r13	; 0x09
     1cc:	c0 86       	std	Z+8, r12	; 0x08
     1ce:	02 89       	ldd	r16, Z+18	; 0x12
     1d0:	13 89       	ldd	r17, Z+19	; 0x13
     1d2:	0f 2e       	mov	r0, r31
     1d4:	f5 ea       	ldi	r31, 0xA5	; 165
     1d6:	ef 2e       	mov	r14, r31
     1d8:	f3 e0       	ldi	r31, 0x03	; 3
     1da:	ff 2e       	mov	r15, r31
     1dc:	f0 2d       	mov	r31, r0
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	a9 01       	movw	r20, r18
     1e4:	60 e0       	ldi	r22, 0x00	; 0
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	cb 01       	movw	r24, r22
     1ea:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     1ee:	1f 91       	pop	r17
     1f0:	0f 91       	pop	r16
     1f2:	ff 90       	pop	r15
     1f4:	ef 90       	pop	r14
     1f6:	df 90       	pop	r13
     1f8:	cf 90       	pop	r12
     1fa:	08 95       	ret

000001fc <addBridge>:
     1fc:	cf 92       	push	r12
     1fe:	df 92       	push	r13
     200:	ef 92       	push	r14
     202:	ff 92       	push	r15
     204:	0f 93       	push	r16
     206:	1f 93       	push	r17
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	ec 01       	movw	r28, r24
     20e:	6b 01       	movw	r12, r22
     210:	0e 94 b8 00 	call	0x170	; 0x170 <decQueue>
     214:	db 86       	std	Y+11, r13	; 0x0b
     216:	ca 86       	std	Y+10, r12	; 0x0a
     218:	8e 85       	ldd	r24, Y+14	; 0x0e
     21a:	9f 85       	ldd	r25, Y+15	; 0x0f
     21c:	01 96       	adiw	r24, 0x01	; 1
     21e:	9f 87       	std	Y+15, r25	; 0x0f
     220:	8e 87       	std	Y+14, r24	; 0x0e
     222:	cc 80       	ldd	r12, Y+4	; 0x04
     224:	dd 80       	ldd	r13, Y+5	; 0x05
     226:	8f ef       	ldi	r24, 0xFF	; 255
     228:	c8 1a       	sub	r12, r24
     22a:	d8 0a       	sbc	r13, r24
     22c:	dd 82       	std	Y+5, r13	; 0x05
     22e:	cc 82       	std	Y+4, r12	; 0x04
     230:	0a 89       	ldd	r16, Y+18	; 0x12
     232:	1b 89       	ldd	r17, Y+19	; 0x13
     234:	0f 2e       	mov	r0, r31
     236:	fa ea       	ldi	r31, 0xAA	; 170
     238:	ef 2e       	mov	r14, r31
     23a:	f3 e0       	ldi	r31, 0x03	; 3
     23c:	ff 2e       	mov	r15, r31
     23e:	f0 2d       	mov	r31, r0
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	a9 01       	movw	r20, r18
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	70 e0       	ldi	r23, 0x00	; 0
     24a:	cb 01       	movw	r24, r22
     24c:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     250:	c1 2c       	mov	r12, r1
     252:	d1 2c       	mov	r13, r1
     254:	0f 2e       	mov	r0, r31
     256:	fd e4       	ldi	r31, 0x4D	; 77
     258:	ef 2e       	mov	r14, r31
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	ff 2e       	mov	r15, r31
     25e:	f0 2d       	mov	r31, r0
     260:	8e 01       	movw	r16, r28
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	a9 01       	movw	r20, r18
     268:	6a e5       	ldi	r22, 0x5A	; 90
     26a:	72 e6       	ldi	r23, 0x62	; 98
     26c:	82 e0       	ldi	r24, 0x02	; 2
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	1f 91       	pop	r17
     27a:	0f 91       	pop	r16
     27c:	ff 90       	pop	r15
     27e:	ef 90       	pop	r14
     280:	df 90       	pop	r13
     282:	cf 90       	pop	r12
     284:	08 95       	ret

00000286 <lightsRed>:
     286:	cf 92       	push	r12
     288:	df 92       	push	r13
     28a:	ef 92       	push	r14
     28c:	ff 92       	push	r15
     28e:	0f 93       	push	r16
     290:	1f 93       	push	r17
     292:	fc 01       	movw	r30, r24
     294:	17 86       	std	Z+15, r1	; 0x0f
     296:	16 86       	std	Z+14, r1	; 0x0e
     298:	15 86       	std	Z+13, r1	; 0x0d
     29a:	14 86       	std	Z+12, r1	; 0x0c
     29c:	00 89       	ldd	r16, Z+16	; 0x10
     29e:	11 89       	ldd	r17, Z+17	; 0x11
     2a0:	c1 2c       	mov	r12, r1
     2a2:	d1 2c       	mov	r13, r1
     2a4:	0f 2e       	mov	r0, r31
     2a6:	f5 e7       	ldi	r31, 0x75	; 117
     2a8:	ef 2e       	mov	r14, r31
     2aa:	f4 e0       	ldi	r31, 0x04	; 4
     2ac:	ff 2e       	mov	r15, r31
     2ae:	f0 2d       	mov	r31, r0
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	30 e0       	ldi	r19, 0x00	; 0
     2b4:	a9 01       	movw	r20, r18
     2b6:	60 e0       	ldi	r22, 0x00	; 0
     2b8:	70 e0       	ldi	r23, 0x00	; 0
     2ba:	cb 01       	movw	r24, r22
     2bc:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	ff 90       	pop	r15
     2c6:	ef 90       	pop	r14
     2c8:	df 90       	pop	r13
     2ca:	cf 90       	pop	r12
     2cc:	08 95       	ret

000002ce <lightGreen>:
     2ce:	cf 92       	push	r12
     2d0:	df 92       	push	r13
     2d2:	ef 92       	push	r14
     2d4:	ff 92       	push	r15
     2d6:	0f 93       	push	r16
     2d8:	1f 93       	push	r17
     2da:	fc 01       	movw	r30, r24
     2dc:	75 87       	std	Z+13, r23	; 0x0d
     2de:	64 87       	std	Z+12, r22	; 0x0c
     2e0:	00 89       	ldd	r16, Z+16	; 0x10
     2e2:	11 89       	ldd	r17, Z+17	; 0x11
     2e4:	6b 01       	movw	r12, r22
     2e6:	0f 2e       	mov	r0, r31
     2e8:	f5 e7       	ldi	r31, 0x75	; 117
     2ea:	ef 2e       	mov	r14, r31
     2ec:	f4 e0       	ldi	r31, 0x04	; 4
     2ee:	ff 2e       	mov	r15, r31
     2f0:	f0 2d       	mov	r31, r0
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	a9 01       	movw	r20, r18
     2f8:	60 e0       	ldi	r22, 0x00	; 0
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	cb 01       	movw	r24, r22
     2fe:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     302:	1f 91       	pop	r17
     304:	0f 91       	pop	r16
     306:	ff 90       	pop	r15
     308:	ef 90       	pop	r14
     30a:	df 90       	pop	r13
     30c:	cf 90       	pop	r12
     30e:	08 95       	ret

00000310 <lightsNorth>:
     310:	cf 92       	push	r12
     312:	df 92       	push	r13
     314:	ef 92       	push	r14
     316:	ff 92       	push	r15
     318:	0f 93       	push	r16
     31a:	1f 93       	push	r17
     31c:	cf 93       	push	r28
     31e:	df 93       	push	r29
     320:	ec 01       	movw	r28, r24
     322:	8e 81       	ldd	r24, Y+6	; 0x06
     324:	9f 81       	ldd	r25, Y+7	; 0x07
     326:	18 16       	cp	r1, r24
     328:	19 06       	cpc	r1, r25
     32a:	0c f5       	brge	.+66     	; 0x36e <lightsNorth+0x5e>
     32c:	8e 85       	ldd	r24, Y+14	; 0x0e
     32e:	9f 85       	ldd	r25, Y+15	; 0x0f
     330:	06 97       	sbiw	r24, 0x06	; 6
     332:	2c f0       	brlt	.+10     	; 0x33e <lightsNorth+0x2e>
     334:	88 85       	ldd	r24, Y+8	; 0x08
     336:	99 85       	ldd	r25, Y+9	; 0x09
     338:	89 2b       	or	r24, r25
     33a:	09 f0       	breq	.+2      	; 0x33e <lightsNorth+0x2e>
     33c:	50 c0       	rjmp	.+160    	; 0x3de <lightsNorth+0xce>
     33e:	61 e0       	ldi	r22, 0x01	; 1
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	ce 01       	movw	r24, r28
     344:	0e 94 67 01 	call	0x2ce	; 0x2ce <lightGreen>
     348:	c1 2c       	mov	r12, r1
     34a:	d1 2c       	mov	r13, r1
     34c:	0f 2e       	mov	r0, r31
     34e:	f8 e8       	ldi	r31, 0x88	; 136
     350:	ef 2e       	mov	r14, r31
     352:	f1 e0       	ldi	r31, 0x01	; 1
     354:	ff 2e       	mov	r15, r31
     356:	f0 2d       	mov	r31, r0
     358:	8e 01       	movw	r16, r28
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	a9 01       	movw	r20, r18
     360:	62 e1       	ldi	r22, 0x12	; 18
     362:	7a e7       	ldi	r23, 0x7A	; 122
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     36c:	3d c0       	rjmp	.+122    	; 0x3e8 <lightsNorth+0xd8>
     36e:	8c 81       	ldd	r24, Y+4	; 0x04
     370:	9d 81       	ldd	r25, Y+5	; 0x05
     372:	89 2b       	or	r24, r25
     374:	f1 f0       	breq	.+60     	; 0x3b2 <lightsNorth+0xa2>
     376:	88 85       	ldd	r24, Y+8	; 0x08
     378:	99 85       	ldd	r25, Y+9	; 0x09
     37a:	89 2b       	or	r24, r25
     37c:	d1 f0       	breq	.+52     	; 0x3b2 <lightsNorth+0xa2>
     37e:	8a 85       	ldd	r24, Y+10	; 0x0a
     380:	9b 85       	ldd	r25, Y+11	; 0x0b
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	b1 f4       	brne	.+44     	; 0x3b2 <lightsNorth+0xa2>
     386:	ce 01       	movw	r24, r28
     388:	0e 94 43 01 	call	0x286	; 0x286 <lightsRed>
     38c:	c1 2c       	mov	r12, r1
     38e:	d1 2c       	mov	r13, r1
     390:	0f 2e       	mov	r0, r31
     392:	fd ef       	ldi	r31, 0xFD	; 253
     394:	ef 2e       	mov	r14, r31
     396:	f1 e0       	ldi	r31, 0x01	; 1
     398:	ff 2e       	mov	r15, r31
     39a:	f0 2d       	mov	r31, r0
     39c:	8e 01       	movw	r16, r28
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	a9 01       	movw	r20, r18
     3a4:	6a e5       	ldi	r22, 0x5A	; 90
     3a6:	72 e6       	ldi	r23, 0x62	; 98
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     3b0:	1b c0       	rjmp	.+54     	; 0x3e8 <lightsNorth+0xd8>
     3b2:	ce 01       	movw	r24, r28
     3b4:	0e 94 43 01 	call	0x286	; 0x286 <lightsRed>
     3b8:	c1 2c       	mov	r12, r1
     3ba:	d1 2c       	mov	r13, r1
     3bc:	0f 2e       	mov	r0, r31
     3be:	fd ef       	ldi	r31, 0xFD	; 253
     3c0:	ef 2e       	mov	r14, r31
     3c2:	f1 e0       	ldi	r31, 0x01	; 1
     3c4:	ff 2e       	mov	r15, r31
     3c6:	f0 2d       	mov	r31, r0
     3c8:	8e 01       	movw	r16, r28
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	a9 01       	movw	r20, r18
     3d0:	62 e1       	ldi	r22, 0x12	; 18
     3d2:	7a e7       	ldi	r23, 0x7A	; 122
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     3dc:	05 c0       	rjmp	.+10     	; 0x3e8 <lightsNorth+0xd8>
     3de:	8c 81       	ldd	r24, Y+4	; 0x04
     3e0:	9d 81       	ldd	r25, Y+5	; 0x05
     3e2:	89 2b       	or	r24, r25
     3e4:	61 f6       	brne	.-104    	; 0x37e <lightsNorth+0x6e>
     3e6:	e5 cf       	rjmp	.-54     	; 0x3b2 <lightsNorth+0xa2>
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	1f 91       	pop	r17
     3ee:	0f 91       	pop	r16
     3f0:	ff 90       	pop	r15
     3f2:	ef 90       	pop	r14
     3f4:	df 90       	pop	r13
     3f6:	cf 90       	pop	r12
     3f8:	08 95       	ret

000003fa <lightsSouth>:
     3fa:	cf 92       	push	r12
     3fc:	df 92       	push	r13
     3fe:	ef 92       	push	r14
     400:	ff 92       	push	r15
     402:	0f 93       	push	r16
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	ec 01       	movw	r28, r24
     40c:	88 85       	ldd	r24, Y+8	; 0x08
     40e:	99 85       	ldd	r25, Y+9	; 0x09
     410:	18 16       	cp	r1, r24
     412:	19 06       	cpc	r1, r25
     414:	0c f5       	brge	.+66     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     416:	8e 85       	ldd	r24, Y+14	; 0x0e
     418:	9f 85       	ldd	r25, Y+15	; 0x0f
     41a:	06 97       	sbiw	r24, 0x06	; 6
     41c:	2c f0       	brlt	.+10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     41e:	8e 81       	ldd	r24, Y+6	; 0x06
     420:	9f 81       	ldd	r25, Y+7	; 0x07
     422:	89 2b       	or	r24, r25
     424:	09 f0       	breq	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     426:	50 c0       	rjmp	.+160    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
     428:	62 e0       	ldi	r22, 0x02	; 2
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	ce 01       	movw	r24, r28
     42e:	0e 94 67 01 	call	0x2ce	; 0x2ce <lightGreen>
     432:	c1 2c       	mov	r12, r1
     434:	d1 2c       	mov	r13, r1
     436:	0f 2e       	mov	r0, r31
     438:	fd ef       	ldi	r31, 0xFD	; 253
     43a:	ef 2e       	mov	r14, r31
     43c:	f1 e0       	ldi	r31, 0x01	; 1
     43e:	ff 2e       	mov	r15, r31
     440:	f0 2d       	mov	r31, r0
     442:	8e 01       	movw	r16, r28
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	a9 01       	movw	r20, r18
     44a:	62 e1       	ldi	r22, 0x12	; 18
     44c:	7a e7       	ldi	r23, 0x7A	; 122
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     456:	3d c0       	rjmp	.+122    	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     458:	8c 81       	ldd	r24, Y+4	; 0x04
     45a:	9d 81       	ldd	r25, Y+5	; 0x05
     45c:	89 2b       	or	r24, r25
     45e:	f1 f0       	breq	.+60     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     460:	8e 81       	ldd	r24, Y+6	; 0x06
     462:	9f 81       	ldd	r25, Y+7	; 0x07
     464:	89 2b       	or	r24, r25
     466:	d1 f0       	breq	.+52     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     468:	8a 85       	ldd	r24, Y+10	; 0x0a
     46a:	9b 85       	ldd	r25, Y+11	; 0x0b
     46c:	02 97       	sbiw	r24, 0x02	; 2
     46e:	b1 f4       	brne	.+44     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     470:	ce 01       	movw	r24, r28
     472:	0e 94 43 01 	call	0x286	; 0x286 <lightsRed>
     476:	c1 2c       	mov	r12, r1
     478:	d1 2c       	mov	r13, r1
     47a:	0f 2e       	mov	r0, r31
     47c:	f8 e8       	ldi	r31, 0x88	; 136
     47e:	ef 2e       	mov	r14, r31
     480:	f1 e0       	ldi	r31, 0x01	; 1
     482:	ff 2e       	mov	r15, r31
     484:	f0 2d       	mov	r31, r0
     486:	8e 01       	movw	r16, r28
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	a9 01       	movw	r20, r18
     48e:	6a e5       	ldi	r22, 0x5A	; 90
     490:	72 e6       	ldi	r23, 0x62	; 98
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     49a:	1b c0       	rjmp	.+54     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     49c:	ce 01       	movw	r24, r28
     49e:	0e 94 43 01 	call	0x286	; 0x286 <lightsRed>
     4a2:	c1 2c       	mov	r12, r1
     4a4:	d1 2c       	mov	r13, r1
     4a6:	0f 2e       	mov	r0, r31
     4a8:	f8 e8       	ldi	r31, 0x88	; 136
     4aa:	ef 2e       	mov	r14, r31
     4ac:	f1 e0       	ldi	r31, 0x01	; 1
     4ae:	ff 2e       	mov	r15, r31
     4b0:	f0 2d       	mov	r31, r0
     4b2:	8e 01       	movw	r16, r28
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	a9 01       	movw	r20, r18
     4ba:	62 e1       	ldi	r22, 0x12	; 18
     4bc:	7a e7       	ldi	r23, 0x7A	; 122
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     4c6:	05 c0       	rjmp	.+10     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
     4c8:	8c 81       	ldd	r24, Y+4	; 0x04
     4ca:	9d 81       	ldd	r25, Y+5	; 0x05
     4cc:	89 2b       	or	r24, r25
     4ce:	61 f6       	brne	.-104    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     4d0:	e5 cf       	rjmp	.-54     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	08 95       	ret

000004e4 <initialize>:
		lightsRed(self);
		AFTER(SEC(1), self, lightsNorth, NULL);
	}
}

void initialize(Controller *self){
     4e4:	cf 92       	push	r12
     4e6:	df 92       	push	r13
     4e8:	ef 92       	push	r14
     4ea:	ff 92       	push	r15
     4ec:	0f 93       	push	r16
     4ee:	1f 93       	push	r17
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	ec 01       	movw	r28, r24
	ASYNC(self->gui, init, NULL);
     4f6:	0a 89       	ldd	r16, Y+18	; 0x12
     4f8:	1b 89       	ldd	r17, Y+19	; 0x13
     4fa:	c1 2c       	mov	r12, r1
     4fc:	d1 2c       	mov	r13, r1
     4fe:	0f 2e       	mov	r0, r31
     500:	fb e9       	ldi	r31, 0x9B	; 155
     502:	ef 2e       	mov	r14, r31
     504:	f3 e0       	ldi	r31, 0x03	; 3
     506:	ff 2e       	mov	r15, r31
     508:	f0 2d       	mov	r31, r0
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	a9 01       	movw	r20, r18
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	cb 01       	movw	r24, r22
     516:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
	ASYNC(self->gui, displayNorthQueue, self->queue[NORTH]);
     51a:	ce 80       	ldd	r12, Y+6	; 0x06
     51c:	df 80       	ldd	r13, Y+7	; 0x07
     51e:	0a 89       	ldd	r16, Y+18	; 0x12
     520:	1b 89       	ldd	r17, Y+19	; 0x13
     522:	0f 2e       	mov	r0, r31
     524:	f0 ea       	ldi	r31, 0xA0	; 160
     526:	ef 2e       	mov	r14, r31
     528:	f3 e0       	ldi	r31, 0x03	; 3
     52a:	ff 2e       	mov	r15, r31
     52c:	f0 2d       	mov	r31, r0
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	a9 01       	movw	r20, r18
     534:	60 e0       	ldi	r22, 0x00	; 0
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	cb 01       	movw	r24, r22
     53a:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
	ASYNC(self->gui, displaySouthQueue, self->queue[SOUTH]);
     53e:	c8 84       	ldd	r12, Y+8	; 0x08
     540:	d9 84       	ldd	r13, Y+9	; 0x09
     542:	0a 89       	ldd	r16, Y+18	; 0x12
     544:	1b 89       	ldd	r17, Y+19	; 0x13
     546:	0f 2e       	mov	r0, r31
     548:	f5 ea       	ldi	r31, 0xA5	; 165
     54a:	ef 2e       	mov	r14, r31
     54c:	f3 e0       	ldi	r31, 0x03	; 3
     54e:	ff 2e       	mov	r15, r31
     550:	f0 2d       	mov	r31, r0
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	a9 01       	movw	r20, r18
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	cb 01       	movw	r24, r22
     55e:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
	ASYNC(self->gui, displayBridgeQueue, self->queue[BRIDGE]);
     562:	cc 80       	ldd	r12, Y+4	; 0x04
     564:	dd 80       	ldd	r13, Y+5	; 0x05
     566:	0a 89       	ldd	r16, Y+18	; 0x12
     568:	1b 89       	ldd	r17, Y+19	; 0x13
     56a:	0f 2e       	mov	r0, r31
     56c:	fa ea       	ldi	r31, 0xAA	; 170
     56e:	ef 2e       	mov	r14, r31
     570:	f3 e0       	ldi	r31, 0x03	; 3
     572:	ff 2e       	mov	r15, r31
     574:	f0 2d       	mov	r31, r0
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	a9 01       	movw	r20, r18
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	cb 01       	movw	r24, r22
     582:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
	ASYNC(self, lightsNorth, NULL);
     586:	c1 2c       	mov	r12, r1
     588:	d1 2c       	mov	r13, r1
     58a:	0f 2e       	mov	r0, r31
     58c:	f8 e8       	ldi	r31, 0x88	; 136
     58e:	ef 2e       	mov	r14, r31
     590:	f1 e0       	ldi	r31, 0x01	; 1
     592:	ff 2e       	mov	r15, r31
     594:	f0 2d       	mov	r31, r0
     596:	8e 01       	movw	r16, r28
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	a9 01       	movw	r20, r18
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	cb 01       	movw	r24, r22
     5a4:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     5a8:	df 91       	pop	r29
     5aa:	cf 91       	pop	r28
     5ac:	1f 91       	pop	r17
     5ae:	0f 91       	pop	r16
     5b0:	ff 90       	pop	r15
     5b2:	ef 90       	pop	r14
     5b4:	df 90       	pop	r13
     5b6:	cf 90       	pop	r12
     5b8:	08 95       	ret

000005ba <writeChar>:
		}
	else {
		pos = 2;
	}
	
	printAt(pos,arg[1]);
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	cd b7       	in	r28, 0x3d	; 61
     5c0:	de b7       	in	r29, 0x3e	; 62
     5c2:	66 97       	sbiw	r28, 0x16	; 22
     5c4:	0f b6       	in	r0, 0x3f	; 63
     5c6:	f8 94       	cli
     5c8:	de bf       	out	0x3e, r29	; 62
     5ca:	0f be       	out	0x3f, r0	; 63
     5cc:	cd bf       	out	0x3d, r28	; 61
     5ce:	66 30       	cpi	r22, 0x06	; 6
     5d0:	71 05       	cpc	r23, r1
     5d2:	e8 f5       	brcc	.+122    	; 0x64e <writeChar+0x94>
     5d4:	96 e1       	ldi	r25, 0x16	; 22
     5d6:	e8 e0       	ldi	r30, 0x08	; 8
     5d8:	f1 e0       	ldi	r31, 0x01	; 1
     5da:	de 01       	movw	r26, r28
     5dc:	11 96       	adiw	r26, 0x01	; 1
     5de:	01 90       	ld	r0, Z+
     5e0:	0d 92       	st	X+, r0
     5e2:	9a 95       	dec	r25
     5e4:	e1 f7       	brne	.-8      	; 0x5de <writeChar+0x24>
     5e6:	90 ed       	ldi	r25, 0xD0	; 208
     5e8:	98 0f       	add	r25, r24
     5ea:	9a 30       	cpi	r25, 0x0A	; 10
     5ec:	50 f4       	brcc	.+20     	; 0x602 <writeChar+0x48>
     5ee:	e8 2f       	mov	r30, r24
     5f0:	f0 e0       	ldi	r31, 0x00	; 0
     5f2:	f0 97       	sbiw	r30, 0x30	; 48
     5f4:	ee 0f       	add	r30, r30
     5f6:	ff 1f       	adc	r31, r31
     5f8:	ec 0f       	add	r30, r28
     5fa:	fd 1f       	adc	r31, r29
     5fc:	21 81       	ldd	r18, Z+1	; 0x01
     5fe:	32 81       	ldd	r19, Z+2	; 0x02
     600:	02 c0       	rjmp	.+4      	; 0x606 <writeChar+0x4c>
     602:	28 e2       	ldi	r18, 0x28	; 40
     604:	30 ec       	ldi	r19, 0xC0	; 192
     606:	fb 01       	movw	r30, r22
     608:	f5 95       	asr	r31
     60a:	e7 95       	ror	r30
     60c:	e4 51       	subi	r30, 0x14	; 20
     60e:	ff 4f       	sbci	r31, 0xFF	; 255
     610:	db 01       	movw	r26, r22
     612:	a1 70       	andi	r26, 0x01	; 1
     614:	bb 27       	eor	r27, r27
     616:	60 ff       	sbrs	r22, 0
     618:	02 c0       	rjmp	.+4      	; 0x61e <writeChar+0x64>
     61a:	6f e0       	ldi	r22, 0x0F	; 15
     61c:	01 c0       	rjmp	.+2      	; 0x620 <writeChar+0x66>
     61e:	60 ef       	ldi	r22, 0xF0	; 240
     620:	af 01       	movw	r20, r30
     622:	4c 5e       	subi	r20, 0xEC	; 236
     624:	5f 4f       	sbci	r21, 0xFF	; 255
     626:	82 2f       	mov	r24, r18
     628:	8f 70       	andi	r24, 0x0F	; 15
     62a:	32 95       	swap	r19
     62c:	22 95       	swap	r18
     62e:	2f 70       	andi	r18, 0x0F	; 15
     630:	23 27       	eor	r18, r19
     632:	3f 70       	andi	r19, 0x0F	; 15
     634:	23 27       	eor	r18, r19
     636:	10 97       	sbiw	r26, 0x00	; 0
     638:	11 f0       	breq	.+4      	; 0x63e <writeChar+0x84>
     63a:	82 95       	swap	r24
     63c:	80 7f       	andi	r24, 0xF0	; 240
     63e:	90 81       	ld	r25, Z
     640:	96 23       	and	r25, r22
     642:	89 2b       	or	r24, r25
     644:	80 83       	st	Z, r24
     646:	35 96       	adiw	r30, 0x05	; 5
     648:	4e 17       	cp	r20, r30
     64a:	5f 07       	cpc	r21, r31
     64c:	61 f7       	brne	.-40     	; 0x626 <writeChar+0x6c>
     64e:	66 96       	adiw	r28, 0x16	; 22
     650:	0f b6       	in	r0, 0x3f	; 63
     652:	f8 94       	cli
     654:	de bf       	out	0x3e, r29	; 62
     656:	0f be       	out	0x3f, r0	; 63
     658:	cd bf       	out	0x3d, r28	; 61
     65a:	df 91       	pop	r29
     65c:	cf 91       	pop	r28
     65e:	08 95       	ret

00000660 <printAt>:
     660:	ef 92       	push	r14
     662:	ff 92       	push	r15
     664:	0f 93       	push	r16
     666:	1f 93       	push	r17
     668:	cf 93       	push	r28
     66a:	df 93       	push	r29
     66c:	ec 01       	movw	r28, r24
     66e:	7b 01       	movw	r14, r22
     670:	cb 01       	movw	r24, r22
     672:	64 e6       	ldi	r22, 0x64	; 100
     674:	70 e0       	ldi	r23, 0x00	; 0
     676:	0e 94 ce 10 	call	0x219c	; 0x219c <__divmodhi4>
     67a:	0a e0       	ldi	r16, 0x0A	; 10
     67c:	10 e0       	ldi	r17, 0x00	; 0
     67e:	b8 01       	movw	r22, r16
     680:	0e 94 ce 10 	call	0x219c	; 0x219c <__divmodhi4>
     684:	86 2f       	mov	r24, r22
     686:	be 01       	movw	r22, r28
     688:	80 5d       	subi	r24, 0xD0	; 208
     68a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     68e:	21 96       	adiw	r28, 0x01	; 1
     690:	c7 01       	movw	r24, r14
     692:	b8 01       	movw	r22, r16
     694:	0e 94 ce 10 	call	0x219c	; 0x219c <__divmodhi4>
     698:	be 01       	movw	r22, r28
     69a:	80 5d       	subi	r24, 0xD0	; 208
     69c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     6a0:	df 91       	pop	r29
     6a2:	cf 91       	pop	r28
     6a4:	1f 91       	pop	r17
     6a6:	0f 91       	pop	r16
     6a8:	ff 90       	pop	r15
     6aa:	ef 90       	pop	r14
     6ac:	08 95       	ret

000006ae <initLCD>:
     6ae:	e1 e6       	ldi	r30, 0x61	; 97
     6b0:	f0 e0       	ldi	r31, 0x00	; 0
     6b2:	80 e8       	ldi	r24, 0x80	; 128
     6b4:	80 83       	st	Z, r24
     6b6:	10 82       	st	Z, r1
     6b8:	8f e0       	ldi	r24, 0x0F	; 15
     6ba:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__DATA_REGION_ORIGIN__+0x87>
     6be:	87 eb       	ldi	r24, 0xB7	; 183
     6c0:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__DATA_REGION_ORIGIN__+0x85>
     6c4:	87 e0       	ldi	r24, 0x07	; 7
     6c6:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__DATA_REGION_ORIGIN__+0x86>
     6ca:	80 ec       	ldi	r24, 0xC0	; 192
     6cc:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__DATA_REGION_ORIGIN__+0x84>
     6d0:	81 e0       	ldi	r24, 0x01	; 1
     6d2:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <__DATA_REGION_ORIGIN__+0x94>
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	80 e3       	ldi	r24, 0x30	; 48
     6dc:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     6e0:	61 e0       	ldi	r22, 0x01	; 1
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 e3       	ldi	r24, 0x30	; 48
     6e6:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     6ea:	62 e0       	ldi	r22, 0x02	; 2
     6ec:	70 e0       	ldi	r23, 0x00	; 0
     6ee:	80 e3       	ldi	r24, 0x30	; 48
     6f0:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     6f4:	63 e0       	ldi	r22, 0x03	; 3
     6f6:	70 e0       	ldi	r23, 0x00	; 0
     6f8:	80 e3       	ldi	r24, 0x30	; 48
     6fa:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     6fe:	64 e0       	ldi	r22, 0x04	; 4
     700:	70 e0       	ldi	r23, 0x00	; 0
     702:	80 e3       	ldi	r24, 0x30	; 48
     704:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     708:	65 e0       	ldi	r22, 0x05	; 5
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	80 e3       	ldi	r24, 0x30	; 48
     70e:	0e 94 dd 02 	call	0x5ba	; 0x5ba <writeChar>
     712:	08 95       	ret

00000714 <initUSART>:
     714:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     718:	83 e3       	ldi	r24, 0x33	; 51
     71a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     71e:	e1 ec       	ldi	r30, 0xC1	; 193
     720:	f0 e0       	ldi	r31, 0x00	; 0
     722:	80 81       	ld	r24, Z
     724:	88 61       	ori	r24, 0x18	; 24
     726:	80 83       	st	Z, r24
     728:	80 81       	ld	r24, Z
     72a:	80 68       	ori	r24, 0x80	; 128
     72c:	80 83       	st	Z, r24
     72e:	86 e0       	ldi	r24, 0x06	; 6
     730:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     734:	08 95       	ret

00000736 <init>:
     736:	0e 94 57 03 	call	0x6ae	; 0x6ae <initLCD>
     73a:	0e 94 8a 03 	call	0x714	; 0x714 <initUSART>
     73e:	08 95       	ret

00000740 <displayNorthQueue>:
}
void displayNorthQueue (GUI *self,int num){
		printAt(0,num);
     740:	80 e0       	ldi	r24, 0x00	; 0
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	0e 94 30 03 	call	0x660	; 0x660 <printAt>
     748:	08 95       	ret

0000074a <displaySouthQueue>:
}

void displaySouthQueue (GUI *self,int num){
		printAt(4,num);
     74a:	84 e0       	ldi	r24, 0x04	; 4
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	0e 94 30 03 	call	0x660	; 0x660 <printAt>
     752:	08 95       	ret

00000754 <displayBridgeQueue>:
}

void displayBridgeQueue (GUI *self,int num){
		printAt(2,num);
     754:	82 e0       	ldi	r24, 0x02	; 2
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	0e 94 30 03 	call	0x660	; 0x660 <printAt>
     75c:	08 95       	ret

0000075e <sensorInterupt>:


#include "InputHandler.h"
#include <avr/io.h>

void sensorInterupt (InputHandler *self, uint8_t arg){
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	1f 92       	push	r1
     770:	cd b7       	in	r28, 0x3d	; 61
     772:	de b7       	in	r29, 0x3e	; 62
     774:	fc 01       	movw	r30, r24
	volatile uint8_t data = UDR0;
     776:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     77a:	99 83       	std	Y+1, r25	; 0x01
	
	if ((data >> 0) & 1){
     77c:	99 81       	ldd	r25, Y+1	; 0x01
     77e:	90 ff       	sbrs	r25, 0
     780:	14 c0       	rjmp	.+40     	; 0x7aa <sensorInterupt+0x4c>
		// add to Nqueue
		ASYNC(self->controller, addQueue, 1);
     782:	04 81       	ldd	r16, Z+4	; 0x04
     784:	15 81       	ldd	r17, Z+5	; 0x05
     786:	cc 24       	eor	r12, r12
     788:	c3 94       	inc	r12
     78a:	d1 2c       	mov	r13, r1
     78c:	0f 2e       	mov	r0, r31
     78e:	f2 e7       	ldi	r31, 0x72	; 114
     790:	ef 2e       	mov	r14, r31
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	ff 2e       	mov	r15, r31
     796:	f0 2d       	mov	r31, r0
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	a9 01       	movw	r20, r18
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	cb 01       	movw	r24, r22
     7a4:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     7a8:	46 c0       	rjmp	.+140    	; 0x836 <sensorInterupt+0xd8>
	}
	
	else if ( data & northBridge ){
     7aa:	89 81       	ldd	r24, Y+1	; 0x01
     7ac:	81 ff       	sbrs	r24, 1
     7ae:	14 c0       	rjmp	.+40     	; 0x7d8 <sensorInterupt+0x7a>
		// North car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 1);
     7b0:	04 81       	ldd	r16, Z+4	; 0x04
     7b2:	15 81       	ldd	r17, Z+5	; 0x05
     7b4:	cc 24       	eor	r12, r12
     7b6:	c3 94       	inc	r12
     7b8:	d1 2c       	mov	r13, r1
     7ba:	0f 2e       	mov	r0, r31
     7bc:	fe ef       	ldi	r31, 0xFE	; 254
     7be:	ef 2e       	mov	r14, r31
     7c0:	f0 e0       	ldi	r31, 0x00	; 0
     7c2:	ff 2e       	mov	r15, r31
     7c4:	f0 2d       	mov	r31, r0
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	a9 01       	movw	r20, r18
     7cc:	60 e0       	ldi	r22, 0x00	; 0
     7ce:	70 e0       	ldi	r23, 0x00	; 0
     7d0:	cb 01       	movw	r24, r22
     7d2:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     7d6:	2f c0       	rjmp	.+94     	; 0x836 <sensorInterupt+0xd8>
	}
	
	else if (data & southCar){
     7d8:	89 81       	ldd	r24, Y+1	; 0x01
     7da:	82 ff       	sbrs	r24, 2
     7dc:	15 c0       	rjmp	.+42     	; 0x808 <sensorInterupt+0xaa>
		// add to Squeue
		ASYNC(self->controller, addQueue, 2);
     7de:	04 81       	ldd	r16, Z+4	; 0x04
     7e0:	15 81       	ldd	r17, Z+5	; 0x05
     7e2:	68 94       	set
     7e4:	cc 24       	eor	r12, r12
     7e6:	c1 f8       	bld	r12, 1
     7e8:	d1 2c       	mov	r13, r1
     7ea:	0f 2e       	mov	r0, r31
     7ec:	f2 e7       	ldi	r31, 0x72	; 114
     7ee:	ef 2e       	mov	r14, r31
     7f0:	f0 e0       	ldi	r31, 0x00	; 0
     7f2:	ff 2e       	mov	r15, r31
     7f4:	f0 2d       	mov	r31, r0
     7f6:	20 e0       	ldi	r18, 0x00	; 0
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	a9 01       	movw	r20, r18
     7fc:	60 e0       	ldi	r22, 0x00	; 0
     7fe:	70 e0       	ldi	r23, 0x00	; 0
     800:	cb 01       	movw	r24, r22
     802:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
     806:	17 c0       	rjmp	.+46     	; 0x836 <sensorInterupt+0xd8>
	}
	
	else if ( data & southBridge ){
     808:	89 81       	ldd	r24, Y+1	; 0x01
     80a:	83 ff       	sbrs	r24, 3
     80c:	14 c0       	rjmp	.+40     	; 0x836 <sensorInterupt+0xd8>
		// South car goes on bridge add total car on bridge
		ASYNC(self->controller, addBridge, 2);
     80e:	04 81       	ldd	r16, Z+4	; 0x04
     810:	15 81       	ldd	r17, Z+5	; 0x05
     812:	68 94       	set
     814:	cc 24       	eor	r12, r12
     816:	c1 f8       	bld	r12, 1
     818:	d1 2c       	mov	r13, r1
     81a:	0f 2e       	mov	r0, r31
     81c:	fe ef       	ldi	r31, 0xFE	; 254
     81e:	ef 2e       	mov	r14, r31
     820:	f0 e0       	ldi	r31, 0x00	; 0
     822:	ff 2e       	mov	r15, r31
     824:	f0 2d       	mov	r31, r0
     826:	20 e0       	ldi	r18, 0x00	; 0
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	a9 01       	movw	r20, r18
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	cb 01       	movw	r24, r22
     832:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
	}
}
     836:	0f 90       	pop	r0
     838:	df 91       	pop	r29
     83a:	cf 91       	pop	r28
     83c:	1f 91       	pop	r17
     83e:	0f 91       	pop	r16
     840:	ff 90       	pop	r15
     842:	ef 90       	pop	r14
     844:	df 90       	pop	r13
     846:	cf 90       	pop	r12
     848:	08 95       	ret

0000084a <main>:
#include "OutputHandler.h"
#include "InputHandler.h"
#include "TinyTimber.h"

int main(void)
{
     84a:	0f 93       	push	r16
     84c:	1f 93       	push	r17
     84e:	cf 93       	push	r28
     850:	df 93       	push	r29
     852:	cd b7       	in	r28, 0x3d	; 61
     854:	de b7       	in	r29, 0x3e	; 62
     856:	a6 97       	sbiw	r28, 0x26	; 38
     858:	0f b6       	in	r0, 0x3f	; 63
     85a:	f8 94       	cli
     85c:	de bf       	out	0x3e, r29	; 62
     85e:	0f be       	out	0x3f, r0	; 63
     860:	cd bf       	out	0x3d, r28	; 61
 
  GUI gui = initGUI();
     862:	1a 82       	std	Y+2, r1	; 0x02
     864:	19 82       	std	Y+1, r1	; 0x01
     866:	1c 82       	std	Y+4, r1	; 0x04
     868:	1b 82       	std	Y+3, r1	; 0x03
     86a:	1e 82       	std	Y+6, r1	; 0x06
     86c:	1d 82       	std	Y+5, r1	; 0x05
  
  OutputHandler opH = initOutputHandler();
     86e:	18 86       	std	Y+8, r1	; 0x08
     870:	1f 82       	std	Y+7, r1	; 0x07
     872:	1a 86       	std	Y+10, r1	; 0x0a
     874:	19 86       	std	Y+9, r1	; 0x09
  
  Controller controller = initController(&opH, &gui);
     876:	1c 86       	std	Y+12, r1	; 0x0c
     878:	1b 86       	std	Y+11, r1	; 0x0b
     87a:	1e 86       	std	Y+14, r1	; 0x0e
     87c:	1d 86       	std	Y+13, r1	; 0x0d
     87e:	18 8a       	std	Y+16, r1	; 0x10
     880:	1f 86       	std	Y+15, r1	; 0x0f
     882:	1a 8a       	std	Y+18, r1	; 0x12
     884:	19 8a       	std	Y+17, r1	; 0x11
     886:	1c 8a       	std	Y+20, r1	; 0x14
     888:	1b 8a       	std	Y+19, r1	; 0x13
     88a:	1e 8a       	std	Y+22, r1	; 0x16
     88c:	1d 8a       	std	Y+21, r1	; 0x15
     88e:	18 8e       	std	Y+24, r1	; 0x18
     890:	1f 8a       	std	Y+23, r1	; 0x17
     892:	1a 8e       	std	Y+26, r1	; 0x1a
     894:	19 8e       	std	Y+25, r1	; 0x19
     896:	ce 01       	movw	r24, r28
     898:	07 96       	adiw	r24, 0x07	; 7
     89a:	9c 8f       	std	Y+28, r25	; 0x1c
     89c:	8b 8f       	std	Y+27, r24	; 0x1b
     89e:	06 97       	sbiw	r24, 0x06	; 6
     8a0:	9e 8f       	std	Y+30, r25	; 0x1e
     8a2:	8d 8f       	std	Y+29, r24	; 0x1d

  InputHandler inputHandler = initInputHandler(&controller, &gui);
     8a4:	18 a2       	std	Y+32, r1	; 0x20
     8a6:	1f 8e       	std	Y+31, r1	; 0x1f
     8a8:	1a a2       	std	Y+34, r1	; 0x22
     8aa:	19 a2       	std	Y+33, r1	; 0x21
     8ac:	8e 01       	movw	r16, r28
     8ae:	05 5f       	subi	r16, 0xF5	; 245
     8b0:	1f 4f       	sbci	r17, 0xFF	; 255
     8b2:	1c a3       	std	Y+36, r17	; 0x24
     8b4:	0b a3       	std	Y+35, r16	; 0x23
     8b6:	9e a3       	std	Y+38, r25	; 0x26
     8b8:	8d a3       	std	Y+37, r24	; 0x25
  
  INSTALL (&inputHandler, &sensorInterupt, IRQ_USART0_RX);
     8ba:	48 e0       	ldi	r20, 0x08	; 8
     8bc:	6f ea       	ldi	r22, 0xAF	; 175
     8be:	73 e0       	ldi	r23, 0x03	; 3
     8c0:	4e 96       	adiw	r24, 0x1e	; 30
     8c2:	0e 94 98 10 	call	0x2130	; 0x2130 <install>
  
  return TINYTIMBER(&controller, initialize, NULL);
     8c6:	40 e0       	ldi	r20, 0x00	; 0
     8c8:	50 e0       	ldi	r21, 0x00	; 0
     8ca:	62 e7       	ldi	r22, 0x72	; 114
     8cc:	72 e0       	ldi	r23, 0x02	; 2
     8ce:	c8 01       	movw	r24, r16
     8d0:	0e 94 b2 10 	call	0x2164	; 0x2164 <tinytimber>

	
}
     8d4:	a6 96       	adiw	r28, 0x26	; 38
     8d6:	0f b6       	in	r0, 0x3f	; 63
     8d8:	f8 94       	cli
     8da:	de bf       	out	0x3e, r29	; 62
     8dc:	0f be       	out	0x3f, r0	; 63
     8de:	cd bf       	out	0x3d, r28	; 61
     8e0:	df 91       	pop	r29
     8e2:	cf 91       	pop	r28
     8e4:	1f 91       	pop	r17
     8e6:	0f 91       	pop	r16
     8e8:	08 95       	ret

000008ea <outputLights>:

void outputLights(OutputHandler *self, int lights){
	
	//while ( !(UCSR0A & (1<<UDRE0)) ); // Wait until empty transmit buffer

	if (lights == 0){ // North and south is Red 
     8ea:	61 15       	cp	r22, r1
     8ec:	71 05       	cpc	r23, r1
     8ee:	21 f4       	brne	.+8      	; 0x8f8 <outputLights+0xe>
		//UDR0 = 0b1010;
		UDR0 = 0xA;
     8f0:	8a e0       	ldi	r24, 0x0A	; 10
     8f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     8f6:	08 95       	ret
	}
	if (lights == 1){ // North is Green south is Red
     8f8:	61 30       	cpi	r22, 0x01	; 1
     8fa:	71 05       	cpc	r23, r1
     8fc:	21 f4       	brne	.+8      	; 0x906 <outputLights+0x1c>
		//UDR0 = 0b1001;
		UDR0 = 0x9;
     8fe:	89 e0       	ldi	r24, 0x09	; 9
     900:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     904:	08 95       	ret
	}
	if (lights == 2){ // North is Red south is Green
     906:	62 30       	cpi	r22, 0x02	; 2
     908:	71 05       	cpc	r23, r1
     90a:	19 f4       	brne	.+6      	; 0x912 <outputLights+0x28>
		//UDR0 = 0b0110;	
		UDR0 = 0x6;	
     90c:	86 e0       	ldi	r24, 0x06	; 6
     90e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     912:	08 95       	ret

00000914 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	00 d0       	rcall	.+0      	; 0x91a <initialize+0x6>
     91a:	00 d0       	rcall	.+0      	; 0x91c <initialize+0x8>
     91c:	cd b7       	in	r28, 0x3d	; 61
     91e:	de b7       	in	r29, 0x3e	; 62
     920:	81 e1       	ldi	r24, 0x11	; 17
     922:	92 e0       	ldi	r25, 0x02	; 2
     924:	21 ef       	ldi	r18, 0xF1	; 241
     926:	32 e0       	ldi	r19, 0x02	; 2
     928:	fc 01       	movw	r30, r24
     92a:	70 97       	sbiw	r30, 0x10	; 16
     92c:	91 83       	std	Z+1, r25	; 0x01
     92e:	80 83       	st	Z, r24
     930:	40 96       	adiw	r24, 0x10	; 16
     932:	82 17       	cp	r24, r18
     934:	93 07       	cpc	r25, r19
     936:	c1 f7       	brne	.-16     	; 0x928 <initialize+0x14>
     938:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <messages+0xe1>
     93c:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <messages+0xe0>
     940:	ec e4       	ldi	r30, 0x4C	; 76
     942:	f1 e0       	ldi	r31, 0x01	; 1
     944:	89 e6       	ldi	r24, 0x69	; 105
     946:	91 e0       	ldi	r25, 0x01	; 1
     948:	91 83       	std	Z+1, r25	; 0x01
     94a:	80 83       	st	Z, r24
     94c:	86 e8       	ldi	r24, 0x86	; 134
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	96 8f       	std	Z+30, r25	; 0x1e
     952:	85 8f       	std	Z+29, r24	; 0x1d
     954:	a3 ea       	ldi	r26, 0xA3	; 163
     956:	b1 e0       	ldi	r27, 0x01	; 1
     958:	b3 af       	std	Z+59, r27	; 0x3b
     95a:	a2 af       	std	Z+58, r26	; 0x3a
     95c:	1d 92       	st	X+, r1
     95e:	1c 92       	st	X, r1
     960:	fa 83       	std	Y+2, r31	; 0x02
     962:	e9 83       	std	Y+1, r30	; 0x01
     964:	ed e4       	ldi	r30, 0x4D	; 77
     966:	f3 e0       	ldi	r31, 0x03	; 3
     968:	fc 83       	std	Y+4, r31	; 0x04
     96a:	eb 83       	std	Y+3, r30	; 0x03
     96c:	89 81       	ldd	r24, Y+1	; 0x01
     96e:	9a 81       	ldd	r25, Y+2	; 0x02
     970:	06 96       	adiw	r24, 0x06	; 6
     972:	0e 94 f6 10 	call	0x21ec	; 0x21ec <setjmp>
     976:	8b 81       	ldd	r24, Y+3	; 0x03
     978:	9c 81       	ldd	r25, Y+4	; 0x04
     97a:	e9 81       	ldd	r30, Y+1	; 0x01
     97c:	fa 81       	ldd	r31, Y+2	; 0x02
     97e:	97 8b       	std	Z+23, r25	; 0x17
     980:	86 8b       	std	Z+22, r24	; 0x16
     982:	91 8f       	std	Z+25, r25	; 0x19
     984:	80 8f       	std	Z+24, r24	; 0x18
     986:	8a e2       	ldi	r24, 0x2A	; 42
     988:	90 e1       	ldi	r25, 0x10	; 16
     98a:	94 8f       	std	Z+28, r25	; 0x1c
     98c:	83 8f       	std	Z+27, r24	; 0x1b
     98e:	15 82       	std	Z+5, r1	; 0x05
     990:	14 82       	std	Z+4, r1	; 0x04
     992:	7d 96       	adiw	r30, 0x1d	; 29
     994:	fa 83       	std	Y+2, r31	; 0x02
     996:	e9 83       	std	Y+1, r30	; 0x01
     998:	eb 81       	ldd	r30, Y+3	; 0x03
     99a:	fc 81       	ldd	r31, Y+4	; 0x04
     99c:	e0 5a       	subi	r30, 0xA0	; 160
     99e:	ff 4f       	sbci	r31, 0xFF	; 255
     9a0:	fc 83       	std	Y+4, r31	; 0x04
     9a2:	eb 83       	std	Y+3, r30	; 0x03
     9a4:	89 81       	ldd	r24, Y+1	; 0x01
     9a6:	9a 81       	ldd	r25, Y+2	; 0x02
     9a8:	80 5c       	subi	r24, 0xC0	; 192
     9aa:	91 40       	sbci	r25, 0x01	; 1
     9ac:	f9 f6       	brne	.-66     	; 0x96c <initialize+0x58>
     9ae:	e4 ee       	ldi	r30, 0xE4	; 228
     9b0:	f1 e0       	ldi	r31, 0x01	; 1
     9b2:	11 82       	std	Z+1, r1	; 0x01
     9b4:	10 82       	st	Z, r1
     9b6:	15 82       	std	Z+5, r1	; 0x05
     9b8:	14 82       	std	Z+4, r1	; 0x04
     9ba:	13 82       	std	Z+3, r1	; 0x03
     9bc:	12 82       	std	Z+2, r1	; 0x02
     9be:	e1 e6       	ldi	r30, 0x61	; 97
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	80 e8       	ldi	r24, 0x80	; 128
     9c4:	80 83       	st	Z, r24
     9c6:	10 82       	st	Z, r1
     9c8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9cc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9d0:	84 e0       	ldi	r24, 0x04	; 4
     9d2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     9dc:	0f 90       	pop	r0
     9de:	0f 90       	pop	r0
     9e0:	0f 90       	pop	r0
     9e2:	0f 90       	pop	r0
     9e4:	df 91       	pop	r29
     9e6:	cf 91       	pop	r28
     9e8:	08 95       	ret

000009ea <dispatch>:
     9ea:	cf 93       	push	r28
     9ec:	df 93       	push	r29
     9ee:	00 d0       	rcall	.+0      	; 0x9f0 <dispatch+0x6>
     9f0:	cd b7       	in	r28, 0x3d	; 61
     9f2:	de b7       	in	r29, 0x3e	; 62
     9f4:	9a 83       	std	Y+2, r25	; 0x02
     9f6:	89 83       	std	Y+1, r24	; 0x01
     9f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     9fc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     a00:	06 96       	adiw	r24, 0x06	; 6
     a02:	0e 94 f6 10 	call	0x21ec	; 0x21ec <setjmp>
     a06:	89 2b       	or	r24, r25
     a08:	59 f4       	brne	.+22     	; 0xa20 <dispatch+0x36>
     a0a:	89 81       	ldd	r24, Y+1	; 0x01
     a0c:	9a 81       	ldd	r25, Y+2	; 0x02
     a0e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     a12:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a16:	61 e0       	ldi	r22, 0x01	; 1
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	06 96       	adiw	r24, 0x06	; 6
     a1c:	0e 94 16 11 	call	0x222c	; 0x222c <longjmp>
     a20:	0f 90       	pop	r0
     a22:	0f 90       	pop	r0
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	08 95       	ret

00000a2a <schedule>:
     a2a:	0f 93       	push	r16
     a2c:	1f 93       	push	r17
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
     a32:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <msgQ>
     a36:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <msgQ+0x1>
     a3a:	30 97       	sbiw	r30, 0x00	; 0
     a3c:	61 f1       	breq	.+88     	; 0xa96 <schedule+0x6c>
     a3e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     a42:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     a46:	00 97       	sbiw	r24, 0x00	; 0
     a48:	31 f1       	breq	.+76     	; 0xa96 <schedule+0x6c>
     a4a:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     a4e:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     a52:	aa 81       	ldd	r26, Y+2	; 0x02
     a54:	bb 81       	ldd	r27, Y+3	; 0x03
     a56:	10 97       	sbiw	r26, 0x00	; 0
     a58:	79 f0       	breq	.+30     	; 0xa78 <schedule+0x4e>
     a5a:	46 81       	ldd	r20, Z+6	; 0x06
     a5c:	57 81       	ldd	r21, Z+7	; 0x07
     a5e:	60 85       	ldd	r22, Z+8	; 0x08
     a60:	71 85       	ldd	r23, Z+9	; 0x09
     a62:	16 96       	adiw	r26, 0x06	; 6
     a64:	0d 91       	ld	r16, X+
     a66:	1d 91       	ld	r17, X+
     a68:	2d 91       	ld	r18, X+
     a6a:	3c 91       	ld	r19, X
     a6c:	19 97       	sbiw	r26, 0x09	; 9
     a6e:	40 1b       	sub	r20, r16
     a70:	51 0b       	sbc	r21, r17
     a72:	62 0b       	sbc	r22, r18
     a74:	73 0b       	sbc	r23, r19
     a76:	7a f4       	brpl	.+30     	; 0xa96 <schedule+0x6c>
     a78:	fc 01       	movw	r30, r24
     a7a:	20 81       	ld	r18, Z
     a7c:	31 81       	ldd	r19, Z+1	; 0x01
     a7e:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     a82:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     a86:	d1 83       	std	Z+1, r29	; 0x01
     a88:	c0 83       	st	Z, r28
     a8a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     a8e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     a92:	0e 94 f5 04 	call	0x9ea	; 0x9ea <dispatch>
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	08 95       	ret

00000aa0 <__vector_1>:
     aa0:	1f 92       	push	r1
     aa2:	0f 92       	push	r0
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	0f 92       	push	r0
     aa8:	11 24       	eor	r1, r1
     aaa:	2f 93       	push	r18
     aac:	3f 93       	push	r19
     aae:	4f 93       	push	r20
     ab0:	5f 93       	push	r21
     ab2:	6f 93       	push	r22
     ab4:	7f 93       	push	r23
     ab6:	8f 93       	push	r24
     ab8:	9f 93       	push	r25
     aba:	af 93       	push	r26
     abc:	bf 93       	push	r27
     abe:	ef 93       	push	r30
     ac0:	ff 93       	push	r31
     ac2:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     ac6:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     aca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ace:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ad2:	c9 01       	movw	r24, r18
     ad4:	03 2e       	mov	r0, r19
     ad6:	00 0c       	add	r0, r0
     ad8:	aa 0b       	sbc	r26, r26
     ada:	bb 0b       	sbc	r27, r27
     adc:	dc 01       	movw	r26, r24
     ade:	99 27       	eor	r25, r25
     ae0:	88 27       	eor	r24, r24
     ae2:	60 e0       	ldi	r22, 0x00	; 0
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	84 2b       	or	r24, r20
     ae8:	95 2b       	or	r25, r21
     aea:	a6 2b       	or	r26, r22
     aec:	b7 2b       	or	r27, r23
     aee:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     af2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     af6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     afa:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     afe:	b0 9b       	sbis	0x16, 0	; 22
     b00:	1b c0       	rjmp	.+54     	; 0xb38 <__vector_1+0x98>
     b02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b0a:	c9 01       	movw	r24, r18
     b0c:	01 96       	adiw	r24, 0x01	; 1
     b0e:	09 2e       	mov	r0, r25
     b10:	00 0c       	add	r0, r0
     b12:	aa 0b       	sbc	r26, r26
     b14:	bb 0b       	sbc	r27, r27
     b16:	dc 01       	movw	r26, r24
     b18:	99 27       	eor	r25, r25
     b1a:	88 27       	eor	r24, r24
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	70 e0       	ldi	r23, 0x00	; 0
     b20:	84 2b       	or	r24, r20
     b22:	95 2b       	or	r25, r21
     b24:	a6 2b       	or	r26, r22
     b26:	b7 2b       	or	r27, r23
     b28:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     b2c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     b30:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     b34:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     b38:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable>
     b3c:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x1>
     b40:	30 97       	sbiw	r30, 0x00	; 0
     b42:	39 f0       	breq	.+14     	; 0xb52 <__vector_1+0xb2>
     b44:	60 e0       	ldi	r22, 0x00	; 0
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable>
     b4c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x1>
     b50:	09 95       	icall
     b52:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
     b56:	ff 91       	pop	r31
     b58:	ef 91       	pop	r30
     b5a:	bf 91       	pop	r27
     b5c:	af 91       	pop	r26
     b5e:	9f 91       	pop	r25
     b60:	8f 91       	pop	r24
     b62:	7f 91       	pop	r23
     b64:	6f 91       	pop	r22
     b66:	5f 91       	pop	r21
     b68:	4f 91       	pop	r20
     b6a:	3f 91       	pop	r19
     b6c:	2f 91       	pop	r18
     b6e:	0f 90       	pop	r0
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	0f 90       	pop	r0
     b74:	1f 90       	pop	r1
     b76:	18 95       	reti

00000b78 <__vector_2>:
     b78:	1f 92       	push	r1
     b7a:	0f 92       	push	r0
     b7c:	0f b6       	in	r0, 0x3f	; 63
     b7e:	0f 92       	push	r0
     b80:	11 24       	eor	r1, r1
     b82:	2f 93       	push	r18
     b84:	3f 93       	push	r19
     b86:	4f 93       	push	r20
     b88:	5f 93       	push	r21
     b8a:	6f 93       	push	r22
     b8c:	7f 93       	push	r23
     b8e:	8f 93       	push	r24
     b90:	9f 93       	push	r25
     b92:	af 93       	push	r26
     b94:	bf 93       	push	r27
     b96:	ef 93       	push	r30
     b98:	ff 93       	push	r31
     b9a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     b9e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     ba2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ba6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     baa:	c9 01       	movw	r24, r18
     bac:	03 2e       	mov	r0, r19
     bae:	00 0c       	add	r0, r0
     bb0:	aa 0b       	sbc	r26, r26
     bb2:	bb 0b       	sbc	r27, r27
     bb4:	dc 01       	movw	r26, r24
     bb6:	99 27       	eor	r25, r25
     bb8:	88 27       	eor	r24, r24
     bba:	60 e0       	ldi	r22, 0x00	; 0
     bbc:	70 e0       	ldi	r23, 0x00	; 0
     bbe:	84 2b       	or	r24, r20
     bc0:	95 2b       	or	r25, r21
     bc2:	a6 2b       	or	r26, r22
     bc4:	b7 2b       	or	r27, r23
     bc6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     bca:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     bce:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     bd2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     bd6:	b0 9b       	sbis	0x16, 0	; 22
     bd8:	1b c0       	rjmp	.+54     	; 0xc10 <__vector_2+0x98>
     bda:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     bde:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     be2:	c9 01       	movw	r24, r18
     be4:	01 96       	adiw	r24, 0x01	; 1
     be6:	09 2e       	mov	r0, r25
     be8:	00 0c       	add	r0, r0
     bea:	aa 0b       	sbc	r26, r26
     bec:	bb 0b       	sbc	r27, r27
     bee:	dc 01       	movw	r26, r24
     bf0:	99 27       	eor	r25, r25
     bf2:	88 27       	eor	r24, r24
     bf4:	60 e0       	ldi	r22, 0x00	; 0
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	84 2b       	or	r24, r20
     bfa:	95 2b       	or	r25, r21
     bfc:	a6 2b       	or	r26, r22
     bfe:	b7 2b       	or	r27, r23
     c00:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     c04:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     c08:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     c0c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     c10:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x2>
     c14:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x3>
     c18:	30 97       	sbiw	r30, 0x00	; 0
     c1a:	39 f0       	breq	.+14     	; 0xc2a <__vector_2+0xb2>
     c1c:	61 e0       	ldi	r22, 0x01	; 1
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x2>
     c24:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x3>
     c28:	09 95       	icall
     c2a:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
     c2e:	ff 91       	pop	r31
     c30:	ef 91       	pop	r30
     c32:	bf 91       	pop	r27
     c34:	af 91       	pop	r26
     c36:	9f 91       	pop	r25
     c38:	8f 91       	pop	r24
     c3a:	7f 91       	pop	r23
     c3c:	6f 91       	pop	r22
     c3e:	5f 91       	pop	r21
     c40:	4f 91       	pop	r20
     c42:	3f 91       	pop	r19
     c44:	2f 91       	pop	r18
     c46:	0f 90       	pop	r0
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	0f 90       	pop	r0
     c4c:	1f 90       	pop	r1
     c4e:	18 95       	reti

00000c50 <__vector_3>:
     c50:	1f 92       	push	r1
     c52:	0f 92       	push	r0
     c54:	0f b6       	in	r0, 0x3f	; 63
     c56:	0f 92       	push	r0
     c58:	11 24       	eor	r1, r1
     c5a:	2f 93       	push	r18
     c5c:	3f 93       	push	r19
     c5e:	4f 93       	push	r20
     c60:	5f 93       	push	r21
     c62:	6f 93       	push	r22
     c64:	7f 93       	push	r23
     c66:	8f 93       	push	r24
     c68:	9f 93       	push	r25
     c6a:	af 93       	push	r26
     c6c:	bf 93       	push	r27
     c6e:	ef 93       	push	r30
     c70:	ff 93       	push	r31
     c72:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     c76:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     c7a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c7e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c82:	c9 01       	movw	r24, r18
     c84:	03 2e       	mov	r0, r19
     c86:	00 0c       	add	r0, r0
     c88:	aa 0b       	sbc	r26, r26
     c8a:	bb 0b       	sbc	r27, r27
     c8c:	dc 01       	movw	r26, r24
     c8e:	99 27       	eor	r25, r25
     c90:	88 27       	eor	r24, r24
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	84 2b       	or	r24, r20
     c98:	95 2b       	or	r25, r21
     c9a:	a6 2b       	or	r26, r22
     c9c:	b7 2b       	or	r27, r23
     c9e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     ca2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     ca6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     caa:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     cae:	b0 9b       	sbis	0x16, 0	; 22
     cb0:	1b c0       	rjmp	.+54     	; 0xce8 <__vector_3+0x98>
     cb2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     cb6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     cba:	c9 01       	movw	r24, r18
     cbc:	01 96       	adiw	r24, 0x01	; 1
     cbe:	09 2e       	mov	r0, r25
     cc0:	00 0c       	add	r0, r0
     cc2:	aa 0b       	sbc	r26, r26
     cc4:	bb 0b       	sbc	r27, r27
     cc6:	dc 01       	movw	r26, r24
     cc8:	99 27       	eor	r25, r25
     cca:	88 27       	eor	r24, r24
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	84 2b       	or	r24, r20
     cd2:	95 2b       	or	r25, r21
     cd4:	a6 2b       	or	r26, r22
     cd6:	b7 2b       	or	r27, r23
     cd8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     cdc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     ce0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     ce4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     ce8:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x4>
     cec:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x5>
     cf0:	30 97       	sbiw	r30, 0x00	; 0
     cf2:	39 f0       	breq	.+14     	; 0xd02 <__vector_3+0xb2>
     cf4:	62 e0       	ldi	r22, 0x02	; 2
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x4>
     cfc:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x5>
     d00:	09 95       	icall
     d02:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
     d06:	ff 91       	pop	r31
     d08:	ef 91       	pop	r30
     d0a:	bf 91       	pop	r27
     d0c:	af 91       	pop	r26
     d0e:	9f 91       	pop	r25
     d10:	8f 91       	pop	r24
     d12:	7f 91       	pop	r23
     d14:	6f 91       	pop	r22
     d16:	5f 91       	pop	r21
     d18:	4f 91       	pop	r20
     d1a:	3f 91       	pop	r19
     d1c:	2f 91       	pop	r18
     d1e:	0f 90       	pop	r0
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	0f 90       	pop	r0
     d24:	1f 90       	pop	r1
     d26:	18 95       	reti

00000d28 <__vector_4>:
     d28:	1f 92       	push	r1
     d2a:	0f 92       	push	r0
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	0f 92       	push	r0
     d30:	11 24       	eor	r1, r1
     d32:	2f 93       	push	r18
     d34:	3f 93       	push	r19
     d36:	4f 93       	push	r20
     d38:	5f 93       	push	r21
     d3a:	6f 93       	push	r22
     d3c:	7f 93       	push	r23
     d3e:	8f 93       	push	r24
     d40:	9f 93       	push	r25
     d42:	af 93       	push	r26
     d44:	bf 93       	push	r27
     d46:	ef 93       	push	r30
     d48:	ff 93       	push	r31
     d4a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     d4e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     d52:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d56:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d5a:	c9 01       	movw	r24, r18
     d5c:	03 2e       	mov	r0, r19
     d5e:	00 0c       	add	r0, r0
     d60:	aa 0b       	sbc	r26, r26
     d62:	bb 0b       	sbc	r27, r27
     d64:	dc 01       	movw	r26, r24
     d66:	99 27       	eor	r25, r25
     d68:	88 27       	eor	r24, r24
     d6a:	60 e0       	ldi	r22, 0x00	; 0
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	84 2b       	or	r24, r20
     d70:	95 2b       	or	r25, r21
     d72:	a6 2b       	or	r26, r22
     d74:	b7 2b       	or	r27, r23
     d76:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     d7a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     d7e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     d82:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     d86:	b0 9b       	sbis	0x16, 0	; 22
     d88:	1b c0       	rjmp	.+54     	; 0xdc0 <__vector_4+0x98>
     d8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d92:	c9 01       	movw	r24, r18
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	09 2e       	mov	r0, r25
     d98:	00 0c       	add	r0, r0
     d9a:	aa 0b       	sbc	r26, r26
     d9c:	bb 0b       	sbc	r27, r27
     d9e:	dc 01       	movw	r26, r24
     da0:	99 27       	eor	r25, r25
     da2:	88 27       	eor	r24, r24
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	84 2b       	or	r24, r20
     daa:	95 2b       	or	r25, r21
     dac:	a6 2b       	or	r26, r22
     dae:	b7 2b       	or	r27, r23
     db0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     db4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     db8:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     dbc:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     dc0:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x6>
     dc4:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x7>
     dc8:	30 97       	sbiw	r30, 0x00	; 0
     dca:	39 f0       	breq	.+14     	; 0xdda <__vector_4+0xb2>
     dcc:	63 e0       	ldi	r22, 0x03	; 3
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x6>
     dd4:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x7>
     dd8:	09 95       	icall
     dda:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
     dde:	ff 91       	pop	r31
     de0:	ef 91       	pop	r30
     de2:	bf 91       	pop	r27
     de4:	af 91       	pop	r26
     de6:	9f 91       	pop	r25
     de8:	8f 91       	pop	r24
     dea:	7f 91       	pop	r23
     dec:	6f 91       	pop	r22
     dee:	5f 91       	pop	r21
     df0:	4f 91       	pop	r20
     df2:	3f 91       	pop	r19
     df4:	2f 91       	pop	r18
     df6:	0f 90       	pop	r0
     df8:	0f be       	out	0x3f, r0	; 63
     dfa:	0f 90       	pop	r0
     dfc:	1f 90       	pop	r1
     dfe:	18 95       	reti

00000e00 <__vector_5>:
     e00:	1f 92       	push	r1
     e02:	0f 92       	push	r0
     e04:	0f b6       	in	r0, 0x3f	; 63
     e06:	0f 92       	push	r0
     e08:	11 24       	eor	r1, r1
     e0a:	2f 93       	push	r18
     e0c:	3f 93       	push	r19
     e0e:	4f 93       	push	r20
     e10:	5f 93       	push	r21
     e12:	6f 93       	push	r22
     e14:	7f 93       	push	r23
     e16:	8f 93       	push	r24
     e18:	9f 93       	push	r25
     e1a:	af 93       	push	r26
     e1c:	bf 93       	push	r27
     e1e:	ef 93       	push	r30
     e20:	ff 93       	push	r31
     e22:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     e26:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     e2a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e2e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e32:	c9 01       	movw	r24, r18
     e34:	03 2e       	mov	r0, r19
     e36:	00 0c       	add	r0, r0
     e38:	aa 0b       	sbc	r26, r26
     e3a:	bb 0b       	sbc	r27, r27
     e3c:	dc 01       	movw	r26, r24
     e3e:	99 27       	eor	r25, r25
     e40:	88 27       	eor	r24, r24
     e42:	60 e0       	ldi	r22, 0x00	; 0
     e44:	70 e0       	ldi	r23, 0x00	; 0
     e46:	84 2b       	or	r24, r20
     e48:	95 2b       	or	r25, r21
     e4a:	a6 2b       	or	r26, r22
     e4c:	b7 2b       	or	r27, r23
     e4e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e52:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e56:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e5a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     e5e:	b0 9b       	sbis	0x16, 0	; 22
     e60:	1b c0       	rjmp	.+54     	; 0xe98 <__vector_5+0x98>
     e62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e6a:	c9 01       	movw	r24, r18
     e6c:	01 96       	adiw	r24, 0x01	; 1
     e6e:	09 2e       	mov	r0, r25
     e70:	00 0c       	add	r0, r0
     e72:	aa 0b       	sbc	r26, r26
     e74:	bb 0b       	sbc	r27, r27
     e76:	dc 01       	movw	r26, r24
     e78:	99 27       	eor	r25, r25
     e7a:	88 27       	eor	r24, r24
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	84 2b       	or	r24, r20
     e82:	95 2b       	or	r25, r21
     e84:	a6 2b       	or	r26, r22
     e86:	b7 2b       	or	r27, r23
     e88:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     e8c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     e90:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     e94:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     e98:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x8>
     e9c:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x9>
     ea0:	30 97       	sbiw	r30, 0x00	; 0
     ea2:	39 f0       	breq	.+14     	; 0xeb2 <__vector_5+0xb2>
     ea4:	64 e0       	ldi	r22, 0x04	; 4
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x8>
     eac:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x9>
     eb0:	09 95       	icall
     eb2:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
     eb6:	ff 91       	pop	r31
     eb8:	ef 91       	pop	r30
     eba:	bf 91       	pop	r27
     ebc:	af 91       	pop	r26
     ebe:	9f 91       	pop	r25
     ec0:	8f 91       	pop	r24
     ec2:	7f 91       	pop	r23
     ec4:	6f 91       	pop	r22
     ec6:	5f 91       	pop	r21
     ec8:	4f 91       	pop	r20
     eca:	3f 91       	pop	r19
     ecc:	2f 91       	pop	r18
     ece:	0f 90       	pop	r0
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	0f 90       	pop	r0
     ed4:	1f 90       	pop	r1
     ed6:	18 95       	reti

00000ed8 <__vector_10>:
     ed8:	1f 92       	push	r1
     eda:	0f 92       	push	r0
     edc:	0f b6       	in	r0, 0x3f	; 63
     ede:	0f 92       	push	r0
     ee0:	11 24       	eor	r1, r1
     ee2:	2f 93       	push	r18
     ee4:	3f 93       	push	r19
     ee6:	4f 93       	push	r20
     ee8:	5f 93       	push	r21
     eea:	6f 93       	push	r22
     eec:	7f 93       	push	r23
     eee:	8f 93       	push	r24
     ef0:	9f 93       	push	r25
     ef2:	af 93       	push	r26
     ef4:	bf 93       	push	r27
     ef6:	ef 93       	push	r30
     ef8:	ff 93       	push	r31
     efa:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     efe:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     f02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f0a:	c9 01       	movw	r24, r18
     f0c:	03 2e       	mov	r0, r19
     f0e:	00 0c       	add	r0, r0
     f10:	aa 0b       	sbc	r26, r26
     f12:	bb 0b       	sbc	r27, r27
     f14:	dc 01       	movw	r26, r24
     f16:	99 27       	eor	r25, r25
     f18:	88 27       	eor	r24, r24
     f1a:	60 e0       	ldi	r22, 0x00	; 0
     f1c:	70 e0       	ldi	r23, 0x00	; 0
     f1e:	84 2b       	or	r24, r20
     f20:	95 2b       	or	r25, r21
     f22:	a6 2b       	or	r26, r22
     f24:	b7 2b       	or	r27, r23
     f26:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     f2a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     f2e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     f32:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f36:	b0 9b       	sbis	0x16, 0	; 22
     f38:	1b c0       	rjmp	.+54     	; 0xf70 <__vector_10+0x98>
     f3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f42:	c9 01       	movw	r24, r18
     f44:	01 96       	adiw	r24, 0x01	; 1
     f46:	09 2e       	mov	r0, r25
     f48:	00 0c       	add	r0, r0
     f4a:	aa 0b       	sbc	r26, r26
     f4c:	bb 0b       	sbc	r27, r27
     f4e:	dc 01       	movw	r26, r24
     f50:	99 27       	eor	r25, r25
     f52:	88 27       	eor	r24, r24
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	70 e0       	ldi	r23, 0x00	; 0
     f58:	84 2b       	or	r24, r20
     f5a:	95 2b       	or	r25, r21
     f5c:	a6 2b       	or	r26, r22
     f5e:	b7 2b       	or	r27, r23
     f60:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
     f64:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
     f68:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
     f6c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
     f70:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xa>
     f74:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xb>
     f78:	30 97       	sbiw	r30, 0x00	; 0
     f7a:	39 f0       	breq	.+14     	; 0xf8a <__vector_10+0xb2>
     f7c:	65 e0       	ldi	r22, 0x05	; 5
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xa>
     f84:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xb>
     f88:	09 95       	icall
     f8a:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
     f8e:	ff 91       	pop	r31
     f90:	ef 91       	pop	r30
     f92:	bf 91       	pop	r27
     f94:	af 91       	pop	r26
     f96:	9f 91       	pop	r25
     f98:	8f 91       	pop	r24
     f9a:	7f 91       	pop	r23
     f9c:	6f 91       	pop	r22
     f9e:	5f 91       	pop	r21
     fa0:	4f 91       	pop	r20
     fa2:	3f 91       	pop	r19
     fa4:	2f 91       	pop	r18
     fa6:	0f 90       	pop	r0
     fa8:	0f be       	out	0x3f, r0	; 63
     faa:	0f 90       	pop	r0
     fac:	1f 90       	pop	r1
     fae:	18 95       	reti

00000fb0 <__vector_11>:
     fb0:	1f 92       	push	r1
     fb2:	0f 92       	push	r0
     fb4:	0f b6       	in	r0, 0x3f	; 63
     fb6:	0f 92       	push	r0
     fb8:	11 24       	eor	r1, r1
     fba:	2f 93       	push	r18
     fbc:	3f 93       	push	r19
     fbe:	4f 93       	push	r20
     fc0:	5f 93       	push	r21
     fc2:	6f 93       	push	r22
     fc4:	7f 93       	push	r23
     fc6:	8f 93       	push	r24
     fc8:	9f 93       	push	r25
     fca:	af 93       	push	r26
     fcc:	bf 93       	push	r27
     fce:	ef 93       	push	r30
     fd0:	ff 93       	push	r31
     fd2:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
     fd6:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
     fda:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     fde:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     fe2:	c9 01       	movw	r24, r18
     fe4:	03 2e       	mov	r0, r19
     fe6:	00 0c       	add	r0, r0
     fe8:	aa 0b       	sbc	r26, r26
     fea:	bb 0b       	sbc	r27, r27
     fec:	dc 01       	movw	r26, r24
     fee:	99 27       	eor	r25, r25
     ff0:	88 27       	eor	r24, r24
     ff2:	60 e0       	ldi	r22, 0x00	; 0
     ff4:	70 e0       	ldi	r23, 0x00	; 0
     ff6:	84 2b       	or	r24, r20
     ff8:	95 2b       	or	r25, r21
     ffa:	a6 2b       	or	r26, r22
     ffc:	b7 2b       	or	r27, r23
     ffe:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1002:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1006:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    100a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    100e:	b0 9b       	sbis	0x16, 0	; 22
    1010:	1b c0       	rjmp	.+54     	; 0x1048 <__vector_11+0x98>
    1012:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1016:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    101a:	c9 01       	movw	r24, r18
    101c:	01 96       	adiw	r24, 0x01	; 1
    101e:	09 2e       	mov	r0, r25
    1020:	00 0c       	add	r0, r0
    1022:	aa 0b       	sbc	r26, r26
    1024:	bb 0b       	sbc	r27, r27
    1026:	dc 01       	movw	r26, r24
    1028:	99 27       	eor	r25, r25
    102a:	88 27       	eor	r24, r24
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	70 e0       	ldi	r23, 0x00	; 0
    1030:	84 2b       	or	r24, r20
    1032:	95 2b       	or	r25, r21
    1034:	a6 2b       	or	r26, r22
    1036:	b7 2b       	or	r27, r23
    1038:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    103c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1040:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1044:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1048:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0xc>
    104c:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0xd>
    1050:	30 97       	sbiw	r30, 0x00	; 0
    1052:	39 f0       	breq	.+14     	; 0x1062 <__vector_11+0xb2>
    1054:	66 e0       	ldi	r22, 0x06	; 6
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0xc>
    105c:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0xd>
    1060:	09 95       	icall
    1062:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    1066:	ff 91       	pop	r31
    1068:	ef 91       	pop	r30
    106a:	bf 91       	pop	r27
    106c:	af 91       	pop	r26
    106e:	9f 91       	pop	r25
    1070:	8f 91       	pop	r24
    1072:	7f 91       	pop	r23
    1074:	6f 91       	pop	r22
    1076:	5f 91       	pop	r21
    1078:	4f 91       	pop	r20
    107a:	3f 91       	pop	r19
    107c:	2f 91       	pop	r18
    107e:	0f 90       	pop	r0
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	0f 90       	pop	r0
    1084:	1f 90       	pop	r1
    1086:	18 95       	reti

00001088 <__vector_12>:
    1088:	1f 92       	push	r1
    108a:	0f 92       	push	r0
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	0f 92       	push	r0
    1090:	11 24       	eor	r1, r1
    1092:	2f 93       	push	r18
    1094:	3f 93       	push	r19
    1096:	4f 93       	push	r20
    1098:	5f 93       	push	r21
    109a:	6f 93       	push	r22
    109c:	7f 93       	push	r23
    109e:	8f 93       	push	r24
    10a0:	9f 93       	push	r25
    10a2:	af 93       	push	r26
    10a4:	bf 93       	push	r27
    10a6:	ef 93       	push	r30
    10a8:	ff 93       	push	r31
    10aa:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    10ae:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    10b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    10b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    10ba:	c9 01       	movw	r24, r18
    10bc:	03 2e       	mov	r0, r19
    10be:	00 0c       	add	r0, r0
    10c0:	aa 0b       	sbc	r26, r26
    10c2:	bb 0b       	sbc	r27, r27
    10c4:	dc 01       	movw	r26, r24
    10c6:	99 27       	eor	r25, r25
    10c8:	88 27       	eor	r24, r24
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	84 2b       	or	r24, r20
    10d0:	95 2b       	or	r25, r21
    10d2:	a6 2b       	or	r26, r22
    10d4:	b7 2b       	or	r27, r23
    10d6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    10da:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    10de:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    10e2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    10e6:	b0 9b       	sbis	0x16, 0	; 22
    10e8:	1b c0       	rjmp	.+54     	; 0x1120 <__vector_12+0x98>
    10ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    10ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    10f2:	c9 01       	movw	r24, r18
    10f4:	01 96       	adiw	r24, 0x01	; 1
    10f6:	09 2e       	mov	r0, r25
    10f8:	00 0c       	add	r0, r0
    10fa:	aa 0b       	sbc	r26, r26
    10fc:	bb 0b       	sbc	r27, r27
    10fe:	dc 01       	movw	r26, r24
    1100:	99 27       	eor	r25, r25
    1102:	88 27       	eor	r24, r24
    1104:	60 e0       	ldi	r22, 0x00	; 0
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	84 2b       	or	r24, r20
    110a:	95 2b       	or	r25, r21
    110c:	a6 2b       	or	r26, r22
    110e:	b7 2b       	or	r27, r23
    1110:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1114:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1118:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    111c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1120:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0xe>
    1124:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0xf>
    1128:	30 97       	sbiw	r30, 0x00	; 0
    112a:	39 f0       	breq	.+14     	; 0x113a <__vector_12+0xb2>
    112c:	67 e0       	ldi	r22, 0x07	; 7
    112e:	70 e0       	ldi	r23, 0x00	; 0
    1130:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0xe>
    1134:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0xf>
    1138:	09 95       	icall
    113a:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    113e:	ff 91       	pop	r31
    1140:	ef 91       	pop	r30
    1142:	bf 91       	pop	r27
    1144:	af 91       	pop	r26
    1146:	9f 91       	pop	r25
    1148:	8f 91       	pop	r24
    114a:	7f 91       	pop	r23
    114c:	6f 91       	pop	r22
    114e:	5f 91       	pop	r21
    1150:	4f 91       	pop	r20
    1152:	3f 91       	pop	r19
    1154:	2f 91       	pop	r18
    1156:	0f 90       	pop	r0
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	0f 90       	pop	r0
    115c:	1f 90       	pop	r1
    115e:	18 95       	reti

00001160 <__vector_13>:
    1160:	1f 92       	push	r1
    1162:	0f 92       	push	r0
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	0f 92       	push	r0
    1168:	11 24       	eor	r1, r1
    116a:	2f 93       	push	r18
    116c:	3f 93       	push	r19
    116e:	4f 93       	push	r20
    1170:	5f 93       	push	r21
    1172:	6f 93       	push	r22
    1174:	7f 93       	push	r23
    1176:	8f 93       	push	r24
    1178:	9f 93       	push	r25
    117a:	af 93       	push	r26
    117c:	bf 93       	push	r27
    117e:	ef 93       	push	r30
    1180:	ff 93       	push	r31
    1182:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1186:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    118a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    118e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1192:	c9 01       	movw	r24, r18
    1194:	03 2e       	mov	r0, r19
    1196:	00 0c       	add	r0, r0
    1198:	aa 0b       	sbc	r26, r26
    119a:	bb 0b       	sbc	r27, r27
    119c:	dc 01       	movw	r26, r24
    119e:	99 27       	eor	r25, r25
    11a0:	88 27       	eor	r24, r24
    11a2:	60 e0       	ldi	r22, 0x00	; 0
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	84 2b       	or	r24, r20
    11a8:	95 2b       	or	r25, r21
    11aa:	a6 2b       	or	r26, r22
    11ac:	b7 2b       	or	r27, r23
    11ae:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    11b2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    11b6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    11ba:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    11be:	b0 9b       	sbis	0x16, 0	; 22
    11c0:	1b c0       	rjmp	.+54     	; 0x11f8 <__vector_13+0x98>
    11c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    11c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    11ca:	c9 01       	movw	r24, r18
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	09 2e       	mov	r0, r25
    11d0:	00 0c       	add	r0, r0
    11d2:	aa 0b       	sbc	r26, r26
    11d4:	bb 0b       	sbc	r27, r27
    11d6:	dc 01       	movw	r26, r24
    11d8:	99 27       	eor	r25, r25
    11da:	88 27       	eor	r24, r24
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	84 2b       	or	r24, r20
    11e2:	95 2b       	or	r25, r21
    11e4:	a6 2b       	or	r26, r22
    11e6:	b7 2b       	or	r27, r23
    11e8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    11ec:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    11f0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    11f4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    11f8:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x10>
    11fc:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x11>
    1200:	30 97       	sbiw	r30, 0x00	; 0
    1202:	39 f0       	breq	.+14     	; 0x1212 <__vector_13+0xb2>
    1204:	68 e0       	ldi	r22, 0x08	; 8
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x10>
    120c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x11>
    1210:	09 95       	icall
    1212:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    1216:	ff 91       	pop	r31
    1218:	ef 91       	pop	r30
    121a:	bf 91       	pop	r27
    121c:	af 91       	pop	r26
    121e:	9f 91       	pop	r25
    1220:	8f 91       	pop	r24
    1222:	7f 91       	pop	r23
    1224:	6f 91       	pop	r22
    1226:	5f 91       	pop	r21
    1228:	4f 91       	pop	r20
    122a:	3f 91       	pop	r19
    122c:	2f 91       	pop	r18
    122e:	0f 90       	pop	r0
    1230:	0f be       	out	0x3f, r0	; 63
    1232:	0f 90       	pop	r0
    1234:	1f 90       	pop	r1
    1236:	18 95       	reti

00001238 <__vector_14>:
    1238:	1f 92       	push	r1
    123a:	0f 92       	push	r0
    123c:	0f b6       	in	r0, 0x3f	; 63
    123e:	0f 92       	push	r0
    1240:	11 24       	eor	r1, r1
    1242:	2f 93       	push	r18
    1244:	3f 93       	push	r19
    1246:	4f 93       	push	r20
    1248:	5f 93       	push	r21
    124a:	6f 93       	push	r22
    124c:	7f 93       	push	r23
    124e:	8f 93       	push	r24
    1250:	9f 93       	push	r25
    1252:	af 93       	push	r26
    1254:	bf 93       	push	r27
    1256:	ef 93       	push	r30
    1258:	ff 93       	push	r31
    125a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    125e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1262:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1266:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    126a:	c9 01       	movw	r24, r18
    126c:	03 2e       	mov	r0, r19
    126e:	00 0c       	add	r0, r0
    1270:	aa 0b       	sbc	r26, r26
    1272:	bb 0b       	sbc	r27, r27
    1274:	dc 01       	movw	r26, r24
    1276:	99 27       	eor	r25, r25
    1278:	88 27       	eor	r24, r24
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	84 2b       	or	r24, r20
    1280:	95 2b       	or	r25, r21
    1282:	a6 2b       	or	r26, r22
    1284:	b7 2b       	or	r27, r23
    1286:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    128a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    128e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1292:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1296:	b0 9b       	sbis	0x16, 0	; 22
    1298:	1b c0       	rjmp	.+54     	; 0x12d0 <__vector_14+0x98>
    129a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    129e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    12a2:	c9 01       	movw	r24, r18
    12a4:	01 96       	adiw	r24, 0x01	; 1
    12a6:	09 2e       	mov	r0, r25
    12a8:	00 0c       	add	r0, r0
    12aa:	aa 0b       	sbc	r26, r26
    12ac:	bb 0b       	sbc	r27, r27
    12ae:	dc 01       	movw	r26, r24
    12b0:	99 27       	eor	r25, r25
    12b2:	88 27       	eor	r24, r24
    12b4:	60 e0       	ldi	r22, 0x00	; 0
    12b6:	70 e0       	ldi	r23, 0x00	; 0
    12b8:	84 2b       	or	r24, r20
    12ba:	95 2b       	or	r25, r21
    12bc:	a6 2b       	or	r26, r22
    12be:	b7 2b       	or	r27, r23
    12c0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    12c4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    12c8:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    12cc:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    12d0:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x12>
    12d4:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x13>
    12d8:	30 97       	sbiw	r30, 0x00	; 0
    12da:	39 f0       	breq	.+14     	; 0x12ea <__vector_14+0xb2>
    12dc:	69 e0       	ldi	r22, 0x09	; 9
    12de:	70 e0       	ldi	r23, 0x00	; 0
    12e0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x12>
    12e4:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x13>
    12e8:	09 95       	icall
    12ea:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    12ee:	ff 91       	pop	r31
    12f0:	ef 91       	pop	r30
    12f2:	bf 91       	pop	r27
    12f4:	af 91       	pop	r26
    12f6:	9f 91       	pop	r25
    12f8:	8f 91       	pop	r24
    12fa:	7f 91       	pop	r23
    12fc:	6f 91       	pop	r22
    12fe:	5f 91       	pop	r21
    1300:	4f 91       	pop	r20
    1302:	3f 91       	pop	r19
    1304:	2f 91       	pop	r18
    1306:	0f 90       	pop	r0
    1308:	0f be       	out	0x3f, r0	; 63
    130a:	0f 90       	pop	r0
    130c:	1f 90       	pop	r1
    130e:	18 95       	reti

00001310 <__vector_15>:
    1310:	1f 92       	push	r1
    1312:	0f 92       	push	r0
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	0f 92       	push	r0
    1318:	11 24       	eor	r1, r1
    131a:	2f 93       	push	r18
    131c:	3f 93       	push	r19
    131e:	4f 93       	push	r20
    1320:	5f 93       	push	r21
    1322:	6f 93       	push	r22
    1324:	7f 93       	push	r23
    1326:	8f 93       	push	r24
    1328:	9f 93       	push	r25
    132a:	af 93       	push	r26
    132c:	bf 93       	push	r27
    132e:	ef 93       	push	r30
    1330:	ff 93       	push	r31
    1332:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1336:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    133a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    133e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1342:	c9 01       	movw	r24, r18
    1344:	03 2e       	mov	r0, r19
    1346:	00 0c       	add	r0, r0
    1348:	aa 0b       	sbc	r26, r26
    134a:	bb 0b       	sbc	r27, r27
    134c:	dc 01       	movw	r26, r24
    134e:	99 27       	eor	r25, r25
    1350:	88 27       	eor	r24, r24
    1352:	60 e0       	ldi	r22, 0x00	; 0
    1354:	70 e0       	ldi	r23, 0x00	; 0
    1356:	84 2b       	or	r24, r20
    1358:	95 2b       	or	r25, r21
    135a:	a6 2b       	or	r26, r22
    135c:	b7 2b       	or	r27, r23
    135e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1362:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1366:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    136a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    136e:	b0 9b       	sbis	0x16, 0	; 22
    1370:	1b c0       	rjmp	.+54     	; 0x13a8 <__vector_15+0x98>
    1372:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1376:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    137a:	c9 01       	movw	r24, r18
    137c:	01 96       	adiw	r24, 0x01	; 1
    137e:	09 2e       	mov	r0, r25
    1380:	00 0c       	add	r0, r0
    1382:	aa 0b       	sbc	r26, r26
    1384:	bb 0b       	sbc	r27, r27
    1386:	dc 01       	movw	r26, r24
    1388:	99 27       	eor	r25, r25
    138a:	88 27       	eor	r24, r24
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	84 2b       	or	r24, r20
    1392:	95 2b       	or	r25, r21
    1394:	a6 2b       	or	r26, r22
    1396:	b7 2b       	or	r27, r23
    1398:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    139c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    13a0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    13a4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    13a8:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x14>
    13ac:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x15>
    13b0:	30 97       	sbiw	r30, 0x00	; 0
    13b2:	39 f0       	breq	.+14     	; 0x13c2 <__vector_15+0xb2>
    13b4:	6a e0       	ldi	r22, 0x0A	; 10
    13b6:	70 e0       	ldi	r23, 0x00	; 0
    13b8:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x14>
    13bc:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x15>
    13c0:	09 95       	icall
    13c2:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    13c6:	ff 91       	pop	r31
    13c8:	ef 91       	pop	r30
    13ca:	bf 91       	pop	r27
    13cc:	af 91       	pop	r26
    13ce:	9f 91       	pop	r25
    13d0:	8f 91       	pop	r24
    13d2:	7f 91       	pop	r23
    13d4:	6f 91       	pop	r22
    13d6:	5f 91       	pop	r21
    13d8:	4f 91       	pop	r20
    13da:	3f 91       	pop	r19
    13dc:	2f 91       	pop	r18
    13de:	0f 90       	pop	r0
    13e0:	0f be       	out	0x3f, r0	; 63
    13e2:	0f 90       	pop	r0
    13e4:	1f 90       	pop	r1
    13e6:	18 95       	reti

000013e8 <__vector_16>:
    13e8:	1f 92       	push	r1
    13ea:	0f 92       	push	r0
    13ec:	0f b6       	in	r0, 0x3f	; 63
    13ee:	0f 92       	push	r0
    13f0:	11 24       	eor	r1, r1
    13f2:	2f 93       	push	r18
    13f4:	3f 93       	push	r19
    13f6:	4f 93       	push	r20
    13f8:	5f 93       	push	r21
    13fa:	6f 93       	push	r22
    13fc:	7f 93       	push	r23
    13fe:	8f 93       	push	r24
    1400:	9f 93       	push	r25
    1402:	af 93       	push	r26
    1404:	bf 93       	push	r27
    1406:	ef 93       	push	r30
    1408:	ff 93       	push	r31
    140a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    140e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1412:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1416:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    141a:	c9 01       	movw	r24, r18
    141c:	03 2e       	mov	r0, r19
    141e:	00 0c       	add	r0, r0
    1420:	aa 0b       	sbc	r26, r26
    1422:	bb 0b       	sbc	r27, r27
    1424:	dc 01       	movw	r26, r24
    1426:	99 27       	eor	r25, r25
    1428:	88 27       	eor	r24, r24
    142a:	60 e0       	ldi	r22, 0x00	; 0
    142c:	70 e0       	ldi	r23, 0x00	; 0
    142e:	84 2b       	or	r24, r20
    1430:	95 2b       	or	r25, r21
    1432:	a6 2b       	or	r26, r22
    1434:	b7 2b       	or	r27, r23
    1436:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    143a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    143e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1442:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1446:	b0 9b       	sbis	0x16, 0	; 22
    1448:	1b c0       	rjmp	.+54     	; 0x1480 <__vector_16+0x98>
    144a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    144e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1452:	c9 01       	movw	r24, r18
    1454:	01 96       	adiw	r24, 0x01	; 1
    1456:	09 2e       	mov	r0, r25
    1458:	00 0c       	add	r0, r0
    145a:	aa 0b       	sbc	r26, r26
    145c:	bb 0b       	sbc	r27, r27
    145e:	dc 01       	movw	r26, r24
    1460:	99 27       	eor	r25, r25
    1462:	88 27       	eor	r24, r24
    1464:	60 e0       	ldi	r22, 0x00	; 0
    1466:	70 e0       	ldi	r23, 0x00	; 0
    1468:	84 2b       	or	r24, r20
    146a:	95 2b       	or	r25, r21
    146c:	a6 2b       	or	r26, r22
    146e:	b7 2b       	or	r27, r23
    1470:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1474:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1478:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    147c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1480:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x16>
    1484:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x17>
    1488:	30 97       	sbiw	r30, 0x00	; 0
    148a:	39 f0       	breq	.+14     	; 0x149a <__vector_16+0xb2>
    148c:	6b e0       	ldi	r22, 0x0B	; 11
    148e:	70 e0       	ldi	r23, 0x00	; 0
    1490:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x16>
    1494:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x17>
    1498:	09 95       	icall
    149a:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    149e:	ff 91       	pop	r31
    14a0:	ef 91       	pop	r30
    14a2:	bf 91       	pop	r27
    14a4:	af 91       	pop	r26
    14a6:	9f 91       	pop	r25
    14a8:	8f 91       	pop	r24
    14aa:	7f 91       	pop	r23
    14ac:	6f 91       	pop	r22
    14ae:	5f 91       	pop	r21
    14b0:	4f 91       	pop	r20
    14b2:	3f 91       	pop	r19
    14b4:	2f 91       	pop	r18
    14b6:	0f 90       	pop	r0
    14b8:	0f be       	out	0x3f, r0	; 63
    14ba:	0f 90       	pop	r0
    14bc:	1f 90       	pop	r1
    14be:	18 95       	reti

000014c0 <__vector_17>:
    14c0:	1f 92       	push	r1
    14c2:	0f 92       	push	r0
    14c4:	0f b6       	in	r0, 0x3f	; 63
    14c6:	0f 92       	push	r0
    14c8:	11 24       	eor	r1, r1
    14ca:	2f 93       	push	r18
    14cc:	3f 93       	push	r19
    14ce:	4f 93       	push	r20
    14d0:	5f 93       	push	r21
    14d2:	6f 93       	push	r22
    14d4:	7f 93       	push	r23
    14d6:	8f 93       	push	r24
    14d8:	9f 93       	push	r25
    14da:	af 93       	push	r26
    14dc:	bf 93       	push	r27
    14de:	ef 93       	push	r30
    14e0:	ff 93       	push	r31
    14e2:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    14e6:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    14ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    14ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    14f2:	c9 01       	movw	r24, r18
    14f4:	03 2e       	mov	r0, r19
    14f6:	00 0c       	add	r0, r0
    14f8:	aa 0b       	sbc	r26, r26
    14fa:	bb 0b       	sbc	r27, r27
    14fc:	dc 01       	movw	r26, r24
    14fe:	99 27       	eor	r25, r25
    1500:	88 27       	eor	r24, r24
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	70 e0       	ldi	r23, 0x00	; 0
    1506:	84 2b       	or	r24, r20
    1508:	95 2b       	or	r25, r21
    150a:	a6 2b       	or	r26, r22
    150c:	b7 2b       	or	r27, r23
    150e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1512:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1516:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    151a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    151e:	b0 9b       	sbis	0x16, 0	; 22
    1520:	1b c0       	rjmp	.+54     	; 0x1558 <__vector_17+0x98>
    1522:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1526:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    152a:	c9 01       	movw	r24, r18
    152c:	01 96       	adiw	r24, 0x01	; 1
    152e:	09 2e       	mov	r0, r25
    1530:	00 0c       	add	r0, r0
    1532:	aa 0b       	sbc	r26, r26
    1534:	bb 0b       	sbc	r27, r27
    1536:	dc 01       	movw	r26, r24
    1538:	99 27       	eor	r25, r25
    153a:	88 27       	eor	r24, r24
    153c:	60 e0       	ldi	r22, 0x00	; 0
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	84 2b       	or	r24, r20
    1542:	95 2b       	or	r25, r21
    1544:	a6 2b       	or	r26, r22
    1546:	b7 2b       	or	r27, r23
    1548:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    154c:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1550:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1554:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1558:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x18>
    155c:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x19>
    1560:	30 97       	sbiw	r30, 0x00	; 0
    1562:	39 f0       	breq	.+14     	; 0x1572 <__vector_17+0xb2>
    1564:	6c e0       	ldi	r22, 0x0C	; 12
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x18>
    156c:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x19>
    1570:	09 95       	icall
    1572:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    1576:	ff 91       	pop	r31
    1578:	ef 91       	pop	r30
    157a:	bf 91       	pop	r27
    157c:	af 91       	pop	r26
    157e:	9f 91       	pop	r25
    1580:	8f 91       	pop	r24
    1582:	7f 91       	pop	r23
    1584:	6f 91       	pop	r22
    1586:	5f 91       	pop	r21
    1588:	4f 91       	pop	r20
    158a:	3f 91       	pop	r19
    158c:	2f 91       	pop	r18
    158e:	0f 90       	pop	r0
    1590:	0f be       	out	0x3f, r0	; 63
    1592:	0f 90       	pop	r0
    1594:	1f 90       	pop	r1
    1596:	18 95       	reti

00001598 <__vector_18>:
    1598:	1f 92       	push	r1
    159a:	0f 92       	push	r0
    159c:	0f b6       	in	r0, 0x3f	; 63
    159e:	0f 92       	push	r0
    15a0:	11 24       	eor	r1, r1
    15a2:	2f 93       	push	r18
    15a4:	3f 93       	push	r19
    15a6:	4f 93       	push	r20
    15a8:	5f 93       	push	r21
    15aa:	6f 93       	push	r22
    15ac:	7f 93       	push	r23
    15ae:	8f 93       	push	r24
    15b0:	9f 93       	push	r25
    15b2:	af 93       	push	r26
    15b4:	bf 93       	push	r27
    15b6:	ef 93       	push	r30
    15b8:	ff 93       	push	r31
    15ba:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    15be:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    15c2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    15c6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    15ca:	c9 01       	movw	r24, r18
    15cc:	03 2e       	mov	r0, r19
    15ce:	00 0c       	add	r0, r0
    15d0:	aa 0b       	sbc	r26, r26
    15d2:	bb 0b       	sbc	r27, r27
    15d4:	dc 01       	movw	r26, r24
    15d6:	99 27       	eor	r25, r25
    15d8:	88 27       	eor	r24, r24
    15da:	60 e0       	ldi	r22, 0x00	; 0
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	84 2b       	or	r24, r20
    15e0:	95 2b       	or	r25, r21
    15e2:	a6 2b       	or	r26, r22
    15e4:	b7 2b       	or	r27, r23
    15e6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    15ea:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    15ee:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    15f2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    15f6:	b0 9b       	sbis	0x16, 0	; 22
    15f8:	1b c0       	rjmp	.+54     	; 0x1630 <__vector_18+0x98>
    15fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    15fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1602:	c9 01       	movw	r24, r18
    1604:	01 96       	adiw	r24, 0x01	; 1
    1606:	09 2e       	mov	r0, r25
    1608:	00 0c       	add	r0, r0
    160a:	aa 0b       	sbc	r26, r26
    160c:	bb 0b       	sbc	r27, r27
    160e:	dc 01       	movw	r26, r24
    1610:	99 27       	eor	r25, r25
    1612:	88 27       	eor	r24, r24
    1614:	60 e0       	ldi	r22, 0x00	; 0
    1616:	70 e0       	ldi	r23, 0x00	; 0
    1618:	84 2b       	or	r24, r20
    161a:	95 2b       	or	r25, r21
    161c:	a6 2b       	or	r26, r22
    161e:	b7 2b       	or	r27, r23
    1620:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1624:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1628:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    162c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1630:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1a>
    1634:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1b>
    1638:	30 97       	sbiw	r30, 0x00	; 0
    163a:	39 f0       	breq	.+14     	; 0x164a <__vector_18+0xb2>
    163c:	6d e0       	ldi	r22, 0x0D	; 13
    163e:	70 e0       	ldi	r23, 0x00	; 0
    1640:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1a>
    1644:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1b>
    1648:	09 95       	icall
    164a:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    164e:	ff 91       	pop	r31
    1650:	ef 91       	pop	r30
    1652:	bf 91       	pop	r27
    1654:	af 91       	pop	r26
    1656:	9f 91       	pop	r25
    1658:	8f 91       	pop	r24
    165a:	7f 91       	pop	r23
    165c:	6f 91       	pop	r22
    165e:	5f 91       	pop	r21
    1660:	4f 91       	pop	r20
    1662:	3f 91       	pop	r19
    1664:	2f 91       	pop	r18
    1666:	0f 90       	pop	r0
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	0f 90       	pop	r0
    166c:	1f 90       	pop	r1
    166e:	18 95       	reti

00001670 <__vector_19>:
    1670:	1f 92       	push	r1
    1672:	0f 92       	push	r0
    1674:	0f b6       	in	r0, 0x3f	; 63
    1676:	0f 92       	push	r0
    1678:	11 24       	eor	r1, r1
    167a:	2f 93       	push	r18
    167c:	3f 93       	push	r19
    167e:	4f 93       	push	r20
    1680:	5f 93       	push	r21
    1682:	6f 93       	push	r22
    1684:	7f 93       	push	r23
    1686:	8f 93       	push	r24
    1688:	9f 93       	push	r25
    168a:	af 93       	push	r26
    168c:	bf 93       	push	r27
    168e:	ef 93       	push	r30
    1690:	ff 93       	push	r31
    1692:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1696:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    169a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    169e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    16a2:	c9 01       	movw	r24, r18
    16a4:	03 2e       	mov	r0, r19
    16a6:	00 0c       	add	r0, r0
    16a8:	aa 0b       	sbc	r26, r26
    16aa:	bb 0b       	sbc	r27, r27
    16ac:	dc 01       	movw	r26, r24
    16ae:	99 27       	eor	r25, r25
    16b0:	88 27       	eor	r24, r24
    16b2:	60 e0       	ldi	r22, 0x00	; 0
    16b4:	70 e0       	ldi	r23, 0x00	; 0
    16b6:	84 2b       	or	r24, r20
    16b8:	95 2b       	or	r25, r21
    16ba:	a6 2b       	or	r26, r22
    16bc:	b7 2b       	or	r27, r23
    16be:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    16c2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    16c6:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    16ca:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    16ce:	b0 9b       	sbis	0x16, 0	; 22
    16d0:	1b c0       	rjmp	.+54     	; 0x1708 <__vector_19+0x98>
    16d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    16d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    16da:	c9 01       	movw	r24, r18
    16dc:	01 96       	adiw	r24, 0x01	; 1
    16de:	09 2e       	mov	r0, r25
    16e0:	00 0c       	add	r0, r0
    16e2:	aa 0b       	sbc	r26, r26
    16e4:	bb 0b       	sbc	r27, r27
    16e6:	dc 01       	movw	r26, r24
    16e8:	99 27       	eor	r25, r25
    16ea:	88 27       	eor	r24, r24
    16ec:	60 e0       	ldi	r22, 0x00	; 0
    16ee:	70 e0       	ldi	r23, 0x00	; 0
    16f0:	84 2b       	or	r24, r20
    16f2:	95 2b       	or	r25, r21
    16f4:	a6 2b       	or	r26, r22
    16f6:	b7 2b       	or	r27, r23
    16f8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    16fc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1700:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1704:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1708:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x1c>
    170c:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1d>
    1710:	30 97       	sbiw	r30, 0x00	; 0
    1712:	39 f0       	breq	.+14     	; 0x1722 <__vector_19+0xb2>
    1714:	6e e0       	ldi	r22, 0x0E	; 14
    1716:	70 e0       	ldi	r23, 0x00	; 0
    1718:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x1c>
    171c:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1d>
    1720:	09 95       	icall
    1722:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    1726:	ff 91       	pop	r31
    1728:	ef 91       	pop	r30
    172a:	bf 91       	pop	r27
    172c:	af 91       	pop	r26
    172e:	9f 91       	pop	r25
    1730:	8f 91       	pop	r24
    1732:	7f 91       	pop	r23
    1734:	6f 91       	pop	r22
    1736:	5f 91       	pop	r21
    1738:	4f 91       	pop	r20
    173a:	3f 91       	pop	r19
    173c:	2f 91       	pop	r18
    173e:	0f 90       	pop	r0
    1740:	0f be       	out	0x3f, r0	; 63
    1742:	0f 90       	pop	r0
    1744:	1f 90       	pop	r1
    1746:	18 95       	reti

00001748 <__vector_20>:
    1748:	1f 92       	push	r1
    174a:	0f 92       	push	r0
    174c:	0f b6       	in	r0, 0x3f	; 63
    174e:	0f 92       	push	r0
    1750:	11 24       	eor	r1, r1
    1752:	2f 93       	push	r18
    1754:	3f 93       	push	r19
    1756:	4f 93       	push	r20
    1758:	5f 93       	push	r21
    175a:	6f 93       	push	r22
    175c:	7f 93       	push	r23
    175e:	8f 93       	push	r24
    1760:	9f 93       	push	r25
    1762:	af 93       	push	r26
    1764:	bf 93       	push	r27
    1766:	ef 93       	push	r30
    1768:	ff 93       	push	r31
    176a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    176e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1772:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1776:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    177a:	c9 01       	movw	r24, r18
    177c:	03 2e       	mov	r0, r19
    177e:	00 0c       	add	r0, r0
    1780:	aa 0b       	sbc	r26, r26
    1782:	bb 0b       	sbc	r27, r27
    1784:	dc 01       	movw	r26, r24
    1786:	99 27       	eor	r25, r25
    1788:	88 27       	eor	r24, r24
    178a:	60 e0       	ldi	r22, 0x00	; 0
    178c:	70 e0       	ldi	r23, 0x00	; 0
    178e:	84 2b       	or	r24, r20
    1790:	95 2b       	or	r25, r21
    1792:	a6 2b       	or	r26, r22
    1794:	b7 2b       	or	r27, r23
    1796:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    179a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    179e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    17a2:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    17a6:	b0 9b       	sbis	0x16, 0	; 22
    17a8:	1b c0       	rjmp	.+54     	; 0x17e0 <__vector_20+0x98>
    17aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    17ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    17b2:	c9 01       	movw	r24, r18
    17b4:	01 96       	adiw	r24, 0x01	; 1
    17b6:	09 2e       	mov	r0, r25
    17b8:	00 0c       	add	r0, r0
    17ba:	aa 0b       	sbc	r26, r26
    17bc:	bb 0b       	sbc	r27, r27
    17be:	dc 01       	movw	r26, r24
    17c0:	99 27       	eor	r25, r25
    17c2:	88 27       	eor	r24, r24
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	70 e0       	ldi	r23, 0x00	; 0
    17c8:	84 2b       	or	r24, r20
    17ca:	95 2b       	or	r25, r21
    17cc:	a6 2b       	or	r26, r22
    17ce:	b7 2b       	or	r27, r23
    17d0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    17d4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    17d8:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    17dc:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    17e0:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x1e>
    17e4:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x1f>
    17e8:	30 97       	sbiw	r30, 0x00	; 0
    17ea:	39 f0       	breq	.+14     	; 0x17fa <__vector_20+0xb2>
    17ec:	6f e0       	ldi	r22, 0x0F	; 15
    17ee:	70 e0       	ldi	r23, 0x00	; 0
    17f0:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x1e>
    17f4:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x1f>
    17f8:	09 95       	icall
    17fa:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    17fe:	ff 91       	pop	r31
    1800:	ef 91       	pop	r30
    1802:	bf 91       	pop	r27
    1804:	af 91       	pop	r26
    1806:	9f 91       	pop	r25
    1808:	8f 91       	pop	r24
    180a:	7f 91       	pop	r23
    180c:	6f 91       	pop	r22
    180e:	5f 91       	pop	r21
    1810:	4f 91       	pop	r20
    1812:	3f 91       	pop	r19
    1814:	2f 91       	pop	r18
    1816:	0f 90       	pop	r0
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	0f 90       	pop	r0
    181c:	1f 90       	pop	r1
    181e:	18 95       	reti

00001820 <__vector_21>:
    1820:	1f 92       	push	r1
    1822:	0f 92       	push	r0
    1824:	0f b6       	in	r0, 0x3f	; 63
    1826:	0f 92       	push	r0
    1828:	11 24       	eor	r1, r1
    182a:	2f 93       	push	r18
    182c:	3f 93       	push	r19
    182e:	4f 93       	push	r20
    1830:	5f 93       	push	r21
    1832:	6f 93       	push	r22
    1834:	7f 93       	push	r23
    1836:	8f 93       	push	r24
    1838:	9f 93       	push	r25
    183a:	af 93       	push	r26
    183c:	bf 93       	push	r27
    183e:	ef 93       	push	r30
    1840:	ff 93       	push	r31
    1842:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1846:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    184a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    184e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1852:	c9 01       	movw	r24, r18
    1854:	03 2e       	mov	r0, r19
    1856:	00 0c       	add	r0, r0
    1858:	aa 0b       	sbc	r26, r26
    185a:	bb 0b       	sbc	r27, r27
    185c:	dc 01       	movw	r26, r24
    185e:	99 27       	eor	r25, r25
    1860:	88 27       	eor	r24, r24
    1862:	60 e0       	ldi	r22, 0x00	; 0
    1864:	70 e0       	ldi	r23, 0x00	; 0
    1866:	84 2b       	or	r24, r20
    1868:	95 2b       	or	r25, r21
    186a:	a6 2b       	or	r26, r22
    186c:	b7 2b       	or	r27, r23
    186e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1872:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1876:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    187a:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    187e:	b0 9b       	sbis	0x16, 0	; 22
    1880:	1b c0       	rjmp	.+54     	; 0x18b8 <__vector_21+0x98>
    1882:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1886:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    188a:	c9 01       	movw	r24, r18
    188c:	01 96       	adiw	r24, 0x01	; 1
    188e:	09 2e       	mov	r0, r25
    1890:	00 0c       	add	r0, r0
    1892:	aa 0b       	sbc	r26, r26
    1894:	bb 0b       	sbc	r27, r27
    1896:	dc 01       	movw	r26, r24
    1898:	99 27       	eor	r25, r25
    189a:	88 27       	eor	r24, r24
    189c:	60 e0       	ldi	r22, 0x00	; 0
    189e:	70 e0       	ldi	r23, 0x00	; 0
    18a0:	84 2b       	or	r24, r20
    18a2:	95 2b       	or	r25, r21
    18a4:	a6 2b       	or	r26, r22
    18a6:	b7 2b       	or	r27, r23
    18a8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    18ac:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    18b0:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    18b4:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    18b8:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x20>
    18bc:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x21>
    18c0:	30 97       	sbiw	r30, 0x00	; 0
    18c2:	39 f0       	breq	.+14     	; 0x18d2 <__vector_21+0xb2>
    18c4:	60 e1       	ldi	r22, 0x10	; 16
    18c6:	70 e0       	ldi	r23, 0x00	; 0
    18c8:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x20>
    18cc:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x21>
    18d0:	09 95       	icall
    18d2:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    18d6:	ff 91       	pop	r31
    18d8:	ef 91       	pop	r30
    18da:	bf 91       	pop	r27
    18dc:	af 91       	pop	r26
    18de:	9f 91       	pop	r25
    18e0:	8f 91       	pop	r24
    18e2:	7f 91       	pop	r23
    18e4:	6f 91       	pop	r22
    18e6:	5f 91       	pop	r21
    18e8:	4f 91       	pop	r20
    18ea:	3f 91       	pop	r19
    18ec:	2f 91       	pop	r18
    18ee:	0f 90       	pop	r0
    18f0:	0f be       	out	0x3f, r0	; 63
    18f2:	0f 90       	pop	r0
    18f4:	1f 90       	pop	r1
    18f6:	18 95       	reti

000018f8 <__vector_22>:
    18f8:	1f 92       	push	r1
    18fa:	0f 92       	push	r0
    18fc:	0f b6       	in	r0, 0x3f	; 63
    18fe:	0f 92       	push	r0
    1900:	11 24       	eor	r1, r1
    1902:	2f 93       	push	r18
    1904:	3f 93       	push	r19
    1906:	4f 93       	push	r20
    1908:	5f 93       	push	r21
    190a:	6f 93       	push	r22
    190c:	7f 93       	push	r23
    190e:	8f 93       	push	r24
    1910:	9f 93       	push	r25
    1912:	af 93       	push	r26
    1914:	bf 93       	push	r27
    1916:	ef 93       	push	r30
    1918:	ff 93       	push	r31
    191a:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    191e:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1922:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1926:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    192a:	c9 01       	movw	r24, r18
    192c:	03 2e       	mov	r0, r19
    192e:	00 0c       	add	r0, r0
    1930:	aa 0b       	sbc	r26, r26
    1932:	bb 0b       	sbc	r27, r27
    1934:	dc 01       	movw	r26, r24
    1936:	99 27       	eor	r25, r25
    1938:	88 27       	eor	r24, r24
    193a:	60 e0       	ldi	r22, 0x00	; 0
    193c:	70 e0       	ldi	r23, 0x00	; 0
    193e:	84 2b       	or	r24, r20
    1940:	95 2b       	or	r25, r21
    1942:	a6 2b       	or	r26, r22
    1944:	b7 2b       	or	r27, r23
    1946:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    194a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    194e:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    1952:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1956:	b0 9b       	sbis	0x16, 0	; 22
    1958:	1b c0       	rjmp	.+54     	; 0x1990 <__vector_22+0x98>
    195a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    195e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1962:	c9 01       	movw	r24, r18
    1964:	01 96       	adiw	r24, 0x01	; 1
    1966:	09 2e       	mov	r0, r25
    1968:	00 0c       	add	r0, r0
    196a:	aa 0b       	sbc	r26, r26
    196c:	bb 0b       	sbc	r27, r27
    196e:	dc 01       	movw	r26, r24
    1970:	99 27       	eor	r25, r25
    1972:	88 27       	eor	r24, r24
    1974:	60 e0       	ldi	r22, 0x00	; 0
    1976:	70 e0       	ldi	r23, 0x00	; 0
    1978:	84 2b       	or	r24, r20
    197a:	95 2b       	or	r25, r21
    197c:	a6 2b       	or	r26, r22
    197e:	b7 2b       	or	r27, r23
    1980:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <timestamp>
    1984:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <timestamp+0x1>
    1988:	a0 93 22 01 	sts	0x0122, r26	; 0x800122 <timestamp+0x2>
    198c:	b0 93 23 01 	sts	0x0123, r27	; 0x800123 <timestamp+0x3>
    1990:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x22>
    1994:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x23>
    1998:	30 97       	sbiw	r30, 0x00	; 0
    199a:	39 f0       	breq	.+14     	; 0x19aa <__vector_22+0xb2>
    199c:	61 e1       	ldi	r22, 0x11	; 17
    199e:	70 e0       	ldi	r23, 0x00	; 0
    19a0:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x22>
    19a4:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x23>
    19a8:	09 95       	icall
    19aa:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    19ae:	ff 91       	pop	r31
    19b0:	ef 91       	pop	r30
    19b2:	bf 91       	pop	r27
    19b4:	af 91       	pop	r26
    19b6:	9f 91       	pop	r25
    19b8:	8f 91       	pop	r24
    19ba:	7f 91       	pop	r23
    19bc:	6f 91       	pop	r22
    19be:	5f 91       	pop	r21
    19c0:	4f 91       	pop	r20
    19c2:	3f 91       	pop	r19
    19c4:	2f 91       	pop	r18
    19c6:	0f 90       	pop	r0
    19c8:	0f be       	out	0x3f, r0	; 63
    19ca:	0f 90       	pop	r0
    19cc:	1f 90       	pop	r1
    19ce:	18 95       	reti

000019d0 <enqueueByDeadline>:
    19d0:	ef 92       	push	r14
    19d2:	ff 92       	push	r15
    19d4:	0f 93       	push	r16
    19d6:	1f 93       	push	r17
    19d8:	cf 93       	push	r28
    19da:	df 93       	push	r29
    19dc:	7b 01       	movw	r14, r22
    19de:	eb 01       	movw	r28, r22
    19e0:	a8 81       	ld	r26, Y
    19e2:	b9 81       	ldd	r27, Y+1	; 0x01
    19e4:	10 97       	sbiw	r26, 0x00	; 0
    19e6:	61 f1       	breq	.+88     	; 0x1a40 <enqueueByDeadline+0x70>
    19e8:	fc 01       	movw	r30, r24
    19ea:	06 81       	ldd	r16, Z+6	; 0x06
    19ec:	17 81       	ldd	r17, Z+7	; 0x07
    19ee:	20 85       	ldd	r18, Z+8	; 0x08
    19f0:	31 85       	ldd	r19, Z+9	; 0x09
    19f2:	16 96       	adiw	r26, 0x06	; 6
    19f4:	4d 91       	ld	r20, X+
    19f6:	5d 91       	ld	r21, X+
    19f8:	6d 91       	ld	r22, X+
    19fa:	7c 91       	ld	r23, X
    19fc:	19 97       	sbiw	r26, 0x09	; 9
    19fe:	04 17       	cp	r16, r20
    1a00:	15 07       	cpc	r17, r21
    1a02:	26 07       	cpc	r18, r22
    1a04:	37 07       	cpc	r19, r23
    1a06:	14 f4       	brge	.+4      	; 0x1a0c <enqueueByDeadline+0x3c>
    1a08:	1b c0       	rjmp	.+54     	; 0x1a40 <enqueueByDeadline+0x70>
    1a0a:	df 01       	movw	r26, r30
    1a0c:	ed 91       	ld	r30, X+
    1a0e:	fc 91       	ld	r31, X
    1a10:	11 97       	sbiw	r26, 0x01	; 1
    1a12:	30 97       	sbiw	r30, 0x00	; 0
    1a14:	49 f0       	breq	.+18     	; 0x1a28 <enqueueByDeadline+0x58>
    1a16:	46 81       	ldd	r20, Z+6	; 0x06
    1a18:	57 81       	ldd	r21, Z+7	; 0x07
    1a1a:	60 85       	ldd	r22, Z+8	; 0x08
    1a1c:	71 85       	ldd	r23, Z+9	; 0x09
    1a1e:	04 17       	cp	r16, r20
    1a20:	15 07       	cpc	r17, r21
    1a22:	26 07       	cpc	r18, r22
    1a24:	37 07       	cpc	r19, r23
    1a26:	8c f7       	brge	.-30     	; 0x1a0a <enqueueByDeadline+0x3a>
    1a28:	ec 01       	movw	r28, r24
    1a2a:	f9 83       	std	Y+1, r31	; 0x01
    1a2c:	e8 83       	st	Y, r30
    1a2e:	10 97       	sbiw	r26, 0x00	; 0
    1a30:	21 f4       	brne	.+8      	; 0x1a3a <enqueueByDeadline+0x6a>
    1a32:	f7 01       	movw	r30, r14
    1a34:	91 83       	std	Z+1, r25	; 0x01
    1a36:	80 83       	st	Z, r24
    1a38:	07 c0       	rjmp	.+14     	; 0x1a48 <enqueueByDeadline+0x78>
    1a3a:	8d 93       	st	X+, r24
    1a3c:	9c 93       	st	X, r25
    1a3e:	04 c0       	rjmp	.+8      	; 0x1a48 <enqueueByDeadline+0x78>
    1a40:	ec 01       	movw	r28, r24
    1a42:	b9 83       	std	Y+1, r27	; 0x01
    1a44:	a8 83       	st	Y, r26
    1a46:	f5 cf       	rjmp	.-22     	; 0x1a32 <enqueueByDeadline+0x62>
    1a48:	df 91       	pop	r29
    1a4a:	cf 91       	pop	r28
    1a4c:	1f 91       	pop	r17
    1a4e:	0f 91       	pop	r16
    1a50:	ff 90       	pop	r15
    1a52:	ef 90       	pop	r14
    1a54:	08 95       	ret

00001a56 <enqueueByBaseline>:
    1a56:	ef 92       	push	r14
    1a58:	ff 92       	push	r15
    1a5a:	0f 93       	push	r16
    1a5c:	1f 93       	push	r17
    1a5e:	cf 93       	push	r28
    1a60:	df 93       	push	r29
    1a62:	7b 01       	movw	r14, r22
    1a64:	eb 01       	movw	r28, r22
    1a66:	a8 81       	ld	r26, Y
    1a68:	b9 81       	ldd	r27, Y+1	; 0x01
    1a6a:	10 97       	sbiw	r26, 0x00	; 0
    1a6c:	61 f1       	breq	.+88     	; 0x1ac6 <enqueueByBaseline+0x70>
    1a6e:	fc 01       	movw	r30, r24
    1a70:	02 81       	ldd	r16, Z+2	; 0x02
    1a72:	13 81       	ldd	r17, Z+3	; 0x03
    1a74:	24 81       	ldd	r18, Z+4	; 0x04
    1a76:	35 81       	ldd	r19, Z+5	; 0x05
    1a78:	12 96       	adiw	r26, 0x02	; 2
    1a7a:	4d 91       	ld	r20, X+
    1a7c:	5d 91       	ld	r21, X+
    1a7e:	6d 91       	ld	r22, X+
    1a80:	7c 91       	ld	r23, X
    1a82:	15 97       	sbiw	r26, 0x05	; 5
    1a84:	04 17       	cp	r16, r20
    1a86:	15 07       	cpc	r17, r21
    1a88:	26 07       	cpc	r18, r22
    1a8a:	37 07       	cpc	r19, r23
    1a8c:	14 f4       	brge	.+4      	; 0x1a92 <enqueueByBaseline+0x3c>
    1a8e:	1b c0       	rjmp	.+54     	; 0x1ac6 <enqueueByBaseline+0x70>
    1a90:	df 01       	movw	r26, r30
    1a92:	ed 91       	ld	r30, X+
    1a94:	fc 91       	ld	r31, X
    1a96:	11 97       	sbiw	r26, 0x01	; 1
    1a98:	30 97       	sbiw	r30, 0x00	; 0
    1a9a:	49 f0       	breq	.+18     	; 0x1aae <enqueueByBaseline+0x58>
    1a9c:	42 81       	ldd	r20, Z+2	; 0x02
    1a9e:	53 81       	ldd	r21, Z+3	; 0x03
    1aa0:	64 81       	ldd	r22, Z+4	; 0x04
    1aa2:	75 81       	ldd	r23, Z+5	; 0x05
    1aa4:	04 17       	cp	r16, r20
    1aa6:	15 07       	cpc	r17, r21
    1aa8:	26 07       	cpc	r18, r22
    1aaa:	37 07       	cpc	r19, r23
    1aac:	8c f7       	brge	.-30     	; 0x1a90 <enqueueByBaseline+0x3a>
    1aae:	ec 01       	movw	r28, r24
    1ab0:	f9 83       	std	Y+1, r31	; 0x01
    1ab2:	e8 83       	st	Y, r30
    1ab4:	10 97       	sbiw	r26, 0x00	; 0
    1ab6:	21 f4       	brne	.+8      	; 0x1ac0 <enqueueByBaseline+0x6a>
    1ab8:	f7 01       	movw	r30, r14
    1aba:	91 83       	std	Z+1, r25	; 0x01
    1abc:	80 83       	st	Z, r24
    1abe:	07 c0       	rjmp	.+14     	; 0x1ace <enqueueByBaseline+0x78>
    1ac0:	8d 93       	st	X+, r24
    1ac2:	9c 93       	st	X, r25
    1ac4:	04 c0       	rjmp	.+8      	; 0x1ace <enqueueByBaseline+0x78>
    1ac6:	ec 01       	movw	r28, r24
    1ac8:	b9 83       	std	Y+1, r27	; 0x01
    1aca:	a8 83       	st	Y, r26
    1acc:	f5 cf       	rjmp	.-22     	; 0x1ab8 <enqueueByBaseline+0x62>
    1ace:	df 91       	pop	r29
    1ad0:	cf 91       	pop	r28
    1ad2:	1f 91       	pop	r17
    1ad4:	0f 91       	pop	r16
    1ad6:	ff 90       	pop	r15
    1ad8:	ef 90       	pop	r14
    1ada:	08 95       	ret

00001adc <dequeue>:
    1adc:	dc 01       	movw	r26, r24
    1ade:	ed 91       	ld	r30, X+
    1ae0:	fc 91       	ld	r31, X
    1ae2:	11 97       	sbiw	r26, 0x01	; 1
    1ae4:	30 97       	sbiw	r30, 0x00	; 0
    1ae6:	59 f4       	brne	.+22     	; 0x1afe <dequeue+0x22>
    1ae8:	8f ef       	ldi	r24, 0xFF	; 255
    1aea:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__DATA_REGION_ORIGIN__+0x8c>
    1aee:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__DATA_REGION_ORIGIN__+0x8d>
    1af2:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__DATA_REGION_ORIGIN__+0x8e>
    1af6:	81 e0       	ldi	r24, 0x01	; 1
    1af8:	83 bf       	out	0x33, r24	; 51
    1afa:	88 95       	sleep
    1afc:	fd cf       	rjmp	.-6      	; 0x1af8 <dequeue+0x1c>
    1afe:	20 81       	ld	r18, Z
    1b00:	31 81       	ldd	r19, Z+1	; 0x01
    1b02:	2d 93       	st	X+, r18
    1b04:	3c 93       	st	X, r19
    1b06:	cf 01       	movw	r24, r30
    1b08:	08 95       	ret

00001b0a <__vector_9>:
    1b0a:	1f 92       	push	r1
    1b0c:	0f 92       	push	r0
    1b0e:	0f b6       	in	r0, 0x3f	; 63
    1b10:	0f 92       	push	r0
    1b12:	11 24       	eor	r1, r1
    1b14:	2f 93       	push	r18
    1b16:	3f 93       	push	r19
    1b18:	4f 93       	push	r20
    1b1a:	5f 93       	push	r21
    1b1c:	6f 93       	push	r22
    1b1e:	7f 93       	push	r23
    1b20:	8f 93       	push	r24
    1b22:	9f 93       	push	r25
    1b24:	ef 93       	push	r30
    1b26:	ff 93       	push	r31
    1b28:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1b2c:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1b30:	01 96       	adiw	r24, 0x01	; 1
    1b32:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
    1b36:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
    1b3a:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1b3e:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1b42:	30 97       	sbiw	r30, 0x00	; 0
    1b44:	01 f1       	breq	.+64     	; 0x1b86 <__vector_9+0x7c>
    1b46:	42 81       	ldd	r20, Z+2	; 0x02
    1b48:	53 81       	ldd	r21, Z+3	; 0x03
    1b4a:	64 81       	ldd	r22, Z+4	; 0x04
    1b4c:	75 81       	ldd	r23, Z+5	; 0x05
    1b4e:	86 17       	cp	r24, r22
    1b50:	97 07       	cpc	r25, r23
    1b52:	c9 f4       	brne	.+50     	; 0x1b86 <__vector_9+0x7c>
    1b54:	ca 01       	movw	r24, r20
    1b56:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b5a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b5e:	42 1b       	sub	r20, r18
    1b60:	53 0b       	sbc	r21, r19
    1b62:	41 30       	cpi	r20, 0x01	; 1
    1b64:	51 05       	cpc	r21, r1
    1b66:	29 f4       	brne	.+10     	; 0x1b72 <__vector_9+0x68>
    1b68:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1b6c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1b70:	01 96       	adiw	r24, 0x01	; 1
    1b72:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1b76:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1b7a:	ef e6       	ldi	r30, 0x6F	; 111
    1b7c:	f0 e0       	ldi	r31, 0x00	; 0
    1b7e:	80 81       	ld	r24, Z
    1b80:	82 60       	ori	r24, 0x02	; 2
    1b82:	80 83       	st	Z, r24
    1b84:	05 c0       	rjmp	.+10     	; 0x1b90 <__vector_9+0x86>
    1b86:	ef e6       	ldi	r30, 0x6F	; 111
    1b88:	f0 e0       	ldi	r31, 0x00	; 0
    1b8a:	80 81       	ld	r24, Z
    1b8c:	8d 7f       	andi	r24, 0xFD	; 253
    1b8e:	80 83       	st	Z, r24
    1b90:	ff 91       	pop	r31
    1b92:	ef 91       	pop	r30
    1b94:	9f 91       	pop	r25
    1b96:	8f 91       	pop	r24
    1b98:	7f 91       	pop	r23
    1b9a:	6f 91       	pop	r22
    1b9c:	5f 91       	pop	r21
    1b9e:	4f 91       	pop	r20
    1ba0:	3f 91       	pop	r19
    1ba2:	2f 91       	pop	r18
    1ba4:	0f 90       	pop	r0
    1ba6:	0f be       	out	0x3f, r0	; 63
    1ba8:	0f 90       	pop	r0
    1baa:	1f 90       	pop	r1
    1bac:	18 95       	reti

00001bae <__vector_7>:
    1bae:	1f 92       	push	r1
    1bb0:	0f 92       	push	r0
    1bb2:	0f b6       	in	r0, 0x3f	; 63
    1bb4:	0f 92       	push	r0
    1bb6:	11 24       	eor	r1, r1
    1bb8:	cf 92       	push	r12
    1bba:	df 92       	push	r13
    1bbc:	ef 92       	push	r14
    1bbe:	ff 92       	push	r15
    1bc0:	2f 93       	push	r18
    1bc2:	3f 93       	push	r19
    1bc4:	4f 93       	push	r20
    1bc6:	5f 93       	push	r21
    1bc8:	6f 93       	push	r22
    1bca:	7f 93       	push	r23
    1bcc:	8f 93       	push	r24
    1bce:	9f 93       	push	r25
    1bd0:	af 93       	push	r26
    1bd2:	bf 93       	push	r27
    1bd4:	ef 93       	push	r30
    1bd6:	ff 93       	push	r31
    1bd8:	c0 90 1e 01 	lds	r12, 0x011E	; 0x80011e <__data_end>
    1bdc:	d0 90 1f 01 	lds	r13, 0x011F	; 0x80011f <__data_end+0x1>
    1be0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1be4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1be8:	b0 99       	sbic	0x16, 0	; 22
    1bea:	0f c0       	rjmp	.+30     	; 0x1c0a <__vector_7+0x5c>
    1bec:	0d 2c       	mov	r0, r13
    1bee:	00 0c       	add	r0, r0
    1bf0:	ee 08       	sbc	r14, r14
    1bf2:	ff 08       	sbc	r15, r15
    1bf4:	d6 01       	movw	r26, r12
    1bf6:	99 27       	eor	r25, r25
    1bf8:	88 27       	eor	r24, r24
    1bfa:	69 01       	movw	r12, r18
    1bfc:	e1 2c       	mov	r14, r1
    1bfe:	f1 2c       	mov	r15, r1
    1c00:	c8 2a       	or	r12, r24
    1c02:	d9 2a       	or	r13, r25
    1c04:	ea 2a       	or	r14, r26
    1c06:	fb 2a       	or	r15, r27
    1c08:	15 c0       	rjmp	.+42     	; 0x1c34 <__vector_7+0x86>
    1c0a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1c0e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1c12:	8f ef       	ldi	r24, 0xFF	; 255
    1c14:	c8 1a       	sub	r12, r24
    1c16:	d8 0a       	sbc	r13, r24
    1c18:	0d 2c       	mov	r0, r13
    1c1a:	00 0c       	add	r0, r0
    1c1c:	ee 08       	sbc	r14, r14
    1c1e:	ff 08       	sbc	r15, r15
    1c20:	d6 01       	movw	r26, r12
    1c22:	99 27       	eor	r25, r25
    1c24:	88 27       	eor	r24, r24
    1c26:	69 01       	movw	r12, r18
    1c28:	e1 2c       	mov	r14, r1
    1c2a:	f1 2c       	mov	r15, r1
    1c2c:	c8 2a       	or	r12, r24
    1c2e:	d9 2a       	or	r13, r25
    1c30:	ea 2a       	or	r14, r26
    1c32:	fb 2a       	or	r15, r27
    1c34:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1c38:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1c3c:	30 97       	sbiw	r30, 0x00	; 0
    1c3e:	09 f4       	brne	.+2      	; 0x1c42 <__vector_7+0x94>
    1c40:	42 c0       	rjmp	.+132    	; 0x1cc6 <__vector_7+0x118>
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	a4 81       	ldd	r26, Z+4	; 0x04
    1c48:	b5 81       	ldd	r27, Z+5	; 0x05
    1c4a:	8c 19       	sub	r24, r12
    1c4c:	9d 09       	sbc	r25, r13
    1c4e:	ae 09       	sbc	r26, r14
    1c50:	bf 09       	sbc	r27, r15
    1c52:	18 16       	cp	r1, r24
    1c54:	19 06       	cpc	r1, r25
    1c56:	1a 06       	cpc	r1, r26
    1c58:	1b 06       	cpc	r1, r27
    1c5a:	ec f1       	brlt	.+122    	; 0x1cd6 <__vector_7+0x128>
    1c5c:	84 e2       	ldi	r24, 0x24	; 36
    1c5e:	91 e0       	ldi	r25, 0x01	; 1
    1c60:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <dequeue>
    1c64:	66 e2       	ldi	r22, 0x26	; 38
    1c66:	71 e0       	ldi	r23, 0x01	; 1
    1c68:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <enqueueByDeadline>
    1c6c:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1c70:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1c74:	30 97       	sbiw	r30, 0x00	; 0
    1c76:	39 f1       	breq	.+78     	; 0x1cc6 <__vector_7+0x118>
    1c78:	82 81       	ldd	r24, Z+2	; 0x02
    1c7a:	93 81       	ldd	r25, Z+3	; 0x03
    1c7c:	a4 81       	ldd	r26, Z+4	; 0x04
    1c7e:	b5 81       	ldd	r27, Z+5	; 0x05
    1c80:	8c 19       	sub	r24, r12
    1c82:	9d 09       	sbc	r25, r13
    1c84:	ae 09       	sbc	r26, r14
    1c86:	bf 09       	sbc	r27, r15
    1c88:	18 16       	cp	r1, r24
    1c8a:	19 06       	cpc	r1, r25
    1c8c:	1a 06       	cpc	r1, r26
    1c8e:	1b 06       	cpc	r1, r27
    1c90:	2c f7       	brge	.-54     	; 0x1c5c <__vector_7+0xae>
    1c92:	21 c0       	rjmp	.+66     	; 0x1cd6 <__vector_7+0x128>
    1c94:	9c 01       	movw	r18, r24
    1c96:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1c9a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1c9e:	84 1b       	sub	r24, r20
    1ca0:	95 0b       	sbc	r25, r21
    1ca2:	01 97       	sbiw	r24, 0x01	; 1
    1ca4:	31 f4       	brne	.+12     	; 0x1cb2 <__vector_7+0x104>
    1ca6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1caa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1cae:	2f 5f       	subi	r18, 0xFF	; 255
    1cb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1cb6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1cba:	ef e6       	ldi	r30, 0x6F	; 111
    1cbc:	f0 e0       	ldi	r31, 0x00	; 0
    1cbe:	80 81       	ld	r24, Z
    1cc0:	82 60       	ori	r24, 0x02	; 2
    1cc2:	80 83       	st	Z, r24
    1cc4:	05 c0       	rjmp	.+10     	; 0x1cd0 <__vector_7+0x122>
    1cc6:	ef e6       	ldi	r30, 0x6F	; 111
    1cc8:	f0 e0       	ldi	r31, 0x00	; 0
    1cca:	80 81       	ld	r24, Z
    1ccc:	8d 7f       	andi	r24, 0xFD	; 253
    1cce:	80 83       	st	Z, r24
    1cd0:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    1cd4:	0c c0       	rjmp	.+24     	; 0x1cee <__vector_7+0x140>
    1cd6:	82 81       	ldd	r24, Z+2	; 0x02
    1cd8:	93 81       	ldd	r25, Z+3	; 0x03
    1cda:	a4 81       	ldd	r26, Z+4	; 0x04
    1cdc:	b5 81       	ldd	r27, Z+5	; 0x05
    1cde:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1ce2:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1ce6:	2a 17       	cp	r18, r26
    1ce8:	3b 07       	cpc	r19, r27
    1cea:	69 f7       	brne	.-38     	; 0x1cc6 <__vector_7+0x118>
    1cec:	d3 cf       	rjmp	.-90     	; 0x1c94 <__vector_7+0xe6>
    1cee:	ff 91       	pop	r31
    1cf0:	ef 91       	pop	r30
    1cf2:	bf 91       	pop	r27
    1cf4:	af 91       	pop	r26
    1cf6:	9f 91       	pop	r25
    1cf8:	8f 91       	pop	r24
    1cfa:	7f 91       	pop	r23
    1cfc:	6f 91       	pop	r22
    1cfe:	5f 91       	pop	r21
    1d00:	4f 91       	pop	r20
    1d02:	3f 91       	pop	r19
    1d04:	2f 91       	pop	r18
    1d06:	ff 90       	pop	r15
    1d08:	ef 90       	pop	r14
    1d0a:	df 90       	pop	r13
    1d0c:	cf 90       	pop	r12
    1d0e:	0f 90       	pop	r0
    1d10:	0f be       	out	0x3f, r0	; 63
    1d12:	0f 90       	pop	r0
    1d14:	1f 90       	pop	r1
    1d16:	18 95       	reti

00001d18 <async>:
    1d18:	3f 92       	push	r3
    1d1a:	4f 92       	push	r4
    1d1c:	5f 92       	push	r5
    1d1e:	6f 92       	push	r6
    1d20:	7f 92       	push	r7
    1d22:	8f 92       	push	r8
    1d24:	9f 92       	push	r9
    1d26:	af 92       	push	r10
    1d28:	bf 92       	push	r11
    1d2a:	cf 92       	push	r12
    1d2c:	df 92       	push	r13
    1d2e:	ef 92       	push	r14
    1d30:	ff 92       	push	r15
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	cf 93       	push	r28
    1d38:	df 93       	push	r29
    1d3a:	2b 01       	movw	r4, r22
    1d3c:	3c 01       	movw	r6, r24
    1d3e:	49 01       	movw	r8, r18
    1d40:	5a 01       	movw	r10, r20
    1d42:	8f b7       	in	r24, 0x3f	; 63
    1d44:	80 78       	andi	r24, 0x80	; 128
    1d46:	38 2e       	mov	r3, r24
    1d48:	f8 94       	cli
    1d4a:	86 e0       	ldi	r24, 0x06	; 6
    1d4c:	91 e0       	ldi	r25, 0x01	; 1
    1d4e:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <dequeue>
    1d52:	ec 01       	movw	r28, r24
    1d54:	1b 87       	std	Y+11, r17	; 0x0b
    1d56:	0a 87       	std	Y+10, r16	; 0x0a
    1d58:	fd 86       	std	Y+13, r15	; 0x0d
    1d5a:	ec 86       	std	Y+12, r14	; 0x0c
    1d5c:	df 86       	std	Y+15, r13	; 0x0f
    1d5e:	ce 86       	std	Y+14, r12	; 0x0e
    1d60:	33 20       	and	r3, r3
    1d62:	61 f0       	breq	.+24     	; 0x1d7c <async+0x64>
    1d64:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1d68:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1d6c:	02 80       	ldd	r0, Z+2	; 0x02
    1d6e:	f3 81       	ldd	r31, Z+3	; 0x03
    1d70:	e0 2d       	mov	r30, r0
    1d72:	82 81       	ldd	r24, Z+2	; 0x02
    1d74:	93 81       	ldd	r25, Z+3	; 0x03
    1d76:	a4 81       	ldd	r26, Z+4	; 0x04
    1d78:	b5 81       	ldd	r27, Z+5	; 0x05
    1d7a:	08 c0       	rjmp	.+16     	; 0x1d8c <async+0x74>
    1d7c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <timestamp>
    1d80:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <timestamp+0x1>
    1d84:	a0 91 22 01 	lds	r26, 0x0122	; 0x800122 <timestamp+0x2>
    1d88:	b0 91 23 01 	lds	r27, 0x0123	; 0x800123 <timestamp+0x3>
    1d8c:	48 0e       	add	r4, r24
    1d8e:	59 1e       	adc	r5, r25
    1d90:	6a 1e       	adc	r6, r26
    1d92:	7b 1e       	adc	r7, r27
    1d94:	4a 82       	std	Y+2, r4	; 0x02
    1d96:	5b 82       	std	Y+3, r5	; 0x03
    1d98:	6c 82       	std	Y+4, r6	; 0x04
    1d9a:	7d 82       	std	Y+5, r7	; 0x05
    1d9c:	18 14       	cp	r1, r8
    1d9e:	19 04       	cpc	r1, r9
    1da0:	1a 04       	cpc	r1, r10
    1da2:	1b 04       	cpc	r1, r11
    1da4:	44 f0       	brlt	.+16     	; 0x1db6 <async+0x9e>
    1da6:	0f 2e       	mov	r0, r31
    1da8:	88 24       	eor	r8, r8
    1daa:	8a 94       	dec	r8
    1dac:	98 2c       	mov	r9, r8
    1dae:	a8 2c       	mov	r10, r8
    1db0:	ff e7       	ldi	r31, 0x7F	; 127
    1db2:	bf 2e       	mov	r11, r31
    1db4:	f0 2d       	mov	r31, r0
    1db6:	84 0c       	add	r8, r4
    1db8:	95 1c       	adc	r9, r5
    1dba:	a6 1c       	adc	r10, r6
    1dbc:	b7 1c       	adc	r11, r7
    1dbe:	8e 82       	std	Y+6, r8	; 0x06
    1dc0:	9f 82       	std	Y+7, r9	; 0x07
    1dc2:	a8 86       	std	Y+8, r10	; 0x08
    1dc4:	b9 86       	std	Y+9, r11	; 0x09
    1dc6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
    1dca:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
    1dce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1dd2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1dd6:	b0 99       	sbic	0x16, 0	; 22
    1dd8:	0e c0       	rjmp	.+28     	; 0x1df6 <async+0xde>
    1dda:	09 2e       	mov	r0, r25
    1ddc:	00 0c       	add	r0, r0
    1dde:	aa 0b       	sbc	r26, r26
    1de0:	bb 0b       	sbc	r27, r27
    1de2:	dc 01       	movw	r26, r24
    1de4:	99 27       	eor	r25, r25
    1de6:	88 27       	eor	r24, r24
    1de8:	60 e0       	ldi	r22, 0x00	; 0
    1dea:	70 e0       	ldi	r23, 0x00	; 0
    1dec:	84 2b       	or	r24, r20
    1dee:	95 2b       	or	r25, r21
    1df0:	a6 2b       	or	r26, r22
    1df2:	b7 2b       	or	r27, r23
    1df4:	13 c0       	rjmp	.+38     	; 0x1e1c <async+0x104>
    1df6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1dfa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1dfe:	01 96       	adiw	r24, 0x01	; 1
    1e00:	09 2e       	mov	r0, r25
    1e02:	00 0c       	add	r0, r0
    1e04:	aa 0b       	sbc	r26, r26
    1e06:	bb 0b       	sbc	r27, r27
    1e08:	dc 01       	movw	r26, r24
    1e0a:	99 27       	eor	r25, r25
    1e0c:	88 27       	eor	r24, r24
    1e0e:	a9 01       	movw	r20, r18
    1e10:	60 e0       	ldi	r22, 0x00	; 0
    1e12:	70 e0       	ldi	r23, 0x00	; 0
    1e14:	84 2b       	or	r24, r20
    1e16:	95 2b       	or	r25, r21
    1e18:	a6 2b       	or	r26, r22
    1e1a:	b7 2b       	or	r27, r23
    1e1c:	48 1a       	sub	r4, r24
    1e1e:	59 0a       	sbc	r5, r25
    1e20:	6a 0a       	sbc	r6, r26
    1e22:	7b 0a       	sbc	r7, r27
    1e24:	14 14       	cp	r1, r4
    1e26:	15 04       	cpc	r1, r5
    1e28:	16 04       	cpc	r1, r6
    1e2a:	17 04       	cpc	r1, r7
    1e2c:	ac f5       	brge	.+106    	; 0x1e98 <async+0x180>
    1e2e:	64 e2       	ldi	r22, 0x24	; 36
    1e30:	71 e0       	ldi	r23, 0x01	; 1
    1e32:	ce 01       	movw	r24, r28
    1e34:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <enqueueByBaseline>
    1e38:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <timerQ>
    1e3c:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <timerQ+0x1>
    1e40:	30 97       	sbiw	r30, 0x00	; 0
    1e42:	21 f1       	breq	.+72     	; 0x1e8c <async+0x174>
    1e44:	82 81       	ldd	r24, Z+2	; 0x02
    1e46:	93 81       	ldd	r25, Z+3	; 0x03
    1e48:	a4 81       	ldd	r26, Z+4	; 0x04
    1e4a:	b5 81       	ldd	r27, Z+5	; 0x05
    1e4c:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <__data_end>
    1e50:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <__data_end+0x1>
    1e54:	2a 17       	cp	r18, r26
    1e56:	3b 07       	cpc	r19, r27
    1e58:	c9 f4       	brne	.+50     	; 0x1e8c <async+0x174>
    1e5a:	9c 01       	movw	r18, r24
    1e5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1e60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1e64:	84 1b       	sub	r24, r20
    1e66:	95 0b       	sbc	r25, r21
    1e68:	01 97       	sbiw	r24, 0x01	; 1
    1e6a:	31 f4       	brne	.+12     	; 0x1e78 <async+0x160>
    1e6c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1e70:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1e74:	2f 5f       	subi	r18, 0xFF	; 255
    1e76:	3f 4f       	sbci	r19, 0xFF	; 255
    1e78:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1e7c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1e80:	ef e6       	ldi	r30, 0x6F	; 111
    1e82:	f0 e0       	ldi	r31, 0x00	; 0
    1e84:	80 81       	ld	r24, Z
    1e86:	82 60       	ori	r24, 0x02	; 2
    1e88:	80 83       	st	Z, r24
    1e8a:	41 c0       	rjmp	.+130    	; 0x1f0e <async+0x1f6>
    1e8c:	ef e6       	ldi	r30, 0x6F	; 111
    1e8e:	f0 e0       	ldi	r31, 0x00	; 0
    1e90:	80 81       	ld	r24, Z
    1e92:	8d 7f       	andi	r24, 0xFD	; 253
    1e94:	80 83       	st	Z, r24
    1e96:	3b c0       	rjmp	.+118    	; 0x1f0e <async+0x1f6>
    1e98:	66 e2       	ldi	r22, 0x26	; 38
    1e9a:	71 e0       	ldi	r23, 0x01	; 1
    1e9c:	ce 01       	movw	r24, r28
    1e9e:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <enqueueByDeadline>
    1ea2:	33 20       	and	r3, r3
    1ea4:	b9 f1       	breq	.+110    	; 0x1f14 <async+0x1fc>
    1ea6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1eaa:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1eae:	00 97       	sbiw	r24, 0x00	; 0
    1eb0:	81 f1       	breq	.+96     	; 0x1f12 <async+0x1fa>
    1eb2:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1eb6:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1eba:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <msgQ>
    1ebe:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <msgQ+0x1>
    1ec2:	02 81       	ldd	r16, Z+2	; 0x02
    1ec4:	13 81       	ldd	r17, Z+3	; 0x03
    1ec6:	d9 01       	movw	r26, r18
    1ec8:	16 96       	adiw	r26, 0x06	; 6
    1eca:	4d 91       	ld	r20, X+
    1ecc:	5d 91       	ld	r21, X+
    1ece:	6d 91       	ld	r22, X+
    1ed0:	7c 91       	ld	r23, X
    1ed2:	19 97       	sbiw	r26, 0x09	; 9
    1ed4:	d8 01       	movw	r26, r16
    1ed6:	16 96       	adiw	r26, 0x06	; 6
    1ed8:	0d 91       	ld	r16, X+
    1eda:	1d 91       	ld	r17, X+
    1edc:	2d 91       	ld	r18, X+
    1ede:	3c 91       	ld	r19, X
    1ee0:	19 97       	sbiw	r26, 0x09	; 9
    1ee2:	40 1b       	sub	r20, r16
    1ee4:	51 0b       	sbc	r21, r17
    1ee6:	62 0b       	sbc	r22, r18
    1ee8:	73 0b       	sbc	r23, r19
    1eea:	9a f4       	brpl	.+38     	; 0x1f12 <async+0x1fa>
    1eec:	dc 01       	movw	r26, r24
    1eee:	2d 91       	ld	r18, X+
    1ef0:	3c 91       	ld	r19, X
    1ef2:	11 97       	sbiw	r26, 0x01	; 1
    1ef4:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1ef8:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1efc:	ed 93       	st	X+, r30
    1efe:	fc 93       	st	X, r31
    1f00:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1f04:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1f08:	0e 94 f5 04 	call	0x9ea	; 0x9ea <dispatch>
    1f0c:	02 c0       	rjmp	.+4      	; 0x1f12 <async+0x1fa>
    1f0e:	33 20       	and	r3, r3
    1f10:	09 f0       	breq	.+2      	; 0x1f14 <async+0x1fc>
    1f12:	78 94       	sei
    1f14:	ce 01       	movw	r24, r28
    1f16:	df 91       	pop	r29
    1f18:	cf 91       	pop	r28
    1f1a:	1f 91       	pop	r17
    1f1c:	0f 91       	pop	r16
    1f1e:	ff 90       	pop	r15
    1f20:	ef 90       	pop	r14
    1f22:	df 90       	pop	r13
    1f24:	cf 90       	pop	r12
    1f26:	bf 90       	pop	r11
    1f28:	af 90       	pop	r10
    1f2a:	9f 90       	pop	r9
    1f2c:	8f 90       	pop	r8
    1f2e:	7f 90       	pop	r7
    1f30:	6f 90       	pop	r6
    1f32:	5f 90       	pop	r5
    1f34:	4f 90       	pop	r4
    1f36:	3f 90       	pop	r3
    1f38:	08 95       	ret

00001f3a <sync>:
    1f3a:	cf 92       	push	r12
    1f3c:	df 92       	push	r13
    1f3e:	ef 92       	push	r14
    1f40:	ff 92       	push	r15
    1f42:	0f 93       	push	r16
    1f44:	1f 93       	push	r17
    1f46:	cf 93       	push	r28
    1f48:	df 93       	push	r29
    1f4a:	ec 01       	movw	r28, r24
    1f4c:	7b 01       	movw	r14, r22
    1f4e:	6a 01       	movw	r12, r20
    1f50:	1f b7       	in	r17, 0x3f	; 63
    1f52:	10 78       	andi	r17, 0x80	; 128
    1f54:	f8 94       	cli
    1f56:	a8 81       	ld	r26, Y
    1f58:	b9 81       	ldd	r27, Y+1	; 0x01
    1f5a:	10 97       	sbiw	r26, 0x00	; 0
    1f5c:	61 f1       	breq	.+88     	; 0x1fb6 <sync+0x7c>
    1f5e:	14 96       	adiw	r26, 0x04	; 4
    1f60:	ed 91       	ld	r30, X+
    1f62:	fc 91       	ld	r31, X
    1f64:	15 97       	sbiw	r26, 0x05	; 5
    1f66:	30 97       	sbiw	r30, 0x00	; 0
    1f68:	41 f0       	breq	.+16     	; 0x1f7a <sync+0x40>
    1f6a:	a0 81       	ld	r26, Z
    1f6c:	b1 81       	ldd	r27, Z+1	; 0x01
    1f6e:	14 96       	adiw	r26, 0x04	; 4
    1f70:	ed 91       	ld	r30, X+
    1f72:	fc 91       	ld	r31, X
    1f74:	15 97       	sbiw	r26, 0x05	; 5
    1f76:	30 97       	sbiw	r30, 0x00	; 0
    1f78:	c1 f7       	brne	.-16     	; 0x1f6a <sync+0x30>
    1f7a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1f7e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1f82:	2a 17       	cp	r18, r26
    1f84:	3b 07       	cpc	r19, r27
    1f86:	21 f0       	breq	.+8      	; 0x1f90 <sync+0x56>
    1f88:	11 23       	and	r17, r17
    1f8a:	09 f4       	brne	.+2      	; 0x1f8e <sync+0x54>
    1f8c:	3d c0       	rjmp	.+122    	; 0x2008 <sync+0xce>
    1f8e:	07 c0       	rjmp	.+14     	; 0x1f9e <sync+0x64>
    1f90:	11 23       	and	r17, r17
    1f92:	09 f4       	brne	.+2      	; 0x1f96 <sync+0x5c>
    1f94:	3c c0       	rjmp	.+120    	; 0x200e <sync+0xd4>
    1f96:	78 94       	sei
    1f98:	8f ef       	ldi	r24, 0xFF	; 255
    1f9a:	9f ef       	ldi	r25, 0xFF	; 255
    1f9c:	52 c0       	rjmp	.+164    	; 0x2042 <sync+0x108>
    1f9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa2:	00 97       	sbiw	r24, 0x00	; 0
    1fa4:	d1 f1       	breq	.+116    	; 0x201a <sync+0xe0>
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	15 82       	std	Z+5, r1	; 0x05
    1faa:	14 82       	std	Z+4, r1	; 0x04
    1fac:	36 c0       	rjmp	.+108    	; 0x201a <sync+0xe0>
    1fae:	78 94       	sei
    1fb0:	80 e0       	ldi	r24, 0x00	; 0
    1fb2:	90 e0       	ldi	r25, 0x00	; 0
    1fb4:	46 c0       	rjmp	.+140    	; 0x2042 <sync+0x108>
    1fb6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1fba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    1fbe:	99 83       	std	Y+1, r25	; 0x01
    1fc0:	88 83       	st	Y, r24
    1fc2:	11 23       	and	r17, r17
    1fc4:	29 f0       	breq	.+10     	; 0x1fd0 <sync+0x96>
    1fc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc8:	9b 81       	ldd	r25, Y+3	; 0x03
    1fca:	01 97       	sbiw	r24, 0x01	; 1
    1fcc:	09 f0       	breq	.+2      	; 0x1fd0 <sync+0x96>
    1fce:	78 94       	sei
    1fd0:	b6 01       	movw	r22, r12
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	f7 01       	movw	r30, r14
    1fd6:	09 95       	icall
    1fd8:	f8 2e       	mov	r15, r24
    1fda:	09 2f       	mov	r16, r25
    1fdc:	8f b7       	in	r24, 0x3f	; 63
    1fde:	f8 94       	cli
    1fe0:	19 82       	std	Y+1, r1	; 0x01
    1fe2:	18 82       	st	Y, r1
    1fe4:	8a 81       	ldd	r24, Y+2	; 0x02
    1fe6:	9b 81       	ldd	r25, Y+3	; 0x03
    1fe8:	82 30       	cpi	r24, 0x02	; 2
    1fea:	91 05       	cpc	r25, r1
    1fec:	38 f0       	brcs	.+14     	; 0x1ffc <sync+0xc2>
    1fee:	1b 82       	std	Y+3, r1	; 0x03
    1ff0:	1a 82       	std	Y+2, r1	; 0x02
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	15 82       	std	Z+5, r1	; 0x05
    1ff6:	14 82       	std	Z+4, r1	; 0x04
    1ff8:	0e 94 f5 04 	call	0x9ea	; 0x9ea <dispatch>
    1ffc:	11 23       	and	r17, r17
    1ffe:	51 f0       	breq	.+20     	; 0x2014 <sync+0xda>
    2000:	78 94       	sei
    2002:	8f 2d       	mov	r24, r15
    2004:	90 2f       	mov	r25, r16
    2006:	1d c0       	rjmp	.+58     	; 0x2042 <sync+0x108>
    2008:	8f ef       	ldi	r24, 0xFF	; 255
    200a:	9f ef       	ldi	r25, 0xFF	; 255
    200c:	1a c0       	rjmp	.+52     	; 0x2042 <sync+0x108>
    200e:	8f ef       	ldi	r24, 0xFF	; 255
    2010:	9f ef       	ldi	r25, 0xFF	; 255
    2012:	17 c0       	rjmp	.+46     	; 0x2042 <sync+0x108>
    2014:	8f 2d       	mov	r24, r15
    2016:	90 2f       	mov	r25, r16
    2018:	14 c0       	rjmp	.+40     	; 0x2042 <sync+0x108>
    201a:	3b 83       	std	Y+3, r19	; 0x03
    201c:	2a 83       	std	Y+2, r18	; 0x02
    201e:	f9 01       	movw	r30, r18
    2020:	d5 83       	std	Z+5, r29	; 0x05
    2022:	c4 83       	std	Z+4, r28	; 0x04
    2024:	cd 01       	movw	r24, r26
    2026:	0e 94 f5 04 	call	0x9ea	; 0x9ea <dispatch>
    202a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    202e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    2032:	82 81       	ldd	r24, Z+2	; 0x02
    2034:	93 81       	ldd	r25, Z+3	; 0x03
    2036:	89 2b       	or	r24, r25
    2038:	09 f4       	brne	.+2      	; 0x203c <sync+0x102>
    203a:	b9 cf       	rjmp	.-142    	; 0x1fae <sync+0x74>
    203c:	f9 83       	std	Y+1, r31	; 0x01
    203e:	e8 83       	st	Y, r30
    2040:	c2 cf       	rjmp	.-124    	; 0x1fc6 <sync+0x8c>
    2042:	df 91       	pop	r29
    2044:	cf 91       	pop	r28
    2046:	1f 91       	pop	r17
    2048:	0f 91       	pop	r16
    204a:	ff 90       	pop	r15
    204c:	ef 90       	pop	r14
    204e:	df 90       	pop	r13
    2050:	cf 90       	pop	r12
    2052:	08 95       	ret

00002054 <run>:
    2054:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__data_start>
    2058:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__data_start+0x1>
    205c:	86 e2       	ldi	r24, 0x26	; 38
    205e:	91 e0       	ldi	r25, 0x01	; 1
    2060:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <dequeue>
    2064:	ec 01       	movw	r28, r24
    2066:	d8 01       	movw	r26, r16
    2068:	13 96       	adiw	r26, 0x03	; 3
    206a:	9c 93       	st	X, r25
    206c:	8e 93       	st	-X, r24
    206e:	12 97       	sbiw	r26, 0x02	; 2
    2070:	78 94       	sei
    2072:	4e 85       	ldd	r20, Y+14	; 0x0e
    2074:	5f 85       	ldd	r21, Y+15	; 0x0f
    2076:	6c 85       	ldd	r22, Y+12	; 0x0c
    2078:	7d 85       	ldd	r23, Y+13	; 0x0d
    207a:	8a 85       	ldd	r24, Y+10	; 0x0a
    207c:	9b 85       	ldd	r25, Y+11	; 0x0b
    207e:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <sync>
    2082:	8f b7       	in	r24, 0x3f	; 63
    2084:	f8 94       	cli
    2086:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    208a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    208e:	99 83       	std	Y+1, r25	; 0x01
    2090:	88 83       	st	Y, r24
    2092:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    2096:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    209a:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    209e:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    20a2:	00 81       	ld	r16, Z
    20a4:	11 81       	ldd	r17, Z+1	; 0x01
    20a6:	e8 01       	movw	r28, r16
    20a8:	2a 81       	ldd	r18, Y+2	; 0x02
    20aa:	3b 81       	ldd	r19, Y+3	; 0x03
    20ac:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <msgQ>
    20b0:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <msgQ+0x1>
    20b4:	10 97       	sbiw	r26, 0x00	; 0
    20b6:	c1 f0       	breq	.+48     	; 0x20e8 <run+0x94>
    20b8:	21 15       	cp	r18, r1
    20ba:	31 05       	cpc	r19, r1
    20bc:	59 f2       	breq	.-106    	; 0x2054 <run>
    20be:	16 96       	adiw	r26, 0x06	; 6
    20c0:	8d 91       	ld	r24, X+
    20c2:	9d 91       	ld	r25, X+
    20c4:	0d 90       	ld	r0, X+
    20c6:	bc 91       	ld	r27, X
    20c8:	a0 2d       	mov	r26, r0
    20ca:	e9 01       	movw	r28, r18
    20cc:	4e 81       	ldd	r20, Y+6	; 0x06
    20ce:	5f 81       	ldd	r21, Y+7	; 0x07
    20d0:	68 85       	ldd	r22, Y+8	; 0x08
    20d2:	79 85       	ldd	r23, Y+9	; 0x09
    20d4:	84 1b       	sub	r24, r20
    20d6:	95 0b       	sbc	r25, r21
    20d8:	a6 0b       	sbc	r26, r22
    20da:	b7 0b       	sbc	r27, r23
    20dc:	18 16       	cp	r1, r24
    20de:	19 06       	cpc	r1, r25
    20e0:	1a 06       	cpc	r1, r26
    20e2:	1b 06       	cpc	r1, r27
    20e4:	0c f0       	brlt	.+2      	; 0x20e8 <run+0x94>
    20e6:	b6 cf       	rjmp	.-148    	; 0x2054 <run>
    20e8:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    20ec:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    20f0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    20f4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    20f8:	91 83       	std	Z+1, r25	; 0x01
    20fa:	80 83       	st	Z, r24
    20fc:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    2100:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    2104:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    2108:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    210c:	14 96       	adiw	r26, 0x04	; 4
    210e:	ed 91       	ld	r30, X+
    2110:	fc 91       	ld	r31, X
    2112:	15 97       	sbiw	r26, 0x05	; 5
    2114:	30 97       	sbiw	r30, 0x00	; 0
    2116:	41 f0       	breq	.+16     	; 0x2128 <run+0xd4>
    2118:	a0 81       	ld	r26, Z
    211a:	b1 81       	ldd	r27, Z+1	; 0x01
    211c:	14 96       	adiw	r26, 0x04	; 4
    211e:	ed 91       	ld	r30, X+
    2120:	fc 91       	ld	r31, X
    2122:	15 97       	sbiw	r26, 0x05	; 5
    2124:	30 97       	sbiw	r30, 0x00	; 0
    2126:	c1 f7       	brne	.-16     	; 0x2118 <run+0xc4>
    2128:	cd 01       	movw	r24, r26
    212a:	0e 94 f5 04 	call	0x9ea	; 0x9ea <dispatch>
    212e:	92 cf       	rjmp	.-220    	; 0x2054 <run>

00002130 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2130:	42 31       	cpi	r20, 0x12	; 18
    2132:	b8 f4       	brcc	.+46     	; 0x2162 <install+0x32>
        char status;
        DISABLE(status);
    2134:	2f b7       	in	r18, 0x3f	; 63
    2136:	f8 94       	cli
        otable[i] = obj;
    2138:	50 e0       	ldi	r21, 0x00	; 0
    213a:	44 0f       	add	r20, r20
    213c:	55 1f       	adc	r21, r21
    213e:	fa 01       	movw	r30, r20
    2140:	e8 5d       	subi	r30, 0xD8	; 216
    2142:	fe 4f       	sbci	r31, 0xFE	; 254
    2144:	91 83       	std	Z+1, r25	; 0x01
    2146:	80 83       	st	Z, r24
        mtable[i] = m;
    2148:	fa 01       	movw	r30, r20
    214a:	e0 54       	subi	r30, 0x40	; 64
    214c:	fe 4f       	sbci	r31, 0xFE	; 254
    214e:	71 83       	std	Z+1, r23	; 0x01
    2150:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2152:	41 e0       	ldi	r20, 0x01	; 1
    2154:	50 e0       	ldi	r21, 0x00	; 0
    2156:	fc 01       	movw	r30, r24
    2158:	53 83       	std	Z+3, r21	; 0x03
    215a:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    215c:	22 23       	and	r18, r18
    215e:	0c f4       	brge	.+2      	; 0x2162 <install+0x32>
    2160:	78 94       	sei
    2162:	08 95       	ret

00002164 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2164:	8c 01       	movw	r16, r24
    2166:	7b 01       	movw	r14, r22
    2168:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    216a:	8f b7       	in	r24, 0x3f	; 63
    216c:	f8 94       	cli
    initialize();
    216e:	0e 94 8a 04 	call	0x914	; 0x914 <initialize>
    ENABLE(1);
    2172:	78 94       	sei
    if (m != NULL)
    2174:	e1 14       	cp	r14, r1
    2176:	f1 04       	cpc	r15, r1
    2178:	41 f0       	breq	.+16     	; 0x218a <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    217a:	20 e0       	ldi	r18, 0x00	; 0
    217c:	30 e0       	ldi	r19, 0x00	; 0
    217e:	a9 01       	movw	r20, r18
    2180:	60 e0       	ldi	r22, 0x00	; 0
    2182:	70 e0       	ldi	r23, 0x00	; 0
    2184:	cb 01       	movw	r24, r22
    2186:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <async>
    DISABLE(status);
    218a:	8f b7       	in	r24, 0x3f	; 63
    218c:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    218e:	0e 94 15 05 	call	0xa2a	; 0xa2a <schedule>
    ENABLE(1);
    2192:	78 94       	sei
    while (1) {
        SLEEP();
    2194:	81 e0       	ldi	r24, 0x01	; 1
    2196:	83 bf       	out	0x33, r24	; 51
    2198:	88 95       	sleep
    219a:	fd cf       	rjmp	.-6      	; 0x2196 <tinytimber+0x32>

0000219c <__divmodhi4>:
    219c:	97 fb       	bst	r25, 7
    219e:	07 2e       	mov	r0, r23
    21a0:	16 f4       	brtc	.+4      	; 0x21a6 <__divmodhi4+0xa>
    21a2:	00 94       	com	r0
    21a4:	07 d0       	rcall	.+14     	; 0x21b4 <__divmodhi4_neg1>
    21a6:	77 fd       	sbrc	r23, 7
    21a8:	09 d0       	rcall	.+18     	; 0x21bc <__divmodhi4_neg2>
    21aa:	0e 94 e2 10 	call	0x21c4	; 0x21c4 <__udivmodhi4>
    21ae:	07 fc       	sbrc	r0, 7
    21b0:	05 d0       	rcall	.+10     	; 0x21bc <__divmodhi4_neg2>
    21b2:	3e f4       	brtc	.+14     	; 0x21c2 <__divmodhi4_exit>

000021b4 <__divmodhi4_neg1>:
    21b4:	90 95       	com	r25
    21b6:	81 95       	neg	r24
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	08 95       	ret

000021bc <__divmodhi4_neg2>:
    21bc:	70 95       	com	r23
    21be:	61 95       	neg	r22
    21c0:	7f 4f       	sbci	r23, 0xFF	; 255

000021c2 <__divmodhi4_exit>:
    21c2:	08 95       	ret

000021c4 <__udivmodhi4>:
    21c4:	aa 1b       	sub	r26, r26
    21c6:	bb 1b       	sub	r27, r27
    21c8:	51 e1       	ldi	r21, 0x11	; 17
    21ca:	07 c0       	rjmp	.+14     	; 0x21da <__udivmodhi4_ep>

000021cc <__udivmodhi4_loop>:
    21cc:	aa 1f       	adc	r26, r26
    21ce:	bb 1f       	adc	r27, r27
    21d0:	a6 17       	cp	r26, r22
    21d2:	b7 07       	cpc	r27, r23
    21d4:	10 f0       	brcs	.+4      	; 0x21da <__udivmodhi4_ep>
    21d6:	a6 1b       	sub	r26, r22
    21d8:	b7 0b       	sbc	r27, r23

000021da <__udivmodhi4_ep>:
    21da:	88 1f       	adc	r24, r24
    21dc:	99 1f       	adc	r25, r25
    21de:	5a 95       	dec	r21
    21e0:	a9 f7       	brne	.-22     	; 0x21cc <__udivmodhi4_loop>
    21e2:	80 95       	com	r24
    21e4:	90 95       	com	r25
    21e6:	bc 01       	movw	r22, r24
    21e8:	cd 01       	movw	r24, r26
    21ea:	08 95       	ret

000021ec <setjmp>:
    21ec:	dc 01       	movw	r26, r24
    21ee:	2d 92       	st	X+, r2
    21f0:	3d 92       	st	X+, r3
    21f2:	4d 92       	st	X+, r4
    21f4:	5d 92       	st	X+, r5
    21f6:	6d 92       	st	X+, r6
    21f8:	7d 92       	st	X+, r7
    21fa:	8d 92       	st	X+, r8
    21fc:	9d 92       	st	X+, r9
    21fe:	ad 92       	st	X+, r10
    2200:	bd 92       	st	X+, r11
    2202:	cd 92       	st	X+, r12
    2204:	dd 92       	st	X+, r13
    2206:	ed 92       	st	X+, r14
    2208:	fd 92       	st	X+, r15
    220a:	0d 93       	st	X+, r16
    220c:	1d 93       	st	X+, r17
    220e:	cd 93       	st	X+, r28
    2210:	dd 93       	st	X+, r29
    2212:	ff 91       	pop	r31
    2214:	ef 91       	pop	r30
    2216:	8d b7       	in	r24, 0x3d	; 61
    2218:	8d 93       	st	X+, r24
    221a:	8e b7       	in	r24, 0x3e	; 62
    221c:	8d 93       	st	X+, r24
    221e:	8f b7       	in	r24, 0x3f	; 63
    2220:	8d 93       	st	X+, r24
    2222:	ed 93       	st	X+, r30
    2224:	fd 93       	st	X+, r31
    2226:	88 27       	eor	r24, r24
    2228:	99 27       	eor	r25, r25
    222a:	09 94       	ijmp

0000222c <longjmp>:
    222c:	dc 01       	movw	r26, r24
    222e:	cb 01       	movw	r24, r22
    2230:	81 30       	cpi	r24, 0x01	; 1
    2232:	91 05       	cpc	r25, r1
    2234:	81 1d       	adc	r24, r1
    2236:	2d 90       	ld	r2, X+
    2238:	3d 90       	ld	r3, X+
    223a:	4d 90       	ld	r4, X+
    223c:	5d 90       	ld	r5, X+
    223e:	6d 90       	ld	r6, X+
    2240:	7d 90       	ld	r7, X+
    2242:	8d 90       	ld	r8, X+
    2244:	9d 90       	ld	r9, X+
    2246:	ad 90       	ld	r10, X+
    2248:	bd 90       	ld	r11, X+
    224a:	cd 90       	ld	r12, X+
    224c:	dd 90       	ld	r13, X+
    224e:	ed 90       	ld	r14, X+
    2250:	fd 90       	ld	r15, X+
    2252:	0d 91       	ld	r16, X+
    2254:	1d 91       	ld	r17, X+
    2256:	cd 91       	ld	r28, X+
    2258:	dd 91       	ld	r29, X+
    225a:	ed 91       	ld	r30, X+
    225c:	fd 91       	ld	r31, X+
    225e:	0d 90       	ld	r0, X+
    2260:	f8 94       	cli
    2262:	fe bf       	out	0x3e, r31	; 62
    2264:	0f be       	out	0x3f, r0	; 63
    2266:	ed bf       	out	0x3d, r30	; 61
    2268:	ed 91       	ld	r30, X+
    226a:	fd 91       	ld	r31, X+
    226c:	09 94       	ijmp

0000226e <_exit>:
    226e:	f8 94       	cli

00002270 <__stop_program>:
    2270:	ff cf       	rjmp	.-2      	; 0x2270 <__stop_program>
